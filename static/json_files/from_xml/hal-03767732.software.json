{"application": "software-mentions", "version": "0.8.0", "date": "2024-03-21T09:54+0000", "md5": "88D67DB3B903230CA4C2848076111F6D", "mentions": [{"type": "software", "software-type": "software", "software-name": {"rawForm": "RCDPeaks", "normalizedForm": "RCDPeaks", "offsetStart": 0, "offsetEnd": 8}, "version": {"rawForm": "3", "normalizedForm": "3", "offsetStart": 34, "offsetEnd": 35}, "publisher": {"rawForm": "GitHub", "normalizedForm": "GitHub", "offsetStart": 86, "offsetEnd": 92}, "context": "RCDPeaks has been coded in Python 3 programming language and made freely available at GitHub (https://github.com/LQCT/RCDPeaks.git) ", "mentionContextAttributes": {"used": {"value": false, "score": 0.19461172819137573}, "created": {"value": false, "score": 0.00351029634475708}, "shared": {"value": true, "score": 0.9545930624008179}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999485015869141}, "created": {"value": true, "score": 0.9999268054962158}, "shared": {"value": true, "score": 0.9826416373252869}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RCDPeaks", "normalizedForm": "RCDPeaks", "offsetStart": 0, "offsetEnd": 8}, "version": {"rawForm": "3", "normalizedForm": "3"}, "publisher": {"rawForm": "GitHub", "normalizedForm": "GitHub"}, "context": "RCDPeaks and cpptraj, used the same distance cutoff value (dc) for every trajectory; 2.5 \u00c5 for 6 kF and 500 kF, 4 \u00c5 for 30 kF, 1 \u00c5 for 50 kF, 100 kF and 1M, and 2 \u00c5 for 250 kF.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9997147917747498}, "created": {"value": false, "score": 2.2649765014648438e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999485015869141}, "created": {"value": true, "score": 0.9999268054962158}, "shared": {"value": true, "score": 0.9826416373252869}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RCDPeaks", "normalizedForm": "RCDPeaks", "offsetStart": 0, "offsetEnd": 8}, "version": {"rawForm": "3", "normalizedForm": "3"}, "publisher": {"rawForm": "GitHub", "normalizedForm": "GitHub"}, "context": "RCDPeaks avoids this worthless splitting through a merging process of nearby centers.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0001633167266845703}, "created": {"value": false, "score": 1.9311904907226562e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999485015869141}, "created": {"value": true, "score": 0.9999268054962158}, "shared": {"value": true, "score": 0.9826416373252869}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RCDPeaks", "normalizedForm": "RCDPeaks", "offsetStart": 0, "offsetEnd": 8}, "version": {"rawForm": "3", "normalizedForm": "3"}, "publisher": {"rawForm": "GitHub", "normalizedForm": "GitHub"}, "context": "RCDPeaks follows a simple procedure to extract a set of exemplar frames (a refined core), evincing a higher degree of collective similarity than what can be obtained from the original definition of core zones in DP.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00014328956604003906}, "created": {"value": false, "score": 2.8014183044433594e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999485015869141}, "created": {"value": true, "score": 0.9999268054962158}, "shared": {"value": true, "score": 0.9826416373252869}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "cpptraj", "normalizedForm": "cpptraj", "offsetStart": 4, "offsetEnd": 11}, "context": "The cpptraj module of the AMBER suite (Roe and Cheatham, 2013) is equipped with an exact variant while a recent contribution has proposed CLoNe (Sylvain et al., 2020), a robust improvement of the original algorithm. ", "mentionContextAttributes": {"used": {"value": false, "score": 4.935264587402344e-05}, "created": {"value": false, "score": 0.06148713827133179}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999485015869141}, "created": {"value": false, "score": 0.3114768862724304}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "cpptraj", "normalizedForm": "cpptraj", "offsetStart": 4, "offsetEnd": 11}, "context": "The cpptraj alternative is considerably less RAM consuming than CLoNe. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0001322031021118164}, "created": {"value": false, "score": 2.753734588623047e-05}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999485015869141}, "created": {"value": false, "score": 0.3114768862724304}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "cpptraj", "normalizedForm": "cpptraj", "offsetStart": 6, "offsetEnd": 13}, "context": "While cpptraj implements the original algorithm, CLoNe was inspired on DP to overcome several of its limitations. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0032784342765808105}, "created": {"value": false, "score": 0.042819201946258545}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999485015869141}, "created": {"value": false, "score": 0.3114768862724304}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PyPI", "normalizedForm": "PyPI", "offsetStart": 9, "offsetEnd": 13}, "language": {"rawForm": "Python", "normalizedForm": "Python", "wikidataId": "Q28865", "offsetStart": 27, "offsetEnd": 33}, "context": "and as a PyPI package (https://pypi.org/project/RCDPeaks/). ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0019026398658752441}, "created": {"value": false, "score": 0.005257248878479004}, "shared": {"value": true, "score": 0.9826416373252869}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0019026398658752441}, "created": {"value": false, "score": 0.005257248878479004}, "shared": {"value": true, "score": 0.9826416373252869}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CLoNe", "normalizedForm": "CLoNe", "offsetStart": 9, "offsetEnd": 14}, "context": "Although CLoNe also has the slowest run time (about 30X slower than RCDPeaks for the 30 kF trajectory), this is not a critical aspect when dealing with the short trajectories it can manage.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0007460713386535645}, "created": {"value": false, "score": 5.316734313964844e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999951124191284}, "created": {"value": false, "score": 0.06148713827133179}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "(Sylvain et al., 2020)", "normalizedForm": "Sylvain et al., 2020", "refKey": 15}, {"label": "(Sylvain et al., 2020)", "normalizedForm": "Sylvain et al., 2020", "refKey": 15}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RCDPeaks", "normalizedForm": "RCDPeaks", "offsetStart": 9, "offsetEnd": 17}, "version": {"rawForm": "3", "normalizedForm": "3"}, "publisher": {"rawForm": "GitHub", "normalizedForm": "GitHub"}, "context": "Although RCDPeaks implements the Flores and Garza method, users still have the choice to manually set \u03c1 and \u03b4 values.", "mentionContextAttributes": {"used": {"value": false, "score": 8.285045623779297e-05}, "created": {"value": false, "score": 8.26120376586914e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999485015869141}, "created": {"value": true, "score": 0.9999268054962158}, "shared": {"value": true, "score": 0.9826416373252869}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "cpptraj", "normalizedForm": "cpptraj", "offsetStart": 13, "offsetEnd": 20}, "context": "RCDPeaks and cpptraj, used the same distance cutoff value (dc) for every trajectory; 2.5 \u00c5 for 6 kF and 500 kF, 4 \u00c5 for 30 kF, 1 \u00c5 for 50 kF, 100 kF and 1M, and 2 \u00c5 for 250 kF.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9997147917747498}, "created": {"value": false, "score": 2.2649765014648438e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999485015869141}, "created": {"value": false, "score": 0.3114768862724304}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RCDPeaks", "normalizedForm": "RCDPeaks", "offsetStart": 15, "offsetEnd": 23}, "version": {"rawForm": "3", "normalizedForm": "3"}, "publisher": {"rawForm": "GitHub", "normalizedForm": "GitHub"}, "context": "Employing DP+, RCDPeaks processed a one-million frames trajectory using less than 4.5 GB of RAM, a task that would have taken more than 2 TB (and about 3X more time) or 7 TB (and about 30X more time) with cpptraj or CLoNe, respectively.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9995903372764587}, "created": {"value": false, "score": 1.6689300537109375e-06}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999485015869141}, "created": {"value": true, "score": 0.9999268054962158}, "shared": {"value": true, "score": 0.9826416373252869}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "cpptraj", "normalizedForm": "cpptraj", "offsetStart": 22, "offsetEnd": 29}, "context": "In terms of run time, cpptraj is also faster than CLoNe but still about 3X slower than RCDPeaks. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.001288294792175293}, "created": {"value": false, "score": 7.62939453125e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999485015869141}, "created": {"value": false, "score": 0.3114768862724304}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RCDPeaks", "normalizedForm": "RCDPeaks", "offsetStart": 22, "offsetEnd": 30}, "version": {"rawForm": "3", "normalizedForm": "3"}, "publisher": {"rawForm": "GitHub", "normalizedForm": "GitHub"}, "context": "Other key features of RCDPeaks include the automatic selection of parameters, the merging of very similar center candidates, and the geometrical refining of returned clusters.", "mentionContextAttributes": {"used": {"value": false, "score": 2.765655517578125e-05}, "created": {"value": false, "score": 0.0008140206336975098}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999485015869141}, "created": {"value": true, "score": 0.9999268054962158}, "shared": {"value": true, "score": 0.9826416373252869}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RCDPeaks", "normalizedForm": "RCDPeaks", "offsetStart": 24, "offsetEnd": 32}, "version": {"rawForm": "3", "normalizedForm": "3"}, "publisher": {"rawForm": "GitHub", "normalizedForm": "GitHub"}, "context": "Through the use of DP+, RCDPeaks was able to cluster a one-million frames trajectory using less than 4.5 GB of RAM, a task that would have taken more than 2 TB and about 3X more time with the fastest and less memory-hunger alternative currently available.", "mentionContextAttributes": {"used": {"value": true, "score": 0.992838442325592}, "created": {"value": false, "score": 3.6716461181640625e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999485015869141}, "created": {"value": true, "score": 0.9999268054962158}, "shared": {"value": true, "score": 0.9826416373252869}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "AMBER", "normalizedForm": "AMBER", "offsetStart": 26, "offsetEnd": 31}, "context": "The cpptraj module of the AMBER suite (Roe and Cheatham, 2013) is equipped with an exact variant while a recent contribution has proposed CLoNe (Sylvain et al., 2020), a robust improvement of the original algorithm.", "mentionContextAttributes": {"used": {"value": false, "score": 4.935264587402344e-05}, "created": {"value": false, "score": 0.06148713827133179}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999485015869141}, "created": {"value": false, "score": 0.06148713827133179}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "references": [{"label": "(Roe and Cheatham, 2013)", "normalizedForm": "Roe and Cheatham, 2013", "refKey": 10, "offsetStart": 3195, "offsetEnd": 3219}, {"label": "(Roe and Cheatham, 2013)", "normalizedForm": "Roe and Cheatham, 2013", "refKey": 10, "offsetStart": 3195, "offsetEnd": 3219}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CLoNe", "normalizedForm": "CLoNe", "offsetStart": 27, "offsetEnd": 32}, "context": "As it is shown in Table 1, CLoNe has the highest RAM consumption, which only permitted to process the small trajectories 6 kF and 30 kF.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9975087642669678}, "created": {"value": false, "score": 3.516674041748047e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999951124191284}, "created": {"value": false, "score": 0.06148713827133179}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "(Sylvain et al., 2020)", "normalizedForm": "Sylvain et al., 2020", "refKey": 15}, {"label": "(Sylvain et al., 2020)", "normalizedForm": "Sylvain et al., 2020", "refKey": 15}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RCDPeaks", "normalizedForm": "RCDPeaks", "offsetStart": 27, "offsetEnd": 35}, "version": {"rawForm": "3", "normalizedForm": "3"}, "publisher": {"rawForm": "GitHub", "normalizedForm": "GitHub"}, "context": "Based on DP+, we developed RCDPeaks, a refined variant of the original Density Peaks algorithm.", "mentionContextAttributes": {"used": {"value": false, "score": 8.213520050048828e-05}, "created": {"value": true, "score": 0.9997697472572327}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999485015869141}, "created": {"value": true, "score": 0.9999268054962158}, "shared": {"value": true, "score": 0.9826416373252869}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CLoNe", "normalizedForm": "CLoNe", "offsetStart": 28, "offsetEnd": 33}, "context": "The only input parameter of CLoNe is a userdefined percentage p dc of all pairwise similarity distances.", "mentionContextAttributes": {"used": {"value": false, "score": 0.008279919624328613}, "created": {"value": false, "score": 5.841255187988281e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999951124191284}, "created": {"value": false, "score": 0.06148713827133179}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "(Sylvain et al., 2020)", "normalizedForm": "Sylvain et al., 2020", "refKey": 15}, {"label": "(Sylvain et al., 2020)", "normalizedForm": "Sylvain et al., 2020", "refKey": 15}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RCDPeaks", "normalizedForm": "RCDPeaks", "offsetStart": 28, "offsetEnd": 36}, "version": {"rawForm": "3", "normalizedForm": "3"}, "publisher": {"rawForm": "GitHub", "normalizedForm": "GitHub"}, "context": "Built upon DP+, we designed RCDPeaks, a refined variant of the original DP.", "mentionContextAttributes": {"used": {"value": false, "score": 5.1856040954589844e-05}, "created": {"value": true, "score": 0.9997814297676086}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999485015869141}, "created": {"value": true, "score": 0.9999268054962158}, "shared": {"value": true, "score": 0.9826416373252869}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RCDPeaks", "normalizedForm": "RCDPeaks", "offsetStart": 28, "offsetEnd": 36}, "version": {"rawForm": "3", "normalizedForm": "3"}, "publisher": {"rawForm": "GitHub", "normalizedForm": "GitHub"}, "context": "In this section, we propose RCDPeaks (Refined-Core Density Peaks), which is built upon DP+ and addresses the aforementioned limitations.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00014460086822509766}, "created": {"value": true, "score": 0.9999268054962158}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999485015869141}, "created": {"value": true, "score": 0.9999268054962158}, "shared": {"value": true, "score": 0.9826416373252869}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RCDPeaks", "normalizedForm": "RCDPeaks", "offsetStart": 34, "offsetEnd": 42}, "version": {"rawForm": "3", "normalizedForm": "3"}, "publisher": {"rawForm": "GitHub", "normalizedForm": "GitHub"}, "context": "Built on top of DP+, we conceived RCDPeaks, a refinement of the original DP algorithm including convenient features like the ability to automatically produce multiple guesses of cluster centers, the merging of very similar cluster center candidates, and the refinement of retrieved clusters.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00015687942504882812}, "created": {"value": true, "score": 0.9996451139450073}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999485015869141}, "created": {"value": true, "score": 0.9999268054962158}, "shared": {"value": true, "score": 0.9826416373252869}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RCDPeaks", "normalizedForm": "RCDPeaks", "offsetStart": 35, "offsetEnd": 43}, "version": {"rawForm": "3", "normalizedForm": "3"}, "publisher": {"rawForm": "GitHub", "normalizedForm": "GitHub"}, "context": "Each one of the Pn guesses made by RCDPeaks will be further processed in n distinct clustering jobs of the same oriented tree represented by the decision graph in Figure 3A.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9909018874168396}, "created": {"value": false, "score": 2.5033950805664062e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999485015869141}, "created": {"value": true, "score": 0.9999268054962158}, "shared": {"value": true, "score": 0.9826416373252869}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RCDPeaks", "normalizedForm": "RCDPeaks", "offsetStart": 36, "offsetEnd": 44}, "version": {"rawForm": "3", "normalizedForm": "3"}, "publisher": {"rawForm": "GitHub", "normalizedForm": "GitHub"}, "context": "The run time and RAM consumption of RCDPeaks, cpptraj, and CLoNe when processing different MD trajectories are compared in Table 1. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9993313550949097}, "created": {"value": false, "score": 2.0265579223632812e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999485015869141}, "created": {"value": true, "score": 0.9999268054962158}, "shared": {"value": true, "score": 0.9826416373252869}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "AMBER", "normalizedForm": "AMBER", "offsetStart": 37, "offsetEnd": 42}, "context": "The computational performance of the AMBER cpptraj exact implementation of Density Peaks (Roe and Cheatham, 2013) and CLoNe (Sylvain et al., 2020) were compared against RCDPeaks. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999485015869141}, "created": {"value": false, "score": 4.887580871582031e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999485015869141}, "created": {"value": false, "score": 0.06148713827133179}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "references": [{"label": "(Roe and Cheatham, 2013)", "normalizedForm": "Roe and Cheatham, 2013", "refKey": 10}, {"label": "(Roe and Cheatham, 2013)", "normalizedForm": "Roe and Cheatham, 2013", "refKey": 10}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "cpptraj", "normalizedForm": "cpptraj", "offsetStart": 38, "offsetEnd": 45}, "context": "It is worth noting that developers of cpptraj have marked their implementation as experimental. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0008548498153686523}, "created": {"value": false, "score": 0.3114768862724304}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999485015869141}, "created": {"value": false, "score": 0.3114768862724304}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MDTraj", "normalizedForm": "MDTraj", "offsetStart": 39, "offsetEnd": 45}, "context": "It heavily depends on version 1.9.4 of MDTraj (McGibbon et al., 2015) for the fast calculations of pairwise optimal RMSD.", "mentionContextAttributes": {"used": {"value": false, "score": 0.48705291748046875}, "created": {"value": false, "score": 1.7523765563964844e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.48705291748046875}, "created": {"value": false, "score": 4.9114227294921875e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RCDPeaks", "normalizedForm": "RCDPeaks", "offsetStart": 40, "offsetEnd": 48}, "version": {"rawForm": "3", "normalizedForm": "3"}, "publisher": {"rawForm": "GitHub", "normalizedForm": "GitHub"}, "context": "Also, as the most timeconsuming part of RCDPeaks consist of computing those two magnitudes for each frame, the software conveniently saves the decision graph, allowing users to experiment on their own the result of different \u03c1 and \u03b4 cutoffs for cases where the automatic guesses do not perform as expected in an inexpensive way.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00039392709732055664}, "created": {"value": false, "score": 6.663799285888672e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999485015869141}, "created": {"value": true, "score": 0.9999268054962158}, "shared": {"value": true, "score": 0.9826416373252869}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RCDPeaks", "normalizedForm": "RCDPeaks", "offsetStart": 42, "offsetEnd": 50}, "version": {"rawForm": "3", "normalizedForm": "3"}, "publisher": {"rawForm": "GitHub", "normalizedForm": "GitHub"}, "context": "On the other hand, the RAM consumption of RCDPeaks is remarkably low, mainly due to the small size of the main heap (see Section 4).", "mentionContextAttributes": {"used": {"value": false, "score": 0.002628326416015625}, "created": {"value": false, "score": 1.3589859008789062e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999485015869141}, "created": {"value": true, "score": 0.9999268054962158}, "shared": {"value": true, "score": 0.9826416373252869}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "cpptraj", "normalizedForm": "cpptraj", "offsetStart": 43, "offsetEnd": 50}, "context": "The computational performance of the AMBER cpptraj exact implementation of Density Peaks (Roe and Cheatham, 2013) and CLoNe (Sylvain et al., 2020) were compared against RCDPeaks. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999485015869141}, "created": {"value": false, "score": 4.887580871582031e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999485015869141}, "created": {"value": false, "score": 0.3114768862724304}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "cpptraj", "normalizedForm": "cpptraj", "offsetStart": 46, "offsetEnd": 53}, "context": "The run time and RAM consumption of RCDPeaks, cpptraj, and CLoNe when processing different MD trajectories are compared in Table 1. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9993313550949097}, "created": {"value": false, "score": 2.0265579223632812e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999485015869141}, "created": {"value": false, "score": 0.3114768862724304}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RCDPeaks", "normalizedForm": "RCDPeaks", "offsetStart": 48, "offsetEnd": 56}, "version": {"rawForm": "3", "normalizedForm": "3"}, "publisher": {"rawForm": "GitHub", "normalizedForm": "GitHub"}, "context": "and as a PyPI package (https://pypi.org/project/RCDPeaks/).", "mentionContextAttributes": {"used": {"value": false, "score": 0.0019026398658752441}, "created": {"value": false, "score": 0.005257248878479004}, "shared": {"value": true, "score": 0.9826416373252869}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999485015869141}, "created": {"value": true, "score": 0.9999268054962158}, "shared": {"value": true, "score": 0.9826416373252869}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CLoNe", "normalizedForm": "CLoNe", "offsetStart": 49, "offsetEnd": 54}, "context": "While cpptraj implements the original algorithm, CLoNe was inspired on DP to overcome several of its limitations.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0032784342765808105}, "created": {"value": false, "score": 0.042819201946258545}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999951124191284}, "created": {"value": false, "score": 0.06148713827133179}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "(Sylvain et al., 2020)", "normalizedForm": "Sylvain et al., 2020", "refKey": 15}, {"label": "(Sylvain et al., 2020)", "normalizedForm": "Sylvain et al., 2020", "refKey": 15}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CLoNe", "normalizedForm": "CLoNe", "offsetStart": 50, "offsetEnd": 55}, "context": "The other trajectories could not be analyzed with CLoNe due to excessive memory consumption.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999951124191284}, "created": {"value": false, "score": 3.4570693969726562e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999951124191284}, "created": {"value": false, "score": 0.06148713827133179}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "(Sylvain et al., 2020)", "normalizedForm": "Sylvain et al., 2020", "refKey": 15}, {"label": "(Sylvain et al., 2020)", "normalizedForm": "Sylvain et al., 2020", "refKey": 15}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CLoNe", "normalizedForm": "CLoNe", "offsetStart": 50, "offsetEnd": 55}, "context": "In terms of run time, cpptraj is also faster than CLoNe but still about 3X slower than RCDPeaks.", "mentionContextAttributes": {"used": {"value": false, "score": 0.001288294792175293}, "created": {"value": false, "score": 7.62939453125e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999951124191284}, "created": {"value": false, "score": 0.06148713827133179}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "(Sylvain et al., 2020)", "normalizedForm": "Sylvain et al., 2020", "refKey": 15}, {"label": "(Sylvain et al., 2020)", "normalizedForm": "Sylvain et al., 2020", "refKey": 15}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RCDPeaks", "normalizedForm": "RCDPeaks", "offsetStart": 54, "offsetEnd": 62}, "version": {"rawForm": "3", "normalizedForm": "3"}, "publisher": {"rawForm": "GitHub", "normalizedForm": "GitHub"}, "context": "The fastest and the most memory-efficient software is RCDPeaks. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0007619857788085938}, "created": {"value": false, "score": 0.0015816688537597656}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999485015869141}, "created": {"value": true, "score": 0.9999268054962158}, "shared": {"value": true, "score": 0.9826416373252869}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RCDPeaks", "normalizedForm": "RCDPeaks", "offsetStart": 56, "offsetEnd": 64}, "version": {"rawForm": "3", "normalizedForm": "3"}, "publisher": {"rawForm": "GitHub", "normalizedForm": "GitHub"}, "context": "Instead of stopping the algorithm after the first loop, RCDPeaks makes another iteration on a new subset P 2 , containing only elements whose \u03c1 and \u03b4 values are higher than the average in P 1 (Figure 3C).", "mentionContextAttributes": {"used": {"value": false, "score": 0.002913534641265869}, "created": {"value": false, "score": 4.0411949157714844e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999485015869141}, "created": {"value": true, "score": 0.9999268054962158}, "shared": {"value": true, "score": 0.9826416373252869}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CLoNe", "normalizedForm": "CLoNe", "offsetStart": 59, "offsetEnd": 64}, "context": "The run time and RAM consumption of RCDPeaks, cpptraj, and CLoNe when processing different MD trajectories are compared in Table 1.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9993313550949097}, "created": {"value": false, "score": 2.0265579223632812e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999951124191284}, "created": {"value": false, "score": 0.06148713827133179}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "(Sylvain et al., 2020)", "normalizedForm": "Sylvain et al., 2020", "refKey": 15}, {"label": "(Sylvain et al., 2020)", "normalizedForm": "Sylvain et al., 2020", "refKey": 15}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CLoNe", "normalizedForm": "CLoNe", "offsetStart": 64, "offsetEnd": 69}, "context": "The cpptraj alternative is considerably less RAM consuming than CLoNe.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0001322031021118164}, "created": {"value": false, "score": 2.753734588623047e-05}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999951124191284}, "created": {"value": false, "score": 0.06148713827133179}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "(Sylvain et al., 2020)", "normalizedForm": "Sylvain et al., 2020", "refKey": 15}, {"label": "(Sylvain et al., 2020)", "normalizedForm": "Sylvain et al., 2020", "refKey": 15}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "cpptraj", "normalizedForm": "cpptraj", "offsetStart": 68, "offsetEnd": 75}, "context": "For short and medium-sized MD trajectories (see 100 kF in Table 1), cpptraj has an affordable memory cost. ", "mentionContextAttributes": {"used": {"value": false, "score": 5.459785461425781e-05}, "created": {"value": false, "score": 1.1086463928222656e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999485015869141}, "created": {"value": false, "score": 0.3114768862724304}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RCDPeaks", "normalizedForm": "RCDPeaks", "offsetStart": 68, "offsetEnd": 76}, "version": {"rawForm": "3", "normalizedForm": "3"}, "publisher": {"rawForm": "GitHub", "normalizedForm": "GitHub"}, "context": "Although CLoNe also has the slowest run time (about 30X slower than RCDPeaks for the 30 kF trajectory), this is not a critical aspect when dealing with the short trajectories it can manage.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0007460713386535645}, "created": {"value": false, "score": 5.316734313964844e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999485015869141}, "created": {"value": true, "score": 0.9999268054962158}, "shared": {"value": true, "score": 0.9826416373252869}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MDTraj", "normalizedForm": "MDTraj", "offsetStart": 76, "offsetEnd": 82}, "context": "The key factors contributing to the speed up of this variant are the use of MDTraj for computing the optimal RMSD distances and, to a lesser extent, the sorting procedure to get \u03b7 i (see Section 4). ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0005317330360412598}, "created": {"value": false, "score": 4.9114227294921875e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.48705291748046875}, "created": {"value": false, "score": 4.9114227294921875e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RCDPeaks", "normalizedForm": "RCDPeaks", "offsetStart": 87, "offsetEnd": 95}, "version": {"rawForm": "3", "normalizedForm": "3"}, "publisher": {"rawForm": "GitHub", "normalizedForm": "GitHub"}, "context": "In terms of run time, cpptraj is also faster than CLoNe but still about 3X slower than RCDPeaks.", "mentionContextAttributes": {"used": {"value": false, "score": 0.001288294792175293}, "created": {"value": false, "score": 7.62939453125e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999485015869141}, "created": {"value": true, "score": 0.9999268054962158}, "shared": {"value": true, "score": 0.9826416373252869}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "cpptraj", "normalizedForm": "cpptraj", "offsetStart": 92, "offsetEnd": 99}, "context": "However, if relatively long trajectories must be processed, the quadratic RAM complexity of cpptraj becomes a major limitation. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0001360177993774414}, "created": {"value": false, "score": 9.655952453613281e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999485015869141}, "created": {"value": false, "score": 0.3114768862724304}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CLoNe", "normalizedForm": "CLoNe", "offsetStart": 96, "offsetEnd": 101}, "context": "Acknowledgements D.P.R thanks Matteo Dal Peraro and Sylvain Tr\u00e4ger for their help on setting up CLoNe.", "mentionContextAttributes": {"used": {"value": false, "score": 0.033217012882232666}, "created": {"value": false, "score": 0.0005344748497009277}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999951124191284}, "created": {"value": false, "score": 0.06148713827133179}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "(Sylvain et al., 2020)", "normalizedForm": "Sylvain et al., 2020", "refKey": 15}, {"label": "(Sylvain et al., 2020)", "normalizedForm": "Sylvain et al., 2020", "refKey": 15}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RCDPeaks", "normalizedForm": "RCDPeaks", "offsetStart": 118, "offsetEnd": 126}, "version": {"rawForm": "3", "normalizedForm": "3"}, "publisher": {"rawForm": "GitHub", "normalizedForm": "GitHub"}, "context": "RCDPeaks has been coded in Python 3 programming language and made freely available at GitHub (https://github.com/LQCT/RCDPeaks.git)", "mentionContextAttributes": {"used": {"value": false, "score": 0.1946117877960205}, "created": {"value": false, "score": 0.00351029634475708}, "shared": {"value": true, "score": 0.9545931816101074}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999485015869141}, "created": {"value": true, "score": 0.9999268054962158}, "shared": {"value": true, "score": 0.9826416373252869}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CLoNe", "normalizedForm": "CLoNe", "offsetStart": 118, "offsetEnd": 146}, "context": "The computational performance of the AMBER cpptraj exact implementation of Density Peaks (Roe and Cheatham, 2013) and CLoNe (Sylvain et al., 2020) were compared against RCDPeaks. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999485015869141}, "created": {"value": false, "score": 4.887580871582031e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999951124191284}, "created": {"value": false, "score": 0.06148713827133179}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "(Sylvain et al., 2020)", "normalizedForm": "Sylvain et al., 2020", "refKey": 15}, {"label": "(Sylvain et al., 2020)", "normalizedForm": "Sylvain et al., 2020", "refKey": 15}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RCDPeaks", "normalizedForm": "RCDPeaks", "offsetStart": 124, "offsetEnd": 132}, "version": {"rawForm": "3", "normalizedForm": "3"}, "publisher": {"rawForm": "GitHub", "normalizedForm": "GitHub"}, "context": "After computing each element's density and the optimal RMSD distance to its nearest neighbor of higher density through DP+, RCDPeaks can automatically set the necessary cutoffs and detect potential cluster centers.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0027419328689575195}, "created": {"value": false, "score": 1.2159347534179688e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999485015869141}, "created": {"value": true, "score": 0.9999268054962158}, "shared": {"value": true, "score": 0.9826416373252869}}}, {"type": "software", "software-type": "software", "wikidataId": "Q72688", "wikipediaExternalRef": 2931262, "lang": "en", "confidence": 0.9053, "software-name": {"rawForm": "Xubuntu", "normalizedForm": "Xubuntu", "wikidataId": "Q72688", "wikipediaExternalRef": 2931262, "lang": "en", "confidence": 0.9053, "offsetStart": 134, "offsetEnd": 141}, "context": "All calculations were performed on an AMD Ryzen 5 Hexa-core Workstation with a processor speed of 3.6 GHz and 64GB RAM under a 64-bit Xubuntu 18.04 operating system. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999003410339355}, "created": {"value": false, "score": 2.6702880859375e-05}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999003410339355}, "created": {"value": false, "score": 2.6702880859375e-05}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CLoNe", "normalizedForm": "CLoNe", "offsetStart": 138, "offsetEnd": 143}, "context": "The cpptraj module of the AMBER suite (Roe and Cheatham, 2013) is equipped with an exact variant while a recent contribution has proposed CLoNe (Sylvain et al., 2020), a robust improvement of the original algorithm.", "mentionContextAttributes": {"used": {"value": false, "score": 4.935264587402344e-05}, "created": {"value": false, "score": 0.06148713827133179}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999951124191284}, "created": {"value": false, "score": 0.06148713827133179}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "(Sylvain et al., 2020)", "normalizedForm": "Sylvain et al., 2020", "refKey": 15, "offsetStart": 3301, "offsetEnd": 3323}, {"label": "(Sylvain et al., 2020)", "normalizedForm": "Sylvain et al., 2020", "refKey": 15, "offsetStart": 3301, "offsetEnd": 3323}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RCDPeaks", "normalizedForm": "RCDPeaks", "offsetStart": 169, "offsetEnd": 177}, "version": {"rawForm": "3", "normalizedForm": "3"}, "publisher": {"rawForm": "GitHub", "normalizedForm": "GitHub"}, "context": "The computational performance of the AMBER cpptraj exact implementation of Density Peaks (Roe and Cheatham, 2013) and CLoNe (Sylvain et al., 2020) were compared against RCDPeaks. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999485015869141}, "created": {"value": false, "score": 4.887580871582031e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999485015869141}, "created": {"value": true, "score": 0.9999268054962158}, "shared": {"value": true, "score": 0.9826416373252869}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "cpptraj", "normalizedForm": "cpptraj", "offsetStart": 205, "offsetEnd": 212}, "context": "Employing DP+, RCDPeaks processed a one-million frames trajectory using less than 4.5 GB of RAM, a task that would have taken more than 2 TB (and about 3X more time) or 7 TB (and about 30X more time) with cpptraj or CLoNe, respectively.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9995903372764587}, "created": {"value": false, "score": 1.6689300537109375e-06}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999485015869141}, "created": {"value": false, "score": 0.3114768862724304}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CLoNe", "normalizedForm": "CLoNe", "offsetStart": 216, "offsetEnd": 221}, "context": "Employing DP+, RCDPeaks processed a one-million frames trajectory using less than 4.5 GB of RAM, a task that would have taken more than 2 TB (and about 3X more time) or 7 TB (and about 30X more time) with cpptraj or CLoNe, respectively.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9995903372764587}, "created": {"value": false, "score": 1.6689300537109375e-06}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999951124191284}, "created": {"value": false, "score": 0.06148713827133179}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "(Sylvain et al., 2020)", "normalizedForm": "Sylvain et al., 2020", "refKey": 15}, {"label": "(Sylvain et al., 2020)", "normalizedForm": "Sylvain et al., 2020", "refKey": 15}]}], "references": [{"refKey": 15, "tei": "<biblStruct xml:id=\"b15\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">CLoNe: Automated clustering based on local density neighborhoods for application to biomolecular structural ensembles</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">T</forename><surname>Sylvain</surname></persName>\n\t\t</author>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"j\">Bioinformatics</title>\n\t\t<imprint>\n\t\t\t<date>2020</date>\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}, {"refKey": 10, "tei": "<biblStruct xml:id=\"b10\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">PTRAJ and CPPTRAJ: Software for Processing and Analysis of Molecular Dynamics Trajectory Data</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Daniel</forename><forename type=\"middle\">R</forename><surname>Roe</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Thomas</forename><forename type=\"middle\">E</forename><surname>Cheatham</surname></persName>\n\t\t</author>\n\t\t<idno type=\"DOI\">10.1021/ct400341p</idno>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"j\">Journal of Chemical Theory and Computation</title>\n\t\t<title level=\"j\" type=\"abbrev\">J. Chem. Theory Comput.</title>\n\t\t<idno type=\"ISSN\">1549-9618</idno>\n\t\t<idno type=\"ISSNe\">1549-9626</idno>\n\t\t<imprint>\n\t\t\t<biblScope unit=\"volume\">9</biblScope>\n\t\t\t<biblScope unit=\"issue\">7</biblScope>\n\t\t\t<biblScope unit=\"page\" from=\"3084\" to=\"3095\" />\n\t\t\t<date type=\"published\" when=\"2013-06-25\">2013</date>\n\t\t\t<publisher>American Chemical Society (ACS)</publisher>\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}], "runtime": 57570, "id": "25fcb89384369e70a270d87f39ef73e661d45de3", "metadata": {"id": "25fcb89384369e70a270d87f39ef73e661d45de3"}, "original_file_path": "../../datalake/Samuel/SV22/SV22_xml/hal-03767732.grobid.tei.xml", "file_name": "hal-03767732.grobid.tei.xml"}