{"application": "software-mentions", "version": "0.8.0", "date": "2024-03-21T10:09+0000", "md5": "ECE154B3DBED3664C5A7E0BF118B4951", "mentions": [{"type": "software", "software-type": "software", "software-name": {"rawForm": "Monai", "normalizedForm": "Monai", "offsetStart": 0, "offsetEnd": 5}, "context": "Monai is more complete with the possibility to transform images, and train, evaluate and interpret networks. ", "mentionContextAttributes": {"used": {"value": false, "score": 4.6133995056152344e-05}, "created": {"value": false, "score": 0.01911717653274536}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.003376483917236328}, "created": {"value": true, "score": 0.7142636775970459}, "shared": {"value": false, "score": 1.1920928955078125e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Monai", "normalizedForm": "Monai", "offsetStart": 0, "offsetEnd": 5}, "context": "Monai provides low-level functions and classes that must be combined in a Python script to learn a classification or a segmentation task, or to train a generative adversarial network (GAN).", "mentionContextAttributes": {"used": {"value": false, "score": 2.956390380859375e-05}, "created": {"value": false, "score": 0.0007128119468688965}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.003376483917236328}, "created": {"value": true, "score": 0.7142636775970459}, "shared": {"value": false, "score": 1.1920928955078125e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Clinica", "normalizedForm": "Clinica", "offsetStart": 0, "offsetEnd": 7}, "context": "Clinica and ClinicaDL follow the Brain Imaging Data Structure, described in [7], to organize their data sets.", "mentionContextAttributes": {"used": {"value": false, "score": 0.018334686756134033}, "created": {"value": false, "score": 3.170967102050781e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9986541271209717}, "created": {"value": true, "score": 0.9230390191078186}, "shared": {"value": false, "score": 0.000538170337677002}}, "references": [{"label": "[8]", "normalizedForm": "[8]", "refKey": 9}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Clinica", "normalizedForm": "Clinica", "offsetStart": 0, "offsetEnd": 7}, "context": "Clinica includes BIDS converters to format these four raw data sets to BIDS format to ease their use.", "mentionContextAttributes": {"used": {"value": false, "score": 0.007422149181365967}, "created": {"value": false, "score": 3.1948089599609375e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9986541271209717}, "created": {"value": true, "score": 0.9230390191078186}, "shared": {"value": false, "score": 0.000538170337677002}}, "references": [{"label": "[8]", "normalizedForm": "[8]", "refKey": 9}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Clinica", "normalizedForm": "Clinica", "offsetStart": 0, "offsetEnd": 7}, "context": "Clinica (t1-linear26 and t1-volume 27 ).", "mentionContextAttributes": {"used": {"value": true, "score": 0.9986541271209717}, "created": {"value": false, "score": 7.62939453125e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9986541271209717}, "created": {"value": true, "score": 0.9230390191078186}, "shared": {"value": false, "score": 0.000538170337677002}}, "references": [{"label": "[8]", "normalizedForm": "[8]", "refKey": 9}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Clinica", "normalizedForm": "Clinica", "offsetStart": 0, "offsetEnd": 7}, "context": "Clinica also provides more extensive preprocessing pipelines for T1-weighted MRI and PET, but also diffusion MRI [8].", "mentionContextAttributes": {"used": {"value": false, "score": 5.710124969482422e-05}, "created": {"value": false, "score": 3.135204315185547e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9986541271209717}, "created": {"value": true, "score": 0.9230390191078186}, "shared": {"value": false, "score": 0.000538170337677002}}, "references": [{"label": "[8]", "normalizedForm": "[8]", "refKey": 9}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 0, "offsetEnd": 9}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "ClinicaDL takes as inputs the images preprocessed by Clinica and convert them into tensors to train deep neural networks. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0007336735725402832}, "created": {"value": false, "score": 7.772445678710938e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 0, "offsetEnd": 9}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "ClinicaDL computes the image-level performance by assembling the mode-level performance when it is different from image. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0001621246337890625}, "created": {"value": false, "score": 5.364418029785156e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 0, "offsetEnd": 9}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "ClinicaDL is an open-source software platform entirely written in Python. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.000655829906463623}, "created": {"value": true, "score": 0.7652226686477661}, "shared": {"value": false, "score": 0.009834825992584229}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 0, "offsetEnd": 9}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "ClinicaDL extends PyTorch for neuroimaging applications where the data set structure plays a key role in the organization of the data and metadata. ", "mentionContextAttributes": {"used": {"value": false, "score": 3.5881996154785156e-05}, "created": {"value": false, "score": 0.00010180473327636719}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 0, "offsetEnd": 9}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "ClinicaDL has adopted standard practices for software development and distribution of the software with the aim to facilitate the reproduction of experiments. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00011658668518066406}, "created": {"value": false, "score": 0.1756003499031067}, "shared": {"value": false, "score": 0.00019675493240356445}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 0, "offsetEnd": 9}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "ClinicaDL's workflow is illustrated in Figure 3. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0003858804702758789}, "created": {"value": false, "score": 0.00021833181381225586}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 0, "offsetEnd": 9}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "ClinicaDL works preferably with images that have been previously preprocessed but one can also perform experiments with unprocessed images, the only requirement is to convert these images to the right format (see Section 2.1.2). ", "mentionContextAttributes": {"used": {"value": false, "score": 4.565715789794922e-05}, "created": {"value": false, "score": 7.367134094238281e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 0, "offsetEnd": 9}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "ClinicaDL proposes a simple tool to transform NIfTI images into PyTorch tensors. ", "mentionContextAttributes": {"used": {"value": false, "score": 4.947185516357422e-05}, "created": {"value": true, "score": 0.9889094233512878}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 0, "offsetEnd": 9}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "ClinicaDL saves at the end of each epoch the state of the network and of the optimizer. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00019949674606323242}, "created": {"value": false, "score": 2.0742416381835938e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 0, "offsetEnd": 9}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "ClinicaDL provides specific functions to easily perform inference with models previously trained with the tool. ", "mentionContextAttributes": {"used": {"value": false, "score": 3.266334533691406e-05}, "created": {"value": false, "score": 0.0004642009735107422}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "clinicadl", "normalizedForm": "clinicadl", "offsetStart": 0, "offsetEnd": 9}, "context": "clinicadl/tuto/intro.html.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0006079673767089844}, "created": {"value": false, "score": 8.344650268554688e-06}, "shared": {"value": false, "score": 4.649162292480469e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.8025820851325989}, "created": {"value": false, "score": 0.008953511714935303}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 0, "offsetEnd": 9}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "ClinicaDL prevents the user from these scenarios by implementing the following strategies:", "mentionContextAttributes": {"used": {"value": false, "score": 0.00011157989501953125}, "created": {"value": false, "score": 0.0013952851295471191}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "clinicadl", "normalizedForm": "clinicadl", "offsetStart": 0, "offsetEnd": 9}, "context": "clinicadl/tuto.", "mentionContextAttributes": {"used": {"value": false, "score": 0.11171990633010864}, "created": {"value": false, "score": 5.054473876953125e-05}, "shared": {"value": false, "score": 2.86102294921875e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.8025820851325989}, "created": {"value": false, "score": 0.008953511714935303}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 0, "offsetEnd": 9}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "ClinicaDL facilitates the generation of semi-synthetic data for evaluation and verification purposes.", "mentionContextAttributes": {"used": {"value": false, "score": 3.5643577575683594e-05}, "created": {"value": false, "score": 0.002730429172515869}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 0, "offsetEnd": 9}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "ClinicaDL aims at being flexible, thus a section of the documentation is dedicated to the addition of new options on top of the main functionalities.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00010645389556884766}, "created": {"value": false, "score": 0.007598400115966797}, "shared": {"value": false, "score": 1.7881393432617188e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 3, "offsetEnd": 12}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "In ClinicaDL, this hyperparameter space is described by a configuration file created by the user.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00039333105087280273}, "created": {"value": false, "score": 0.01413649320602417}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 3, "offsetEnd": 12}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "As ClinicaDL and Clinica are fully compatible, outputs of the formerly mentioned pipelines can be introduced easily into train or predict functions of ClinicaDL.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00030863285064697266}, "created": {"value": false, "score": 0.0005856752395629883}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 4, "offsetEnd": 13}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "30  ClinicaDL has been designed to be used via the command line interface, with separate sub-commands performing the main tasks, as defined in a classical machine learning pipeline: extract, train, predict. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00015151500701904297}, "created": {"value": false, "score": 0.0325964093208313}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 7, "offsetEnd": 16}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "First, ClinicaDL relies on BIDS and CAPS formats to organize raw and processed data, respectively. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.03782844543457031}, "created": {"value": false, "score": 2.396106719970703e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 7, "offsetEnd": 16}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "Again, ClinicaDL allows easily compiling this information as the (hyper)parameters of all the networks trained are saved in their MAPS.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00016796588897705078}, "created": {"value": false, "score": 8.666515350341797e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Monai", "normalizedForm": "Monai", "offsetStart": 8, "offsetEnd": 13}, "context": "As with Monai, two public data sets are integrated with the library for ease of use: IXI 8 and EPISURG [17].", "mentionContextAttributes": {"used": {"value": false, "score": 0.003376483917236328}, "created": {"value": false, "score": 3.0994415283203125e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.003376483917236328}, "created": {"value": true, "score": 0.7142636775970459}, "shared": {"value": false, "score": 1.1920928955078125e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Nobrainer", "normalizedForm": "Nobrainer", "offsetStart": 9, "offsetEnd": 18}, "context": "Finally, Nobrainer 9 , focuses on learning brain segmentations and is documented by Jupyter notebook tutorials.", "mentionContextAttributes": {"used": {"value": false, "score": 5.328655242919922e-05}, "created": {"value": false, "score": 0.06039303541183472}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0011017322540283203}, "created": {"value": false, "score": 0.06039303541183472}, "shared": {"value": false, "score": 7.152557373046875e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 9, "offsetEnd": 18}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "Thirdly, ClinicaDL improves deep learning experiment reproducibility by sharing usable and tagged code, saving all parameters of the training set and data groups used for evaluation, and providing extensive documentation.", "mentionContextAttributes": {"used": {"value": false, "score": 3.0517578125e-05}, "created": {"value": false, "score": 0.0005607008934020996}, "shared": {"value": false, "score": 5.960464477539062e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Monai", "normalizedForm": "Monai", "offsetStart": 10, "offsetEnd": 15}, "context": "Moreover, Monai implements multi-GPU processing, which is not the case in ClinicaDL yet, and that we may also implement by relying on torch-lightning38 . ", "mentionContextAttributes": {"used": {"value": false, "score": 5.173683166503906e-05}, "created": {"value": true, "score": 0.7142636775970459}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.003376483917236328}, "created": {"value": true, "score": 0.7142636775970459}, "shared": {"value": false, "score": 1.1920928955078125e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 10, "offsetEnd": 19}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "Therefore ClinicaDL splits B and C with respect to A split (see Figure 2 for more insight).", "mentionContextAttributes": {"used": {"value": false, "score": 0.0012382268905639648}, "created": {"value": false, "score": 6.67572021484375e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 10, "offsetEnd": 19}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "Secondly, ClinicaDL prevents data leakage as train and validation data characteristics are saved when the output structure (MAPS) is created.", "mentionContextAttributes": {"used": {"value": false, "score": 6.830692291259766e-05}, "created": {"value": false, "score": 2.968311309814453e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Monai", "normalizedForm": "Monai", "offsetStart": 12, "offsetEnd": 17}, "context": "TorchIO and Monai also deal with reproducibility: TorchIO guarantees that transforms with a random factor can be reproduced as one can get the transforms' history, and Monai allows setting a random seed to compute a deterministic training.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00014901161193847656}, "created": {"value": false, "score": 3.921985626220703e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.003376483917236328}, "created": {"value": true, "score": 0.7142636775970459}, "shared": {"value": false, "score": 1.1920928955078125e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Clinica", "normalizedForm": "Clinica", "offsetStart": 12, "offsetEnd": 19}, "context": "The core of Clinica is a set of automatic pipelines for multimodal neuroimaging data preprocessing with standard tools of the community (such as SPM 13 , FreeSurfer14 or ANTS 15 ).", "mentionContextAttributes": {"used": {"value": false, "score": 9.000301361083984e-05}, "created": {"value": false, "score": 0.007673084735870361}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9986541271209717}, "created": {"value": true, "score": 0.9230390191078186}, "shared": {"value": false, "score": 0.000538170337677002}}, "references": [{"label": "[8]", "normalizedForm": "[8]", "refKey": 9}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 12, "offsetEnd": 21}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "Clinica and ClinicaDL follow the Brain Imaging Data Structure, described in [7], to organize their data sets.", "mentionContextAttributes": {"used": {"value": false, "score": 0.018334686756134033}, "created": {"value": false, "score": 3.170967102050781e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 12, "offsetEnd": 21}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "This is why ClinicaDL comes with different documentation supports, including tutorials (see Section 3.1.4).", "mentionContextAttributes": {"used": {"value": false, "score": 9.40561294555664e-05}, "created": {"value": false, "score": 3.3855438232421875e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PyTorch library", "normalizedForm": "PyTorch library", "offsetStart": 12, "offsetEnd": 27}, "context": "It uses the PyTorch library as backbone. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.09134405851364136}, "created": {"value": false, "score": 6.23464584350586e-05}, "shared": {"value": false, "score": 1.1920928955078125e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.09134405851364136}, "created": {"value": false, "score": 6.23464584350586e-05}, "shared": {"value": false, "score": 1.1920928955078125e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 13, "offsetEnd": 22}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "For example, ClinicaDL includes two quality check procedures taking as input the CAPS generated by pipelines of Only the first split was trained (folder split-0) and one model was selected based on its validation loss (folder best-loss).", "mentionContextAttributes": {"used": {"value": false, "score": 0.005185961723327637}, "created": {"value": false, "score": 5.364418029785156e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Clinica", "normalizedForm": "Clinica", "offsetStart": 17, "offsetEnd": 24}, "context": "As ClinicaDL and Clinica are fully compatible, outputs of the formerly mentioned pipelines can be introduced easily into train or predict functions of ClinicaDL.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00030863285064697266}, "created": {"value": false, "score": 0.0005856752395629883}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9986541271209717}, "created": {"value": true, "score": 0.9230390191078186}, "shared": {"value": false, "score": 0.000538170337677002}}, "references": [{"label": "[8]", "normalizedForm": "[8]", "refKey": 9}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PyTorch", "normalizedForm": "PyTorch", "offsetStart": 18, "offsetEnd": 25}, "context": "ClinicaDL extends PyTorch for neuroimaging applications where the data set structure plays a key role in the organization of the data and metadata. ", "mentionContextAttributes": {"used": {"value": false, "score": 3.5881996154785156e-05}, "created": {"value": false, "score": 0.00010180473327636719}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 4.947185516357422e-05}, "created": {"value": true, "score": 0.9889094233512878}, "shared": {"value": false, "score": 4.76837158203125e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 19, "offsetEnd": 28}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "In the same way as ClinicaDL, Clinica is a community-driven library which is meant to be extensible: even though not all possible modalities and data sets are handled, external users can add new pipelines, or ask the team to do it for them.", "mentionContextAttributes": {"used": {"value": false, "score": 6.818771362304688e-05}, "created": {"value": false, "score": 0.006625473499298096}, "shared": {"value": false, "score": 0.000538170337677002}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 21, "offsetEnd": 30}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "All the functions of ClinicaDL are meant to work on this structure to easily retrieve the parameters of the command line, the weights of the best models, the checkpoints, or the predictions made on the training and validation sets to compute the results at the image level on independent test sets.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0022169947624206543}, "created": {"value": false, "score": 0.004612624645233154}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 21, "offsetEnd": 30}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "The documentation of ClinicaDL is available online at https://clinicadl.readthedocs.", "mentionContextAttributes": {"used": {"value": false, "score": 8.07046890258789e-05}, "created": {"value": false, "score": 0.0008618831634521484}, "shared": {"value": true, "score": 0.9951071739196777}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "implicit", "software-name": {"rawForm": "library", "normalizedForm": "library", "offsetStart": 22, "offsetEnd": 29}, "context": "The other main Python library for deep learning in medical research is TorchIO [16]. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00018972158432006836}, "created": {"value": false, "score": 3.0517578125e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00018972158432006836}, "created": {"value": false, "score": 3.0517578125e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Clinica", "normalizedForm": "Clinica", "offsetStart": 22, "offsetEnd": 29}, "context": "Then projects such as Clinica [8] or BIDS Apps [9] help preprocess these BIDS data sets.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00014019012451171875}, "created": {"value": false, "score": 0.0021811723709106445}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9986541271209717}, "created": {"value": true, "score": 0.9230390191078186}, "shared": {"value": false, "score": 0.000538170337677002}}, "references": [{"label": "[8]", "normalizedForm": "[8]", "refKey": 9, "offsetStart": 1990, "offsetEnd": 1993}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MedMNIST", "normalizedForm": "MedMNIST", "offsetStart": 23, "offsetEnd": 32}, "context": "It is meant to work on MedMNIST6 , a series of ten data sets of preprocessed medical images of different modalities (cancer histology, chest X-ray, dermatoscopy, optical coherence tomography, fundus photography, breast ultrasound and abdominal computed tomography) and the ten data sets of the medical segmentation decathlon challenge [14,15] 7 that aims at segmenting organs or tumours. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.01281040906906128}, "created": {"value": false, "score": 0.01796954870223999}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.01281040906906128}, "created": {"value": false, "score": 0.01796954870223999}, "shared": {"value": false, "score": 7.152557373046875e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 23, "offsetEnd": 32}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "The models produced by ClinicaDL correspond to the ones that obtained the best performance on the validation set according to metrics chosen by the user. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9984201192855835}, "created": {"value": false, "score": 1.3709068298339844e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "clinicadl", "normalizedForm": "clinicadl", "offsetStart": 23, "offsetEnd": 32}, "context": "Moreover, the function clinicadl train --config file was designed to repeat experiments based on this configuration file (see Section 3.2.5).", "mentionContextAttributes": {"used": {"value": false, "score": 0.11184424161911011}, "created": {"value": false, "score": 0.007115721702575684}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.8025820851325989}, "created": {"value": false, "score": 0.008953511714935303}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Monai", "normalizedForm": "Monai", "offsetStart": 25, "offsetEnd": 30}, "context": "For example, TorchIO and Monai ease the use of some public data sets (MedMNIST, medical segmentation decathlon challenge, IXI and EPISURF), then other data sets can be plugged to the library components by specifying individually the paths to images and labels (Nobrainer only offers this second option), which is not necessary in ClinicaDL.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0011017322540283203}, "created": {"value": false, "score": 1.239776611328125e-05}, "shared": {"value": false, "score": 7.152557373046875e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.003376483917236328}, "created": {"value": true, "score": 0.7142636775970459}, "shared": {"value": false, "score": 1.1920928955078125e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Monai", "normalizedForm": "Monai", "offsetStart": 26, "offsetEnd": 31}, "context": "The most important one is Monai 2 , a large library merging three other libraries that are not maintained anymore: NiftyNet 3 [11], DeepNeuro 4 [12] and DLTK 5 [13]. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0013387203216552734}, "created": {"value": false, "score": 9.846687316894531e-05}, "shared": {"value": false, "score": 1.1920928955078125e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.003376483917236328}, "created": {"value": true, "score": 0.7142636775970459}, "shared": {"value": false, "score": 1.1920928955078125e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 26, "offsetEnd": 35}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "The main functionality of ClinicaDL is to train neural networks to learn a task.", "mentionContextAttributes": {"used": {"value": false, "score": 3.218650817871094e-05}, "created": {"value": false, "score": 0.20802289247512817}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 26, "offsetEnd": 35}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "This is not the case with ClinicaDL as the characteristics of each group are saved in the MAPS and the preprocessing is fully described in the configuration file.", "mentionContextAttributes": {"used": {"value": false, "score": 0.05906003713607788}, "created": {"value": false, "score": 2.8967857360839844e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Monai", "normalizedForm": "Monai", "offsetStart": 27, "offsetEnd": 32}, "context": "It is also possible to use Monai on other data sets but this requires additional work.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00019747018814086914}, "created": {"value": false, "score": 3.981590270996094e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.003376483917236328}, "created": {"value": true, "score": 0.7142636775970459}, "shared": {"value": false, "score": 1.1920928955078125e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 27, "offsetEnd": 36}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "In this paper we presented ClinicaDL, a Python open-source software for neuroimaging data processing with deep learning. ", "mentionContextAttributes": {"used": {"value": false, "score": 5.602836608886719e-05}, "created": {"value": true, "score": 0.9999247789382935}, "shared": {"value": false, "score": 5.364418029785156e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 27, "offsetEnd": 36}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "In this paper we presented ClinicaDL, an open-source software for deep learning processing on neuroimaging data. ", "mentionContextAttributes": {"used": {"value": false, "score": 4.780292510986328e-05}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": false, "score": 7.62939453125e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Clinica", "normalizedForm": "Clinica", "offsetStart": 28, "offsetEnd": 35}, "context": "Of note, the combination of Clinica and ClinicaDL functionalities leads to the generation and use of data sets in both formats (BIDS and CAPS).", "mentionContextAttributes": {"used": {"value": false, "score": 6.80685043334961e-05}, "created": {"value": false, "score": 0.00011682510375976562}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9986541271209717}, "created": {"value": true, "score": 0.9230390191078186}, "shared": {"value": false, "score": 0.000538170337677002}}, "references": [{"label": "[8]", "normalizedForm": "[8]", "refKey": 9}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 28, "offsetEnd": 37}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "The main functionalities of ClinicaDL cover all the steps needed for deep learning experiments, from data set management to the evaluation of results and network interpretation. ", "mentionContextAttributes": {"used": {"value": false, "score": 9.357929229736328e-05}, "created": {"value": false, "score": 0.00021225214004516602}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "wikidataId": "Q364", "wikipediaExternalRef": 18545292, "lang": "en", "confidence": 0.4417, "software-name": {"rawForm": "Github", "normalizedForm": "Github", "wikidataId": "Q364", "wikipediaExternalRef": 18545292, "lang": "en", "confidence": 0.4417, "offsetStart": 29, "offsetEnd": 38}, "context": "The source code is hosted on Github 31 . ", "mentionContextAttributes": {"used": {"value": false, "score": 0.3435298204421997}, "created": {"value": false, "score": 0.0008374452590942383}, "shared": {"value": false, "score": 0.3250153064727783}}, "documentContextAttributes": {"used": {"value": false, "score": 0.3435298204421997}, "created": {"value": false, "score": 0.0008374452590942383}, "shared": {"value": false, "score": 0.3250153064727783}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 29, "offsetEnd": 38}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python", "wikidataId": "Q28865", "offsetStart": 40, "offsetEnd": 46}, "context": "The three main objectives of ClinicaDL are to (1) help manipulate neuroimaging data sets, (2) prevent data leakage from biasing results and (3) reproduce deep learning experiments.", "mentionContextAttributes": {"used": {"value": false, "score": 9.942054748535156e-05}, "created": {"value": false, "score": 0.014683187007904053}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Clinica", "normalizedForm": "Clinica", "offsetStart": 30, "offsetEnd": 37}, "context": "In the same way as ClinicaDL, Clinica is a community-driven library which is meant to be extensible: even though not all possible modalities and data sets are handled, external users can add new pipelines, or ask the team to do it for them.", "mentionContextAttributes": {"used": {"value": false, "score": 6.818771362304688e-05}, "created": {"value": false, "score": 0.006625473499298096}, "shared": {"value": false, "score": 0.000538170337677002}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9986541271209717}, "created": {"value": true, "score": 0.9230390191078186}, "shared": {"value": false, "score": 0.000538170337677002}}, "references": [{"label": "[8]", "normalizedForm": "[8]", "refKey": 9}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 30, "offsetEnd": 39}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "The command line interface of ClinicaDL offers many options, as there is a large number of training parameters. ", "mentionContextAttributes": {"used": {"value": false, "score": 4.315376281738281e-05}, "created": {"value": false, "score": 0.0005949735641479492}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 30, "offsetEnd": 39}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "https://github.com/aramis-lab/ClinicaDL", "mentionContextAttributes": {"used": {"value": false, "score": 0.00015532970428466797}, "created": {"value": false, "score": 4.661083221435547e-05}, "shared": {"value": true, "score": 0.9874173402786255}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Clinica", "normalizedForm": "Clinica", "offsetStart": 31, "offsetEnd": 38}, "context": "The preprocessing pipelines of Clinica operate at the image level, but many deep learning systems work with one or several parts of the original 3D image.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0002815127372741699}, "created": {"value": false, "score": 0.00017970800399780273}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9986541271209717}, "created": {"value": true, "score": 0.9230390191078186}, "shared": {"value": false, "score": 0.000538170337677002}}, "references": [{"label": "[8]", "normalizedForm": "[8]", "refKey": 9}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Monai", "normalizedForm": "Monai", "offsetStart": 37, "offsetEnd": 42}, "context": "Finally, with the support of Nvidia, Monai provides multi-GPU parallel processing.", "mentionContextAttributes": {"used": {"value": false, "score": 8.809566497802734e-05}, "created": {"value": false, "score": 0.0026879310607910156}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.003376483917236328}, "created": {"value": true, "score": 0.7142636775970459}, "shared": {"value": false, "score": 1.1920928955078125e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 37, "offsetEnd": 46}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "First, the code and documentation of ClinicaDL are versioned to allow the user to retrieve the version needed for method reproducibility.", "mentionContextAttributes": {"used": {"value": false, "score": 0.3197624087333679}, "created": {"value": false, "score": 0.0026794075965881348}, "shared": {"value": false, "score": 2.5987625122070312e-05}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 39, "offsetEnd": 48}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "Among the three main issues tackled by ClinicaDL, the one which is the most often addressed by other tools is the first (data management).", "mentionContextAttributes": {"used": {"value": false, "score": 0.00043910741806030273}, "created": {"value": false, "score": 0.0023584365844726562}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 40, "offsetEnd": 49}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "Of note, the combination of Clinica and ClinicaDL functionalities leads to the generation and use of data sets in both formats (BIDS and CAPS).", "mentionContextAttributes": {"used": {"value": false, "score": 6.80685043334961e-05}, "created": {"value": false, "score": 0.00011682510375976562}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 41, "offsetEnd": 50}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "Segmentation is currently not handled by ClinicaDL. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.01342308521270752}, "created": {"value": false, "score": 6.16312026977539e-05}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Clinica", "normalizedForm": "Clinica", "offsetStart": 42, "offsetEnd": 49}, "context": "Preprocessed images can be obtained using Clinica for different imaging modalities. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.014247477054595947}, "created": {"value": false, "score": 1.9788742065429688e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9986541271209717}, "created": {"value": true, "score": 0.9230390191078186}, "shared": {"value": false, "score": 0.000538170337677002}}, "references": [{"label": "[8]", "normalizedForm": "[8]", "refKey": 9}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 44, "offsetEnd": 53}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "To prevent this pitfall, the source code of ClinicaDL is available on GitHub 28 .", "mentionContextAttributes": {"used": {"value": false, "score": 0.0016282200813293457}, "created": {"value": false, "score": 0.0008247494697570801}, "shared": {"value": true, "score": 0.6630022525787354}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Clinica", "normalizedForm": "Clinica", "offsetStart": 46, "offsetEnd": 53}, "context": "As exposed in Section 3.2, the association of Clinica and ClinicaDL covers a large variety of procedures needed in deep learning experiments, that starts from the raw data format and ends with network interpretability.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0012930631637573242}, "created": {"value": false, "score": 0.0001266002655029297}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9986541271209717}, "created": {"value": true, "score": 0.9230390191078186}, "shared": {"value": false, "score": 0.000538170337677002}}, "references": [{"label": "[8]", "normalizedForm": "[8]", "refKey": 9}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Tensorboard", "normalizedForm": "Tensorboard", "offsetStart": 51, "offsetEnd": 62}, "context": "These logs are available in two different formats, Tensorboard compatible and TSV.", "mentionContextAttributes": {"used": {"value": false, "score": 9.751319885253906e-05}, "created": {"value": false, "score": 7.545948028564453e-05}, "shared": {"value": false, "score": 9.775161743164062e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00019353628158569336}, "created": {"value": false, "score": 7.545948028564453e-05}, "shared": {"value": false, "score": 0.03947329521179199}}}, {"type": "software", "software-type": "implicit", "software-name": {"rawForm": "packages", "normalizedForm": "packages", "offsetStart": 52, "offsetEnd": 60}, "context": "Labeled versions of the code are released as Python packages that are permanently stored in the official Python Package Index. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.000741422176361084}, "created": {"value": false, "score": 0.0061196088790893555}, "shared": {"value": false, "score": 0.12903815507888794}}, "documentContextAttributes": {"used": {"value": false, "score": 0.000741422176361084}, "created": {"value": false, "score": 0.0061196088790893555}, "shared": {"value": false, "score": 0.12903815507888794}}}, {"type": "software", "software-type": "software", "wikidataId": "Q187432", "wikipediaExternalRef": 21490336, "lang": "en", "confidence": 0.5074, "software-name": {"rawForm": "scripts", "normalizedForm": "scripts", "wikidataId": "Q187432", "wikipediaExternalRef": 21490336, "lang": "en", "confidence": 0.5074, "offsetStart": 53, "offsetEnd": 60}, "context": "Indeed, the hyperparameter values are defined in the scripts, hence their previous values may be lost as new experiments are launched.", "mentionContextAttributes": {"used": {"value": false, "score": 0.006898999214172363}, "created": {"value": false, "score": 0.0004801750183105469}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.006898999214172363}, "created": {"value": true, "score": 0.8113381266593933}, "shared": {"value": false, "score": 0.00017130374908447266}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Clinica", "normalizedForm": "Clinica", "offsetStart": 53, "offsetEnd": 60}, "context": "ClinicaDL takes as inputs the images preprocessed by Clinica and convert them into tensors to train deep neural networks. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0007336735725402832}, "created": {"value": false, "score": 7.772445678710938e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9986541271209717}, "created": {"value": true, "score": 0.9230390191078186}, "shared": {"value": false, "score": 0.000538170337677002}}, "references": [{"label": "[8]", "normalizedForm": "[8]", "refKey": 9}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "clinicadl", "normalizedForm": "clinicadl", "offsetStart": 54, "offsetEnd": 63}, "context": "This set of commands is available through the command clinicadl tsvtool.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0009846687316894531}, "created": {"value": false, "score": 0.00022751092910766602}, "shared": {"value": false, "score": 7.152557373046875e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.8025820851325989}, "created": {"value": false, "score": 0.008953511714935303}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 56, "offsetEnd": 65}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "The work described in [1] used a preliminary version of ClinicaDL. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.997134804725647}, "created": {"value": false, "score": 1.9669532775878906e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "wikidataId": "Q23891141", "wikipediaExternalRef": 51016820, "lang": "en", "confidence": 0.4723, "software-name": {"rawForm": "OpenNeuro", "normalizedForm": "OpenNeuro", "wikidataId": "Q23891141", "wikipediaExternalRef": 51016820, "lang": "en", "confidence": 0.4723, "offsetStart": 56, "offsetEnd": 68}, "context": "As already mentioned, many BIDS data sets are hosted on OpenNeuro 24 . ", "mentionContextAttributes": {"used": {"value": false, "score": 0.12618428468704224}, "created": {"value": false, "score": 5.0902366638183594e-05}, "shared": {"value": false, "score": 1.7404556274414062e-05}}, "documentContextAttributes": {"used": {"value": false, "score": 0.12618428468704224}, "created": {"value": false, "score": 0.0008665919303894043}, "shared": {"value": false, "score": 1.7404556274414062e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 58, "offsetEnd": 67}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "As exposed in Section 3.2, the association of Clinica and ClinicaDL covers a large variety of procedures needed in deep learning experiments, that starts from the raw data format and ends with network interpretability.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0012930631637573242}, "created": {"value": false, "score": 0.0001266002655029297}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Clinica", "normalizedForm": "Clinica", "offsetStart": 60, "offsetEnd": 70}, "context": "As the name suggests, it is meant to work on the outputs of Clinica [8], an open-source software platform for reproducible clinical neuroimaging studies. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00045245885848999023}, "created": {"value": true, "score": 0.5161783695220947}, "shared": {"value": false, "score": 6.198883056640625e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9986541271209717}, "created": {"value": true, "score": 0.9230390191078186}, "shared": {"value": false, "score": 0.000538170337677002}}, "references": [{"label": "[8]", "normalizedForm": "[8]", "refKey": 9}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 61, "offsetEnd": 70}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "The absence of an independent test set is still possible, as ClinicaDL does not force the user to give the test set to evaluate the performance in an unbiased way during training.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00015819072723388672}, "created": {"value": false, "score": 6.031990051269531e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Tensorboard", "normalizedForm": "Tensorboard", "offsetStart": 61, "offsetEnd": 74}, "context": "Two different formats are available: they can be opened with Tensorboard23 and are also available as TSV files.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00019353628158569336}, "created": {"value": false, "score": 4.398822784423828e-05}, "shared": {"value": false, "score": 0.03947329521179199}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00019353628158569336}, "created": {"value": false, "score": 7.545948028564453e-05}, "shared": {"value": false, "score": 0.03947329521179199}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "clinicadl", "normalizedForm": "clinicadl", "offsetStart": 62, "offsetEnd": 71}, "context": "The documentation of ClinicaDL is available online at https://clinicadl.readthedocs.", "mentionContextAttributes": {"used": {"value": false, "score": 8.07046890258789e-05}, "created": {"value": false, "score": 0.0008618831634521484}, "shared": {"value": true, "score": 0.9951071739196777}}, "documentContextAttributes": {"used": {"value": true, "score": 0.8025820851325989}, "created": {"value": false, "score": 0.008953511714935303}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 63, "offsetEnd": 72}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "All these variables can be easily set and retrieved when using ClinicaDL.", "mentionContextAttributes": {"used": {"value": false, "score": 0.02403700351715088}, "created": {"value": false, "score": 2.4557113647460938e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PyTorch", "normalizedForm": "PyTorch", "offsetStart": 64, "offsetEnd": 71}, "context": "ClinicaDL proposes a simple tool to transform NIfTI images into PyTorch tensors.", "mentionContextAttributes": {"used": {"value": false, "score": 4.947185516357422e-05}, "created": {"value": true, "score": 0.9889094233512878}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 4.947185516357422e-05}, "created": {"value": true, "score": 0.9889094233512878}, "shared": {"value": false, "score": 4.76837158203125e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "tsvtool", "normalizedForm": "tsvtool", "offsetStart": 64, "offsetEnd": 71}, "context": "This set of commands is available through the command clinicadl tsvtool.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0009846687316894531}, "created": {"value": false, "score": 0.00022751092910766602}, "shared": {"value": false, "score": 7.152557373046875e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0009846687316894531}, "created": {"value": false, "score": 0.00022751092910766602}, "shared": {"value": false, "score": 7.152557373046875e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "tsvtool", "normalizedForm": "tsvtool", "offsetStart": 67, "offsetEnd": 74}, "context": "These functionalities are also available through the command line (tsvtool, generate, random-search, interpret).", "mentionContextAttributes": {"used": {"value": false, "score": 0.0001735091209411621}, "created": {"value": false, "score": 9.28640365600586e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0009846687316894531}, "created": {"value": false, "score": 0.00022751092910766602}, "shared": {"value": false, "score": 7.152557373046875e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 67, "offsetEnd": 76}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5", "offsetStart": 58, "offsetEnd": 63}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "v1.0.5 corresponds to the models trained with the version 1.0.5 of ClinicaDL. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9947623610496521}, "created": {"value": false, "score": 5.9604644775390625e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "clinicadl", "normalizedForm": "clinicadl", "offsetStart": 67, "offsetEnd": 76}, "context": "This tool should be replaced soon by https://github.com/aramis-lab/clinicadl/discussions.", "mentionContextAttributes": {"used": {"value": false, "score": 4.57763671875e-05}, "created": {"value": false, "score": 0.00044220685958862305}, "shared": {"value": true, "score": 0.9874934554100037}}, "documentContextAttributes": {"used": {"value": true, "score": 0.8025820851325989}, "created": {"value": false, "score": 0.008953511714935303}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 69, "offsetEnd": 78}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "Four possible uses of the image (modes) are currently implemented in ClinicaDL:", "mentionContextAttributes": {"used": {"value": false, "score": 8.082389831542969e-05}, "created": {"value": false, "score": 0.0025521516799926758}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MedMNIST", "normalizedForm": "MedMNIST", "offsetStart": 70, "offsetEnd": 78}, "context": "For example, TorchIO and Monai ease the use of some public data sets (MedMNIST, medical segmentation decathlon challenge, IXI and EPISURF), then other data sets can be plugged to the library components by specifying individually the paths to images and labels (Nobrainer only offers this second option), which is not necessary in ClinicaDL.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0011017322540283203}, "created": {"value": false, "score": 1.239776611328125e-05}, "shared": {"value": false, "score": 7.152557373046875e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.01281040906906128}, "created": {"value": false, "score": 0.01796954870223999}, "shared": {"value": false, "score": 7.152557373046875e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Pytest", "normalizedForm": "Pytest", "offsetStart": 71, "offsetEnd": 77}, "context": "\u2022 User interface tests: The command line interface is tested using the Pytest library. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.999954104423523}, "created": {"value": false, "score": 1.7642974853515625e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999954104423523}, "created": {"value": false, "score": 1.7642974853515625e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Keras", "normalizedForm": "Keras", "offsetStart": 73, "offsetEnd": 78}, "context": "Lakhani et al. [10] proposed a tutorial-like paper explaining how to use Keras to train a classifier on two specific data sets hosted on a dedicated repository 1 . ", "mentionContextAttributes": {"used": {"value": false, "score": 9.572505950927734e-05}, "created": {"value": false, "score": 0.002291440963745117}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 9.572505950927734e-05}, "created": {"value": false, "score": 0.002291440963745117}, "shared": {"value": false, "score": 1.1920928955078125e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 73, "offsetEnd": 82}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "These are systematically tested to avoid errors in the main interface of ClinicaDL.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": false, "score": 6.461143493652344e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 74, "offsetEnd": 83}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "Some pre-built deep learning architectures for each task are available in ClinicaDL and their list and details can be displayed with the command clinicadl train list models. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00043386220932006836}, "created": {"value": false, "score": 0.008953511714935303}, "shared": {"value": false, "score": 0.000494837760925293}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 74, "offsetEnd": 83}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "Moreover, Monai implements multi-GPU processing, which is not the case in ClinicaDL yet, and that we may also implement by relying on torch-lightning38 .", "mentionContextAttributes": {"used": {"value": false, "score": 5.173683166503906e-05}, "created": {"value": true, "score": 0.7142636775970459}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "clinicadl", "normalizedForm": "clinicadl", "offsetStart": 76, "offsetEnd": 85}, "context": "This functionality is available in a specific sub menu of the command line (clinicadl predict).", "mentionContextAttributes": {"used": {"value": false, "score": 0.0001575946807861328}, "created": {"value": false, "score": 0.007830440998077393}, "shared": {"value": false, "score": 1.9073486328125e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.8025820851325989}, "created": {"value": false, "score": 0.008953511714935303}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 78, "offsetEnd": 87}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "Then, when evaluating the performance of a trained model on a new data group, ClinicaDL checks that this data group does not share participants with the training and validation groups.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0007836818695068359}, "created": {"value": false, "score": 2.2411346435546875e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "implicit", "wikidataId": "Q187432", "wikipediaExternalRef": 21490336, "lang": "en", "confidence": 0.5074, "software-name": {"rawForm": "scripts", "normalizedForm": "scripts", "wikidataId": "Q187432", "wikipediaExternalRef": 21490336, "lang": "en", "confidence": 0.5074, "offsetStart": 80, "offsetEnd": 87}, "context": "Hence there is an urgent need in publishing open-source software, data sets and scripts that allow reproducing the methodologies described in deep learning studies. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00010693073272705078}, "created": {"value": true, "score": 0.8113381266593933}, "shared": {"value": false, "score": 0.00017130374908447266}}, "documentContextAttributes": {"used": {"value": false, "score": 0.006898999214172363}, "created": {"value": true, "score": 0.8113381266593933}, "shared": {"value": false, "score": 0.00017130374908447266}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Clinica", "normalizedForm": "Clinica", "offsetStart": 80, "offsetEnd": 87}, "context": "When a database is BIDS-formatted, it is possible to preprocess its images with Clinica pipelines. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0033895373344421387}, "created": {"value": false, "score": 5.7578086853027344e-05}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9986541271209717}, "created": {"value": true, "score": 0.9230390191078186}, "shared": {"value": false, "score": 0.000538170337677002}}, "references": [{"label": "[8]", "normalizedForm": "[8]", "refKey": 9}]}, {"type": "software", "software-type": "implicit", "software-name": {"rawForm": "script", "normalizedForm": "script", "offsetStart": 81, "offsetEnd": 87}, "context": "Monai provides low-level functions and classes that must be combined in a Python script to learn a classification or a segmentation task, or to train a generative adversarial network (GAN). ", "mentionContextAttributes": {"used": {"value": false, "score": 2.956390380859375e-05}, "created": {"value": false, "score": 0.0007128119468688965}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 2.956390380859375e-05}, "created": {"value": false, "score": 0.0007128119468688965}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 86, "offsetEnd": 95}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "A collection of tools to handle metadata of BIDS-formatted data sets is proposed with ClinicaDL. ", "mentionContextAttributes": {"used": {"value": false, "score": 5.733966827392578e-05}, "created": {"value": true, "score": 0.7863678336143494}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 87, "offsetEnd": 96}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "The authors would like to thank Junhao Wen for his initial contribution to what became ClinicaDL, Simona Bottani and Omar El Rifai for their contributions and feedback, and Igor Koval for his soothing support.", "mentionContextAttributes": {"used": {"value": false, "score": 0.27005302906036377}, "created": {"value": false, "score": 0.0012470483779907227}, "shared": {"value": false, "score": 9.059906005859375e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 88, "offsetEnd": 97}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "Currently, only the gradient back-propagation method proposed in [30] is implemented in ClinicaDL.", "mentionContextAttributes": {"used": {"value": false, "score": 9.918212890625e-05}, "created": {"value": false, "score": 0.029179871082305908}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 90, "offsetEnd": 99}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "Model Analysis and Processing Structure (MAPS) is the name of the output structure of the ClinicaDL train function.", "mentionContextAttributes": {"used": {"value": false, "score": 0.020092368125915527}, "created": {"value": false, "score": 0.00029736757278442383}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "clinicadl", "normalizedForm": "clinicadl", "offsetStart": 90, "offsetEnd": 99}, "context": "The installation of the released packages is performed with a single command (pip install clinicadl).", "mentionContextAttributes": {"used": {"value": true, "score": 0.8025820851325989}, "created": {"value": false, "score": 0.003963649272918701}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.8025820851325989}, "created": {"value": false, "score": 0.008953511714935303}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Pypi", "normalizedForm": "Pypi", "offsetStart": 92, "offsetEnd": 96}, "context": "The software is publicly distributed as an easy-to-install package and is referenced in the Pypi package index 29 . ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0023185014724731445}, "created": {"value": false, "score": 0.003249049186706543}, "shared": {"value": false, "score": 0.476909339427948}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0023185014724731445}, "created": {"value": false, "score": 0.003249049186706543}, "shared": {"value": false, "score": 0.476909339427948}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 93, "offsetEnd": 102}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "provide a large amount of options for some functionalities which are not customizable yet in ClinicaDL. ", "mentionContextAttributes": {"used": {"value": false, "score": 3.5643577575683594e-05}, "created": {"value": false, "score": 7.605552673339844e-05}, "shared": {"value": false, "score": 5.960464477539062e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 94, "offsetEnd": 103}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "To allow any researcher to completely or partly reproduce the steps performed in a study with ClinicaDL, we decided to work with data set structures, described in the following sections, whose specifications are exhaustive.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9720650911331177}, "created": {"value": false, "score": 0.00914853811264038}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 94, "offsetEnd": 103}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "Currently four CNN models for binary classification are available, one for each input mode of ClinicaDL (image, patch, roi and slice).", "mentionContextAttributes": {"used": {"value": false, "score": 4.6253204345703125e-05}, "created": {"value": false, "score": 3.230571746826172e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 95, "offsetEnd": 104}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "The rest of the book is made of interactive notebooks that present the main functionalities of ClinicaDL and can be easily run locally or on Google Colab (which provides free GPU environments).", "mentionContextAttributes": {"used": {"value": false, "score": 0.006638884544372559}, "created": {"value": false, "score": 0.01806718111038208}, "shared": {"value": false, "score": 0.010867893695831299}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 108, "offsetEnd": 117}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "Other commands are more generic, and may be applied to any label list, even if they were not generated with ClinicaDL:", "mentionContextAttributes": {"used": {"value": false, "score": 0.0034709572792053223}, "created": {"value": false, "score": 0.00014674663543701172}, "shared": {"value": false, "score": 5.960464477539062e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 109, "offsetEnd": 118}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "These synthetic data sets have different purposes: the first two can be used to debug the functionalities of ClinicaDL and are used by the continuous integration workflow.", "mentionContextAttributes": {"used": {"value": false, "score": 0.002606987953186035}, "created": {"value": false, "score": 8.344650268554688e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 112, "offsetEnd": 121}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "In addition to the user documentation, some tutorials have been created to help users in their first steps with ClinicaDL.", "mentionContextAttributes": {"used": {"value": false, "score": 9.72747802734375e-05}, "created": {"value": false, "score": 0.08648723363876343}, "shared": {"value": false, "score": 0.0007265210151672363}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 119, "offsetEnd": 128}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "Then, we give an overview of the functionalities already implemented, or that can be easily added by external users in ClinicaDL. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00017249584197998047}, "created": {"value": false, "score": 0.33749353885650635}, "shared": {"value": false, "score": 5.960464477539062e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Clinica", "normalizedForm": "Clinica", "offsetStart": 129, "offsetEnd": 136}, "context": "The other formats we introduced (CAPS and MAPS) are useful as their elements can be easily processed and retrieved with tools of Clinica or ClinicaDL.", "mentionContextAttributes": {"used": {"value": false, "score": 3.826618194580078e-05}, "created": {"value": true, "score": 0.9230390191078186}, "shared": {"value": false, "score": 7.152557373046875e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9986541271209717}, "created": {"value": true, "score": 0.9230390191078186}, "shared": {"value": false, "score": 0.000538170337677002}}, "references": [{"label": "[8]", "normalizedForm": "[8]", "refKey": 9}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DeepNeuro 4", "normalizedForm": "DeepNeuro 4", "offsetStart": 132, "offsetEnd": 148}, "context": "The most important one is Monai 2 , a large library merging three other libraries that are not maintained anymore: NiftyNet 3 [11], DeepNeuro 4 [12] and DLTK 5 [13]. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0013387203216552734}, "created": {"value": false, "score": 9.846687316894531e-05}, "shared": {"value": false, "score": 1.1920928955078125e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0013387203216552734}, "created": {"value": false, "score": 9.846687316894531e-05}, "shared": {"value": false, "score": 1.1920928955078125e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 134, "offsetEnd": 143}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "Two pipelines have been developed specifically for deep learning use, though the outputs of the other pipelines can also be used with ClinicaDL. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00011169910430908203}, "created": {"value": false, "score": 0.0701795220375061}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 137, "offsetEnd": 146}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "New versions of the software may induce changes on the organization of the available models and the way they are loaded and processed by ClinicaDL. ", "mentionContextAttributes": {"used": {"value": false, "score": 7.402896881103516e-05}, "created": {"value": false, "score": 0.023773252964019775}, "shared": {"value": false, "score": 2.86102294921875e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 138, "offsetEnd": 147}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "To this end, users can implement their custom networks by filling the abstract template, which includes specific methods that are used in ClinicaDL. ", "mentionContextAttributes": {"used": {"value": false, "score": 8.20159912109375e-05}, "created": {"value": false, "score": 0.06041073799133301}, "shared": {"value": false, "score": 3.337860107421875e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 140, "offsetEnd": 149}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "The other formats we introduced (CAPS and MAPS) are useful as their elements can be easily processed and retrieved with tools of Clinica or ClinicaDL.", "mentionContextAttributes": {"used": {"value": false, "score": 3.826618194580078e-05}, "created": {"value": true, "score": 0.9230390191078186}, "shared": {"value": false, "score": 7.152557373046875e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SPM", "normalizedForm": "SPM", "offsetStart": 145, "offsetEnd": 151}, "context": "The core of Clinica is a set of automatic pipelines for multimodal neuroimaging data preprocessing with standard tools of the community (such as SPM 13 , FreeSurfer14 or ANTS 15 ). ", "mentionContextAttributes": {"used": {"value": false, "score": 9.000301361083984e-05}, "created": {"value": false, "score": 0.007673084735870361}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 9.000301361083984e-05}, "created": {"value": false, "score": 0.007673084735870361}, "shared": {"value": false, "score": 1.1920928955078125e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "clinicadl", "normalizedForm": "clinicadl", "offsetStart": 145, "offsetEnd": 154}, "context": "Some pre-built deep learning architectures for each task are available in ClinicaDL and their list and details can be displayed with the command clinicadl train list models.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00043386220932006836}, "created": {"value": false, "score": 0.008953511714935303}, "shared": {"value": false, "score": 0.000494837760925293}}, "documentContextAttributes": {"used": {"value": true, "score": 0.8025820851325989}, "created": {"value": false, "score": 0.008953511714935303}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 146, "offsetEnd": 155}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "In this paper, we first present the common pitfalls encountered by deep learning users in the neuroimaging community and the solutions brought by ClinicaDL to avoid them. ", "mentionContextAttributes": {"used": {"value": false, "score": 8.177757263183594e-05}, "created": {"value": true, "score": 0.9999034404754639}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "wikidataId": "Q23891141", "wikipediaExternalRef": 51016820, "lang": "en", "confidence": 0.4723, "software-name": {"rawForm": "OpenNeuro", "normalizedForm": "OpenNeuro", "wikidataId": "Q23891141", "wikipediaExternalRef": 51016820, "lang": "en", "confidence": 0.4723, "offsetStart": 148, "offsetEnd": 157}, "context": "It is widely adopted by the neuroimaging community, and more and more databases try to distribute their data in BIDS format or approaching (see the OpenNeuro17 platform for a list of BIDS formatted data sets).", "mentionContextAttributes": {"used": {"value": false, "score": 7.18832015991211e-05}, "created": {"value": false, "score": 0.0008665919303894043}, "shared": {"value": false, "score": 7.3909759521484375e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.12618428468704224}, "created": {"value": false, "score": 0.0008665919303894043}, "shared": {"value": false, "score": 1.7404556274414062e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 151, "offsetEnd": 160}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "As ClinicaDL and Clinica are fully compatible, outputs of the formerly mentioned pipelines can be introduced easily into train or predict functions of ClinicaDL.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00030863285064697266}, "created": {"value": false, "score": 0.0005856752395629883}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DLTK 5", "normalizedForm": "DLTK 5", "offsetStart": 153, "offsetEnd": 159}, "context": "The most important one is Monai 2 , a large library merging three other libraries that are not maintained anymore: NiftyNet 3 [11], DeepNeuro 4 [12] and DLTK 5 [13]. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0013387203216552734}, "created": {"value": false, "score": 9.846687316894531e-05}, "shared": {"value": false, "score": 1.1920928955078125e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0013387203216552734}, "created": {"value": false, "score": 9.846687316894531e-05}, "shared": {"value": false, "score": 1.1920928955078125e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 154, "offsetEnd": 163}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "For non-deterministic models such as deep learning, method reproducibility can only be achieved by setting a random seed 28 https://github.com/aramis-lab/ClinicaDL", "mentionContextAttributes": {"used": {"value": false, "score": 4.3272972106933594e-05}, "created": {"value": false, "score": 9.119510650634766e-05}, "shared": {"value": false, "score": 0.0022363662719726562}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FreeSurfer", "normalizedForm": "FreeSurfer", "offsetStart": 154, "offsetEnd": 166}, "context": "The core of Clinica is a set of automatic pipelines for multimodal neuroimaging data preprocessing with standard tools of the community (such as SPM 13 , FreeSurfer14 or ANTS 15 ). ", "mentionContextAttributes": {"used": {"value": false, "score": 9.000301361083984e-05}, "created": {"value": false, "score": 0.007673084735870361}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 9.000301361083984e-05}, "created": {"value": false, "score": 0.007673084735870361}, "shared": {"value": false, "score": 1.1920928955078125e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "clinicadl", "normalizedForm": "clinicadl", "offsetStart": 164, "offsetEnd": 173}, "context": "Currently, it is already possible to train a network parametrized by a configuration file instead of entering each parameter individually in the command line using clinicadl train --config file FILENAME.", "mentionContextAttributes": {"used": {"value": false, "score": 7.128715515136719e-05}, "created": {"value": false, "score": 0.0016834735870361328}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.8025820851325989}, "created": {"value": false, "score": 0.008953511714935303}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Monai", "normalizedForm": "Monai", "offsetStart": 168, "offsetEnd": 173}, "context": "TorchIO and Monai also deal with reproducibility: TorchIO guarantees that transforms with a random factor can be reproduced as one can get the transforms' history, and Monai allows setting a random seed to compute a deterministic training.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00014901161193847656}, "created": {"value": false, "score": 3.921985626220703e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.003376483917236328}, "created": {"value": true, "score": 0.7142636775970459}, "shared": {"value": false, "score": 1.1920928955078125e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ANTS", "normalizedForm": "ANTS", "offsetStart": 170, "offsetEnd": 177}, "context": "The core of Clinica is a set of automatic pipelines for multimodal neuroimaging data preprocessing with standard tools of the community (such as SPM 13 , FreeSurfer14 or ANTS 15 ). ", "mentionContextAttributes": {"used": {"value": false, "score": 9.000301361083984e-05}, "created": {"value": false, "score": 0.007673084735870361}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 9.000301361083984e-05}, "created": {"value": false, "score": 0.007673084735870361}, "shared": {"value": false, "score": 1.1920928955078125e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 185, "offsetEnd": 194}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "To help deep learning users to (1) format and preprocess neuroimaging data sets, (2) prevent data leakage from biasing their results and (3) reproduce their experiments, we implemented ClinicaDL: a command line software written in Python meant to train deep learning networks to reconstruct input images, or to predict a categorical (classification) or a continuous (regression) variable based on neuroimaging data. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0022919178009033203}, "created": {"value": true, "score": 0.5713241696357727}, "shared": {"value": false, "score": 2.2649765014648438e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 191, "offsetEnd": 200}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "Moreover, our framework is adapted to the use of 3D images, as it allows the user to choose their own way to cut the image in smaller pieces (patches or slices) to ease network training (see ClinicaDL modes in section 2.1.3).", "mentionContextAttributes": {"used": {"value": false, "score": 5.054473876953125e-05}, "created": {"value": true, "score": 0.9650164246559143}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 198, "offsetEnd": 207}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "However, one may be interested in having a deterministic setting on a given machine to correctly evaluate the impact of a particular property to improve their performance, and this is possible with ClinicaDL.", "mentionContextAttributes": {"used": {"value": false, "score": 4.6133995056152344e-05}, "created": {"value": false, "score": 0.00025898218154907227}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Nobrainer", "normalizedForm": "Nobrainer", "offsetStart": 261, "offsetEnd": 270}, "context": "For example, TorchIO and Monai ease the use of some public data sets (MedMNIST, medical segmentation decathlon challenge, IXI and EPISURF), then other data sets can be plugged to the library components by specifying individually the paths to images and labels (Nobrainer only offers this second option), which is not necessary in ClinicaDL. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0011017322540283203}, "created": {"value": false, "score": 1.239776611328125e-05}, "shared": {"value": false, "score": 7.152557373046875e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0011017322540283203}, "created": {"value": false, "score": 0.06039303541183472}, "shared": {"value": false, "score": 7.152557373046875e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClinicaDL", "normalizedForm": "ClinicaDL", "offsetStart": 330, "offsetEnd": 339}, "version": {"rawForm": "1.0.5", "normalizedForm": "1.0.5"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "For example, TorchIO and Monai ease the use of some public data sets (MedMNIST, medical segmentation decathlon challenge, IXI and EPISURF), then other data sets can be plugged to the library components by specifying individually the paths to images and labels (Nobrainer only offers this second option), which is not necessary in ClinicaDL.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0011017322540283203}, "created": {"value": false, "score": 1.239776611328125e-05}, "shared": {"value": false, "score": 7.152557373046875e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999644756317139}, "created": {"value": true, "score": 0.9999251365661621}, "shared": {"value": true, "score": 0.9951071739196777}}}], "references": [{"refKey": 9, "tei": "<biblStruct xml:id=\"b9\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">Clinica: An Open-Source Software Platform for Reproducible Clinical Neuroscience Studies</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Alexandre</forename><surname>Routier</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Ninon</forename><surname>Burgos</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Mauricio</forename><surname>D\u00edaz</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Michael</forename><surname>Bacci</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Simona</forename><surname>Bottani</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Omar</forename><surname>El-Rifai</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Sabrina</forename><surname>Fontanella</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Pietro</forename><surname>Gori</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">J\u00e9r\u00e9my</forename><surname>Guillon</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Alexis</forename><surname>Guyot</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Ravi</forename><surname>Hassanaly</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Thomas</forename><surname>Jacquemont</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Pascal</forename><surname>Lu</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Arnaud</forename><surname>Marcoux</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Tristan</forename><surname>Moreau</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Jorge</forename><surname>Samper-Gonz\u00e1lez</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Marc</forename><surname>Teichmann</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Elina</forename><surname>Thibeau-Sutre</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Ghislain</forename><surname>Vaillant</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Junhao</forename><surname>Wen</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Adam</forename><surname>Wild</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Marie-Odile</forename><surname>Habert</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Stanley</forename><surname>Durrleman</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Olivier</forename><surname>Colliot</surname></persName>\n\t\t</author>\n\t\t<idno type=\"DOI\">10.3389/fninf.2021.689675</idno>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"j\">Frontiers in Neuroinformatics</title>\n\t\t<title level=\"j\" type=\"abbrev\">Front. Neuroinform.</title>\n\t\t<idno type=\"ISSNe\">1662-5196</idno>\n\t\t<imprint>\n\t\t\t<biblScope unit=\"volume\">15</biblScope>\n\t\t\t<biblScope unit=\"page\">39</biblScope>\n\t\t\t<date type=\"published\" when=\"2021-08-13\">2021</date>\n\t\t\t<publisher>Frontiers Media SA</publisher>\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}], "runtime": 63394, "id": "5923c510e0c7dacb4a63e8e4a573f1e47dd629e3", "metadata": {"id": "5923c510e0c7dacb4a63e8e4a573f1e47dd629e3"}, "original_file_path": "../../datalake/Samuel/SV22/SV22_xml/hal-03351976.grobid.tei.xml", "file_name": "hal-03351976.grobid.tei.xml"}