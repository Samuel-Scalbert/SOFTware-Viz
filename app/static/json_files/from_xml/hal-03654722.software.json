{"application": "software-mentions", "version": "0.8.0", "date": "2024-04-12T17:28+0000", "md5": "3C3DCFC27D3DD01CCD8477B3D712AD45", "mentions": [{"type": "software", "software-type": "software", "software-name": {"rawForm": "ORBIT", "normalizedForm": "ORBIT", "offsetStart": 0, "offsetEnd": 5}, "context": "ORBIT provides access to: radio resources, including WiFi 802.11a/b/g 802.11n 802.11ac, ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00011676549911499023}, "created": {"value": false, "score": 3.927946090698242e-05}, "shared": {"value": false, "score": 1.3172626495361328e-05}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0003955960273742676}, "created": {"value": false, "score": 0.00010341405868530273}, "shared": {"value": false, "score": 1.3172626495361328e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "EmuFog", "normalizedForm": "EmuFog", "offsetStart": 0, "offsetEnd": 6}, "context": "EmuFog [91] \u2713", "mentionContextAttributes": {"used": {"value": true, "score": 0.9977092146873474}, "created": {"value": false, "score": 4.589557647705078e-06}, "shared": {"value": false, "score": 1.0132789611816406e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9977092146873474}, "created": {"value": false, "score": 0.006331741809844971}, "shared": {"value": false, "score": 9.238719940185547e-06}}, "references": [{"label": "[91]", "normalizedForm": "[91]", "refKey": 91, "offsetStart": 60727, "offsetEnd": 60731}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Fogbed", "normalizedForm": "Fogbed", "offsetStart": 0, "offsetEnd": 6}, "context": "Fogbed [34] \u2713", "mentionContextAttributes": {"used": {"value": true, "score": 0.9992754459381104}, "created": {"value": false, "score": 2.8073787689208984e-05}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9992754459381104}, "created": {"value": false, "score": 3.427267074584961e-05}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "references": [{"label": "[34]", "normalizedForm": "[34]", "refKey": 34, "offsetStart": 61065, "offsetEnd": 61069}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "xFogSim", "normalizedForm": "xFogSim", "offsetStart": 0, "offsetEnd": 7}, "context": "xFogSim is lightweight, configurable, scalable and introduces the concept of fog federation for resource sharing among fog locations. ", "mentionContextAttributes": {"used": {"value": false, "score": 3.36766242980957e-05}, "created": {"value": false, "score": 0.12304741144180298}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 3.36766242980957e-05}, "created": {"value": false, "score": 0.12304741144180298}, "shared": {"value": false, "score": 2.980232238769531e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "iFogSim", "normalizedForm": "iFogSim", "offsetStart": 0, "offsetEnd": 7}, "context": "iFogSim allows users to measure, in a repeatable manner, the impact of resource management techniques in terms of latency, network congestion, energy consumption, and cost.", "mentionContextAttributes": {"used": {"value": false, "score": 2.7120113372802734e-05}, "created": {"value": false, "score": 0.0007590055465698242}, "shared": {"value": false, "score": 7.748603820800781e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9908813834190369}, "created": {"value": false, "score": 0.0007590055465698242}, "shared": {"value": false, "score": 1.3709068298339844e-06}}, "references": [{"label": "[63]", "normalizedForm": "[63]", "refKey": 63}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "EnOSlib", "normalizedForm": "EnOSlib", "offsetStart": 0, "offsetEnd": 7}, "context": "EnOSlib is a library which brings reusable building blocks for configuring the infrastructure, provisioning software on remote hosts as well as organizing the experimental workflow.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00011068582534790039}, "created": {"value": false, "score": 0.007723808288574219}, "shared": {"value": false, "score": 1.1324882507324219e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0002562999725341797}, "created": {"value": false, "score": 0.2626523971557617}, "shared": {"value": false, "score": 1.1324882507324219e-06}}, "references": [{"label": "[32]", "normalizedForm": "[32]", "refKey": 32}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "iFogSim", "normalizedForm": "iFogSim", "offsetStart": 0, "offsetEnd": 7}, "context": "iFogSim [63] \u2713", "mentionContextAttributes": {"used": {"value": true, "score": 0.9908813834190369}, "created": {"value": false, "score": 1.1622905731201172e-05}, "shared": {"value": false, "score": 1.3709068298339844e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9908813834190369}, "created": {"value": false, "score": 0.0007590055465698242}, "shared": {"value": false, "score": 1.3709068298339844e-06}}, "references": [{"label": "[63]", "normalizedForm": "[63]", "refKey": 63, "offsetStart": 58046, "offsetEnd": 58050}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Fed4Edge", "normalizedForm": "Fed4Edge", "offsetStart": 0, "offsetEnd": 8}, "context": "Fed4Edge uses RDF Stream Processing (RSP) engines as autonomous processing agents. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.029321908950805664}, "created": {"value": false, "score": 7.092952728271484e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.029321908950805664}, "created": {"value": true, "score": 0.9986597299575806}, "shared": {"value": false, "score": 4.172325134277344e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KubeEdge", "normalizedForm": "KubeEdge", "offsetStart": 0, "offsetEnd": 8}, "context": "KubeEdge key features are: core infrastructure support for networking; application deployment; and metadata synchronization between Cloud and Edge.", "mentionContextAttributes": {"used": {"value": false, "score": 6.526708602905273e-05}, "created": {"value": false, "score": 0.0029463768005371094}, "shared": {"value": false, "score": 5.185604095458984e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0008945465087890625}, "created": {"value": false, "score": 0.006777584552764893}, "shared": {"value": false, "score": 5.185604095458984e-06}}, "references": [{"label": "[159]", "normalizedForm": "[159]", "refKey": 159}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Fed4FIRE", "normalizedForm": "Fed4FIRE", "offsetStart": 0, "offsetEnd": 8}, "context": "Fed4FIRE+ [41] is a project offering the largest federation worldwide of Next Generation Internet (NGI) testbeds. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0002453327178955078}, "created": {"value": false, "score": 0.0004528164863586426}, "shared": {"value": false, "score": 3.159046173095703e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.35038870573043823}, "created": {"value": true, "score": 0.9980947971343994}, "shared": {"value": false, "score": 4.798173904418945e-05}}, "references": [{"label": "[41]", "normalizedForm": "[41]", "refKey": 41, "offsetStart": 71781, "offsetEnd": 71785}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Fed4FIRE", "normalizedForm": "Fed4FIRE", "offsetStart": 0, "offsetEnd": 8}, "context": "Fed4FIRE aims to provide open, accessible and reliable experimental infrastructures supporting a wide variety of research, such as 5G, IoT, Cloud Computing, Wired and Wireless Computer Networking. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0001270771026611328}, "created": {"value": false, "score": 0.07295328378677368}, "shared": {"value": false, "score": 4.798173904418945e-05}}, "documentContextAttributes": {"used": {"value": false, "score": 0.35038870573043823}, "created": {"value": true, "score": 0.9980947971343994}, "shared": {"value": false, "score": 4.798173904418945e-05}}, "references": [{"label": "[41]", "normalizedForm": "[41]", "refKey": 41}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KubeEdge", "normalizedForm": "KubeEdge", "offsetStart": 0, "offsetEnd": 8}, "context": "KubeEdge [159] \u2713 Deploy complex high level applications to the Edge.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0008945465087890625}, "created": {"value": false, "score": 3.039836883544922e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0008945465087890625}, "created": {"value": false, "score": 0.006777584552764893}, "shared": {"value": false, "score": 5.185604095458984e-06}}, "references": [{"label": "[159]", "normalizedForm": "[159]", "refKey": 159, "offsetStart": 62195, "offsetEnd": 62200}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FogNetSim", "normalizedForm": "FogNetSim", "offsetStart": 0, "offsetEnd": 9}, "context": "FogNetSim++ [115] focuses on simulating large Fog networks and differs from others mainly by providing features that allow users to incorporate customized mobility models, scheduling algorithms, and manage handover mechanisms. ", "mentionContextAttributes": {"used": {"value": false, "score": 4.392862319946289e-05}, "created": {"value": false, "score": 0.005203068256378174}, "shared": {"value": false, "score": 5.304813385009766e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.008172154426574707}, "created": {"value": false, "score": 0.005203068256378174}, "shared": {"value": false, "score": 5.304813385009766e-06}}, "references": [{"label": "[115]", "normalizedForm": "[115]", "refKey": 115, "offsetStart": 64412, "offsetEnd": 64417}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ElasticSim", "normalizedForm": "ElasticSim", "offsetStart": 0, "offsetEnd": 10}, "context": "ElasticSim [26] is a workflow simulator that extends CloudSim.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0001735687255859375}, "created": {"value": false, "score": 3.653764724731445e-05}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.002430260181427002}, "created": {"value": false, "score": 3.653764724731445e-05}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "references": [{"label": "[26]", "normalizedForm": "[26]", "refKey": 26, "offsetStart": 63742, "offsetEnd": 63746}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FogExplorer", "normalizedForm": "FogExplorer", "offsetStart": 0, "offsetEnd": 11}, "context": "FogExplorer allows users to choose good application designs during its design phase. ", "mentionContextAttributes": {"used": {"value": false, "score": 2.9385089874267578e-05}, "created": {"value": false, "score": 0.003214716911315918}, "shared": {"value": false, "score": 4.470348358154297e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00331878662109375}, "created": {"value": false, "score": 0.003214716911315918}, "shared": {"value": false, "score": 4.470348358154297e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Fogbed", "normalizedForm": "Fogbed", "offsetStart": 0, "offsetEnd": 11}, "context": "Fogbed [34] allows resource provisioning emulation in Fog environments. ", "mentionContextAttributes": {"used": {"value": false, "score": 4.9173831939697266e-05}, "created": {"value": false, "score": 3.427267074584961e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9992754459381104}, "created": {"value": false, "score": 3.427267074584961e-05}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "references": [{"label": "[34]", "normalizedForm": "[34]", "refKey": 34}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "EmuFog", "normalizedForm": "EmuFog", "offsetStart": 0, "offsetEnd": 11}, "context": "EmuFog [91] focuses on the design of Fog Computing infrastructures and the emulation of real applications and workloads. ", "mentionContextAttributes": {"used": {"value": false, "score": 7.575750350952148e-05}, "created": {"value": false, "score": 0.001427769660949707}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9977092146873474}, "created": {"value": false, "score": 0.006331741809844971}, "shared": {"value": false, "score": 9.238719940185547e-06}}, "references": [{"label": "[91]", "normalizedForm": "[91]", "refKey": 91}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ORBIT", "normalizedForm": "ORBIT", "offsetStart": 0, "offsetEnd": 11}, "context": "ORBIT [105] (Open-Access Research Testbed for Next-Generation Wireless Networks) is based on a 20x20 twodimensional grid of programmable radio nodes which can be interconnected into different topologies. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0003955960273742676}, "created": {"value": false, "score": 0.00010341405868530273}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0003955960273742676}, "created": {"value": false, "score": 0.00010341405868530273}, "shared": {"value": false, "score": 1.3172626495361328e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "XFogSim", "normalizedForm": "XFogSim", "offsetStart": 0, "offsetEnd": 12}, "context": "XFogSim [90] \u2713 Simulate federated fog computing environments.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0006667971611022949}, "created": {"value": false, "score": 1.4901161193847656e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0006667971611022949}, "created": {"value": false, "score": 2.9206275939941406e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "XFogSim", "normalizedForm": "XFogSim", "offsetStart": 0, "offsetEnd": 12}, "context": "XFogSim [90] extends FogNetSim++ to simulate federated fog computing environments. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00011307001113891602}, "created": {"value": false, "score": 2.9206275939941406e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0006667971611022949}, "created": {"value": false, "score": 2.9206275939941406e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FogTorch", "normalizedForm": "FogTorch", "offsetStart": 0, "offsetEnd": 13}, "context": "FogTorch [25] aims to support the deployment of IoT applications in Fog infrastructures considering software, hardware and QoS requirements. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00014543533325195312}, "created": {"value": false, "score": 0.000670015811920166}, "shared": {"value": false, "score": 4.470348358154297e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00014543533325195312}, "created": {"value": false, "score": 0.000670015811920166}, "shared": {"value": false, "score": 4.470348358154297e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KubeEdge", "normalizedForm": "KubeEdge", "offsetStart": 0, "offsetEnd": 14}, "context": "KubeEdge [159] builds on top of Kubernetes to extend Cloud capabilities to the Edge and allows containerized application orchestration and device management to hosts at the Edge. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00010114908218383789}, "created": {"value": false, "score": 0.006777584552764893}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0008945465087890625}, "created": {"value": false, "score": 0.006777584552764893}, "shared": {"value": false, "score": 5.185604095458984e-06}}, "references": [{"label": "[159]", "normalizedForm": "[159]", "refKey": 159}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ElasticSim", "normalizedForm": "ElasticSim", "offsetStart": 0, "offsetEnd": 15}, "context": "ElasticSim [26] \u2713 Simulate autoscaling algorithms.", "mentionContextAttributes": {"used": {"value": false, "score": 0.002430260181427002}, "created": {"value": false, "score": 3.159046173095703e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.002430260181427002}, "created": {"value": false, "score": 3.653764724731445e-05}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "references": [{"label": "[26]", "normalizedForm": "[26]", "refKey": 26}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FogNetSim", "normalizedForm": "FogNetSim", "offsetStart": 0, "offsetEnd": 15}, "context": "FogNetSim [115] \u2713 Simulate distributed fog computing environments.", "mentionContextAttributes": {"used": {"value": false, "score": 0.008172154426574707}, "created": {"value": false, "score": 2.3245811462402344e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.008172154426574707}, "created": {"value": false, "score": 0.005203068256378174}, "shared": {"value": false, "score": 5.304813385009766e-06}}, "references": [{"label": "[115]", "normalizedForm": "[115]", "refKey": 115}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RADICAL-DREAMER", "normalizedForm": "RADICAL-DREAMER", "offsetStart": 0, "offsetEnd": 15}, "context": "RADICAL-DREAMER allows users to evaluate deployment configurations, performance trade-offs, and workload placement strategies for Edge-to-Cloud applications [87].", "mentionContextAttributes": {"used": {"value": false, "score": 2.6285648345947266e-05}, "created": {"value": false, "score": 8.589029312133789e-05}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 2.6285648345947266e-05}, "created": {"value": false, "score": 8.589029312133789e-05}, "shared": {"value": false, "score": 5.364418029785156e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FogExplorer", "normalizedForm": "FogExplorer", "offsetStart": 0, "offsetEnd": 16}, "context": "FogExplorer [65] \u2713 Simulate QoS and cost evaluation of fog-based IoT applications.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00331878662109375}, "created": {"value": false, "score": 1.7285346984863281e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00331878662109375}, "created": {"value": false, "score": 0.003214716911315918}, "shared": {"value": false, "score": 4.470348358154297e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FogExplorer", "normalizedForm": "FogExplorer", "offsetStart": 0, "offsetEnd": 16}, "context": "FogExplorer [65] provides modeling and simulation to estimate QoS and cost evaluation of Fog-based IoT applications. ", "mentionContextAttributes": {"used": {"value": false, "score": 6.514787673950195e-05}, "created": {"value": false, "score": 1.7344951629638672e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00331878662109375}, "created": {"value": false, "score": 0.003214716911315918}, "shared": {"value": false, "score": 4.470348358154297e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "EdgeCloudSim", "normalizedForm": "EdgeCloudSim", "offsetStart": 0, "offsetEnd": 18}, "context": "EdgeCloudSim [137] focuses on Edge Computing scenarios and allows one to conduct experiments considering computational and networking resources. ", "mentionContextAttributes": {"used": {"value": false, "score": 4.774332046508789e-05}, "created": {"value": false, "score": 6.014108657836914e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 4.774332046508789e-05}, "created": {"value": false, "score": 6.014108657836914e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SmartSantander", "normalizedForm": "SmartSantander", "offsetStart": 0, "offsetEnd": 20}, "context": "SmartSantander [126] is a large scale testbed composed of around 2000 IEEE 802.15.4 devices deployed in a 3-tiered architecture (IoT node, repeaters, and gateway node) deployment in the Spanish city of Santander. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0005151629447937012}, "created": {"value": false, "score": 0.0025295615196228027}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0005151629447937012}, "created": {"value": false, "score": 0.0025295615196228027}, "shared": {"value": false, "score": 2.980232238769531e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RADICAL-DREAMER", "normalizedForm": "RADICAL-DREAMER", "offsetStart": 0, "offsetEnd": 21}, "context": "RADICAL-DREAMER [116] provides the concepts of Task and Workload to model the characteristics of an application according to heterogeneous tasks. ", "mentionContextAttributes": {"used": {"value": false, "score": 2.6285648345947266e-05}, "created": {"value": false, "score": 2.9146671295166016e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 2.6285648345947266e-05}, "created": {"value": false, "score": 8.589029312133789e-05}, "shared": {"value": false, "score": 5.364418029785156e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "EmuFog", "normalizedForm": "EmuFog", "offsetStart": 3, "offsetEnd": 9}, "context": "In EmuFog, users can: design the network topology; embed Fog nodes in the topology; and run Docker-based applications on those nodes connected by an emulated network.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0002646446228027344}, "created": {"value": false, "score": 0.006331741809844971}, "shared": {"value": false, "score": 9.238719940185547e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9977092146873474}, "created": {"value": false, "score": 0.006331741809844971}, "shared": {"value": false, "score": 9.238719940185547e-06}}, "references": [{"label": "[91]", "normalizedForm": "[91]", "refKey": 91}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "EdgeServer", "normalizedForm": "EdgeServer", "offsetStart": 4, "offsetEnd": 14}, "context": "The EdgeServer aggregates those parameters and sends them back to Edge devices. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.3990764617919922}, "created": {"value": false, "score": 2.0444393157958984e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.3990764617919922}, "created": {"value": false, "score": 0.00016808509826660156}, "shared": {"value": false, "score": 4.172325134277344e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Edgent", "normalizedForm": "Edgent", "offsetStart": 6, "offsetEnd": 12}, "context": "Named Edgent, the framework exploits DNN computation partitioning and DNN rightsizing to enable low-latency inference.", "mentionContextAttributes": {"used": {"value": false, "score": 6.121397018432617e-05}, "created": {"value": true, "score": 0.9755545854568481}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.989600658416748}, "created": {"value": true, "score": 0.9755545854568481}, "shared": {"value": false, "score": 4.172325134277344e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "iFogSim", "normalizedForm": "iFogSim", "offsetStart": 8, "offsetEnd": 20}, "context": "Lastly, iFogSim [63] focuses on resource management techniques in IoT, Edge and Fog computing environments. ", "mentionContextAttributes": {"used": {"value": false, "score": 8.910894393920898e-05}, "created": {"value": false, "score": 0.000171661376953125}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9908813834190369}, "created": {"value": false, "score": 0.0007590055465698242}, "shared": {"value": false, "score": 1.3709068298339844e-06}}, "references": [{"label": "[63]", "normalizedForm": "[63]", "refKey": 63}]}, {"type": "software", "software-type": "software", "wikidataId": "Q21447895", "wikipediaExternalRef": 48508507, "lang": "en", "confidence": 0.9154, "software-name": {"rawForm": "TensorFlow", "normalizedForm": "TensorFlow", "wikidataId": "Q21447895", "wikipediaExternalRef": 48508507, "lang": "en", "confidence": 0.9154, "offsetStart": 13, "offsetEnd": 23}, "context": "They compare TensorFlow, Caffe2, MXNet, PyTorch, and TensorFlow-Lite running two trained CNN-based models (AlexNet as the largescale model and SqueezeNet and MobileNet as the smallscale models) on Edge devices such as MacBook, FogNode, Jetson TX2, Raspberry Pi, and Nexus 6P. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.6961480379104614}, "created": {"value": false, "score": 7.569789886474609e-06}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.6961480379104614}, "created": {"value": false, "score": 0.04948163032531738}, "shared": {"value": false, "score": 0.00028502941131591797}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Edgent", "normalizedForm": "Edgent", "offsetStart": 17, "offsetEnd": 23}, "context": "Authors evaluate Edgent under static and dynamic bandwidth environments and considered performance metrics for model inference such as: accuracy, latency requirements, and throughput.", "mentionContextAttributes": {"used": {"value": true, "score": 0.989600658416748}, "created": {"value": false, "score": 2.8073787689208984e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.989600658416748}, "created": {"value": true, "score": 0.9755545854568481}, "shared": {"value": false, "score": 4.172325134277344e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "-Access Research Testbed", "normalizedForm": "-Access Research Testbed", "offsetStart": 17, "offsetEnd": 41}, "context": "ORBIT [105] (Open-Access Research Testbed for Next-Generation Wireless Networks) is based on a 20x20 twodimensional grid of programmable radio nodes which can be interconnected into different topologies. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0003955960273742676}, "created": {"value": false, "score": 0.00010341405868530273}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0003955960273742676}, "created": {"value": false, "score": 0.00010341405868530273}, "shared": {"value": false, "score": 5.364418029785156e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FogNetSim", "normalizedForm": "FogNetSim", "offsetStart": 21, "offsetEnd": 30}, "context": "XFogSim [90] extends FogNetSim++ to simulate federated fog computing environments. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00011307001113891602}, "created": {"value": false, "score": 2.9206275939941406e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.008172154426574707}, "created": {"value": false, "score": 0.005203068256378174}, "shared": {"value": false, "score": 5.304813385009766e-06}}, "references": [{"label": "[115]", "normalizedForm": "[115]", "refKey": 115}]}, {"type": "software", "software-type": "software", "wikidataId": "Q29364604", "wikipediaExternalRef": 53631046, "lang": "en", "confidence": 0.7618, "software-name": {"rawForm": "Caffe2", "normalizedForm": "Caffe2", "wikidataId": "Q29364604", "wikipediaExternalRef": 53631046, "lang": "en", "confidence": 0.7618, "offsetStart": 25, "offsetEnd": 31}, "context": "They compare TensorFlow, Caffe2, MXNet, PyTorch, and TensorFlow-Lite running two trained CNN-based models (AlexNet as the largescale model and SqueezeNet and MobileNet as the smallscale models) on Edge devices such as MacBook, FogNode, Jetson TX2, Raspberry Pi, and Nexus 6P. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.6961480379104614}, "created": {"value": false, "score": 7.569789886474609e-06}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.6961480379104614}, "created": {"value": false, "score": 0.005738258361816406}, "shared": {"value": false, "score": 5.9604644775390625e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.5539, "software-name": {"rawForm": "Spark", "normalizedForm": "Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.5539, "offsetStart": 28, "offsetEnd": 33}, "context": "In [12] the authors explore Spark MLlib with a variety of Big Data Machine Learning experiments on massive datasets to understand the qualitative and quantitative attributes of the platform.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00036263465881347656}, "created": {"value": true, "score": 0.5389148592948914}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2822273373603821}, "created": {"value": true, "score": 0.9873542189598083}, "shared": {"value": false, "score": 1.9669532775878906e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Fed4Edge", "normalizedForm": "Fed4Edge", "offsetStart": 28, "offsetEnd": 36}, "context": "In [66] the authors propose Fed4Edge, a system that enables the coordination of resources available in Edge devices to process query pipelines in a collaborative way. ", "mentionContextAttributes": {"used": {"value": false, "score": 7.742643356323242e-05}, "created": {"value": true, "score": 0.9986597299575806}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.029321908950805664}, "created": {"value": true, "score": 0.9986597299575806}, "shared": {"value": false, "score": 4.172325134277344e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q11354", "wikipediaExternalRef": 2581, "lang": "en", "confidence": 0.8046, "software-name": {"rawForm": "Apache", "normalizedForm": "Apache", "wikidataId": "Q11354", "wikipediaExternalRef": 2581, "lang": "en", "confidence": 0.8046, "offsetStart": 30, "offsetEnd": 36}, "context": "The proposed approach extends Apache NiFi core functionality to include three custom processors such as CaptureVideo, DetectFaces, and RecogniseFaces. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00010913610458374023}, "created": {"value": true, "score": 0.6562004685401917}, "shared": {"value": false, "score": 2.086162567138672e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.03140664100646973}, "created": {"value": true, "score": 0.6562004685401917}, "shared": {"value": false, "score": 2.086162567138672e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q23691642", "wikipediaExternalRef": 50818838, "lang": "en", "confidence": 0.9052, "software-name": {"rawForm": "Apache NiFi", "normalizedForm": "Apache NiFi", "wikidataId": "Q23691642", "wikipediaExternalRef": 50818838, "lang": "en", "confidence": 0.9052, "offsetStart": 30, "offsetEnd": 41}, "context": "The proposed solution extends Apache NiFi with new services to discover and select devices able to perform offloaded tasks according to hardware and software requirements. ", "mentionContextAttributes": {"used": {"value": false, "score": 9.590387344360352e-05}, "created": {"value": true, "score": 0.9933912754058838}, "shared": {"value": false, "score": 3.874301910400391e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 9.590387344360352e-05}, "created": {"value": true, "score": 0.9933912754058838}, "shared": {"value": false, "score": 3.874301910400391e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ECStream", "normalizedForm": "ECStream", "offsetStart": 32, "offsetEnd": 40}, "context": "Edge Cluster Stream Processing (ECStream) allows time-constrained data-intensive applications to be entirely deployed and executed at the Edge and it is based on a task parallelism model where atomic tasks are offloaded to peer Edge devices, rather than the full workflow.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0001361370086669922}, "created": {"value": false, "score": 0.0011973381042480469}, "shared": {"value": false, "score": 6.556510925292969e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0001361370086669922}, "created": {"value": false, "score": 0.0011973381042480469}, "shared": {"value": false, "score": 6.556510925292969e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q22348165", "wikipediaExternalRef": 52513310, "lang": "en", "confidence": 0.7817, "software-name": {"rawForm": "MXNet", "normalizedForm": "MXNet", "wikidataId": "Q22348165", "wikipediaExternalRef": 52513310, "lang": "en", "confidence": 0.7817, "offsetStart": 33, "offsetEnd": 38}, "context": "They compare TensorFlow, Caffe2, MXNet, PyTorch, and TensorFlow-Lite running two trained CNN-based models (AlexNet as the largescale model and SqueezeNet and MobileNet as the smallscale models) on Edge devices such as MacBook, FogNode, Jetson TX2, Raspberry Pi, and Nexus 6P. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.6961480379104614}, "created": {"value": false, "score": 7.569789886474609e-06}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.6961480379104614}, "created": {"value": false, "score": 0.005738258361816406}, "shared": {"value": false, "score": 5.9604644775390625e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.8393, "software-name": {"rawForm": "MLlib", "normalizedForm": "MLlib", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.8393, "offsetStart": 34, "offsetEnd": 39}, "context": "In [12] the authors explore Spark MLlib with a variety of Big Data Machine Learning experiments on massive datasets to understand the qualitative and quantitative attributes of the platform.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00036263465881347656}, "created": {"value": true, "score": 0.5389148592948914}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2822273373603821}, "created": {"value": true, "score": 0.9654404520988464}, "shared": {"value": false, "score": 1.1324882507324219e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q23691642", "wikipediaExternalRef": 50818838, "lang": "en", "confidence": 0.6077, "software-name": {"rawForm": "NiFi", "normalizedForm": "NiFi", "wikidataId": "Q23691642", "wikipediaExternalRef": 50818838, "lang": "en", "confidence": 0.6077, "offsetStart": 37, "offsetEnd": 41}, "context": "The proposed approach extends Apache NiFi core functionality to include three custom processors such as CaptureVideo, DetectFaces, and RecogniseFaces.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00010913610458374023}, "created": {"value": true, "score": 0.6562004685401917}, "shared": {"value": false, "score": 2.086162567138672e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.03140664100646973}, "created": {"value": true, "score": 0.6562004685401917}, "shared": {"value": false, "score": 2.086162567138672e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.5539, "software-name": {"rawForm": "Spark", "normalizedForm": "Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.5539, "offsetStart": 38, "offsetEnd": 43}, "context": "Results show that with large datasets Spark MLlib outperforms Weka in terms of running time.", "mentionContextAttributes": {"used": {"value": false, "score": 0.2822273373603821}, "created": {"value": false, "score": 4.589557647705078e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2822273373603821}, "created": {"value": true, "score": 0.9873542189598083}, "shared": {"value": false, "score": 1.9669532775878906e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q47509047", "wikipediaExternalRef": 54022970, "lang": "en", "confidence": 0.9161, "software-name": {"rawForm": "PyTorch", "normalizedForm": "PyTorch", "wikidataId": "Q47509047", "wikipediaExternalRef": 54022970, "lang": "en", "confidence": 0.9161, "offsetStart": 40, "offsetEnd": 47}, "context": "They compare TensorFlow, Caffe2, MXNet, PyTorch, and TensorFlow-Lite running two trained CNN-based models (AlexNet as the largescale model and SqueezeNet and MobileNet as the smallscale models) on Edge devices such as MacBook, FogNode, Jetson TX2, Raspberry Pi, and Nexus 6P. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.6961480379104614}, "created": {"value": false, "score": 7.569789886474609e-06}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.6961480379104614}, "created": {"value": false, "score": 0.005738258361816406}, "shared": {"value": false, "score": 5.9604644775390625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Fed4FIRE", "normalizedForm": "Fed4FIRE", "offsetStart": 42, "offsetEnd": 50}, "context": "The list of testbeds [103] federated with Fed4FIRE are: CityLab [141], PlanetLab [55], ExoGENI [15], Tengu [146], NITOS [110], w-iLab [22], among others.", "mentionContextAttributes": {"used": {"value": false, "score": 0.35038870573043823}, "created": {"value": false, "score": 7.450580596923828e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.35038870573043823}, "created": {"value": true, "score": 0.9980947971343994}, "shared": {"value": false, "score": 4.798173904418945e-05}}, "references": [{"label": "[41]", "normalizedForm": "[41]", "refKey": 41}]}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.8393, "software-name": {"rawForm": "MLlib", "normalizedForm": "MLlib", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.8393, "offsetStart": 44, "offsetEnd": 49}, "context": "Results show that with large datasets Spark MLlib outperforms Weka in terms of running time.", "mentionContextAttributes": {"used": {"value": false, "score": 0.2822273373603821}, "created": {"value": false, "score": 4.589557647705078e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2822273373603821}, "created": {"value": true, "score": 0.9654404520988464}, "shared": {"value": false, "score": 1.1324882507324219e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q23691642", "wikipediaExternalRef": 50818838, "lang": "en", "confidence": 0.9052, "software-name": {"rawForm": "Apache NiFi", "normalizedForm": "Apache NiFi", "wikidataId": "Q23691642", "wikipediaExternalRef": 50818838, "lang": "en", "confidence": 0.9052, "offsetStart": 46, "offsetEnd": 57}, "context": "A novel distributed architecture that extends Apache NiFi to enable stream data processing at the Edge of the IoT network is presented in [36]. ", "mentionContextAttributes": {"used": {"value": false, "score": 3.629922866821289e-05}, "created": {"value": true, "score": 0.9198185801506042}, "shared": {"value": false, "score": 1.1324882507324219e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 9.590387344360352e-05}, "created": {"value": true, "score": 0.9933912754058838}, "shared": {"value": false, "score": 3.874301910400391e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.7879, "software-name": {"rawForm": "Apache Spark", "normalizedForm": "Apache Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.7879, "offsetStart": 49, "offsetEnd": 61}, "context": "Authors discuss frameworks and platforms such as Apache Spark, MOA, Samza, Storm, and Kafka.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0002630949020385742}, "created": {"value": true, "score": 0.7321375012397766}, "shared": {"value": false, "score": 1.8298625946044922e-05}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0002630949020385742}, "created": {"value": true, "score": 0.7321375012397766}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "EnOSlib", "normalizedForm": "EnOSlib", "offsetStart": 50, "offsetEnd": 57}, "context": "Recent advances in this direction exist, like the EnOSlib [32] library or the E2Clab [123] framework, but further advances are still needed.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0001150965690612793}, "created": {"value": false, "score": 0.0006671547889709473}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0002562999725341797}, "created": {"value": false, "score": 0.2626523971557617}, "shared": {"value": false, "score": 1.1324882507324219e-06}}, "references": [{"label": "[32]", "normalizedForm": "[32]", "refKey": 32, "offsetStart": 76877, "offsetEnd": 76881}]}, {"type": "software", "software-type": "software", "wikidataId": "Q21447895", "wikipediaExternalRef": 48508507, "lang": "en", "confidence": 0.9154, "software-name": {"rawForm": "TensorFlow", "normalizedForm": "TensorFlow", "wikidataId": "Q21447895", "wikipediaExternalRef": 48508507, "lang": "en", "confidence": 0.9154, "offsetStart": 53, "offsetEnd": 63}, "context": "Lastly, a discussion on open source platforms (e.g., TensorFlow, Caffe, and NCNN) that seek to optimize Deep Learning on mobile devices is presented.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0003314018249511719}, "created": {"value": false, "score": 0.04948163032531738}, "shared": {"value": false, "score": 0.00028502941131591797}}, "documentContextAttributes": {"used": {"value": true, "score": 0.6961480379104614}, "created": {"value": false, "score": 0.04948163032531738}, "shared": {"value": false, "score": 0.00028502941131591797}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TensorFlow-Lite", "normalizedForm": "TensorFlow-Lite", "offsetStart": 53, "offsetEnd": 68}, "context": "They compare TensorFlow, Caffe2, MXNet, PyTorch, and TensorFlow-Lite running two trained CNN-based models (AlexNet as the largescale model and SqueezeNet and MobileNet as the smallscale models) on Edge devices such as MacBook, FogNode, Jetson TX2, Raspberry Pi, and Nexus 6P. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.6961480379104614}, "created": {"value": false, "score": 7.569789886474609e-06}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.6961480379104614}, "created": {"value": false, "score": 7.569789886474609e-06}, "shared": {"value": false, "score": 5.364418029785156e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.5539, "software-name": {"rawForm": "Spark", "normalizedForm": "Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.5539, "offsetStart": 60, "offsetEnd": 65}, "context": "The proposed algorithm combines Support Vector Machine with Spark to realize parallel operations.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00011616945266723633}, "created": {"value": true, "score": 0.9860519170761108}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2822273373603821}, "created": {"value": true, "score": 0.9873542189598083}, "shared": {"value": false, "score": 1.9669532775878906e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q115494", "wikipediaExternalRef": 3829034, "lang": "en", "confidence": 0.7056, "software-name": {"rawForm": "Weka", "normalizedForm": "Weka", "wikidataId": "Q115494", "wikipediaExternalRef": 3829034, "lang": "en", "confidence": 0.7056, "offsetStart": 62, "offsetEnd": 66}, "context": "Results show that with large datasets Spark MLlib outperforms Weka in terms of running time.", "mentionContextAttributes": {"used": {"value": false, "score": 0.2822273373603821}, "created": {"value": false, "score": 4.589557647705078e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2822273373603821}, "created": {"value": false, "score": 4.589557647705078e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.5539, "software-name": {"rawForm": "Spark", "normalizedForm": "Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.5539, "offsetStart": 63, "offsetEnd": 68}, "context": "Distributed Cloud-based Machine Learning tools such as Mahout, Spark MLlib, and FlinkML are presented in [118].", "mentionContextAttributes": {"used": {"value": false, "score": 0.003960907459259033}, "created": {"value": false, "score": 8.875131607055664e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2822273373603821}, "created": {"value": true, "score": 0.9873542189598083}, "shared": {"value": false, "score": 1.9669532775878906e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q3073740", "wikipediaExternalRef": 5999274, "lang": "en", "confidence": 0.4462, "software-name": {"rawForm": "Flink", "normalizedForm": "Flink", "wikidataId": "Q3073740", "wikipediaExternalRef": 5999274, "lang": "en", "confidence": 0.4462, "offsetStart": 66, "offsetEnd": 71}, "context": "They present the relevant Data Analytics platforms (e.g., Hadoop, Flink, Spark, Storm, Nifi, and others) and Machine Learning libraries (e.g., Spark MLlib, Tensorflow, Keras, Scikit-learn, etc.) to enable a real-time Big Data pipeline from the Edge to the Cloud.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00020432472229003906}, "created": {"value": true, "score": 0.9283419251441956}, "shared": {"value": false, "score": 1.1324882507324219e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.001137852668762207}, "created": {"value": true, "score": 0.9283419251441956}, "shared": {"value": false, "score": 1.9669532775878906e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.8393, "software-name": {"rawForm": "MLlib", "normalizedForm": "MLlib", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.8393, "offsetStart": 69, "offsetEnd": 74}, "context": "Distributed Cloud-based Machine Learning tools such as Mahout, Spark MLlib, and FlinkML are presented in [118].", "mentionContextAttributes": {"used": {"value": false, "score": 0.003960907459259033}, "created": {"value": false, "score": 8.875131607055664e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2822273373603821}, "created": {"value": true, "score": 0.9654404520988464}, "shared": {"value": false, "score": 1.1324882507324219e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q94", "wikipediaExternalRef": 12610483, "lang": "en", "confidence": 0.7389, "software-name": {"rawForm": "Android", "normalizedForm": "Android", "wikidataId": "Q94", "wikipediaExternalRef": 12610483, "lang": "en", "confidence": 0.7389, "offsetStart": 70, "offsetEnd": 77}, "context": "An empirical study of on-device Deep Learning for smartphones such as Android devices is presented in [162]. ", "mentionContextAttributes": {"used": {"value": false, "score": 8.481740951538086e-05}, "created": {"value": false, "score": 0.13781410455703735}, "shared": {"value": false, "score": 7.748603820800781e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 8.481740951538086e-05}, "created": {"value": false, "score": 0.13781410455703735}, "shared": {"value": false, "score": 7.748603820800781e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.5539, "software-name": {"rawForm": "Spark", "normalizedForm": "Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.5539, "offsetStart": 73, "offsetEnd": 78}, "context": "They present the relevant Data Analytics platforms (e.g., Hadoop, Flink, Spark, Storm, Nifi, and others) and Machine Learning libraries (e.g., Spark MLlib, Tensorflow, Keras, Scikit-learn, etc.) to enable a real-time Big Data pipeline from the Edge to the Cloud.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00020432472229003906}, "created": {"value": true, "score": 0.9283419251441956}, "shared": {"value": false, "score": 1.1324882507324219e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2822273373603821}, "created": {"value": true, "score": 0.9873542189598083}, "shared": {"value": false, "score": 1.9669532775878906e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.9075, "software-name": {"rawForm": "Spark MLlib", "normalizedForm": "Spark MLlib", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.9075, "offsetStart": 73, "offsetEnd": 84}, "context": "Furthermore, it supports Machine Learning engines and algorithms such as Spark MLlib (supports a variety of learning algorithms for classification, regression, clustering, among others), FlinkML (supports SVM, multiple linear regression, k-Nearest neighbors, among others), and TensorFlow (supports SVM, Gradient Boosting Machine, Random Forests, Naive Bayes, k-nearest neighbors, etc.).", "mentionContextAttributes": {"used": {"value": false, "score": 0.0002897977828979492}, "created": {"value": false, "score": 0.0005894899368286133}, "shared": {"value": false, "score": 4.231929779052734e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0002897977828979492}, "created": {"value": false, "score": 0.0005894899368286133}, "shared": {"value": false, "score": 4.231929779052734e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NCNN", "normalizedForm": "NCNN", "offsetStart": 76, "offsetEnd": 80}, "context": "Lastly, a discussion on open source platforms (e.g., TensorFlow, Caffe, and NCNN) that seek to optimize Deep Learning on mobile devices is presented.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0003314018249511719}, "created": {"value": false, "score": 0.04948163032531738}, "shared": {"value": false, "score": 0.00028502941131591797}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0003314018249511719}, "created": {"value": false, "score": 0.04948163032531738}, "shared": {"value": false, "score": 0.00028502941131591797}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DDNN", "normalizedForm": "DDNN", "offsetStart": 77, "offsetEnd": 81}, "context": "Authors of [127] propose a Data Flow and Distributed Deep Neural Network (DF-DDNN) that integrates data flow and distributed Deep Learning in the IoT-Edge environment to bring down the latency and increase accuracy.", "mentionContextAttributes": {"used": {"value": false, "score": 8.779764175415039e-05}, "created": {"value": true, "score": 0.9393110871315002}, "shared": {"value": false, "score": 1.4901161193847656e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.000269472599029541}, "created": {"value": true, "score": 0.9393110871315002}, "shared": {"value": false, "score": 5.9604644775390625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FlinkML", "normalizedForm": "FlinkML", "offsetStart": 80, "offsetEnd": 87}, "context": "Distributed Cloud-based Machine Learning tools such as Mahout, Spark MLlib, and FlinkML are presented in [118].", "mentionContextAttributes": {"used": {"value": false, "score": 0.003960907459259033}, "created": {"value": false, "score": 8.875131607055664e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.003960907459259033}, "created": {"value": true, "score": 0.9654404520988464}, "shared": {"value": false, "score": 4.231929779052734e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.5539, "software-name": {"rawForm": "Spark", "normalizedForm": "Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.5539, "offsetStart": 85, "offsetEnd": 90}, "context": "Another survey [145] presents existing open source tools for Big Data (e.g., Hadoop, Spark, Storm, and Flink) and Machine Learning (e.g., Mahout, Spark MLLib, and SAMOA).", "mentionContextAttributes": {"used": {"value": false, "score": 0.001137852668762207}, "created": {"value": false, "score": 0.00014853477478027344}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2822273373603821}, "created": {"value": true, "score": 0.9873542189598083}, "shared": {"value": false, "score": 1.9669532775878906e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q16235208", "wikipediaExternalRef": 41321945, "lang": "en", "confidence": 0.6773, "software-name": {"rawForm": "Kafka", "normalizedForm": "Kafka", "wikidataId": "Q16235208", "wikipediaExternalRef": 41321945, "lang": "en", "confidence": 0.6773, "offsetStart": 86, "offsetEnd": 91}, "context": "Authors discuss frameworks and platforms such as Apache Spark, MOA, Samza, Storm, and Kafka.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0002630949020385742}, "created": {"value": true, "score": 0.7321375012397766}, "shared": {"value": false, "score": 1.8298625946044922e-05}}, "documentContextAttributes": {"used": {"value": false, "score": 0.13686507940292358}, "created": {"value": true, "score": 0.7321375012397766}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "wikidataId": "Q3073740", "wikipediaExternalRef": 5999274, "lang": "en", "confidence": 0.4462, "software-name": {"rawForm": "Flink", "normalizedForm": "Flink", "wikidataId": "Q3073740", "wikipediaExternalRef": 5999274, "lang": "en", "confidence": 0.4462, "offsetStart": 88, "offsetEnd": 93}, "context": "They also present some real-time IoT analytics use cases and software platforms such as Flink, Spark, Storm, and Druid along with their network requirements. ", "mentionContextAttributes": {"used": {"value": false, "score": 8.147954940795898e-05}, "created": {"value": false, "score": 0.018294334411621094}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.001137852668762207}, "created": {"value": true, "score": 0.9283419251441956}, "shared": {"value": false, "score": 1.9669532775878906e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.5539, "software-name": {"rawForm": "Spark", "normalizedForm": "Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.5539, "offsetStart": 89, "offsetEnd": 94}, "context": "It discusses parallel processing models and engines for the analysis of Big Data such as Spark, Flink, and Storm.", "mentionContextAttributes": {"used": {"value": false, "score": 7.492303848266602e-05}, "created": {"value": false, "score": 0.36912471055984497}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2822273373603821}, "created": {"value": true, "score": 0.9873542189598083}, "shared": {"value": false, "score": 1.9669532775878906e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.5539, "software-name": {"rawForm": "Spark", "normalizedForm": "Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.5539, "offsetStart": 89, "offsetEnd": 94}, "context": "In [99] the authors propose a system for real-time health status prediction based on the Spark Big Data processing framework.", "mentionContextAttributes": {"used": {"value": false, "score": 7.933378219604492e-05}, "created": {"value": true, "score": 0.9873542189598083}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2822273373603821}, "created": {"value": true, "score": 0.9873542189598083}, "shared": {"value": false, "score": 1.9669532775878906e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "EnOSlib", "normalizedForm": "EnOSlib", "offsetStart": 89, "offsetEnd": 100}, "context": "A recent effort on supporting experiments combining Grid5000 and FIT IoT-Lab testbeds is EnOSlib [32]. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0002562999725341797}, "created": {"value": false, "score": 0.2626523971557617}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0002562999725341797}, "created": {"value": false, "score": 0.2626523971557617}, "shared": {"value": false, "score": 1.1324882507324219e-06}}, "references": [{"label": "[32]", "normalizedForm": "[32]", "refKey": 32}]}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.5539, "software-name": {"rawForm": "Spark", "normalizedForm": "Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.5539, "offsetStart": 95, "offsetEnd": 100}, "context": "They also present some real-time IoT analytics use cases and software platforms such as Flink, Spark, Storm, and Druid along with their network requirements. ", "mentionContextAttributes": {"used": {"value": false, "score": 8.147954940795898e-05}, "created": {"value": false, "score": 0.018294334411621094}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2822273373603821}, "created": {"value": true, "score": 0.9873542189598083}, "shared": {"value": false, "score": 1.9669532775878906e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q3073740", "wikipediaExternalRef": 5999274, "lang": "en", "confidence": 0.4462, "software-name": {"rawForm": "Flink", "normalizedForm": "Flink", "wikidataId": "Q3073740", "wikipediaExternalRef": 5999274, "lang": "en", "confidence": 0.4462, "offsetStart": 96, "offsetEnd": 101}, "context": "It discusses parallel processing models and engines for the analysis of Big Data such as Spark, Flink, and Storm.", "mentionContextAttributes": {"used": {"value": false, "score": 7.492303848266602e-05}, "created": {"value": false, "score": 0.36912471055984497}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.001137852668762207}, "created": {"value": true, "score": 0.9283419251441956}, "shared": {"value": false, "score": 1.9669532775878906e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.5539, "software-name": {"rawForm": "Spark", "normalizedForm": "Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.5539, "offsetStart": 101, "offsetEnd": 106}, "context": "Experimental evaluations under different training set sizes demonstrate that the proposed algorithm (Spark SVM on Mesos) outperforms MapReduce SVM, Storm SVM, Radial Basis Function Neural Network (RBFNN), Deep Belief Network (DBN), presenting higher: classification accuracy, processing speed, and convergence rate.", "mentionContextAttributes": {"used": {"value": false, "score": 0.013017714023590088}, "created": {"value": false, "score": 3.832578659057617e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2822273373603821}, "created": {"value": true, "score": 0.9873542189598083}, "shared": {"value": false, "score": 1.9669532775878906e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q3073740", "wikipediaExternalRef": 5999274, "lang": "en", "confidence": 0.4462, "software-name": {"rawForm": "Flink", "normalizedForm": "Flink", "wikidataId": "Q3073740", "wikipediaExternalRef": 5999274, "lang": "en", "confidence": 0.4462, "offsetStart": 103, "offsetEnd": 108}, "context": "Another survey [145] presents existing open source tools for Big Data (e.g., Hadoop, Spark, Storm, and Flink) and Machine Learning (e.g., Mahout, Spark MLLib, and SAMOA).", "mentionContextAttributes": {"used": {"value": false, "score": 0.001137852668762207}, "created": {"value": false, "score": 0.00014853477478027344}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.001137852668762207}, "created": {"value": true, "score": 0.9283419251441956}, "shared": {"value": false, "score": 1.9669532775878906e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Edgent", "normalizedForm": "Edgent", "offsetStart": 103, "offsetEnd": 109}, "context": "Through experiments on Raspberry Pi (acting as a mobile device), they demonstrate the effectiveness of Edgent towards low-latency Edge intelligence.", "mentionContextAttributes": {"used": {"value": true, "score": 0.7085947394371033}, "created": {"value": false, "score": 0.1291477084159851}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.989600658416748}, "created": {"value": true, "score": 0.9755545854568481}, "shared": {"value": false, "score": 4.172325134277344e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MLbase", "normalizedForm": "MLbase", "offsetStart": 110, "offsetEnd": 116}, "context": "Mobile Data Analytics on Edge devices is achieved either through distributed Machine Learning systems such as MLbase, Gaia, TUX [158], and Adam; or, through Deep Learning libraries such as TensorFlow, Theano, PyTorch, and MXNET. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.1877751350402832}, "created": {"value": false, "score": 0.0001704692840576172}, "shared": {"value": false, "score": 3.039836883544922e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.1877751350402832}, "created": {"value": false, "score": 0.0001704692840576172}, "shared": {"value": false, "score": 3.039836883544922e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q16235208", "wikipediaExternalRef": 41321945, "lang": "en", "confidence": 0.6773, "software-name": {"rawForm": "Kafka", "normalizedForm": "Kafka", "wikidataId": "Q16235208", "wikipediaExternalRef": 41321945, "lang": "en", "confidence": 0.6773, "offsetStart": 118, "offsetEnd": 123}, "context": "The authors illustrate examples of case studies and practical solutions composed of health sensor data processed with Kafka and Spark (an application predicting skin temperature based on heart rate and step count values) using medical datasets publicly available such as PhysioNet, UbiqLog and CrowdSignals.", "mentionContextAttributes": {"used": {"value": false, "score": 0.13686507940292358}, "created": {"value": false, "score": 0.0030972957611083984}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.13686507940292358}, "created": {"value": true, "score": 0.7321375012397766}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.5539, "software-name": {"rawForm": "Spark", "normalizedForm": "Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.5539, "offsetStart": 128, "offsetEnd": 133}, "context": "The authors illustrate examples of case studies and practical solutions composed of health sensor data processed with Kafka and Spark (an application predicting skin temperature based on heart rate and step count values) using medical datasets publicly available such as PhysioNet, UbiqLog and CrowdSignals.", "mentionContextAttributes": {"used": {"value": false, "score": 0.13686507940292358}, "created": {"value": false, "score": 0.0030972957611083984}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2822273373603821}, "created": {"value": true, "score": 0.9873542189598083}, "shared": {"value": false, "score": 1.9669532775878906e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Edgent", "normalizedForm": "Edgent", "offsetStart": 128, "offsetEnd": 134}, "context": "They illustrate and validate the framework with a smart surveillance application composed by data processing frameworks such as Edgent (on the Edge) and Apache Flink and Kafka (on the Cloud). ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0036334991455078125}, "created": {"value": false, "score": 0.011862516403198242}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.989600658416748}, "created": {"value": true, "score": 0.9755545854568481}, "shared": {"value": false, "score": 4.172325134277344e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.5539, "software-name": {"rawForm": "Spark", "normalizedForm": "Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.5539, "offsetStart": 129, "offsetEnd": 134}, "context": "Regarding IoT Big Data learning, they present Machine Learning frameworks working on Big Data and processing in parallel such as Spark MLlib, SAMOA, and FlinkML.", "mentionContextAttributes": {"used": {"value": false, "score": 9.077787399291992e-05}, "created": {"value": true, "score": 0.9654404520988464}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2822273373603821}, "created": {"value": true, "score": 0.9873542189598083}, "shared": {"value": false, "score": 1.9669532775878906e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.8393, "software-name": {"rawForm": "MLlib", "normalizedForm": "MLlib", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.8393, "offsetStart": 135, "offsetEnd": 140}, "context": "Regarding IoT Big Data learning, they present Machine Learning frameworks working on Big Data and processing in parallel such as Spark MLlib, SAMOA, and FlinkML.", "mentionContextAttributes": {"used": {"value": false, "score": 9.077787399291992e-05}, "created": {"value": true, "score": 0.9654404520988464}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2822273373603821}, "created": {"value": true, "score": 0.9654404520988464}, "shared": {"value": false, "score": 1.1324882507324219e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q21447895", "wikipediaExternalRef": 48508507, "lang": "en", "confidence": 0.9154, "software-name": {"rawForm": "TensorFlow", "normalizedForm": "TensorFlow", "wikidataId": "Q21447895", "wikipediaExternalRef": 48508507, "lang": "en", "confidence": 0.9154, "offsetStart": 138, "offsetEnd": 148}, "context": "The survey [101] presents ML and DL frameworks and libraries oriented towards fast processing and streaming of large-scale data, such as: TensorFlow, PyTorch, MXNet, Theano, FlinkML, and Spark MLlib. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00011938810348510742}, "created": {"value": false, "score": 0.00010293722152709961}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.6961480379104614}, "created": {"value": false, "score": 0.04948163032531738}, "shared": {"value": false, "score": 0.00028502941131591797}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "EdgeServer", "normalizedForm": "EdgeServer", "offsetStart": 138, "offsetEnd": 148}, "context": "Each Edge node trains the neural network model locally based on its private data and uploads asynchronously the parameters to a Parameter EdgeServer.", "mentionContextAttributes": {"used": {"value": false, "score": 0.015003681182861328}, "created": {"value": false, "score": 0.00016808509826660156}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.3990764617919922}, "created": {"value": false, "score": 0.00016808509826660156}, "shared": {"value": false, "score": 4.172325134277344e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.5539, "software-name": {"rawForm": "Spark", "normalizedForm": "Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.5539, "offsetStart": 143, "offsetEnd": 148}, "context": "They present the relevant Data Analytics platforms (e.g., Hadoop, Flink, Spark, Storm, Nifi, and others) and Machine Learning libraries (e.g., Spark MLlib, Tensorflow, Keras, Scikit-learn, etc.) to enable a real-time Big Data pipeline from the Edge to the Cloud.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00020432472229003906}, "created": {"value": true, "score": 0.9283419251441956}, "shared": {"value": false, "score": 1.1324882507324219e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2822273373603821}, "created": {"value": true, "score": 0.9873542189598083}, "shared": {"value": false, "score": 1.9669532775878906e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.5539, "software-name": {"rawForm": "Spark", "normalizedForm": "Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.5539, "offsetStart": 146, "offsetEnd": 151}, "context": "Another survey [145] presents existing open source tools for Big Data (e.g., Hadoop, Spark, Storm, and Flink) and Machine Learning (e.g., Mahout, Spark MLLib, and SAMOA).", "mentionContextAttributes": {"used": {"value": false, "score": 0.001137852668762207}, "created": {"value": false, "score": 0.00014853477478027344}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2822273373603821}, "created": {"value": true, "score": 0.9873542189598083}, "shared": {"value": false, "score": 1.9669532775878906e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.8393, "software-name": {"rawForm": "MLlib", "normalizedForm": "MLlib", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.8393, "offsetStart": 149, "offsetEnd": 154}, "context": "They present the relevant Data Analytics platforms (e.g., Hadoop, Flink, Spark, Storm, Nifi, and others) and Machine Learning libraries (e.g., Spark MLlib, Tensorflow, Keras, Scikit-learn, etc.) to enable a real-time Big Data pipeline from the Edge to the Cloud.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00020432472229003906}, "created": {"value": true, "score": 0.9283419251441956}, "shared": {"value": false, "score": 1.1324882507324219e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2822273373603821}, "created": {"value": true, "score": 0.9654404520988464}, "shared": {"value": false, "score": 1.1324882507324219e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q47509047", "wikipediaExternalRef": 54022970, "lang": "en", "confidence": 0.9161, "software-name": {"rawForm": "PyTorch", "normalizedForm": "PyTorch", "wikidataId": "Q47509047", "wikipediaExternalRef": 54022970, "lang": "en", "confidence": 0.9161, "offsetStart": 150, "offsetEnd": 157}, "context": "The survey [101] presents ML and DL frameworks and libraries oriented towards fast processing and streaming of large-scale data, such as: TensorFlow, PyTorch, MXNet, Theano, FlinkML, and Spark MLlib. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00011938810348510742}, "created": {"value": false, "score": 0.00010293722152709961}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.6961480379104614}, "created": {"value": false, "score": 0.005738258361816406}, "shared": {"value": false, "score": 5.9604644775390625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FlinkML", "normalizedForm": "FlinkML", "offsetStart": 153, "offsetEnd": 160}, "context": "Regarding IoT Big Data learning, they present Machine Learning frameworks working on Big Data and processing in parallel such as Spark MLlib, SAMOA, and FlinkML.", "mentionContextAttributes": {"used": {"value": false, "score": 9.077787399291992e-05}, "created": {"value": true, "score": 0.9654404520988464}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.003960907459259033}, "created": {"value": true, "score": 0.9654404520988464}, "shared": {"value": false, "score": 4.231929779052734e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q20714460", "wikipediaExternalRef": 46228433, "lang": "en", "confidence": 0.6848, "software-name": {"rawForm": "Apache Flink", "normalizedForm": "Apache Flink", "wikidataId": "Q20714460", "wikipediaExternalRef": 46228433, "lang": "en", "confidence": 0.6848, "offsetStart": 153, "offsetEnd": 165}, "context": "They illustrate and validate the framework with a smart surveillance application composed by data processing frameworks such as Edgent (on the Edge) and Apache Flink and Kafka (on the Cloud). ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0036334991455078125}, "created": {"value": false, "score": 0.011862516403198242}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0036334991455078125}, "created": {"value": false, "score": 0.011862516403198242}, "shared": {"value": false, "score": 4.172325134277344e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q11354", "wikipediaExternalRef": 2581, "lang": "en", "confidence": 0.8046, "software-name": {"rawForm": "Apache", "normalizedForm": "Apache", "wikidataId": "Q11354", "wikipediaExternalRef": 2581, "lang": "en", "confidence": 0.8046, "offsetStart": 156, "offsetEnd": 162}, "context": "From the analysis of the selected articles, we observe that, compared to the Cloud, a few stream processing frameworks tailored for the Edge exist, such as Apache NiFi, Edgent, and EdgeWise. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.03140664100646973}, "created": {"value": false, "score": 0.00042110681533813477}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.03140664100646973}, "created": {"value": true, "score": 0.6562004685401917}, "shared": {"value": false, "score": 2.086162567138672e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q22348165", "wikipediaExternalRef": 52513310, "lang": "en", "confidence": 0.7801, "software-name": {"rawForm": "MXNet", "normalizedForm": "MXNet", "wikidataId": "Q22348165", "wikipediaExternalRef": 52513310, "lang": "en", "confidence": 0.7801, "offsetStart": 159, "offsetEnd": 164}, "context": "The survey [101] presents ML and DL frameworks and libraries oriented towards fast processing and streaming of large-scale data, such as: TensorFlow, PyTorch, MXNet, Theano, FlinkML, and Spark MLlib. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00011938810348510742}, "created": {"value": false, "score": 0.00010293722152709961}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.6961480379104614}, "created": {"value": false, "score": 0.005738258361816406}, "shared": {"value": false, "score": 5.9604644775390625e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q23691642", "wikipediaExternalRef": 50818838, "lang": "en", "confidence": 0.6077, "software-name": {"rawForm": "NiFi", "normalizedForm": "NiFi", "wikidataId": "Q23691642", "wikipediaExternalRef": 50818838, "lang": "en", "confidence": 0.6077, "offsetStart": 163, "offsetEnd": 167}, "context": "From the analysis of the selected articles, we observe that, compared to the Cloud, a few stream processing frameworks tailored for the Edge exist, such as Apache NiFi, Edgent, and EdgeWise. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.03140664100646973}, "created": {"value": false, "score": 0.00042110681533813477}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.03140664100646973}, "created": {"value": true, "score": 0.6562004685401917}, "shared": {"value": false, "score": 2.086162567138672e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q7777252", "wikipediaExternalRef": 33520809, "lang": "en", "confidence": 0.8657, "software-name": {"rawForm": "Theano", "normalizedForm": "Theano", "wikidataId": "Q7777252", "wikipediaExternalRef": 33520809, "lang": "en", "confidence": 0.8657, "offsetStart": 166, "offsetEnd": 172}, "context": "The survey [101] presents ML and DL frameworks and libraries oriented towards fast processing and streaming of large-scale data, such as: TensorFlow, PyTorch, MXNet, Theano, FlinkML, and Spark MLlib.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00011938810348510742}, "created": {"value": false, "score": 0.00010293722152709961}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.1877751350402832}, "created": {"value": false, "score": 0.0001704692840576172}, "shared": {"value": false, "score": 3.039836883544922e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Edgent", "normalizedForm": "Edgent", "offsetStart": 169, "offsetEnd": 175}, "context": "From the analysis of the selected articles, we observe that, compared to the Cloud, a few stream processing frameworks tailored for the Edge exist, such as Apache NiFi, Edgent, and EdgeWise. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.03140664100646973}, "created": {"value": false, "score": 0.00042110681533813477}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.989600658416748}, "created": {"value": true, "score": 0.9755545854568481}, "shared": {"value": false, "score": 4.172325134277344e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q16235208", "wikipediaExternalRef": 41321945, "lang": "en", "confidence": 0.6773, "software-name": {"rawForm": "Kafka", "normalizedForm": "Kafka", "wikidataId": "Q16235208", "wikipediaExternalRef": 41321945, "lang": "en", "confidence": 0.6773, "offsetStart": 170, "offsetEnd": 175}, "context": "They illustrate and validate the framework with a smart surveillance application composed by data processing frameworks such as Edgent (on the Edge) and Apache Flink and Kafka (on the Cloud). ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0036334991455078125}, "created": {"value": false, "score": 0.011862516403198242}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.13686507940292358}, "created": {"value": true, "score": 0.7321375012397766}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FlinkML", "normalizedForm": "FlinkML", "offsetStart": 174, "offsetEnd": 181}, "context": "The survey [101] presents ML and DL frameworks and libraries oriented towards fast processing and streaming of large-scale data, such as: TensorFlow, PyTorch, MXNet, Theano, FlinkML, and Spark MLlib.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00011938810348510742}, "created": {"value": false, "score": 0.00010293722152709961}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.003960907459259033}, "created": {"value": true, "score": 0.9654404520988464}, "shared": {"value": false, "score": 4.231929779052734e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.5539, "software-name": {"rawForm": "Spark", "normalizedForm": "Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.5539, "offsetStart": 187, "offsetEnd": 192}, "context": "The survey [101] presents ML and DL frameworks and libraries oriented towards fast processing and streaming of large-scale data, such as: TensorFlow, PyTorch, MXNet, Theano, FlinkML, and Spark MLlib.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00011938810348510742}, "created": {"value": false, "score": 0.00010293722152709961}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2822273373603821}, "created": {"value": true, "score": 0.9873542189598083}, "shared": {"value": false, "score": 1.9669532775878906e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FlinkML", "normalizedForm": "FlinkML", "offsetStart": 187, "offsetEnd": 194}, "context": "Furthermore, it supports Machine Learning engines and algorithms such as Spark MLlib (supports a variety of learning algorithms for classification, regression, clustering, among others), FlinkML (supports SVM, multiple linear regression, k-Nearest neighbors, among others), and TensorFlow (supports SVM, Gradient Boosting Machine, Random Forests, Naive Bayes, k-nearest neighbors, etc.).", "mentionContextAttributes": {"used": {"value": false, "score": 0.0002897977828979492}, "created": {"value": false, "score": 0.0005894899368286133}, "shared": {"value": false, "score": 4.231929779052734e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.003960907459259033}, "created": {"value": true, "score": 0.9654404520988464}, "shared": {"value": false, "score": 4.231929779052734e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q21447895", "wikipediaExternalRef": 48508507, "lang": "en", "confidence": 0.9154, "software-name": {"rawForm": "TensorFlow", "normalizedForm": "TensorFlow", "wikidataId": "Q21447895", "wikipediaExternalRef": 48508507, "lang": "en", "confidence": 0.9154, "offsetStart": 189, "offsetEnd": 199}, "context": "Mobile Data Analytics on Edge devices is achieved either through distributed Machine Learning systems such as MLbase, Gaia, TUX [158], and Adam; or, through Deep Learning libraries such as TensorFlow, Theano, PyTorch, and MXNET. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.1877751350402832}, "created": {"value": false, "score": 0.0001704692840576172}, "shared": {"value": false, "score": 3.039836883544922e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.6961480379104614}, "created": {"value": false, "score": 0.04948163032531738}, "shared": {"value": false, "score": 0.00028502941131591797}}}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.8393, "software-name": {"rawForm": "MLlib", "normalizedForm": "MLlib", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.8393, "offsetStart": 193, "offsetEnd": 198}, "context": "The survey [101] presents ML and DL frameworks and libraries oriented towards fast processing and streaming of large-scale data, such as: TensorFlow, PyTorch, MXNet, Theano, FlinkML, and Spark MLlib. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00011938810348510742}, "created": {"value": false, "score": 0.00010293722152709961}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2822273373603821}, "created": {"value": true, "score": 0.9654404520988464}, "shared": {"value": false, "score": 1.1324882507324219e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q7777252", "wikipediaExternalRef": 33520809, "lang": "en", "confidence": 0.8657, "software-name": {"rawForm": "Theano", "normalizedForm": "Theano", "wikidataId": "Q7777252", "wikipediaExternalRef": 33520809, "lang": "en", "confidence": 0.8657, "offsetStart": 201, "offsetEnd": 207}, "context": "Mobile Data Analytics on Edge devices is achieved either through distributed Machine Learning systems such as MLbase, Gaia, TUX [158], and Adam; or, through Deep Learning libraries such as TensorFlow, Theano, PyTorch, and MXNET. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.1877751350402832}, "created": {"value": false, "score": 0.0001704692840576172}, "shared": {"value": false, "score": 3.039836883544922e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.1877751350402832}, "created": {"value": false, "score": 0.0001704692840576172}, "shared": {"value": false, "score": 3.039836883544922e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.5539, "software-name": {"rawForm": "Spark", "normalizedForm": "Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.5539, "offsetStart": 207, "offsetEnd": 212}, "context": "For example, high throughput and low latency in stream processing systems can be achieved by optimizing their configurations such as: the number of bolts in the Storm DAG topology or the micro-batch size of Spark streaming, among others.", "mentionContextAttributes": {"used": {"value": false, "score": 9.363889694213867e-05}, "created": {"value": false, "score": 0.0002396106719970703}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2822273373603821}, "created": {"value": true, "score": 0.9873542189598083}, "shared": {"value": false, "score": 1.9669532775878906e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q47509047", "wikipediaExternalRef": 54022970, "lang": "en", "confidence": 0.7842, "software-name": {"rawForm": "PyTorch", "normalizedForm": "PyTorch", "wikidataId": "Q47509047", "wikipediaExternalRef": 54022970, "lang": "en", "confidence": 0.7842, "offsetStart": 209, "offsetEnd": 216}, "context": "Mobile Data Analytics on Edge devices is achieved either through distributed Machine Learning systems such as MLbase, Gaia, TUX [158], and Adam; or, through Deep Learning libraries such as TensorFlow, Theano, PyTorch, and MXNET. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.1877751350402832}, "created": {"value": false, "score": 0.0001704692840576172}, "shared": {"value": false, "score": 3.039836883544922e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.6961480379104614}, "created": {"value": false, "score": 0.005738258361816406}, "shared": {"value": false, "score": 5.9604644775390625e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q22348165", "wikipediaExternalRef": 52513310, "lang": "en", "confidence": 0.3478, "software-name": {"rawForm": "MXNET", "normalizedForm": "MXNET", "wikidataId": "Q22348165", "wikipediaExternalRef": 52513310, "lang": "en", "confidence": 0.3478, "offsetStart": 222, "offsetEnd": 227}, "context": "Mobile Data Analytics on Edge devices is achieved either through distributed Machine Learning systems such as MLbase, Gaia, TUX [158], and Adam; or, through Deep Learning libraries such as TensorFlow, Theano, PyTorch, and MXNET. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.1877751350402832}, "created": {"value": false, "score": 0.0001704692840576172}, "shared": {"value": false, "score": 3.039836883544922e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.1877751350402832}, "created": {"value": false, "score": 0.0001704692840576172}, "shared": {"value": false, "score": 3.039836883544922e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Fed4FIRE", "normalizedForm": "Fed4FIRE", "offsetStart": 222, "offsetEnd": 230}, "context": "Furthermore, we discuss the recent efforts and initiatives merging large scale testbeds for enabling more realistic setups for Edge-to-Cloud experiments, such as: Grid'5000 and FIT IoT-Lab; Chameleon and CHI@Edge; and the Fed4FIRE project.", "mentionContextAttributes": {"used": {"value": false, "score": 0.000409543514251709}, "created": {"value": true, "score": 0.9980947971343994}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.35038870573043823}, "created": {"value": true, "score": 0.9980947971343994}, "shared": {"value": false, "score": 4.798173904418945e-05}}, "references": [{"label": "[41]", "normalizedForm": "[41]", "refKey": 41}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Tensor-Flow", "normalizedForm": "Tensor-Flow", "offsetStart": 269, "offsetEnd": 280}, "context": "It discusses techniques to support Deep Learning models at the Edge, for example: (1) systems and toolkits: OpenEI, a framework for Edge Intelligence; AWS IoT Greengrass, for ML Inference; Azure IoT Edge; and Cloud IoT Edge; and (2) open source Deep Learning packages: Tensor-Flow, Caffe2, PyTorch, MXNet, and some distributed Deep Learning models over Cloud and Edge such as DDNN and Neurosurgeon.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0002694129943847656}, "created": {"value": false, "score": 0.005738258361816406}, "shared": {"value": false, "score": 6.020069122314453e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0002694129943847656}, "created": {"value": false, "score": 0.005738258361816406}, "shared": {"value": false, "score": 6.020069122314453e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q3073740", "wikipediaExternalRef": 5999274, "lang": "en", "confidence": 0.4462, "software-name": {"rawForm": "Flink", "normalizedForm": "Flink", "wikidataId": "Q3073740", "wikipediaExternalRef": 5999274, "lang": "en", "confidence": 0.4462, "offsetStart": 271, "offsetEnd": 276}, "context": "Novel approaches should also leverage the transfer of knowledge to/from different domains (e.g., useful when data for training is scarce) and also take advantage of the parallelism and scalability provided by state-of-the-art distributed stream processing systems (e.g., Flink, Spark, etc.) combined with Machine Learning paradigms [52] in order to speed up the training and inference time.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00022721290588378906}, "created": {"value": false, "score": 0.4067920446395874}, "shared": {"value": false, "score": 1.9669532775878906e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.001137852668762207}, "created": {"value": true, "score": 0.9283419251441956}, "shared": {"value": false, "score": 1.9669532775878906e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.5539, "software-name": {"rawForm": "Spark", "normalizedForm": "Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.5539, "offsetStart": 278, "offsetEnd": 283}, "context": "Novel approaches should also leverage the transfer of knowledge to/from different domains (e.g., useful when data for training is scarce) and also take advantage of the parallelism and scalability provided by state-of-the-art distributed stream processing systems (e.g., Flink, Spark, etc.) combined with Machine Learning paradigms [52] in order to speed up the training and inference time.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00022721290588378906}, "created": {"value": false, "score": 0.4067920446395874}, "shared": {"value": false, "score": 1.9669532775878906e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2822273373603821}, "created": {"value": true, "score": 0.9873542189598083}, "shared": {"value": false, "score": 1.9669532775878906e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q21447895", "wikipediaExternalRef": 48508507, "lang": "en", "confidence": 0.9154, "software-name": {"rawForm": "TensorFlow", "normalizedForm": "TensorFlow", "wikidataId": "Q21447895", "wikipediaExternalRef": 48508507, "lang": "en", "confidence": 0.9154, "offsetStart": 278, "offsetEnd": 288}, "context": "Furthermore, it supports Machine Learning engines and algorithms such as Spark MLlib (supports a variety of learning algorithms for classification, regression, clustering, among others), FlinkML (supports SVM, multiple linear regression, k-Nearest neighbors, among others), and TensorFlow (supports SVM, Gradient Boosting Machine, Random Forests, Naive Bayes, k-nearest neighbors, etc.).", "mentionContextAttributes": {"used": {"value": false, "score": 0.0002897977828979492}, "created": {"value": false, "score": 0.0005894899368286133}, "shared": {"value": false, "score": 4.231929779052734e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.6961480379104614}, "created": {"value": false, "score": 0.04948163032531738}, "shared": {"value": false, "score": 0.00028502941131591797}}}, {"type": "software", "software-type": "software", "wikidataId": "Q29364604", "wikipediaExternalRef": 53631046, "lang": "en", "confidence": 0.759, "software-name": {"rawForm": "Caffe2", "normalizedForm": "Caffe2", "wikidataId": "Q29364604", "wikipediaExternalRef": 53631046, "lang": "en", "confidence": 0.759, "offsetStart": 282, "offsetEnd": 288}, "context": "It discusses techniques to support Deep Learning models at the Edge, for example: (1) systems and toolkits: OpenEI, a framework for Edge Intelligence; AWS IoT Greengrass, for ML Inference; Azure IoT Edge; and Cloud IoT Edge; and (2) open source Deep Learning packages: Tensor-Flow, Caffe2, PyTorch, MXNet, and some distributed Deep Learning models over Cloud and Edge such as DDNN and Neurosurgeon.", "mentionContextAttributes": {"used": {"value": false, "score": 0.000269472599029541}, "created": {"value": false, "score": 0.005738258361816406}, "shared": {"value": false, "score": 5.9604644775390625e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.6961480379104614}, "created": {"value": false, "score": 0.005738258361816406}, "shared": {"value": false, "score": 5.9604644775390625e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q47509047", "wikipediaExternalRef": 54022970, "lang": "en", "confidence": 0.9161, "software-name": {"rawForm": "PyTorch", "normalizedForm": "PyTorch", "wikidataId": "Q47509047", "wikipediaExternalRef": 54022970, "lang": "en", "confidence": 0.9161, "offsetStart": 290, "offsetEnd": 297}, "context": "It discusses techniques to support Deep Learning models at the Edge, for example: (1) systems and toolkits: OpenEI, a framework for Edge Intelligence; AWS IoT Greengrass, for ML Inference; Azure IoT Edge; and Cloud IoT Edge; and (2) open source Deep Learning packages: Tensor-Flow, Caffe2, PyTorch, MXNet, and some distributed Deep Learning models over Cloud and Edge such as DDNN and Neurosurgeon.", "mentionContextAttributes": {"used": {"value": false, "score": 0.000269472599029541}, "created": {"value": false, "score": 0.005738258361816406}, "shared": {"value": false, "score": 5.9604644775390625e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.6961480379104614}, "created": {"value": false, "score": 0.005738258361816406}, "shared": {"value": false, "score": 5.9604644775390625e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q22348165", "wikipediaExternalRef": 52513310, "lang": "en", "confidence": 0.7801, "software-name": {"rawForm": "MXNet", "normalizedForm": "MXNet", "wikidataId": "Q22348165", "wikipediaExternalRef": 52513310, "lang": "en", "confidence": 0.7801, "offsetStart": 299, "offsetEnd": 304}, "context": "It discusses techniques to support Deep Learning models at the Edge, for example: (1) systems and toolkits: OpenEI, a framework for Edge Intelligence; AWS IoT Greengrass, for ML Inference; Azure IoT Edge; and Cloud IoT Edge; and (2) open source Deep Learning packages: Tensor-Flow, Caffe2, PyTorch, MXNet, and some distributed Deep Learning models over Cloud and Edge such as DDNN and Neurosurgeon.", "mentionContextAttributes": {"used": {"value": false, "score": 0.000269472599029541}, "created": {"value": false, "score": 0.005738258361816406}, "shared": {"value": false, "score": 5.9604644775390625e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.6961480379104614}, "created": {"value": false, "score": 0.005738258361816406}, "shared": {"value": false, "score": 5.9604644775390625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DDNN", "normalizedForm": "DDNN", "offsetStart": 376, "offsetEnd": 380}, "context": "It discusses techniques to support Deep Learning models at the Edge, for example: (1) systems and toolkits: OpenEI, a framework for Edge Intelligence; AWS IoT Greengrass, for ML Inference; Azure IoT Edge; and Cloud IoT Edge; and (2) open source Deep Learning packages: Tensor-Flow, Caffe2, PyTorch, MXNet, and some distributed Deep Learning models over Cloud and Edge such as DDNN and Neurosurgeon.", "mentionContextAttributes": {"used": {"value": false, "score": 0.000269472599029541}, "created": {"value": false, "score": 0.005738258361816406}, "shared": {"value": false, "score": 5.9604644775390625e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.000269472599029541}, "created": {"value": true, "score": 0.9393110871315002}, "shared": {"value": false, "score": 5.9604644775390625e-06}}}], "references": [{"refKey": 91, "tei": "<biblStruct xml:id=\"b91\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">EmuFog: Extensible and scalable emulation of large-scale fog computing infrastructures</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Ruben</forename><surname>Mayer</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Leon</forename><surname>Graser</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Harshit</forename><surname>Gupta</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Enrique</forename><surname>Saurez</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Umakishore</forename><surname>Ramachandran</surname></persName>\n\t\t</author>\n\t\t<idno type=\"DOI\">10.1109/fwc.2017.8368525</idno>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"m\">2017 IEEE Fog World Congress (FWC)</title>\n\t\t<imprint>\n\t\t\t<publisher>IEEE</publisher>\n\t\t\t<date type=\"published\" when=\"2017-10\">2017</date>\n\t\t\t<biblScope unit=\"page\">6</biblScope>\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}, {"refKey": 34, "tei": "<biblStruct xml:id=\"b34\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">Fogbed: A Rapid-Prototyping Emulation Environment for Fog Computing</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Antonio</forename><surname>Coutinho</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Fabiola</forename><surname>Greve</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Cassio</forename><surname>Prazeres</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Joao</forename><surname>Cardoso</surname></persName>\n\t\t</author>\n\t\t<idno type=\"DOI\">10.1109/icc.2018.8423003</idno>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"m\">2018 IEEE International Conference on Communications (ICC)</title>\n\t\t<imprint>\n\t\t\t<publisher>IEEE</publisher>\n\t\t\t<date type=\"published\" when=\"2018-05\">2018. 2018</date>\n\t\t\t<biblScope unit=\"page\">7</biblScope>\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}, {"refKey": 63, "tei": "<biblStruct xml:id=\"b63\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">iFogSim: A toolkit for modeling and simulation of resource management techniques in the Internet of Things, Edge and Fog computing environments</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Harshit</forename><surname>Gupta</surname></persName>\n\t\t\t<idno type=\"ORCID\">0000-0003-2850-0851</idno>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Amir</forename><surname>Vahid\u00a0dastjerdi</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Soumya</forename><forename type=\"middle\">K</forename><surname>Ghosh</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Rajkumar</forename><surname>Buyya</surname></persName>\n\t\t</author>\n\t\t<idno type=\"DOI\">10.1002/spe.2509</idno>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"j\">Software: Practice and Experience</title>\n\t\t<title level=\"j\" type=\"abbrev\">Softw Pract Exp</title>\n\t\t<idno type=\"ISSN\">0038-0644</idno>\n\t\t<idno type=\"ISSNe\">1097-024X</idno>\n\t\t<imprint>\n\t\t\t<biblScope unit=\"volume\">47</biblScope>\n\t\t\t<biblScope unit=\"issue\">9</biblScope>\n\t\t\t<biblScope unit=\"page\" from=\"1275\" to=\"1296\" />\n\t\t\t<date type=\"published\" when=\"2017-06-21\">2017</date>\n\t\t\t<publisher>Wiley</publisher>\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}, {"refKey": 32, "tei": "<biblStruct xml:id=\"b32\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">EnosLib: A Library for Experiment-Driven Research in Distributed Computing</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Ronan-Alexandre</forename><surname>Cherrueau</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Marie</forename><surname>Delavergne</surname></persName>\n\t\t\t<idno type=\"ORCID\">0000-0001-8020-959X</idno>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Alexandre</forename><surname>Van Kempen</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Adrien</forename><surname>Lebre</surname></persName>\n\t\t\t<idno type=\"ORCID\">0000-0002-0305-4130</idno>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Dimitri</forename><surname>Pertin</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Javier</forename><forename type=\"middle\">Rojas</forename><surname>Balderrama</surname></persName>\n\t\t\t<idno type=\"ORCID\">0000-0002-3341-2525</idno>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Anthony</forename><surname>Simonet</surname></persName>\n\t\t\t<idno type=\"ORCID\">0000-0002-4072-8886</idno>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Matthieu</forename><surname>Simonin</surname></persName>\n\t\t</author>\n\t\t<idno type=\"DOI\">10.1109/tpds.2021.3111159</idno>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"j\">IEEE Transactions on Parallel and Distributed Systems</title>\n\t\t<title level=\"j\" type=\"abbrev\">IEEE Trans. Parallel Distrib. Syst.</title>\n\t\t<idno type=\"ISSN\">1045-9219</idno>\n\t\t<idno type=\"ISSNe\">2161-9883</idno>\n\t\t<imprint>\n\t\t\t<biblScope unit=\"volume\">33</biblScope>\n\t\t\t<biblScope unit=\"issue\">6</biblScope>\n\t\t\t<biblScope unit=\"page\" from=\"1464\" to=\"1477\" />\n\t\t\t<date type=\"published\" when=\"2022-06-01\">2021</date>\n\t\t\t<publisher>Institute of Electrical and Electronics Engineers (IEEE)</publisher>\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}, {"refKey": 159, "tei": "<biblStruct xml:id=\"b159\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">Extend Cloud to Edge with KubeEdge</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Ying</forename><surname>Xiong</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Yulin</forename><surname>Sun</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Li</forename><surname>Xing</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Ying</forename><surname>Huang</surname></persName>\n\t\t</author>\n\t\t<idno type=\"DOI\">10.1109/sec.2018.00048</idno>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"m\">2018 IEEE/ACM Symposium on Edge Computing (SEC)</title>\n\t\t<imprint>\n\t\t\t<publisher>IEEE</publisher>\n\t\t\t<date type=\"published\" when=\"2018-10\">2018. 2018</date>\n\t\t\t<biblScope unit=\"page\">377</biblScope>\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}, {"refKey": 41, "tei": "<biblStruct xml:id=\"b41\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">Fed4FIRE \u2013 The Largest Federation of Testbeds in Europe</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Piet</forename><surname>Demeester</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Peter</forename><surname>Van Daele</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Tim</forename><surname>Wauters</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Halid</forename><surname>Hrasnica</surname></persName>\n\t\t</author>\n\t\t<idno type=\"DOI\">10.1201/9781003337447-5</idno>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"m\">Building the Future Internet through FIRE</title>\n\t\t<imprint>\n\t\t\t<publisher>River Publishers</publisher>\n\t\t\t<date type=\"published\" when=\"2022-09-01\">2016</date>\n\t\t\t<biblScope unit=\"page\" from=\"87\" to=\"109\" />\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}, {"refKey": 115, "tei": "<biblStruct xml:id=\"b115\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">FogNetSim++: A Toolkit for Modeling and Simulation of Distributed Fog Environment</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Tariq</forename><surname>Qayyum</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Asad</forename><forename type=\"middle\">Waqar</forename><surname>Malik</surname></persName>\n\t\t\t<idno type=\"ORCID\">0000-0003-3804-997X</idno>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Muazzam</forename><forename type=\"middle\">A</forename><surname>Khan Khattak</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Osman</forename><surname>Khalid</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Samee</forename><forename type=\"middle\">U</forename><surname>Khan</surname></persName>\n\t\t</author>\n\t\t<idno type=\"DOI\">10.1109/access.2018.2877696</idno>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"j\">IEEE Access</title>\n\t\t<title level=\"j\" type=\"abbrev\">IEEE Access</title>\n\t\t<idno type=\"ISSNe\">2169-3536</idno>\n\t\t<imprint>\n\t\t\t<biblScope unit=\"volume\">6</biblScope>\n\t\t\t<biblScope unit=\"page\" from=\"63570\" to=\"63583\" />\n\t\t\t<date type=\"published\" when=\"2018\">2018</date>\n\t\t\t<publisher>Institute of Electrical and Electronics Engineers (IEEE)</publisher>\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}, {"refKey": 26, "tei": "<biblStruct xml:id=\"b26\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">ElasticSim: A Toolkit for Simulating Workflows with Cloud Resource Runtime Auto-Scaling and Stochastic Task Execution Times</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Zhicheng</forename><surname>Cai</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Qianmu</forename><surname>Li</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Xiaoping</forename><surname>Li</surname></persName>\n\t\t</author>\n\t\t<idno type=\"DOI\">10.1007/s10723-016-9390-y</idno>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"j\">Journal of Grid Computing</title>\n\t\t<title level=\"j\" type=\"abbrev\">J Grid Computing</title>\n\t\t<idno type=\"ISSN\">1570-7873</idno>\n\t\t<idno type=\"ISSNe\">1572-9184</idno>\n\t\t<imprint>\n\t\t\t<biblScope unit=\"volume\">15</biblScope>\n\t\t\t<biblScope unit=\"issue\">2</biblScope>\n\t\t\t<biblScope unit=\"page\" from=\"257\" to=\"272\" />\n\t\t\t<date type=\"published\" when=\"2016-12-14\">2017</date>\n\t\t\t<publisher>Springer Science and Business Media LLC</publisher>\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}], "runtime": 116419, "id": "4d6b18913876ee074e5714786e6b8091bbd54518", "metadata": {"id": "4d6b18913876ee074e5714786e6b8091bbd54518"}, "original_file_path": "../../datalake/Samuel/SOFTware-Sync/data/xml_not_sofctied/hal-03654722.grobid.tei.xml", "file_name": "hal-03654722.grobid.tei.xml"}