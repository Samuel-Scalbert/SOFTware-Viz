{"application": "software-mentions", "version": "0.8.0", "date": "2024-04-15T07:12+0000", "md5": "EDC209F7AC4B4EE8BA97C40156830591", "mentions": [{"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 0, "offsetEnd": 3}, "context": "MDL containment in a CQ is 2EXPTIME-hard.", "mentionContextAttributes": {"used": {"value": false, "score": 0.1011701226234436}, "created": {"value": false, "score": 7.450580596923828e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GEMDL", "normalizedForm": "GEMDL", "offsetStart": 0, "offsetEnd": 5}, "context": "GEMDL and AGEMDL are simple syntactic restrictions of MDL whose properties will allow us to apply the UMC. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.04979276657104492}, "created": {"value": false, "score": 5.072355270385742e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999650120735168}, "created": {"value": false, "score": 0.023445487022399902}, "shared": {"value": false, "score": 1.2516975402832031e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "AGEMDL", "normalizedForm": "AGEMDL", "offsetStart": 0, "offsetEnd": 6}, "context": "AGEMDL forbids a relation from occurring more than once outside of the goal predicate, which is a strong restriction. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0030342936515808105}, "created": {"value": false, "score": 9.614229202270508e-05}, "shared": {"value": false, "score": 1.8477439880371094e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9994004964828491}, "created": {"value": true, "score": 0.9647889137268066}, "shared": {"value": false, "score": 1.8477439880371094e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FirstChild", "normalizedForm": "FirstChild", "offsetStart": 0, "offsetEnd": 10}, "context": "FirstChild(r, f ), SecondChild(r, s), Child(r, f ), Child(r, s), Child ?", "mentionContextAttributes": {"used": {"value": true, "score": 0.9988201260566711}, "created": {"value": false, "score": 6.854534149169922e-06}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GEMDL", "normalizedForm": "GEMDL", "offsetStart": 2, "offsetEnd": 7}, "context": "3-GEMDL containment in a UCQ is 2EXPTIME-hard.", "mentionContextAttributes": {"used": {"value": false, "score": 0.07100218534469604}, "created": {"value": false, "score": 3.7550926208496094e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999650120735168}, "created": {"value": false, "score": 0.023445487022399902}, "shared": {"value": false, "score": 1.2516975402832031e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GEMDL", "normalizedForm": "GEMDL", "offsetStart": 2, "offsetEnd": 7}, "context": "3-GEMDL containment in a UCQ is 2EXPTIME-hard.", "mentionContextAttributes": {"used": {"value": false, "score": 0.07100218534469604}, "created": {"value": false, "score": 3.7550926208496094e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999650120735168}, "created": {"value": false, "score": 0.023445487022399902}, "shared": {"value": false, "score": 1.2516975402832031e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FirstChild", "normalizedForm": "FirstChild", "offsetStart": 2, "offsetEnd": 12}, "context": ", FirstChild, SecondChild, and Label \u03b1 (for \u03b1 \u2208 \u039b) over binary trees into conjunctive queries Child \u2032 , Child ?", "mentionContextAttributes": {"used": {"value": true, "score": 0.9997613430023193}, "created": {"value": false, "score": 3.635883331298828e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FirstChild", "normalizedForm": "FirstChild", "offsetStart": 2, "offsetEnd": 12}, "context": ", FirstChild, SecondChild, or Label \u03b1 .", "mentionContextAttributes": {"used": {"value": false, "score": 0.0016313791275024414}, "created": {"value": false, "score": 4.857778549194336e-05}, "shared": {"value": false, "score": 5.185604095458984e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FirstChild", "normalizedForm": "FirstChild", "offsetStart": 2, "offsetEnd": 12}, "context": ", FirstChild, SecondChild, X \u2032 (x, y) is true in I if and only if X (x, y) is true in T (in Child \u2032 , the second and third C atoms can unify; in Child ?", "mentionContextAttributes": {"used": {"value": false, "score": 0.07346117496490479}, "created": {"value": false, "score": 1.1146068572998047e-05}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 3, "offsetEnd": 6}, "context": "An MDL query is almost globally extensionally restricted (AGEMDL) if the goal predicate never occurs in the body of a rule, and every extensional predicate has only one occurrence in a rule other than a rule for the goal predicate.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0013491511344909668}, "created": {"value": false, "score": 2.1159648895263672e-05}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FirstChild", "normalizedForm": "FirstChild", "offsetStart": 4, "offsetEnd": 14}, "context": "\u2032 , FirstChild \u2032 , SecondChild \u2032 , and Label \u2032 \u03b1 .", "mentionContextAttributes": {"used": {"value": true, "score": 0.9973644018173218}, "created": {"value": false, "score": 3.874301910400391e-06}, "shared": {"value": false, "score": 1.2516975402832031e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GEMDL", "normalizedForm": "GEMDL", "offsetStart": 6, "offsetEnd": 11}, "context": "Let k-GEMDL be the class obtained by replacing \"in only one rule\", with \"in at most k rules\" in the definition of GEMDL (while still restricting to one occurrence per rule).", "mentionContextAttributes": {"used": {"value": false, "score": 0.054980456829071045}, "created": {"value": false, "score": 7.075071334838867e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999650120735168}, "created": {"value": false, "score": 0.023445487022399902}, "shared": {"value": false, "score": 1.2516975402832031e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "AGEMDL", "normalizedForm": "AGEMDL", "offsetStart": 6, "offsetEnd": 12}, "context": "In an AGEMDL query, the goal predicate never occurs in the body of a rule, and every extensional predicate has only one occurrence in a rule other than a rule for the goal predicate.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0015730857849121094}, "created": {"value": false, "score": 1.2218952178955078e-05}, "shared": {"value": false, "score": 6.556510925292969e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9994004964828491}, "created": {"value": true, "score": 0.9647889137268066}, "shared": {"value": false, "score": 1.8477439880371094e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "AGEMDL", "normalizedForm": "AGEMDL", "offsetStart": 6, "offsetEnd": 12}, "context": "If an AGEMDL query Q is not contained in a UCQ Q \u2032 , then there is a diversified tree-like instance I such that I satisfies Q \u2227 \u00acQ \u2032 .", "mentionContextAttributes": {"used": {"value": false, "score": 0.004478156566619873}, "created": {"value": false, "score": 2.676248550415039e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9994004964828491}, "created": {"value": true, "score": 0.9647889137268066}, "shared": {"value": false, "score": 1.8477439880371094e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GEMDL", "normalizedForm": "GEMDL", "offsetStart": 8, "offsetEnd": 13}, "context": "Thus, 3-GEMDL is the class of MDL queries such that:", "mentionContextAttributes": {"used": {"value": false, "score": 0.002179443836212158}, "created": {"value": false, "score": 7.927417755126953e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999650120735168}, "created": {"value": false, "score": 0.023445487022399902}, "shared": {"value": false, "score": 1.2516975402832031e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FirstChild", "normalizedForm": "FirstChild", "offsetStart": 8, "offsetEnd": 18}, "context": "Ch1,Ch2 FirstChild(r, f ), SecondChild(r, s) S bin Ch1,Ch2,Child FirstChild(r, f ), SecondChild(r, s), Child(r, f ), Child(r, s) S bin Ch1,Ch2,Child,Child ?", "mentionContextAttributes": {"used": {"value": true, "score": 0.9952424168586731}, "created": {"value": false, "score": 4.827976226806641e-06}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GEMDL", "normalizedForm": "GEMDL", "offsetStart": 10, "offsetEnd": 15}, "context": "(1) The 3-GEMDL restriction prevents us from having two occurrences of the same extensional predicate, such as Child in the rule above.", "mentionContextAttributes": {"used": {"value": false, "score": 0.03153198957443237}, "created": {"value": false, "score": 3.7729740142822266e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999650120735168}, "created": {"value": false, "score": 0.023445487022399902}, "shared": {"value": false, "score": 1.2516975402832031e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "AGEMDL", "normalizedForm": "AGEMDL", "offsetStart": 10, "offsetEnd": 16}, "context": "GEMDL and AGEMDL are simple syntactic restrictions of MDL whose properties will allow us to apply the UMC. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.04979276657104492}, "created": {"value": false, "score": 5.072355270385742e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9994004964828491}, "created": {"value": true, "score": 0.9647889137268066}, "shared": {"value": false, "score": 1.8477439880371094e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "AGEMDL", "normalizedForm": "AGEMDL", "offsetStart": 11, "offsetEnd": 17}, "context": "Due to the AGEMDL restriction, a rule associated with a non-root node has at most one atom in the body with relation R. Thus, by construction of T (I ), the bag associated with each node has at most one atom with relation R.", "mentionContextAttributes": {"used": {"value": false, "score": 0.14035451412200928}, "created": {"value": false, "score": 0.0001780986785888672}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9994004964828491}, "created": {"value": true, "score": 0.9647889137268066}, "shared": {"value": false, "score": 1.8477439880371094e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FirstChild", "normalizedForm": "FirstChild", "offsetStart": 11, "offsetEnd": 21}, "context": "implied by FirstChild and SecondChild.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9968002438545227}, "created": {"value": false, "score": 1.5556812286376953e-05}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 12, "offsetEnd": 15}, "context": "Let Q be an MDL query with at most k atoms in the body of each rule, and at most p intensional predicates.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9187766313552856}, "created": {"value": false, "score": 1.9609928131103516e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "AGEMDL", "normalizedForm": "AGEMDL", "offsetStart": 12, "offsetEnd": 18}, "context": "Informally, AGEMDL queries allow UCQs built over intensional predicates, where extensional predicates are partitioned into classes where each rule uses predicates in a particular class.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0001442432403564453}, "created": {"value": false, "score": 1.341104507446289e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9994004964828491}, "created": {"value": true, "score": 0.9647889137268066}, "shared": {"value": false, "score": 1.8477439880371094e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FirstChild", "normalizedForm": "FirstChild", "offsetStart": 13, "offsetEnd": 23}, "context": "The relation FirstChild(x, y) is simulated by the formula \u03c6 FirstChild (x, y) = \u2203z\u2203w R(x, y, z, w).", "mentionContextAttributes": {"used": {"value": true, "score": 0.8679529428482056}, "created": {"value": false, "score": 1.2695789337158203e-05}, "shared": {"value": false, "score": 7.748603820800781e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SecondChild", "normalizedForm": "SecondChild", "offsetStart": 13, "offsetEnd": 24}, "context": "The relation SecondChild(x, y) is simulated by the formula \u03c6 SecondChild (x, y) = \u2203z\u2203w R(x, z, y, w).", "mentionContextAttributes": {"used": {"value": true, "score": 0.8480786085128784}, "created": {"value": false, "score": 5.304813385009766e-06}, "shared": {"value": false, "score": 6.556510925292969e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GEMDL", "normalizedForm": "GEMDL", "offsetStart": 14, "offsetEnd": 19}, "context": "Combining the GEMDL rules defining AccValues and the rules defining the goal predicate thus results in an AGEMDL query.", "mentionContextAttributes": {"used": {"value": false, "score": 0.03157162666320801}, "created": {"value": false, "score": 1.9609928131103516e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999650120735168}, "created": {"value": false, "score": 0.023445487022399902}, "shared": {"value": false, "score": 1.2516975402832031e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FirstChild", "normalizedForm": "FirstChild", "offsetStart": 14, "offsetEnd": 24}, "context": "Let S(x) \u2203t\u2203u FirstChild(x, t)\u2227 FirstChild(t, u) \u2227 Label \u22a5 (u).", "mentionContextAttributes": {"used": {"value": true, "score": 0.982778787612915}, "created": {"value": false, "score": 1.6093254089355469e-06}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SecondChild", "normalizedForm": "SecondChild", "offsetStart": 14, "offsetEnd": 25}, "context": ", FirstChild, SecondChild, and Label \u03b1 (for \u03b1 \u2208 \u039b) over binary trees into conjunctive queries Child \u2032 , Child ?", "mentionContextAttributes": {"used": {"value": true, "score": 0.9997613430023193}, "created": {"value": false, "score": 3.635883331298828e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SecondChild", "normalizedForm": "SecondChild", "offsetStart": 14, "offsetEnd": 25}, "context": ", FirstChild, SecondChild, or Label \u03b1 .", "mentionContextAttributes": {"used": {"value": false, "score": 0.0016313791275024414}, "created": {"value": false, "score": 4.857778549194336e-05}, "shared": {"value": false, "score": 5.185604095458984e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SecondChild", "normalizedForm": "SecondChild", "offsetStart": 14, "offsetEnd": 25}, "context": ", FirstChild, SecondChild, X \u2032 (x, y) is true in I if and only if X (x, y) is true in T (in Child \u2032 , the second and third C atoms can unify; in Child ?", "mentionContextAttributes": {"used": {"value": false, "score": 0.07346117496490479}, "created": {"value": false, "score": 1.1146068572998047e-05}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 17, "offsetEnd": 20}, "context": "Monadic datalog (MDL) denotes the sublanguage where all intensional predicates are monadic (unary), except for the goal predicate which can be either unary or nullary (in the latter case, we say that the program is Boolean).", "mentionContextAttributes": {"used": {"value": false, "score": 0.012675225734710693}, "created": {"value": false, "score": 3.057718276977539e-05}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "AGEMDL", "normalizedForm": "AGEMDL", "offsetStart": 18, "offsetEnd": 24}, "context": "Containment of an AGEMDL query in a UCQ is EXPTIME-hard.", "mentionContextAttributes": {"used": {"value": false, "score": 0.25957149267196655}, "created": {"value": false, "score": 1.3768672943115234e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9994004964828491}, "created": {"value": true, "score": 0.9647889137268066}, "shared": {"value": false, "score": 1.8477439880371094e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 19, "offsetEnd": 22}, "context": "Though the general MDL/UCQ problem is known to also be in 2EXPTIME in the presence of constants [3,4], constants typically do affect the complexity of containment problems, as they make it easier to code hardness proofs.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0011266469955444336}, "created": {"value": false, "score": 8.64267349243164e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SecondChild", "normalizedForm": "SecondChild", "offsetStart": 19, "offsetEnd": 30}, "context": "FirstChild(r, f ), SecondChild(r, s), Child(r, f ), Child(r, s), Child ?", "mentionContextAttributes": {"used": {"value": true, "score": 0.9988201260566711}, "created": {"value": false, "score": 6.854534149169922e-06}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SecondChild", "normalizedForm": "SecondChild", "offsetStart": 19, "offsetEnd": 30}, "context": "\u2032 , FirstChild \u2032 , SecondChild \u2032 , and Label \u2032 \u03b1 .", "mentionContextAttributes": {"used": {"value": true, "score": 0.9973644018173218}, "created": {"value": false, "score": 3.874301910400391e-06}, "shared": {"value": false, "score": 1.2516975402832031e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GEMDL", "normalizedForm": "GEMDL", "offsetStart": 20, "offsetEnd": 25}, "context": "We now define the 3-GEMDL query Q \u2032 1 as follows; it uses 7 unary intensional predicates U 0 . . .", "mentionContextAttributes": {"used": {"value": true, "score": 0.5794607400894165}, "created": {"value": false, "score": 8.285045623779297e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999650120735168}, "created": {"value": false, "score": 0.023445487022399902}, "shared": {"value": false, "score": 1.2516975402832031e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FirstChild", "normalizedForm": "FirstChild", "offsetStart": 20, "offsetEnd": 30}, "context": "(\u2203xyz Label \u03b1 (x) \u2227 FirstChild(x, y) \u2227 Label \u03b2 (y) \u2227 SecondChild(x, z) \u2227 Label \u03b3 (z))", "mentionContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 2.205371856689453e-06}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 21, "offsetEnd": 24}, "context": "Since containment of MDL in a CQ is a special case of monadic datalog containment, it also shows that monadic datalog containment is 2EXPTIME-complete, closing the gap in the bounds of [22].", "mentionContextAttributes": {"used": {"value": false, "score": 0.29153770208358765}, "created": {"value": false, "score": 9.357929229736328e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 22, "offsetEnd": 25}, "context": "We create a new unary MDL query that returns the content of U whenever Q 1 is true.", "mentionContextAttributes": {"used": {"value": false, "score": 0.000997006893157959}, "created": {"value": true, "score": 0.999821662902832}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "AGEMDL", "normalizedForm": "AGEMDL", "offsetStart": 22, "offsetEnd": 28}, "context": "The containment of an AGEMDL query in a UCQ can be decided in EXPTIME.", "mentionContextAttributes": {"used": {"value": false, "score": 0.025952041149139404}, "created": {"value": false, "score": 2.3186206817626953e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9994004964828491}, "created": {"value": true, "score": 0.9647889137268066}, "shared": {"value": false, "score": 1.8477439880371094e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 23, "offsetEnd": 26}, "context": "Consider the following MDL program P that determines whether there is a path in a graph G from a node marked with the unary predicate S to one marked with the unary predicate T :", "mentionContextAttributes": {"used": {"value": false, "score": 0.0023545026779174805}, "created": {"value": false, "score": 4.106760025024414e-05}, "shared": {"value": false, "score": 7.748603820800781e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 23, "offsetEnd": 26}, "context": "In the general case of MDL containment in UCQs, if we take Z to be all IQ-types, we obtain a doubly exponential bound on the construction of A Q \u2032 , yielding an overall 2EXPTIME upper bound on the containment of MDL within a UCQ, as in [19].", "mentionContextAttributes": {"used": {"value": false, "score": 0.4636496305465698}, "created": {"value": false, "score": 1.8477439880371094e-06}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 24, "offsetEnd": 27}, "context": "We create a new Boolean MDL query Q \u2032 1 that holds if Q 1 intersected with the unary predicate is non-empty, and similarly for Boolean UCQ Q \u2032 2 derived from Q 2 .", "mentionContextAttributes": {"used": {"value": false, "score": 0.0008305907249450684}, "created": {"value": true, "score": 0.9846031069755554}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 24, "offsetEnd": 27}, "context": "To determine whether an MDL query Q is not contained in a UCQ Q \u2032 , we can check whether there exists a monadic expansion tree satisfying Q and not satisfying Q \u2032 by Lemma 2.6.", "mentionContextAttributes": {"used": {"value": false, "score": 0.3620821237564087}, "created": {"value": false, "score": 7.927417755126953e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 25, "offsetEnd": 28}, "context": "This bound holds for the MDL/CQ containment problem as well.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9835590720176697}, "created": {"value": false, "score": 4.500150680541992e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SecondChild", "normalizedForm": "SecondChild", "offsetStart": 26, "offsetEnd": 37}, "context": "implied by FirstChild and SecondChild.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9968002438545227}, "created": {"value": false, "score": 1.5556812286376953e-05}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 27, "offsetEnd": 30}, "context": "Recall that containment of MDL queries in UCQs is in 2EXPTIME by [22] (indeed, this holds also for containment of two MDL queries [22] or for Datalog in UCQs [17,19]).", "mentionContextAttributes": {"used": {"value": false, "score": 0.180805504322052}, "created": {"value": false, "score": 1.4483928680419922e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SecondChild", "normalizedForm": "SecondChild", "offsetStart": 27, "offsetEnd": 38}, "context": "Ch1,Ch2 FirstChild(r, f ), SecondChild(r, s) S bin Ch1,Ch2,Child FirstChild(r, f ), SecondChild(r, s), Child(r, f ), Child(r, s) S bin Ch1,Ch2,Child,Child ?", "mentionContextAttributes": {"used": {"value": true, "score": 0.9952424168586731}, "created": {"value": false, "score": 4.827976226806641e-06}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 29, "offsetEnd": 32}, "context": "We finally show that the new MDL/UCQ upper bounds are tight.", "mentionContextAttributes": {"used": {"value": false, "score": 0.34325480461120605}, "created": {"value": true, "score": 0.8627306818962097}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GEMDL", "normalizedForm": "GEMDL", "offsetStart": 29, "offsetEnd": 34}, "context": "The goal is to construct a 3-GEMDL query Q \u2032 1 and a UCQ Q \u2032 2 over a relational signature such that Q is valid over trees of S bin Ch1,Ch2,Child,Child ?", "mentionContextAttributes": {"used": {"value": false, "score": 0.00034332275390625}, "created": {"value": false, "score": 0.005084037780761719}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999650120735168}, "created": {"value": false, "score": 0.023445487022399902}, "shared": {"value": false, "score": 1.2516975402832031e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 30, "offsetEnd": 33}, "context": "Thus, 3-GEMDL is the class of MDL queries such that:", "mentionContextAttributes": {"used": {"value": false, "score": 0.002179443836212158}, "created": {"value": false, "score": 7.927417755126953e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GEMDL", "normalizedForm": "GEMDL", "offsetStart": 30, "offsetEnd": 35}, "context": "We show that in the case of 3-GEMDL, the complexity jumps back up to 2EXPTIME, relying on our 2EXPTIME-hardness result for UCQ validity over trees of S bin Ch1,Ch2,Child,Child ? .", "mentionContextAttributes": {"used": {"value": true, "score": 0.9854676127433777}, "created": {"value": false, "score": 9.238719940185547e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999650120735168}, "created": {"value": false, "score": 0.023445487022399902}, "shared": {"value": false, "score": 1.2516975402832031e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 31, "offsetEnd": 34}, "context": "An expansion tree of a Boolean MDL query Q, as defined in that work, is a finite tree where each node is labeled by an instantiated rule r of Q.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00045984983444213867}, "created": {"value": false, "score": 0.0001678466796875}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 31, "offsetEnd": 34}, "context": "For any expansion tree t of an MDL query Q, we let \u03a0 ext (t) be the set of all extensional atoms appearing in nodes of t.", "mentionContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": false, "score": 1.3768672943115234e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FirstChild", "normalizedForm": "FirstChild", "offsetStart": 32, "offsetEnd": 42}, "context": "Let S(x) \u2203t\u2203u FirstChild(x, t)\u2227 FirstChild(t, u) \u2227 Label \u22a5 (u).", "mentionContextAttributes": {"used": {"value": true, "score": 0.982778787612915}, "created": {"value": false, "score": 1.6093254089355469e-06}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SecondChild", "normalizedForm": "SecondChild", "offsetStart": 32, "offsetEnd": 43}, "context": "\u2022 R(x, y), for R \u2208 {FirstChild, SecondChild, Child} is replaced with \u2203z SecondChild(x, z) \u2227 R(z, y) \u2227 S(x) \u2227 S(y); \u2022 Child ?", "mentionContextAttributes": {"used": {"value": true, "score": 0.5447227358818054}, "created": {"value": false, "score": 5.781650543212891e-06}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 33, "offsetEnd": 36}, "context": "We will also display a subset of MDL, AGEMDL, that exhibits the same behavior.", "mentionContextAttributes": {"used": {"value": false, "score": 0.020119965076446533}, "created": {"value": false, "score": 0.09447908401489258}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "AGEMDL", "normalizedForm": "AGEMDL", "offsetStart": 33, "offsetEnd": 39}, "context": "We will get an EXPTIME bound for AGEMDL. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.14984571933746338}, "created": {"value": false, "score": 0.02640247344970703}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9994004964828491}, "created": {"value": true, "score": 0.9647889137268066}, "shared": {"value": false, "score": 1.8477439880371094e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 36, "offsetEnd": 39}, "context": "In the other direction, given unary MDL Q 1 and UCQ Q 2 , we again add a unary predicate to the signature.", "mentionContextAttributes": {"used": {"value": true, "score": 0.8417330980300903}, "created": {"value": false, "score": 0.018707692623138428}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 37, "offsetEnd": 40}, "context": "We will see that this restriction of MDL to obtain EXPTIME-completeness is somewhat robust: if we allow a bounded number of occurrences of every extensional predicate except of just one (we call k-GEMDL the corresponding fragment of MDL, where k is the bound), the complexity of containment jumps back to 2EXPTIME-complete.", "mentionContextAttributes": {"used": {"value": false, "score": 0.1153596043586731}, "created": {"value": false, "score": 1.329183578491211e-05}, "shared": {"value": false, "score": 1.2516975402832031e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "AGEMDL", "normalizedForm": "AGEMDL", "offsetStart": 38, "offsetEnd": 44}, "context": "We will also display a subset of MDL, AGEMDL, that exhibits the same behavior.", "mentionContextAttributes": {"used": {"value": false, "score": 0.020119965076446533}, "created": {"value": false, "score": 0.09447908401489258}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9994004964828491}, "created": {"value": true, "score": 0.9647889137268066}, "shared": {"value": false, "score": 1.8477439880371094e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 39, "offsetEnd": 42}, "context": "Another problem closely related to the MDL/UCQ containment problem is boundedness of MDL, i.e., determining whether the evaluation of a MDL program reaches a fixpoint after a fixed, dataindependent, number of iterations.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00036829710006713867}, "created": {"value": false, "score": 0.0001780986785888672}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 40, "offsetEnd": 43}, "context": "Given a containment problem for Boolean MDL query Q 1 in UCQ Q 2 , we can create a unary containment problem by adding an additional unary intensional predicate U to the signature.", "mentionContextAttributes": {"used": {"value": false, "score": 0.009380757808685303}, "created": {"value": false, "score": 1.8894672393798828e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GEMDL", "normalizedForm": "GEMDL", "offsetStart": 41, "offsetEnd": 46}, "context": "The key feature common to containment of GEMDL queries and the limited access containment problem is that counterexamples have a stronger kind of tree-like instance, compared to simply monadic expansion trees.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00021576881408691406}, "created": {"value": false, "score": 4.023313522338867e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999650120735168}, "created": {"value": false, "score": 0.023445487022399902}, "shared": {"value": false, "score": 1.2516975402832031e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 42, "offsetEnd": 45}, "context": "The analogous definitions for non-Boolean MDL will be obvious, and all of these classes will easily be seen to be preserved by the transformation from above.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00028967857360839844}, "created": {"value": false, "score": 0.0001900196075439453}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 43, "offsetEnd": 46}, "context": "We establish a 2EXPTIME lower bound on the MDL/UCQ containment problem, resolving an open problem from the early 1990s.", "mentionContextAttributes": {"used": {"value": false, "score": 0.11838465929031372}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 43, "offsetEnd": 46}, "context": "In particular, we show that containment of MDL in CQs (and hence, UCQs) is 2EXPTIME-complete.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9897037744522095}, "created": {"value": false, "score": 4.416704177856445e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 43, "offsetEnd": 46}, "context": "Again, there is a tight connection between MDL containment and tree validity problems.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0003248453140258789}, "created": {"value": false, "score": 0.00025963783264160156}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 45, "offsetEnd": 48}, "context": "In this article we focus on monadic datalog (MDL) -the fragment in which all intensional predicates are unary.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0002897977828979492}, "created": {"value": true, "score": 0.6162974834442139}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 45, "offsetEnd": 48}, "context": "Furthermore, because of the structure of the MDL program Q \u2032 1 , the tree T(I ) which witnesses that I is a monadic expansion tree will have the following property: if Child \u2032 (x, y) holds, then x is an output element of a bag that is an ancestor of the bag whose output element is y.", "mentionContextAttributes": {"used": {"value": false, "score": 0.14678162336349487}, "created": {"value": false, "score": 4.351139068603516e-06}, "shared": {"value": false, "score": 1.3709068298339844e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FirstChild", "normalizedForm": "FirstChild", "offsetStart": 45, "offsetEnd": 55}, "context": "Since the A i 's are binary, they have to be FirstChild, SecondChild, or Child atoms; let us denote R i the corresponding relation name.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9130315780639648}, "created": {"value": false, "score": 4.035234451293945e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 46, "offsetEnd": 49}, "context": "We start by revisiting the connection between MDL/UCQ containment and containment problems involving regular tree languages.", "mentionContextAttributes": {"used": {"value": false, "score": 0.05428433418273926}, "created": {"value": false, "score": 0.2416081428527832}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 46, "offsetEnd": 49}, "context": "We then use a reduction from tree validity to MDL containment (given in the proof of Theorem 5.10) that allows us to push the 2EXPTIME lower bound to the MDL containment problem, and another reduction (given in the proof of Theorem 5.11) that allows us to push EXPTIME hardness from tree validity to containment under access constraints.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9938967227935791}, "created": {"value": false, "score": 5.424022674560547e-06}, "shared": {"value": false, "score": 6.556510925292969e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 47, "offsetEnd": 50}, "context": "We first give an important special case of the MDL/UCQ containment problem that is in EXPTIME, and use this bound to show an EXPTIME bound on containment under access patterns.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9481576085090637}, "created": {"value": false, "score": 0.001256406307220459}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 47, "offsetEnd": 50}, "context": "This is a valid monadic expansion tree for the MDL program:", "mentionContextAttributes": {"used": {"value": false, "score": 0.001210927963256836}, "created": {"value": false, "score": 9.995698928833008e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 48, "offsetEnd": 51}, "context": "We now apply the prior results to get bounds on MDL and limited access containment.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9996576309204102}, "created": {"value": false, "score": 0.03002190589904785}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 50, "offsetEnd": 53}, "context": "In addition, our bounds apply to other classes of MDL containment problems where the polynomial depth property does not hold.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0044089555740356445}, "created": {"value": false, "score": 0.0005728006362915039}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 52, "offsetEnd": 55}, "context": "A simple generalization is to consider the class of MDL queries where relations can occur in a bounded number of rules.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0001327991485595703}, "created": {"value": false, "score": 0.00025665760040283203}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SecondChild", "normalizedForm": "SecondChild", "offsetStart": 52, "offsetEnd": 63}, "context": "(z, y) \u2227 S(x) \u2227 S(y); \u2022 Leaf(x) is replaced with \u2203z SecondChild(x, z) \u2227 Leaf(z) \u2227 S(x); \u2022 Label \u03b1 (x) for \u03b1 \u2208 \u039b is replaced with \u2203z FirstChild(x, z) \u2227 Label \u03b1 (z).", "mentionContextAttributes": {"used": {"value": true, "score": 0.8567331433296204}, "created": {"value": false, "score": 3.039836883544922e-06}, "shared": {"value": false, "score": 1.1324882507324219e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SecondChild", "normalizedForm": "SecondChild", "offsetStart": 53, "offsetEnd": 64}, "context": "(\u2203xyz Label \u03b1 (x) \u2227 FirstChild(x, y) \u2227 Label \u03b2 (y) \u2227 SecondChild(x, z) \u2227 Label \u03b3 (z))", "mentionContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 2.205371856689453e-06}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 54, "offsetEnd": 57}, "context": "GEMDL and AGEMDL are simple syntactic restrictions of MDL whose properties will allow us to apply the UMC.", "mentionContextAttributes": {"used": {"value": false, "score": 0.04979276657104492}, "created": {"value": false, "score": 5.072355270385742e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 55, "offsetEnd": 58}, "context": "We then give reductions from tree validity problems to MDL and limited access containment problems to show that the upper bounds we provide for these problems are tight as well.", "mentionContextAttributes": {"used": {"value": true, "score": 0.8089392185211182}, "created": {"value": false, "score": 0.02785402536392212}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SecondChild", "normalizedForm": "SecondChild", "offsetStart": 57, "offsetEnd": 68}, "context": "Since the A i 's are binary, they have to be FirstChild, SecondChild, or Child atoms; let us denote R i the corresponding relation name.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9130315780639648}, "created": {"value": false, "score": 4.035234451293945e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "AGEMDL", "normalizedForm": "AGEMDL", "offsetStart": 58, "offsetEnd": 64}, "context": "An MDL query is almost globally extensionally restricted (AGEMDL) if the goal predicate never occurs in the body of a rule, and every extensional predicate has only one occurrence in a rule other than a rule for the goal predicate.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0013491511344909668}, "created": {"value": false, "score": 2.1159648895263672e-05}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9994004964828491}, "created": {"value": true, "score": 0.9647889137268066}, "shared": {"value": false, "score": 1.8477439880371094e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "AGEMDL", "normalizedForm": "AGEMDL", "offsetStart": 59, "offsetEnd": 65}, "context": "Moreover, from Corollary 4.18 we get complexity bounds for AGEMDL and limited access containment: Corollary 4.28. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9896149635314941}, "created": {"value": false, "score": 3.993511199951172e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9994004964828491}, "created": {"value": true, "score": 0.9647889137268066}, "shared": {"value": false, "score": 1.8477439880371094e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 60, "offsetEnd": 63}, "context": "But we believe that it can be applied to other fragments of MDL.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00012153387069702148}, "created": {"value": false, "score": 0.04128974676132202}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 60, "offsetEnd": 63}, "context": "We claim that this is a valid reduction of tree validity to MDL containment.", "mentionContextAttributes": {"used": {"value": false, "score": 0.43414366245269775}, "created": {"value": false, "score": 0.0002193450927734375}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FirstChild", "normalizedForm": "FirstChild", "offsetStart": 60, "offsetEnd": 70}, "context": "The relation FirstChild(x, y) is simulated by the formula \u03c6 FirstChild (x, y) = \u2203z\u2203w R(x, y, z, w).", "mentionContextAttributes": {"used": {"value": true, "score": 0.8679529428482056}, "created": {"value": false, "score": 1.2695789337158203e-05}, "shared": {"value": false, "score": 7.748603820800781e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 61, "offsetEnd": 64}, "context": "We reconsider the problem of containment of monadic datalog (MDL) queries in unions of conjunctive queries (UCQs).", "mentionContextAttributes": {"used": {"value": false, "score": 0.0007307529449462891}, "created": {"value": false, "score": 0.20297974348068237}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 61, "offsetEnd": 64}, "context": "In this work, we will ascertain both the exact complexity of MDL/UCQ containment, and the exact complexity of limited-access containment.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00023221969604492188}, "created": {"value": true, "score": 0.9996342658996582}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 61, "offsetEnd": 64}, "context": "The first is that of \"almost globally extensionally limited\" MDL (AGEMDL) queries over general relational instances: we limit the number of occurrences of an extensional predicate in the program.", "mentionContextAttributes": {"used": {"value": false, "score": 0.006954848766326904}, "created": {"value": false, "score": 0.0001277923583984375}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 61, "offsetEnd": 64}, "context": "There we showed a co-NEXPTIME bound for a particular kind of MDL/UCQ containment problem, using a special case of the technique.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999038577079773}, "created": {"value": false, "score": 0.0029274821281433105}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SecondChild", "normalizedForm": "SecondChild", "offsetStart": 61, "offsetEnd": 72}, "context": "The relation SecondChild(x, y) is simulated by the formula \u03c6 SecondChild (x, y) = \u2203z\u2203w R(x, z, y, w).", "mentionContextAttributes": {"used": {"value": true, "score": 0.8480786085128784}, "created": {"value": false, "score": 5.304813385009766e-06}, "shared": {"value": false, "score": 6.556510925292969e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GEMDL", "normalizedForm": "GEMDL", "offsetStart": 62, "offsetEnd": 67}, "context": "A monadic datalog query is globally extensionally restricted (GEMDL) if every extensional predicate appears in only one rule, and occurs only once in that rule.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0017769336700439453}, "created": {"value": false, "score": 3.319978713989258e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999650120735168}, "created": {"value": false, "score": 0.023445487022399902}, "shared": {"value": false, "score": 1.2516975402832031e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 63, "offsetEnd": 66}, "context": "Thus containment under access limitations is a special case of MDL/UCQ containment.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0014598965644836426}, "created": {"value": false, "score": 1.7821788787841797e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 65, "offsetEnd": 68}, "context": "For simplicity, we do not consider two important variants of the MDL/UCQ containment problem and of limited-access containment.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0005245804786682129}, "created": {"value": false, "score": 0.13654249906539917}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FirstChild", "normalizedForm": "FirstChild", "offsetStart": 65, "offsetEnd": 75}, "context": "Ch1,Ch2 FirstChild(r, f ), SecondChild(r, s) S bin Ch1,Ch2,Child FirstChild(r, f ), SecondChild(r, s), Child(r, f ), Child(r, s) S bin Ch1,Ch2,Child,Child ?", "mentionContextAttributes": {"used": {"value": true, "score": 0.9952424168586731}, "created": {"value": false, "score": 4.827976226806641e-06}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "AGEMDL", "normalizedForm": "AGEMDL", "offsetStart": 66, "offsetEnd": 72}, "context": "The first is that of \"almost globally extensionally limited\" MDL (AGEMDL) queries over general relational instances: we limit the number of occurrences of an extensional predicate in the program.", "mentionContextAttributes": {"used": {"value": false, "score": 0.006954848766326904}, "created": {"value": false, "score": 0.0001277923583984375}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9994004964828491}, "created": {"value": true, "score": 0.9647889137268066}, "shared": {"value": false, "score": 1.8477439880371094e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 67, "offsetEnd": 70}, "context": "As shown in [7] (Claim 40 of the extended version), containment of MDL in a UCQ reduces to MDL boundedness.", "mentionContextAttributes": {"used": {"value": false, "score": 0.011496186256408691}, "created": {"value": false, "score": 3.993511199951172e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 69, "offsetEnd": 72}, "context": "This resolves the main open question from [18] and also implies that MDL boundedness is 2EXPTIME-hard, as noted in [7].", "mentionContextAttributes": {"used": {"value": false, "score": 0.04352903366088867}, "created": {"value": false, "score": 8.046627044677734e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "AGEMDL", "normalizedForm": "AGEMDL", "offsetStart": 71, "offsetEnd": 77}, "context": "Both m and m \u2032 have relation R in the associated rule, and thus by the AGEMDL property, the rule must be the same, namely \u03c1. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.6913222670555115}, "created": {"value": false, "score": 1.424551010131836e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9994004964828491}, "created": {"value": true, "score": 0.9647889137268066}, "shared": {"value": false, "score": 1.8477439880371094e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FirstChild", "normalizedForm": "FirstChild", "offsetStart": 71, "offsetEnd": 81}, "context": "\u2022 A node q is first (resp., second) child of a node p if and only if \u03c6 FirstChild (p, q) (resp, \u03c6 SecondChild (p, q)) holds.", "mentionContextAttributes": {"used": {"value": false, "score": 0.04414421319961548}, "created": {"value": false, "score": 1.0192394256591797e-05}, "shared": {"value": false, "score": 6.556510925292969e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SecondChild", "normalizedForm": "SecondChild", "offsetStart": 72, "offsetEnd": 83}, "context": "\u2022 R(x, y), for R \u2208 {FirstChild, SecondChild, Child} is replaced with \u2203z SecondChild(x, z) \u2227 R(z, y) \u2227 S(x) \u2227 S(y); \u2022 Child ?", "mentionContextAttributes": {"used": {"value": true, "score": 0.5447227358818054}, "created": {"value": false, "score": 5.781650543212891e-06}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FirstChild", "normalizedForm": "FirstChild", "offsetStart": 73, "offsetEnd": 83}, "context": "\u2022 A node y is the first (resp., second) child of a node x if and only if FirstChild \u2032 (x, y) (resp., SecondChild \u2032 (x, y)) holds in I .", "mentionContextAttributes": {"used": {"value": false, "score": 0.030888497829437256}, "created": {"value": false, "score": 2.104043960571289e-05}, "shared": {"value": false, "score": 7.748603820800781e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 74, "offsetEnd": 77}, "context": "Our upper bounds will be proven for several restricted classes of Boolean MDL.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0012807250022888184}, "created": {"value": false, "score": 0.16266995668411255}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 75, "offsetEnd": 78}, "context": "This does not make any difference in the 2EXPTIME upper bounds for general MDL containment in UCQs, but the assumption is critical for our EXPTIME upper bounds.", "mentionContextAttributes": {"used": {"value": false, "score": 0.09552001953125}, "created": {"value": false, "score": 1.901388168334961e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GEMDL", "normalizedForm": "GEMDL", "offsetStart": 78, "offsetEnd": 83}, "context": "We have applied this analysis to two logics and two collections of instances -GEMDL and tree automata.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999650120735168}, "created": {"value": false, "score": 0.023445487022399902}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999650120735168}, "created": {"value": false, "score": 0.023445487022399902}, "shared": {"value": false, "score": 1.2516975402832031e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SecondChild", "normalizedForm": "SecondChild", "offsetStart": 81, "offsetEnd": 92}, "context": "\u2022 If the variable is of the form R(x, y) or R(x) or R(y, x) for R \u2208 {FirstChild, SecondChild, Child, Child ?", "mentionContextAttributes": {"used": {"value": true, "score": 0.8212739825248718}, "created": {"value": false, "score": 2.771615982055664e-05}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 83, "offsetEnd": 86}, "context": "Indeed, consider again the rules in Equation (2) in Section 2.4, an encoding as an MDL program of the unary predicate AccValues representing values that can be discovered via the access restrictions.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0010402202606201172}, "created": {"value": false, "score": 5.501508712768555e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 83, "offsetEnd": 86}, "context": "We now show a more elaborate result, which is that even for a restricted subset of MDL generalizing AGEMDL, the problem of containment in a UCQ is 2EXPTIME-hard.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0005144476890563965}, "created": {"value": true, "score": 0.9647889137268066}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SecondChild", "normalizedForm": "SecondChild", "offsetStart": 84, "offsetEnd": 95}, "context": "Ch1,Ch2 FirstChild(r, f ), SecondChild(r, s) S bin Ch1,Ch2,Child FirstChild(r, f ), SecondChild(r, s), Child(r, f ), Child(r, s) S bin Ch1,Ch2,Child,Child ?", "mentionContextAttributes": {"used": {"value": true, "score": 0.9952424168586731}, "created": {"value": false, "score": 4.827976226806641e-06}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 85, "offsetEnd": 88}, "context": "Another problem closely related to the MDL/UCQ containment problem is boundedness of MDL, i.e., determining whether the evaluation of a MDL program reaches a fixpoint after a fixed, dataindependent, number of iterations.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00036829710006713867}, "created": {"value": false, "score": 0.0001780986785888672}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 91, "offsetEnd": 94}, "context": "As shown in [7] (Claim 40 of the extended version), containment of MDL in a UCQ reduces to MDL boundedness.", "mentionContextAttributes": {"used": {"value": false, "score": 0.011496186256408691}, "created": {"value": false, "score": 3.993511199951172e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 91, "offsetEnd": 94}, "context": "We finally use the technique to show that when we move to a slightly broader collection of MDL programs, compared to those arising from limited access containment, we get a 2EXPTIME-complete query containment problem.", "mentionContextAttributes": {"used": {"value": false, "score": 0.18336033821105957}, "created": {"value": false, "score": 0.16497492790222168}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 92, "offsetEnd": 95}, "context": "Segoufin and ten Cate [33] define the language UNFP which can express the conjunction of an MDL query with a negated UCQ; they show that the satisfiability for this language is 2EXPTIMEcomplete.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0030248165130615234}, "created": {"value": false, "score": 3.0100345611572266e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GEMDL", "normalizedForm": "GEMDL", "offsetStart": 97, "offsetEnd": 102}, "context": "AccValues(x j k ) \u2190 R(x) \u2227 AccValues(x j 1 ) \u2227 \u2022 \u2022 \u2022 \u2227 AccValues(x j m ) These rules satisfy the GEMDL restriction.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9393447041511536}, "created": {"value": false, "score": 4.827976226806641e-06}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999650120735168}, "created": {"value": false, "score": 0.023445487022399902}, "shared": {"value": false, "score": 1.2516975402832031e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SecondChild", "normalizedForm": "SecondChild", "offsetStart": 98, "offsetEnd": 109}, "context": "\u2022 A node q is first (resp., second) child of a node p if and only if \u03c6 FirstChild (p, q) (resp, \u03c6 SecondChild (p, q)) holds.", "mentionContextAttributes": {"used": {"value": false, "score": 0.04414421319961548}, "created": {"value": false, "score": 1.0192394256591797e-05}, "shared": {"value": false, "score": 6.556510925292969e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "AGEMDL", "normalizedForm": "AGEMDL", "offsetStart": 100, "offsetEnd": 106}, "context": "We now show a more elaborate result, which is that even for a restricted subset of MDL generalizing AGEMDL, the problem of containment in a UCQ is 2EXPTIME-hard.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0005144476890563965}, "created": {"value": true, "score": 0.9647889137268066}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9994004964828491}, "created": {"value": true, "score": 0.9647889137268066}, "shared": {"value": false, "score": 1.8477439880371094e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GEMDL", "normalizedForm": "GEMDL", "offsetStart": 101, "offsetEnd": 106}, "context": "We show that containment under limited access in the case of a single-access per relation reduces to GEMDL containment in a UCQ.", "mentionContextAttributes": {"used": {"value": false, "score": 0.18457168340682983}, "created": {"value": false, "score": 0.00010091066360473633}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999650120735168}, "created": {"value": false, "score": 0.023445487022399902}, "shared": {"value": false, "score": 1.2516975402832031e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SecondChild", "normalizedForm": "SecondChild", "offsetStart": 101, "offsetEnd": 112}, "context": "\u2022 A node y is the first (resp., second) child of a node x if and only if FirstChild \u2032 (x, y) (resp., SecondChild \u2032 (x, y)) holds in I .", "mentionContextAttributes": {"used": {"value": false, "score": 0.030888497829437256}, "created": {"value": false, "score": 2.104043960571289e-05}, "shared": {"value": false, "score": 7.748603820800781e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 102, "offsetEnd": 105}, "context": "There are polynomial time one-to-one reductions in both directions between the containment of Boolean MDL queries in Boolean UCQs and that of MDL queries in UCQs.", "mentionContextAttributes": {"used": {"value": false, "score": 0.010463178157806396}, "created": {"value": false, "score": 2.0563602447509766e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 104, "offsetEnd": 107}, "context": "In another article, Chaudhuri and Vardi [18] prove a co-NEXPTIME upper bound for containment of a unary MDL query (i.e., a query with one output variable) in a union of connected Example 1.1.", "mentionContextAttributes": {"used": {"value": false, "score": 0.045221686363220215}, "created": {"value": false, "score": 8.404254913330078e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FirstChild", "normalizedForm": "FirstChild", "offsetStart": 105, "offsetEnd": 115}, "context": "We denote by \u03c6 \u03b1 the query equal to \u2203x Leaf(x) \u2227 Label \u03b1 (x) if \u03b5 \u2208 d c (\u03b1) and equal to false, e.g., \u2203x FirstChild(x, x), otherwise.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9585248231887817}, "created": {"value": false, "score": 6.377696990966797e-06}, "shared": {"value": false, "score": 7.748603820800781e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "AGEMDL", "normalizedForm": "AGEMDL", "offsetStart": 106, "offsetEnd": 112}, "context": "Combining the GEMDL rules defining AccValues and the rules defining the goal predicate thus results in an AGEMDL query.", "mentionContextAttributes": {"used": {"value": false, "score": 0.03157162666320801}, "created": {"value": false, "score": 1.9609928131103516e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9994004964828491}, "created": {"value": true, "score": 0.9647889137268066}, "shared": {"value": false, "score": 1.8477439880371094e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 107, "offsetEnd": 110}, "context": "We will begin by showing lower bounds for the tree validity problem, and then use these to get results for MDL and limited access containment.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9867632389068604}, "created": {"value": false, "score": 0.12434345483779907}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 109, "offsetEnd": 112}, "context": "Under these semantics, it is easy to check that any UCQ can be transformed in linear-time into an equivalent MDL query, that does not involve any intensional predicate apart from Goal.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00023221969604492188}, "created": {"value": false, "score": 1.5079975128173828e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 111, "offsetEnd": 114}, "context": "Let us first discuss how these arguments can be used to reprove the 2EXPTIME upper bound on the containment of MDL in UCQs [19].", "mentionContextAttributes": {"used": {"value": true, "score": 0.6154997944831848}, "created": {"value": false, "score": 0.0001785755157470703}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 19, "offsetStart": 71866, "offsetEnd": 71870}]}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 112, "offsetEnd": 115}, "context": "Though boundedness of Datalog programs is undecidable in general, it was shown in [22] that it is decidable for MDL, though the precise complexity was not assessed.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0329931378364563}, "created": {"value": false, "score": 4.947185516357422e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FirstChild", "normalizedForm": "FirstChild", "offsetStart": 112, "offsetEnd": 122}, "context": "We claim a CQ Q is valid if and only if the following conditions are all satisfied: (i) it does not contain any FirstChild, SecondChild, or Child atom;", "mentionContextAttributes": {"used": {"value": false, "score": 0.007139265537261963}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 113, "offsetEnd": 116}, "context": "As we shall see in Section 5, the 2EXPTIME upper bound obtained from our method for the containment of arbitrary MDL query in UCQs is the best we can do, since the bound is tight.", "mentionContextAttributes": {"used": {"value": false, "score": 0.24740082025527954}, "created": {"value": false, "score": 0.000331878662109375}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GEMDL", "normalizedForm": "GEMDL", "offsetStart": 114, "offsetEnd": 119}, "context": "Let k-GEMDL be the class obtained by replacing \"in only one rule\", with \"in at most k rules\" in the definition of GEMDL (while still restricting to one occurrence per rule).", "mentionContextAttributes": {"used": {"value": false, "score": 0.054980456829071045}, "created": {"value": false, "score": 7.075071334838867e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999650120735168}, "created": {"value": false, "score": 0.023445487022399902}, "shared": {"value": false, "score": 1.2516975402832031e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FirstChild", "normalizedForm": "FirstChild", "offsetStart": 115, "offsetEnd": 125}, "context": "The relational signature of ordered, labeled, binary trees, denoted S bin Ch1,Ch2 , contains the binary predicates FirstChild, SecondChild, unary Root, Leaf predicates, and Label \u03b1 predicates for all \u03b1 \u2208 \u039b.", "mentionContextAttributes": {"used": {"value": false, "score": 0.2978517413139343}, "created": {"value": false, "score": 2.7954578399658203e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 118, "offsetEnd": 121}, "context": "Recall that containment of MDL queries in UCQs is in 2EXPTIME by [22] (indeed, this holds also for containment of two MDL queries [22] or for Datalog in UCQs [17,19]).", "mentionContextAttributes": {"used": {"value": false, "score": 0.180805504322052}, "created": {"value": false, "score": 1.4483928680419922e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22, "offsetStart": 46635, "offsetEnd": 46639}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FirstChild", "normalizedForm": "FirstChild", "offsetStart": 118, "offsetEnd": 128}, "context": "This is easily done by observing that in the proof of Theorem 10 of [9] all but one of the Child can be replaced by a FirstChild atom (the proof relies on the reduction from a tiling game, and non-branching chains of nodes are used to encodes tiles and constraints, with branching used only to encode choices of one of the player; the query matches nodes within the encoding two successive tiles, thus with at most one branching on the second child).", "mentionContextAttributes": {"used": {"value": true, "score": 0.9982099533081055}, "created": {"value": false, "score": 3.635883331298828e-06}, "shared": {"value": false, "score": 1.2516975402832031e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 119, "offsetEnd": 122}, "context": "The direction from non-Boolean to Boolean in the proposition above implies that lower bounds on Boolean containment of MDL into UCQ applies to unary MDL as well.", "mentionContextAttributes": {"used": {"value": false, "score": 0.1287071704864502}, "created": {"value": false, "score": 1.519918441772461e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SecondChild", "normalizedForm": "SecondChild", "offsetStart": 120, "offsetEnd": 131}, "context": "We consider the query Q \u2032 i , for 1 \u2a7d i \u2a7d n -1, obtained by replacing in Q the i-th atom Child(x i , x i+1 ) by an atom SecondChild(x i , x i+1 ), and all other atoms Child(x i , x i+1 ) by an atom FirstChild(x i , x i+1 ).", "mentionContextAttributes": {"used": {"value": true, "score": 0.9910513162612915}, "created": {"value": false, "score": 1.2934207916259766e-05}, "shared": {"value": false, "score": 3.7550926208496094e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FirstChild", "normalizedForm": "FirstChild", "offsetStart": 122, "offsetEnd": 132}, "context": "(2) For each node n v \u2208 T(I ), bag(n v ) contains all unary facts about v, as well as every fact of the form Child(v, x), FirstChild(v, x), SecondChild(v, x).", "mentionContextAttributes": {"used": {"value": true, "score": 0.5414292216300964}, "created": {"value": false, "score": 1.9729137420654297e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 123, "offsetEnd": 126}, "context": "Note that this simple argument does not apply to the results of Chaudhuri and Vardi [18] on containment of connected unary MDL queries into a union of unary connected queries, since connectedness is not preserved by the reduction.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9975188374519348}, "created": {"value": false, "score": 8.165836334228516e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 124, "offsetEnd": 127}, "context": "Before discussing the complexity of the containment problem, we introduce the notion of monadic expansion tree of a Boolean MDL query that will be used in various proofs throughout the paper.", "mentionContextAttributes": {"used": {"value": false, "score": 0.000247955322265625}, "created": {"value": true, "score": 0.9986995458602905}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SecondChild", "normalizedForm": "SecondChild", "offsetStart": 124, "offsetEnd": 135}, "context": "We claim a CQ Q is valid if and only if the following conditions are all satisfied: (i) it does not contain any FirstChild, SecondChild, or Child atom;", "mentionContextAttributes": {"used": {"value": false, "score": 0.007139265537261963}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SecondChild", "normalizedForm": "SecondChild", "offsetStart": 127, "offsetEnd": 138}, "context": "The relational signature of ordered, labeled, binary trees, denoted S bin Ch1,Ch2 , contains the binary predicates FirstChild, SecondChild, unary Root, Leaf predicates, and Label \u03b1 predicates for all \u03b1 \u2208 \u039b.", "mentionContextAttributes": {"used": {"value": false, "score": 0.2978517413139343}, "created": {"value": false, "score": 2.7954578399658203e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 128, "offsetEnd": 131}, "context": "As mentioned in the introduction, the Chaudhuri and Vardi article [18] proved a co-NEXPTIME upper bound of containment of unary MDL queries in a union of unary connected conjunctive queries.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9992740154266357}, "created": {"value": false, "score": 1.9729137420654297e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 130, "offsetEnd": 133}, "context": "Indeed, one still get a 2EXPTIME bound for limited access containment, either directly via tree-like witnesses or by reduction to MDL containment.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0009958148002624512}, "created": {"value": false, "score": 1.6391277313232422e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FirstChild", "normalizedForm": "FirstChild", "offsetStart": 130, "offsetEnd": 140}, "context": "Let R be a relation of arity 4 such the first position indicates the parent relation, the second and third positions indicate the FirstChild and SecondChild relations, and the last position encodes the label of the node.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9354339241981506}, "created": {"value": false, "score": 1.6987323760986328e-05}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FirstChild", "normalizedForm": "FirstChild", "offsetStart": 132, "offsetEnd": 142}, "context": "(z, y) \u2227 S(x) \u2227 S(y); \u2022 Leaf(x) is replaced with \u2203z SecondChild(x, z) \u2227 Leaf(z) \u2227 S(x); \u2022 Label \u03b1 (x) for \u03b1 \u2208 \u039b is replaced with \u2203z FirstChild(x, z) \u2227 Label \u03b1 (z).", "mentionContextAttributes": {"used": {"value": true, "score": 0.8567331433296204}, "created": {"value": false, "score": 3.039836883544922e-06}, "shared": {"value": false, "score": 1.1324882507324219e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "AGEMDL", "normalizedForm": "AGEMDL", "offsetStart": 133, "offsetEnd": 139}, "context": "The rules that come from limited access patterns with an arbitrary number of output positions satisfy the following weakening of the AGEMDL condition: for any two rules that share an extensional predicate in the body, the bodies are identical.", "mentionContextAttributes": {"used": {"value": false, "score": 0.07219970226287842}, "created": {"value": false, "score": 2.568960189819336e-05}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9994004964828491}, "created": {"value": true, "score": 0.9647889137268066}, "shared": {"value": false, "score": 1.8477439880371094e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FirstChild", "normalizedForm": "FirstChild", "offsetStart": 133, "offsetEnd": 143}, "context": "Indeed, if for example Child \u2032 (x, y) holds, either the second and third C predicate in the definition of Child \u2032 unify (which means FirstChild \u2032 (x, y) holds) or they do not, in which case the U 2 (v 2 ) intensional fact required must have been created by a rule that implies that a P 5 (w 5 ) fact also exists, and this means SecondChild \u2032 (x, y) holds.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9934160113334656}, "created": {"value": false, "score": 3.635883331298828e-06}, "shared": {"value": false, "score": 3.2782554626464844e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "AGEMDL", "normalizedForm": "AGEMDL", "offsetStart": 134, "offsetEnd": 140}, "context": "We have thus shown matching complexity lower bounds for the upper bounds of [33] on monadic datalog containment and of Section 4.5 on AGEMDL containment in a UCQ, using reductions from tree validity problems.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9994004964828491}, "created": {"value": false, "score": 0.00018930435180664062}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9994004964828491}, "created": {"value": true, "score": 0.9647889137268066}, "shared": {"value": false, "score": 1.8477439880371094e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 136, "offsetEnd": 139}, "context": "Another problem closely related to the MDL/UCQ containment problem is boundedness of MDL, i.e., determining whether the evaluation of a MDL program reaches a fixpoint after a fixed, dataindependent, number of iterations.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00036829710006713867}, "created": {"value": false, "score": 0.0001780986785888672}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SecondChild", "normalizedForm": "SecondChild", "offsetStart": 140, "offsetEnd": 151}, "context": "(2) For each node n v \u2208 T(I ), bag(n v ) contains all unary facts about v, as well as every fact of the form Child(v, x), FirstChild(v, x), SecondChild(v, x).", "mentionContextAttributes": {"used": {"value": true, "score": 0.5414292216300964}, "created": {"value": false, "score": 1.9729137420654297e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 142, "offsetEnd": 145}, "context": "There are polynomial time one-to-one reductions in both directions between the containment of Boolean MDL queries in Boolean UCQs and that of MDL queries in UCQs.", "mentionContextAttributes": {"used": {"value": false, "score": 0.010463178157806396}, "created": {"value": false, "score": 2.0563602447509766e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 144, "offsetEnd": 147}, "context": "If a UCQ Q is not contained in a UCQ Q \u2032 under a set of access constraints, then there exists a monadic expansion tree I that is a model of the MDL query P associated to Q under the access constraints, such that I satisfies Q \u2227 \u00acQ \u2032 .", "mentionContextAttributes": {"used": {"value": false, "score": 0.015174627304077148}, "created": {"value": false, "score": 1.9490718841552734e-05}, "shared": {"value": false, "score": 6.556510925292969e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SecondChild", "normalizedForm": "SecondChild", "offsetStart": 145, "offsetEnd": 156}, "context": "Let R be a relation of arity 4 such the first position indicates the parent relation, the second and third positions indicate the FirstChild and SecondChild relations, and the last position encodes the label of the node.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9354339241981506}, "created": {"value": false, "score": 1.6987323760986328e-05}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "AGEMDL", "normalizedForm": "AGEMDL", "offsetStart": 148, "offsetEnd": 154}, "context": "We will also show (Section 4.5) that it can be used to obtain new bounds for containment under access constraints, by reduction from a bound on the AGEMDL fragment of MDL, introduced there.", "mentionContextAttributes": {"used": {"value": false, "score": 0.011754810810089111}, "created": {"value": true, "score": 0.8956417441368103}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9994004964828491}, "created": {"value": true, "score": 0.9647889137268066}, "shared": {"value": false, "score": 1.8477439880371094e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 149, "offsetEnd": 152}, "context": "The direction from non-Boolean to Boolean in the proposition above implies that lower bounds on Boolean containment of MDL into UCQ applies to unary MDL as well.", "mentionContextAttributes": {"used": {"value": false, "score": 0.1287071704864502}, "created": {"value": false, "score": 1.519918441772461e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 154, "offsetEnd": 157}, "context": "We then use a reduction from tree validity to MDL containment (given in the proof of Theorem 5.10) that allows us to push the 2EXPTIME lower bound to the MDL containment problem, and another reduction (given in the proof of Theorem 5.11) that allows us to push EXPTIME hardness from tree validity to containment under access constraints.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9938967227935791}, "created": {"value": false, "score": 5.424022674560547e-06}, "shared": {"value": false, "score": 6.556510925292969e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FirstChild", "normalizedForm": "FirstChild", "offsetStart": 157, "offsetEnd": 167}, "context": "We then add (\u0109, q) to \u2206 \u2032 0 ; \u2022 For every (q 1 , q 2 , \u03b1, q) \u2208 \u2206 0 , let C \u2286 B(d, \u03c3 ) be the output-isomorphism classes of bags with output element v, facts FirstChild(v, v 1 ),", "mentionContextAttributes": {"used": {"value": true, "score": 0.8847219944000244}, "created": {"value": false, "score": 4.231929779052734e-06}, "shared": {"value": false, "score": 1.0132789611816406e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FirstChild", "normalizedForm": "FirstChild", "offsetStart": 159, "offsetEnd": 169}, "context": "A tree T over S bin Ch1,Ch2,Child is a relational instance that verifies the same axioms as a tree over S bin Ch1,Ch2 , where Child T is the disjoint union of FirstChild T and SecondChild T .", "mentionContextAttributes": {"used": {"value": false, "score": 0.0016266107559204102}, "created": {"value": false, "score": 5.835294723510742e-05}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 163, "offsetEnd": 166}, "context": "An EXPTIME bound on satisfiability is shown for a fragment called Simple UNFP; the fragment cannot express UCQs, much less the negation of a UCQ conjoined with an MDL query.", "mentionContextAttributes": {"used": {"value": false, "score": 0.043986499309539795}, "created": {"value": false, "score": 2.562999725341797e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "AGEMDL", "normalizedForm": "AGEMDL", "offsetStart": 163, "offsetEnd": 169}, "context": "There is a polynomial-time reduction from containment of UCQs under limited access patterns, where every access has at most one output position, to containment of AGEMDL in UCQ.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0004914402961730957}, "created": {"value": false, "score": 4.416704177856445e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9994004964828491}, "created": {"value": true, "score": 0.9647889137268066}, "shared": {"value": false, "score": 1.8477439880371094e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 167, "offsetEnd": 170}, "context": "We will also show (Section 4.5) that it can be used to obtain new bounds for containment under access constraints, by reduction from a bound on the AGEMDL fragment of MDL, introduced there.", "mentionContextAttributes": {"used": {"value": false, "score": 0.011754810810089111}, "created": {"value": true, "score": 0.8956418633460999}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SecondChild", "normalizedForm": "SecondChild", "offsetStart": 176, "offsetEnd": 187}, "context": "A tree T over S bin Ch1,Ch2,Child is a relational instance that verifies the same axioms as a tree over S bin Ch1,Ch2 , where Child T is the disjoint union of FirstChild T and SecondChild T .", "mentionContextAttributes": {"used": {"value": false, "score": 0.0016266107559204102}, "created": {"value": false, "score": 5.835294723510742e-05}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GEMDL", "normalizedForm": "GEMDL", "offsetStart": 197, "offsetEnd": 202}, "context": "We will see that this restriction of MDL to obtain EXPTIME-completeness is somewhat robust: if we allow a bounded number of occurrences of every extensional predicate except of just one (we call k-GEMDL the corresponding fragment of MDL, where k is the bound), the complexity of containment jumps back to 2EXPTIME-complete.", "mentionContextAttributes": {"used": {"value": false, "score": 0.1153596043586731}, "created": {"value": false, "score": 1.329183578491211e-05}, "shared": {"value": false, "score": 1.2516975402832031e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999650120735168}, "created": {"value": false, "score": 0.023445487022399902}, "shared": {"value": false, "score": 1.2516975402832031e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FirstChild", "normalizedForm": "FirstChild", "offsetStart": 198, "offsetEnd": 208}, "context": "We consider the query Q \u2032 i , for 1 \u2a7d i \u2a7d n -1, obtained by replacing in Q the i-th atom Child(x i , x i+1 ) by an atom SecondChild(x i , x i+1 ), and all other atoms Child(x i , x i+1 ) by an atom FirstChild(x i , x i+1 ).", "mentionContextAttributes": {"used": {"value": true, "score": 0.9910513162612915}, "created": {"value": false, "score": 1.2934207916259766e-05}, "shared": {"value": false, "score": 3.7550926208496094e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 204, "offsetEnd": 207}, "context": "However, in Sections 4.4 and 4.5, we will see two cases where the UMC holds: first, by restricting the classes of instances we work with (to trees over specific signatures), and second by restricting the MDL program we consider monadic expansion trees of.", "mentionContextAttributes": {"used": {"value": false, "score": 0.01137399673461914}, "created": {"value": false, "score": 0.00019550323486328125}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 212, "offsetEnd": 215}, "context": "In the general case of MDL containment in UCQs, if we take Z to be all IQ-types, we obtain a doubly exponential bound on the construction of A Q \u2032 , yielding an overall 2EXPTIME upper bound on the containment of MDL within a UCQ, as in [19].", "mentionContextAttributes": {"used": {"value": false, "score": 0.4636496305465698}, "created": {"value": false, "score": 1.8477439880371094e-06}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "AGEMDL", "normalizedForm": "AGEMDL", "offsetStart": 224, "offsetEnd": 230}, "context": "It follows that the question of containment of unions of conjunctive queries under limited access patterns (recall Definition 2.12), where every access has a single output position, can be expressed as the containment of an AGEMDL query in a UCQ.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0027078986167907715}, "created": {"value": false, "score": 2.7835369110107422e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9994004964828491}, "created": {"value": true, "score": 0.9647889137268066}, "shared": {"value": false, "score": 1.8477439880371094e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FirstChild", "normalizedForm": "FirstChild", "offsetStart": 232, "offsetEnd": 242}, "context": "A tree T over S bin Ch1,Ch2 is a relational instance such that: (i) the non-empty Label T \u03b1 's for \u03b1 \u2208 \u039b form a partition of dom(T ) (one can thus talk about the label of a node n, which is the \u03b1 \u2208 \u039b such that n \u2208 Label T \u03b1 ); (ii) FirstChild T and SecondChild T are one-to-one partial mappings with the same domain (the set of internal nodes), whose complement is Leaf T (the set of leaves), and with disjoint ranges; (iii) the inverses of FirstChild T and SecondChild T are one-to-one partial mappings; (iv) \u2203x FirstChild(x, x) \u2228 SecondChild(x, x) does not hold; (v) Root T contains exactly one element (the root r of T ), and the following formula does not hold for r : \u2203x FirstChild(x, r ) \u2228 SecondChild(x, r ).", "mentionContextAttributes": {"used": {"value": true, "score": 0.8557782769203186}, "created": {"value": false, "score": 1.3768672943115234e-05}, "shared": {"value": false, "score": 4.351139068603516e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 233, "offsetEnd": 236}, "context": "We will see that this restriction of MDL to obtain EXPTIME-completeness is somewhat robust: if we allow a bounded number of occurrences of every extensional predicate except of just one (we call k-GEMDL the corresponding fragment of MDL, where k is the bound), the complexity of containment jumps back to 2EXPTIME-complete.", "mentionContextAttributes": {"used": {"value": false, "score": 0.1153596043586731}, "created": {"value": false, "score": 1.329183578491211e-05}, "shared": {"value": false, "score": 1.2516975402832031e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 235, "offsetEnd": 238}, "context": "By construction, the instance I satisfies Q \u2032 1 and is actually a minimal monadic expansion tree witness for Q \u2032 1 : this is due to the fact that for each node x in the tree T , one can show by induction on the tree structure that the MDL program Q \u2032 1 produces the intensional fact U 0 (x).", "mentionContextAttributes": {"used": {"value": true, "score": 0.8442059755325317}, "created": {"value": false, "score": 2.562999725341797e-06}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SecondChild", "normalizedForm": "SecondChild", "offsetStart": 249, "offsetEnd": 260}, "context": "A tree T over S bin Ch1,Ch2 is a relational instance such that: (i) the non-empty Label T \u03b1 's for \u03b1 \u2208 \u039b form a partition of dom(T ) (one can thus talk about the label of a node n, which is the \u03b1 \u2208 \u039b such that n \u2208 Label T \u03b1 ); (ii) FirstChild T and SecondChild T are one-to-one partial mappings with the same domain (the set of internal nodes), whose complement is Leaf T (the set of leaves), and with disjoint ranges; (iii) the inverses of FirstChild T and SecondChild T are one-to-one partial mappings; (iv) \u2203x FirstChild(x, x) \u2228 SecondChild(x, x) does not hold; (v) Root T contains exactly one element (the root r of T ), and the following formula does not hold for r : \u2203x FirstChild(x, r ) \u2228 SecondChild(x, r ).", "mentionContextAttributes": {"used": {"value": true, "score": 0.8557782769203186}, "created": {"value": false, "score": 1.3768672943115234e-05}, "shared": {"value": false, "score": 4.351139068603516e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FirstChild", "normalizedForm": "FirstChild", "offsetStart": 269, "offsetEnd": 279}, "context": "\u2022 A formula \u03a8 i (x, y) that expresses that \u03a6 i (x, y) holds and that, additionally, x and y are both first children or both second children of their parents (\u03a8 i (x, y) does not hold if x is a first child and y a second child or vice versa); note that we could not use FirstChild and SecondChild here as it would require disjunction. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9973434805870056}, "created": {"value": false, "score": 8.52346420288086e-06}, "shared": {"value": false, "score": 1.8298625946044922e-05}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SecondChild", "normalizedForm": "SecondChild", "offsetStart": 284, "offsetEnd": 295}, "context": "\u2022 A formula \u03a8 i (x, y) that expresses that \u03a6 i (x, y) holds and that, additionally, x and y are both first children or both second children of their parents (\u03a8 i (x, y) does not hold if x is a first child and y a second child or vice versa); note that we could not use FirstChild and SecondChild here as it would require disjunction. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9973434805870056}, "created": {"value": false, "score": 8.52346420288086e-06}, "shared": {"value": false, "score": 1.8298625946044922e-05}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "software-name": {"rawForm": "MDL", "normalizedForm": "MDL", "wikidataId": "Q6715155", "wikipediaExternalRef": 586499, "lang": "en", "confidence": 0.6816, "offsetStart": 304, "offsetEnd": 307}, "context": "Assuming each relation mentioned in the query has at least one access method (this is without loss of generality, since containment is trivial otherwise), the query Q \u2032 (AccFacts(I )) can be defined by restricting Q \u2032 to the values that occur in AccFacts(I ), and the latter can in turn be defined by an MDL program, using the rules:", "mentionContextAttributes": {"used": {"value": false, "score": 0.39303267002105713}, "created": {"value": false, "score": 5.185604095458984e-06}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999963104724884}, "created": {"value": true, "score": 0.9998583793640137}, "shared": {"value": false, "score": 3.3974647521972656e-06}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SecondChild", "normalizedForm": "SecondChild", "offsetStart": 328, "offsetEnd": 339}, "context": "Indeed, if for example Child \u2032 (x, y) holds, either the second and third C predicate in the definition of Child \u2032 unify (which means FirstChild \u2032 (x, y) holds) or they do not, in which case the U 2 (v 2 ) intensional fact required must have been created by a rule that implies that a P 5 (w 5 ) fact also exists, and this means SecondChild \u2032 (x, y) holds.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9934160113334656}, "created": {"value": false, "score": 3.635883331298828e-06}, "shared": {"value": false, "score": 3.2782554626464844e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FirstChild", "normalizedForm": "FirstChild", "offsetStart": 441, "offsetEnd": 451}, "context": "A tree T over S bin Ch1,Ch2 is a relational instance such that: (i) the non-empty Label T \u03b1 's for \u03b1 \u2208 \u039b form a partition of dom(T ) (one can thus talk about the label of a node n, which is the \u03b1 \u2208 \u039b such that n \u2208 Label T \u03b1 ); (ii) FirstChild T and SecondChild T are one-to-one partial mappings with the same domain (the set of internal nodes), whose complement is Leaf T (the set of leaves), and with disjoint ranges; (iii) the inverses of FirstChild T and SecondChild T are one-to-one partial mappings; (iv) \u2203x FirstChild(x, x) \u2228 SecondChild(x, x) does not hold; (v) Root T contains exactly one element (the root r of T ), and the following formula does not hold for r : \u2203x FirstChild(x, r ) \u2228 SecondChild(x, r ).", "mentionContextAttributes": {"used": {"value": true, "score": 0.8557782769203186}, "created": {"value": false, "score": 1.3768672943115234e-05}, "shared": {"value": false, "score": 4.351139068603516e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SecondChild", "normalizedForm": "SecondChild", "offsetStart": 458, "offsetEnd": 469}, "context": "A tree T over S bin Ch1,Ch2 is a relational instance such that: (i) the non-empty Label T \u03b1 's for \u03b1 \u2208 \u039b form a partition of dom(T ) (one can thus talk about the label of a node n, which is the \u03b1 \u2208 \u039b such that n \u2208 Label T \u03b1 ); (ii) FirstChild T and SecondChild T are one-to-one partial mappings with the same domain (the set of internal nodes), whose complement is Leaf T (the set of leaves), and with disjoint ranges; (iii) the inverses of FirstChild T and SecondChild T are one-to-one partial mappings; (iv) \u2203x FirstChild(x, x) \u2228 SecondChild(x, x) does not hold; (v) Root T contains exactly one element (the root r of T ), and the following formula does not hold for r : \u2203x FirstChild(x, r ) \u2228 SecondChild(x, r ).", "mentionContextAttributes": {"used": {"value": true, "score": 0.8557782769203186}, "created": {"value": false, "score": 1.3768672943115234e-05}, "shared": {"value": false, "score": 4.351139068603516e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FirstChild", "normalizedForm": "FirstChild", "offsetStart": 513, "offsetEnd": 523}, "context": "A tree T over S bin Ch1,Ch2 is a relational instance such that: (i) the non-empty Label T \u03b1 's for \u03b1 \u2208 \u039b form a partition of dom(T ) (one can thus talk about the label of a node n, which is the \u03b1 \u2208 \u039b such that n \u2208 Label T \u03b1 ); (ii) FirstChild T and SecondChild T are one-to-one partial mappings with the same domain (the set of internal nodes), whose complement is Leaf T (the set of leaves), and with disjoint ranges; (iii) the inverses of FirstChild T and SecondChild T are one-to-one partial mappings; (iv) \u2203x FirstChild(x, x) \u2228 SecondChild(x, x) does not hold; (v) Root T contains exactly one element (the root r of T ), and the following formula does not hold for r : \u2203x FirstChild(x, r ) \u2228 SecondChild(x, r ).", "mentionContextAttributes": {"used": {"value": true, "score": 0.8557783365249634}, "created": {"value": false, "score": 1.3709068298339844e-05}, "shared": {"value": false, "score": 4.291534423828125e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SecondChild", "normalizedForm": "SecondChild", "offsetStart": 532, "offsetEnd": 543}, "context": "A tree T over S bin Ch1,Ch2 is a relational instance such that: (i) the non-empty Label T \u03b1 's for \u03b1 \u2208 \u039b form a partition of dom(T ) (one can thus talk about the label of a node n, which is the \u03b1 \u2208 \u039b such that n \u2208 Label T \u03b1 ); (ii) FirstChild T and SecondChild T are one-to-one partial mappings with the same domain (the set of internal nodes), whose complement is Leaf T (the set of leaves), and with disjoint ranges; (iii) the inverses of FirstChild T and SecondChild T are one-to-one partial mappings; (iv) \u2203x FirstChild(x, x) \u2228 SecondChild(x, x) does not hold; (v) Root T contains exactly one element (the root r of T ), and the following formula does not hold for r : \u2203x FirstChild(x, r ) \u2228 SecondChild(x, r ).", "mentionContextAttributes": {"used": {"value": true, "score": 0.8557783365249634}, "created": {"value": false, "score": 1.3709068298339844e-05}, "shared": {"value": false, "score": 4.291534423828125e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FirstChild", "normalizedForm": "FirstChild", "offsetStart": 676, "offsetEnd": 686}, "context": "A tree T over S bin Ch1,Ch2 is a relational instance such that: (i) the non-empty Label T \u03b1 's for \u03b1 \u2208 \u039b form a partition of dom(T ) (one can thus talk about the label of a node n, which is the \u03b1 \u2208 \u039b such that n \u2208 Label T \u03b1 ); (ii) FirstChild T and SecondChild T are one-to-one partial mappings with the same domain (the set of internal nodes), whose complement is Leaf T (the set of leaves), and with disjoint ranges; (iii) the inverses of FirstChild T and SecondChild T are one-to-one partial mappings; (iv) \u2203x FirstChild(x, x) \u2228 SecondChild(x, x) does not hold; (v) Root T contains exactly one element (the root r of T ), and the following formula does not hold for r : \u2203x FirstChild(x, r ) \u2228 SecondChild(x, r ).", "mentionContextAttributes": {"used": {"value": true, "score": 0.8557783365249634}, "created": {"value": false, "score": 1.3709068298339844e-05}, "shared": {"value": false, "score": 4.291534423828125e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SecondChild", "normalizedForm": "SecondChild", "offsetStart": 696, "offsetEnd": 707}, "context": "A tree T over S bin Ch1,Ch2 is a relational instance such that: (i) the non-empty Label T \u03b1 's for \u03b1 \u2208 \u039b form a partition of dom(T ) (one can thus talk about the label of a node n, which is the \u03b1 \u2208 \u039b such that n \u2208 Label T \u03b1 ); (ii) FirstChild T and SecondChild T are one-to-one partial mappings with the same domain (the set of internal nodes), whose complement is Leaf T (the set of leaves), and with disjoint ranges; (iii) the inverses of FirstChild T and SecondChild T are one-to-one partial mappings; (iv) \u2203x FirstChild(x, x) \u2228 SecondChild(x, x) does not hold; (v) Root T contains exactly one element (the root r of T ), and the following formula does not hold for r : \u2203x FirstChild(x, r ) \u2228 SecondChild(x, r ).", "mentionContextAttributes": {"used": {"value": true, "score": 0.855778694152832}, "created": {"value": false, "score": 1.3709068298339844e-05}, "shared": {"value": false, "score": 4.291534423828125e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999898374080658}, "created": {"value": false, "score": 0.00011926889419555664}, "shared": {"value": false, "score": 1.8298625946044922e-05}}}], "references": [{"refKey": 22, "tei": "<biblStruct xml:id=\"b22\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">Decidable optimization problems for database logic programs</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Stavros</forename><forename type=\"middle\">S</forename><surname>Cosmadakis</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Haim</forename><surname>Gaifman</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Paris</forename><forename type=\"middle\">C</forename><surname>Kanellakis</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Moshe</forename><forename type=\"middle\">Y</forename><surname>Vardi</surname></persName>\n\t\t</author>\n\t\t<idno type=\"DOI\">10.1145/62212.62259</idno>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"m\">Proceedings of the twentieth annual ACM symposium on Theory of computing - STOC &apos;88</title>\n\t\t<meeting>the twentieth annual ACM symposium on Theory of computing - STOC &apos;88</meeting>\n\t\t<imprint>\n\t\t\t<publisher>ACM Press</publisher>\n\t\t\t<date type=\"published\" when=\"1988\">1988</date>\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}, {"refKey": 19, "tei": "<biblStruct xml:id=\"b19\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">On the equivalence of recursive and nonrecursive datalog programs</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Surajit</forename><surname>Chaudhuri</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Moshe</forename><forename type=\"middle\">Y</forename><surname>Vardi</surname></persName>\n\t\t</author>\n\t\t<idno type=\"DOI\">10.1145/137097.137109</idno>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"m\">Proceedings of the eleventh ACM SIGACT-SIGMOD-SIGART symposium on Principles of database systems - PODS &apos;92</title>\n\t\t<meeting>the eleventh ACM SIGACT-SIGMOD-SIGART symposium on Principles of database systems - PODS &apos;92</meeting>\n\t\t<imprint>\n\t\t\t<publisher>ACM Press</publisher>\n\t\t\t<date type=\"published\" when=\"1992\">1997. 1997</date>\n\t\t\t<biblScope unit=\"volume\">54</biblScope>\n\t\t\t<biblScope unit=\"page\">1</biblScope>\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}], "runtime": 189457, "id": "41ec0e4d5f23f18338779c8e693b6801cb75b42e", "metadata": {"id": "41ec0e4d5f23f18338779c8e693b6801cb75b42e"}, "original_file_path": "../../datalake/Samuel/SOFTware-Sync/data/xml_not_sofctied/hal-02307999.grobid.tei.xml", "file_name": "hal-02307999.grobid.tei.xml"}