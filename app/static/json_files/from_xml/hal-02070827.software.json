{"application": "software-mentions", "version": "0.8.0", "date": "2024-04-12T17:09+0000", "md5": "44F2B28383CF52BC3202A8DF1DF55B29", "mentions": [{"type": "software", "software-type": "software", "software-name": {"rawForm": "SOLR", "normalizedForm": "SOLR", "offsetStart": 0, "offsetEnd": 4}, "context": "SOLR is a well-known highly efficient full-text server, also capable of handling JSON documents. ", "mentionContextAttributes": {"used": {"value": false, "score": 5.072355270385742e-05}, "created": {"value": false, "score": 0.006009936332702637}, "shared": {"value": false, "score": 7.748603820800781e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0007520914077758789}, "created": {"value": false, "score": 0.006009936332702637}, "shared": {"value": false, "score": 7.748603820800781e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "BigDAWG", "normalizedForm": "BigDAWG", "offsetStart": 0, "offsetEnd": 7}, "context": "BigDAWG supports islands for relational, array and text data, based on the Postgres, SciDB [4] and Apache Accumulo [1] stores, respectively. ", "mentionContextAttributes": {"used": {"value": false, "score": 5.906820297241211e-05}, "created": {"value": false, "score": 1.8417835235595703e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9984321594238281}, "created": {"value": false, "score": 0.33604854345321655}, "shared": {"value": false, "score": 8.940696716308594e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "BigDAWG", "normalizedForm": "BigDAWG", "offsetStart": 0, "offsetEnd": 7}, "context": "BigDAWG queries use explicit CAST operators to migrate an intermediary result from an island to another. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.7445695400238037}, "created": {"value": false, "score": 3.039836883544922e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9984321594238281}, "created": {"value": false, "score": 0.33604854345321655}, "shared": {"value": false, "score": 8.940696716308594e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ESTOCADA", "normalizedForm": "ESTOCADA", "offsetStart": 0, "offsetEnd": 8}, "context": "ESTOCADA can be used in a polystore setting to transparently enable each query to benefit from the best combination of stored data and available processing capabilities. ", "mentionContextAttributes": {"used": {"value": false, "score": 7.361173629760742e-05}, "created": {"value": false, "score": 0.00013494491577148438}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999691843986511}, "created": {"value": true, "score": 0.9999369978904724}, "shared": {"value": false, "score": 1.4901161193847656e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ESTOCADA", "normalizedForm": "ESTOCADA", "offsetStart": 0, "offsetEnd": 8}, "context": "ESTOCADA leverages recent advances in the area of view-based query rewriting under constraints, which we use to describe the various data models and stored data. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00012302398681640625}, "created": {"value": false, "score": 0.10101950168609619}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999691843986511}, "created": {"value": true, "score": 0.9999369978904724}, "shared": {"value": false, "score": 1.4901161193847656e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ESTOCADA", "normalizedForm": "ESTOCADA", "offsetStart": 0, "offsetEnd": 8}, "context": "ESTOCADA Polystor e ). ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9612090587615967}, "created": {"value": false, "score": 6.854534149169922e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999691843986511}, "created": {"value": true, "score": 0.9999369978904724}, "shared": {"value": false, "score": 1.4901161193847656e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Bi\u0434DAW G", "normalizedForm": "Bi\u0434DAW G", "offsetStart": 0, "offsetEnd": 8}, "context": "Bi\u0434DAW G and Q 60%", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999226927757263}, "created": {"value": false, "score": 9.59634780883789e-06}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999226927757263}, "created": {"value": false, "score": 0.0029408931732177734}, "shared": {"value": false, "score": 5.364418029785156e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ESTOCADA", "normalizedForm": "ESTOCADA", "offsetStart": 0, "offsetEnd": 8}, "context": "ESTOCADA Polystor e queries as shown in Figure 10 (queries labeled with *).", "mentionContextAttributes": {"used": {"value": true, "score": 0.8804160952568054}, "created": {"value": false, "score": 3.635883331298828e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999691843986511}, "created": {"value": true, "score": 0.9999369978904724}, "shared": {"value": false, "score": 1.4901161193847656e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Spark-SQL", "normalizedForm": "Spark-SQL", "offsetStart": 0, "offsetEnd": 9}, "context": "Spark-SQL has the highest query execution time; this is because it only supports navigation into JSON arrays through the EXPLODE function, which is highly inefficient (see Appendix F for examples). ", "mentionContextAttributes": {"used": {"value": false, "score": 0.002715885639190674}, "created": {"value": false, "score": 3.331899642944336e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.002715885639190674}, "created": {"value": false, "score": 3.331899642944336e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ES-TOCADA", "normalizedForm": "ES-TOCADA", "offsetStart": 0, "offsetEnd": 9}, "context": "ES-TOCADA supports this functionality by a local-as-view approach whose immediate benefit is flexibility since it requires no work when the underlying data storage changes. ", "mentionContextAttributes": {"used": {"value": false, "score": 3.594160079956055e-05}, "created": {"value": false, "score": 0.0005363225936889648}, "shared": {"value": false, "score": 6.556510925292969e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 3.594160079956055e-05}, "created": {"value": false, "score": 0.0005363225936889648}, "shared": {"value": false, "score": 6.556510925292969e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CloudMdsQL", "normalizedForm": "CloudMdsQL", "offsetStart": 0, "offsetEnd": 15}, "context": "CloudMdsQL [36] is an integration language resembling QBT XM , and our cross-model view-based rewriting approach could be easily adapted to use CloudMdsQL as its integration language, just like we adapted it to use BigDAWG's. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00899040699005127}, "created": {"value": false, "score": 0.0008097290992736816}, "shared": {"value": false, "score": 6.556510925292969e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00899040699005127}, "created": {"value": false, "score": 0.0018998980522155762}, "shared": {"value": false, "score": 7.748603820800781e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ESTOCADA Polystor", "normalizedForm": "ESTOCADA Polystor", "offsetStart": 0, "offsetEnd": 17}, "context": "ESTOCADA Polystor e . ", "mentionContextAttributes": {"used": {"value": true, "score": 0.6713435053825378}, "created": {"value": false, "score": 9.000301361083984e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.8513463139533997}, "created": {"value": false, "score": 9.000301361083984e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SparkSQL", "normalizedForm": "SparkSQL", "offsetStart": 3, "offsetEnd": 11}, "version": {"rawForm": "2.3.2", "normalizedForm": "2.3.2", "offsetStart": 14, "offsetEnd": 19}, "context": "In SparkSQL (v2.3.2), the query took more than an hour, due to its lack of indexes for selective data access. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9998176097869873}, "created": {"value": false, "score": 1.4007091522216797e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998550415039062}, "created": {"value": false, "score": 0.004765987396240234}, "shared": {"value": false, "score": 6.556510925292969e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q1165204", "wikipediaExternalRef": 21855450, "lang": "en", "confidence": 0.7501, "software-name": {"rawForm": "MongoDB", "normalizedForm": "MongoDB", "wikidataId": "Q1165204", "wikipediaExternalRef": 21855450, "lang": "en", "confidence": 0.7501, "offsetStart": 4, "offsetEnd": 11}, "context": "For MongoDB and Postgres, the execution time is correlated with the number of JSON array unnest operators. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.8231818079948425}, "created": {"value": false, "score": 1.2099742889404297e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999424815177917}, "created": {"value": false, "score": 0.004765987396240234}, "shared": {"value": false, "score": 2.1457672119140625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "BigDAWG", "normalizedForm": "BigDAWG", "offsetStart": 6, "offsetEnd": 13}, "context": "A key BigDAWG concept is an island, or collection of data stores accessed with a single query language. ", "mentionContextAttributes": {"used": {"value": false, "score": 3.439188003540039e-05}, "created": {"value": false, "score": 0.18498849868774414}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9984321594238281}, "created": {"value": false, "score": 0.33604854345321655}, "shared": {"value": false, "score": 8.940696716308594e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q1165204", "wikipediaExternalRef": 21855450, "lang": "en", "confidence": 0.7501, "software-name": {"rawForm": "MongoDB", "normalizedForm": "MongoDB", "wikidataId": "Q1165204", "wikipediaExternalRef": 21855450, "lang": "en", "confidence": 0.7501, "offsetStart": 7, "offsetEnd": 14}, "context": "In the MongoDB JSON store (v4.0.2), it took more than 17 minutes due to its limited join capability.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9996163249015808}, "created": {"value": false, "score": 2.8312206268310547e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999424815177917}, "created": {"value": false, "score": 0.004765987396240234}, "shared": {"value": false, "score": 2.1457672119140625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Bi\u0434DAW G", "normalizedForm": "Bi\u0434DAW G", "offsetStart": 9, "offsetEnd": 17}, "context": "60% of Q Bi\u0434DAW G and Q ESTOCADA queries consist of fulltext search predicates, which are not highly selective (e.g., \"low blood pressure\").", "mentionContextAttributes": {"used": {"value": false, "score": 0.14489519596099854}, "created": {"value": false, "score": 2.4974346160888672e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999226927757263}, "created": {"value": false, "score": 0.0029408931732177734}, "shared": {"value": false, "score": 5.364418029785156e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ESTOCADA", "normalizedForm": "ESTOCADA", "offsetStart": 9, "offsetEnd": 17}, "context": "Although ESTOCADA polystore engine does not require any data movement, it still benefits from utilizing V Post\u0434r es J SO N , V Post\u0434r esSQ L and V N EW to answer Q 60%", "mentionContextAttributes": {"used": {"value": false, "score": 0.0021788477897644043}, "created": {"value": false, "score": 1.4603137969970703e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999691843986511}, "created": {"value": true, "score": 0.9999369978904724}, "shared": {"value": false, "score": 1.4901161193847656e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "BigDAWG", "normalizedForm": "BigDAWG", "offsetStart": 10, "offsetEnd": 17}, "context": ", Q 29 in BigDAWG syntax, referring to each part of the data from its respective island (as BigDAWG requires); we refer to the resulting query set as Q Bi\u0434DAW G . ", "mentionContextAttributes": {"used": {"value": true, "score": 0.7072028517723083}, "created": {"value": false, "score": 6.377696990966797e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9984321594238281}, "created": {"value": false, "score": 0.33604854345321655}, "shared": {"value": false, "score": 8.940696716308594e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "software-name": {"rawForm": "Postgres", "normalizedForm": "Postgres", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "offsetStart": 10, "offsetEnd": 18}, "version": {"rawForm": "9.6", "normalizedForm": "9.6"}, "context": "Note that Postgres benefits from the view-based rewriting algorithm of ESTOCADA here. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.007247567176818848}, "created": {"value": false, "score": 3.319978713989258e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999645352363586}, "created": {"value": false, "score": 0.08293437957763672}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[4]", "normalizedForm": "[4]", "refKey": 4}, {"label": "[4]", "normalizedForm": "[4]", "refKey": 4}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SOLR", "normalizedForm": "SOLR", "offsetStart": 11, "offsetEnd": 15}, "context": "Consider a SOLR server stores a view V 1 storing the IDs of patients and their hospital admission data, as well as the caregivers' reports, include notes on the patients' stay (e.g., detailed diagnosis, etc).", "mentionContextAttributes": {"used": {"value": false, "score": 0.0003275871276855469}, "created": {"value": false, "score": 7.12275505065918e-05}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0007520914077758789}, "created": {"value": false, "score": 0.006009936332702637}, "shared": {"value": false, "score": 7.748603820800781e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ESTOCADA", "normalizedForm": "ESTOCADA", "offsetStart": 11, "offsetEnd": 19}, "context": "We present ESTOCADA, a novel approach connecting applications to the potentially heterogeneous systems where their input data resides. ", "mentionContextAttributes": {"used": {"value": false, "score": 8.577108383178711e-05}, "created": {"value": true, "score": 0.9999369978904724}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999691843986511}, "created": {"value": true, "score": 0.9999369978904724}, "shared": {"value": false, "score": 1.4901161193847656e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PostgreSQL", "normalizedForm": "PostgreSQL", "offsetStart": 12, "offsetEnd": 22}, "context": "Finally, in PostgreSQL with JSON support (v9.6), denoted Postgres in the sequel, Q 1 took 12.6 minutes. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999645352363586}, "created": {"value": false, "score": 2.9206275939941406e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999645352363586}, "created": {"value": false, "score": 2.9206275939941406e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SourceAccess", "normalizedForm": "SourceAccess", "offsetStart": 12, "offsetEnd": 24}, "context": "The cost of SourceAccess is estimated using a linear cost model with a fixed start-up component and one that grows linearly with the estimated size of the returned data (see below); this model also uses system (physical) parameters which we computed by running by hand a few \"system profiling\" queries, notably the observed disk read and write rate (for cold reads) and time to manipulate data in memory for subsequent, hot reads. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.999899685382843}, "created": {"value": false, "score": 7.68899917602539e-06}, "shared": {"value": false, "score": 1.1324882507324219e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999899685382843}, "created": {"value": true, "score": 0.5437822341918945}, "shared": {"value": false, "score": 1.1324882507324219e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q2858103", "wikipediaExternalRef": 10443665, "lang": "en", "confidence": 0.7618, "software-name": {"rawForm": "Solr", "normalizedForm": "Solr", "wikidataId": "Q2858103", "wikipediaExternalRef": 10443665, "lang": "en", "confidence": 0.7618, "offsetStart": 13, "offsetEnd": 17}, "version": {"rawForm": "6.1", "normalizedForm": "6.1"}, "context": "We placed in Solr a view V Sol r \u2208 V EX P , storing for each patient the caregivers' reports (unstructured text).", "mentionContextAttributes": {"used": {"value": true, "score": 0.999989926815033}, "created": {"value": false, "score": 2.1636486053466797e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999989926815033}, "created": {"value": false, "score": 0.08293437957763672}, "shared": {"value": false, "score": 4.410743713378906e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "BigDAWG", "normalizedForm": "BigDAWG", "offsetStart": 13, "offsetEnd": 20}, "context": "To work with BigDAWG, we extended it with two new CAST operators: (i) to migrate Solr query results to Postgres; (ii) to migrate Postgres JSON query results to a Postgres relational instance and vice-versa. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.3405839800834656}, "created": {"value": false, "score": 0.08293437957763672}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9984321594238281}, "created": {"value": false, "score": 0.33604854345321655}, "shared": {"value": false, "score": 8.940696716308594e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "software-name": {"rawForm": "Postgres", "normalizedForm": "Postgres", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "offsetStart": 13, "offsetEnd": 21}, "version": {"rawForm": "9.6", "normalizedForm": "9.6"}, "context": "We stored in Postgres 6 relational views V Post\u0434r eSQ L \u2282 V EX P of the MIMIC-JSON dataset, comprising the uniformly structured part of the dataset (including all patient chart data and admission under specific services such as Cardiac Surgery, Neurologic Medical, etc). ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9994031190872192}, "created": {"value": false, "score": 2.562999725341797e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999645352363586}, "created": {"value": false, "score": 0.08293437957763672}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[4]", "normalizedForm": "[4]", "refKey": 4}, {"label": "[4]", "normalizedForm": "[4]", "refKey": 4}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ESTOCADA", "normalizedForm": "ESTOCADA", "offsetStart": 13, "offsetEnd": 21}, "context": "In contrast, ESTOCADA polystore engine performs better since it computes the join in memory in the mediator, thus it does not need to pay the intermediary result storage cost. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00013971328735351562}, "created": {"value": false, "score": 2.855062484741211e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999691843986511}, "created": {"value": true, "score": 0.9999369978904724}, "shared": {"value": false, "score": 1.4901161193847656e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ESTOCADA", "normalizedForm": "ESTOCADA", "offsetStart": 15, "offsetEnd": 23}, "context": "The novelty of ESTOCADA here is to support multiple data models, by relying on powerful query reformulation techniques under constraints.", "mentionContextAttributes": {"used": {"value": false, "score": 3.355741500854492e-05}, "created": {"value": false, "score": 0.13290119171142578}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999691843986511}, "created": {"value": true, "score": 0.9999369978904724}, "shared": {"value": false, "score": 1.4901161193847656e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "software-name": {"rawForm": "Postgres", "normalizedForm": "Postgres", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "offsetStart": 16, "offsetEnd": 24}, "version": {"rawForm": "9.6", "normalizedForm": "9.6"}, "context": "For MongoDB and Postgres, the execution time is correlated with the number of JSON array unnest operators. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.8231818079948425}, "created": {"value": false, "score": 1.2099742889404297e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999645352363586}, "created": {"value": false, "score": 0.08293437957763672}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[4]", "normalizedForm": "[4]", "refKey": 4}, {"label": "[4]", "normalizedForm": "[4]", "refKey": 4}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Bi\u0434DAW G", "normalizedForm": "Bi\u0434DAW G", "offsetStart": 16, "offsetEnd": 24}, "context": "Given the Q 60% Bi\u0434DAW G queries, V Post\u0434r es J SO N , V Post\u0434r esSQ L and V N EW , our cross-model views-based rewriting approach finds rewritings using views from Postgres (relational instance) and Postgres (JSON instance).", "mentionContextAttributes": {"used": {"value": false, "score": 0.2920004725456238}, "created": {"value": false, "score": 2.562999725341797e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999226927757263}, "created": {"value": false, "score": 0.0029408931732177734}, "shared": {"value": false, "score": 5.364418029785156e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SparkSQL", "normalizedForm": "SparkSQL", "offsetStart": 17, "offsetEnd": 25}, "version": {"rawForm": "2.3.2", "normalizedForm": "2.3.2"}, "context": "In AsterixDB and SparkSQL, all queries timed out due to the lack of full-text indexing on collection fields. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9869279265403748}, "created": {"value": false, "score": 1.0788440704345703e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998550415039062}, "created": {"value": false, "score": 0.004765987396240234}, "shared": {"value": false, "score": 6.556510925292969e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "software-name": {"rawForm": "Postgres", "normalizedForm": "Postgres", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "offsetStart": 18, "offsetEnd": 26}, "version": {"rawForm": "9.6", "normalizedForm": "9.6"}, "context": "We also stored in Postgres a set V P ost\u0434r es J SO N \u2282 V EX P of 21 views which are most naturally represented as nested JSON documents. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9988971948623657}, "created": {"value": false, "score": 1.329183578491211e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999645352363586}, "created": {"value": false, "score": 0.08293437957763672}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[4]", "normalizedForm": "[4]", "refKey": 4}, {"label": "[4]", "normalizedForm": "[4]", "refKey": 4}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ESTOCADA", "normalizedForm": "ESTOCADA", "offsetStart": 20, "offsetEnd": 28}, "context": "Optimization in the ESTOCADA polystore engine used in our experiment combines heuristics and costs, as follows.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9761792421340942}, "created": {"value": false, "score": 7.826089859008789e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999691843986511}, "created": {"value": true, "score": 0.9999369978904724}, "shared": {"value": false, "score": 1.4901161193847656e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Bi\u0434DAW G", "normalizedForm": "Bi\u0434DAW G", "offsetStart": 21, "offsetEnd": 29}, "context": "On the queries Q 60% Bi\u0434DAW G and Q 60% ESTOCADA Polystor e , where the full-text search predicates are not very selective, Big-DAWG execution time is dominated by moving partial results to the join server. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.8513463139533997}, "created": {"value": false, "score": 2.4437904357910156e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999226927757263}, "created": {"value": false, "score": 0.0029408931732177734}, "shared": {"value": false, "score": 5.364418029785156e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SourceAccess", "normalizedForm": "SourceAccess", "offsetStart": 21, "offsetEnd": 33}, "context": "The cardinality of a SourceAccess is estimated using: (i) statistics on the views (e.g., number of tuples, or JSON trees, their average size, etc.); these are gathered at view materialization time, together with the minimum, maximum, and number of distinct values for finegranularity attributes; (ii) default constant factors for inequalities or keyword search.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9994446039199829}, "created": {"value": false, "score": 2.3245811462402344e-06}, "shared": {"value": false, "score": 6.556510925292969e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999899685382843}, "created": {"value": true, "score": 0.5437822341918945}, "shared": {"value": false, "score": 1.1324882507324219e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ESTOCADA", "normalizedForm": "ESTOCADA", "offsetStart": 22, "offsetEnd": 30}, "context": "As mentioned earlier, ESTOCADA polystore engine and Big-DAWG differ in terms of multi-store join evaluation strategies, leading to different performance variations when the queries and/or views change. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0014400482177734375}, "created": {"value": false, "score": 1.9371509552001953e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999691843986511}, "created": {"value": true, "score": 0.9999369978904724}, "shared": {"value": false, "score": 1.4901161193847656e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q1165204", "wikipediaExternalRef": 21855450, "lang": "en", "confidence": 0.7501, "software-name": {"rawForm": "MongoDB", "normalizedForm": "MongoDB", "wikidataId": "Q1165204", "wikipediaExternalRef": 21855450, "lang": "en", "confidence": 0.7501, "offsetStart": 23, "offsetEnd": 30}, "context": "We note that: (i) each MongoDB query joins three materialized views; the required use of the $unwind (a.k.a.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9976148009300232}, "created": {"value": false, "score": 8.404254913330078e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999424815177917}, "created": {"value": false, "score": 0.004765987396240234}, "shared": {"value": false, "score": 2.1457672119140625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SparkSQL", "normalizedForm": "SparkSQL", "offsetStart": 24, "offsetEnd": 32}, "version": {"rawForm": "2.3.2", "normalizedForm": "2.3.2"}, "context": "The usage of AsterixDB, SparkSQL and MongoDB is detailed below.", "mentionContextAttributes": {"used": {"value": false, "score": 0.009535789489746094}, "created": {"value": false, "score": 6.908178329467773e-05}, "shared": {"value": false, "score": 6.556510925292969e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998550415039062}, "created": {"value": false, "score": 0.004765987396240234}, "shared": {"value": false, "score": 6.556510925292969e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ESTOCADA", "normalizedForm": "ESTOCADA", "offsetStart": 24, "offsetEnd": 32}, "context": "60% of Q Bi\u0434DAW G and Q ESTOCADA queries consist of fulltext search predicates, which are not highly selective (e.g., \"low blood pressure\").", "mentionContextAttributes": {"used": {"value": false, "score": 0.14489519596099854}, "created": {"value": false, "score": 2.4974346160888672e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999691843986511}, "created": {"value": true, "score": 0.9999369978904724}, "shared": {"value": false, "score": 1.4901161193847656e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "BigDAWG", "normalizedForm": "BigDAWG", "offsetStart": 25, "offsetEnd": 32}, "context": "Appendix J illustrates a BigDAWG query. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.013911128044128418}, "created": {"value": false, "score": 6.377696990966797e-06}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9984321594238281}, "created": {"value": false, "score": 0.33604854345321655}, "shared": {"value": false, "score": 8.940696716308594e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "software-name": {"rawForm": "Postgres", "normalizedForm": "Postgres", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "offsetStart": 25, "offsetEnd": 33}, "version": {"rawForm": "9.6", "normalizedForm": "9.6"}, "context": "Further, consider that a Postgres server stores a view V 2 with the patients meta-data information and their hospital admission information such as admission time and patients' location prior to admission. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.001103520393371582}, "created": {"value": false, "score": 1.2099742889404297e-05}, "shared": {"value": false, "score": 6.556510925292969e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999645352363586}, "created": {"value": false, "score": 0.08293437957763672}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[4]", "normalizedForm": "[4]", "refKey": 4}, {"label": "[4]", "normalizedForm": "[4]", "refKey": 4}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ESTOCADA", "normalizedForm": "ESTOCADA", "offsetStart": 27, "offsetEnd": 35}, "context": "We study the benefits that ESTOCADA can bring to an existing polystore system by transparently rewriting queries using materialized views stored across different stores. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00010591745376586914}, "created": {"value": false, "score": 0.1274583339691162}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999691843986511}, "created": {"value": true, "score": 0.9999369978904724}, "shared": {"value": false, "score": 1.4901161193847656e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ESTOCADA", "normalizedForm": "ESTOCADA", "offsetStart": 28, "offsetEnd": 36}, "context": "Since many of the languages ESTOCADA supports allow for nested queries and functions (user-defined or built-in such as aggregates), our pivot language Query Block Trees (QBTs) also supports these features. ", "mentionContextAttributes": {"used": {"value": false, "score": 3.629922866821289e-05}, "created": {"value": false, "score": 0.07325667142868042}, "shared": {"value": false, "score": 1.4901161193847656e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999691843986511}, "created": {"value": true, "score": 0.9999369978904724}, "shared": {"value": false, "score": 1.4901161193847656e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "software-name": {"rawForm": "Postgres", "normalizedForm": "Postgres", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "offsetStart": 28, "offsetEnd": 36}, "version": {"rawForm": "9.6", "normalizedForm": "9.6"}, "context": "In single-store evaluation, Postgres is more efficient; this is why we chose it to store V P ost\u0434r es J SO N .", "mentionContextAttributes": {"used": {"value": false, "score": 0.0021855831146240234}, "created": {"value": false, "score": 1.233816146850586e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999645352363586}, "created": {"value": false, "score": 0.08293437957763672}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[4]", "normalizedForm": "[4]", "refKey": 4}, {"label": "[4]", "normalizedForm": "[4]", "refKey": 4}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ESTOCADA", "normalizedForm": "ESTOCADA", "offsetStart": 30, "offsetEnd": 38}, "context": "We study the effectiveness of ESTOCADA cross-store query rewriting: (i) compared to single-store query evaluation (Section 8.1.1); ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999054074287415}, "created": {"value": false, "score": 5.543231964111328e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999691843986511}, "created": {"value": true, "score": 0.9999369978904724}, "shared": {"value": false, "score": 1.4901161193847656e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q1165204", "wikipediaExternalRef": 21855450, "lang": "en", "confidence": 0.7501, "software-name": {"rawForm": "MongoDB", "normalizedForm": "MongoDB", "wikidataId": "Q1165204", "wikipediaExternalRef": 21855450, "lang": "en", "confidence": 0.7501, "offsetStart": 31, "offsetEnd": 38}, "context": "plain JSON query evaluation in MongoDB and Postgres, respectively.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999424815177917}, "created": {"value": false, "score": 3.516674041748047e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999424815177917}, "created": {"value": false, "score": 0.004765987396240234}, "shared": {"value": false, "score": 2.1457672119140625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SparkSQL", "normalizedForm": "SparkSQL", "offsetStart": 31, "offsetEnd": 39}, "version": {"rawForm": "2.3.2", "normalizedForm": "2.3.2"}, "context": "plain JSON query evaluation in SparkSQL and AsterixDB.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9998550415039062}, "created": {"value": false, "score": 6.139278411865234e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998550415039062}, "created": {"value": false, "score": 0.004765987396240234}, "shared": {"value": false, "score": 6.556510925292969e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CloudMdsQL", "normalizedForm": "CloudMdsQL", "offsetStart": 32, "offsetEnd": 42}, "context": "The polystore engine supporting CloudMdsQL does not feature our cross-model view-based query rewriting functionality.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0008394122123718262}, "created": {"value": false, "score": 0.0018998980522155762}, "shared": {"value": false, "score": 7.748603820800781e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00899040699005127}, "created": {"value": false, "score": 0.0018998980522155762}, "shared": {"value": false, "score": 7.748603820800781e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Aster-ixDB", "normalizedForm": "Aster-ixDB", "offsetStart": 34, "offsetEnd": 48}, "version": {"rawForm": "9.4", "normalizedForm": "9.4", "offsetStart": 58, "offsetEnd": 61}, "context": "Evaluating this query through the Aster-ixDB [2] (Version 9.4) JSON store took more than 25 minutes; this is because the system does not support full-text search by an index if the text occurs within a JSON array. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9988312125205994}, "created": {"value": false, "score": 1.0669231414794922e-05}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9988312125205994}, "created": {"value": false, "score": 1.0669231414794922e-05}, "shared": {"value": false, "score": 5.364418029785156e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Bi\u0434DAW G", "normalizedForm": "Bi\u0434DAW G", "offsetStart": 36, "offsetEnd": 44}, "context": "In contrast, the remaining 40% of Q Bi\u0434DAW G and Q ESTOCADA Polystor e queries have highly selective full-text search predicates (we refer to these as queries Q 40% Bi\u0434DAW G and Q 40%", "mentionContextAttributes": {"used": {"value": false, "score": 0.1730218529701233}, "created": {"value": false, "score": 2.3245811462402344e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999226927757263}, "created": {"value": false, "score": 0.0029408931732177734}, "shared": {"value": false, "score": 5.364418029785156e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q1165204", "wikipediaExternalRef": 21855450, "lang": "en", "confidence": 0.7501, "software-name": {"rawForm": "MongoDB", "normalizedForm": "MongoDB", "wikidataId": "Q1165204", "wikipediaExternalRef": 21855450, "lang": "en", "confidence": 0.7501, "offsetStart": 37, "offsetEnd": 44}, "context": "The usage of AsterixDB, SparkSQL and MongoDB is detailed below.", "mentionContextAttributes": {"used": {"value": false, "score": 0.009535789489746094}, "created": {"value": false, "score": 6.908178329467773e-05}, "shared": {"value": false, "score": 6.556510925292969e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999424815177917}, "created": {"value": false, "score": 0.004765987396240234}, "shared": {"value": false, "score": 2.1457672119140625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ESTOCADA", "normalizedForm": "ESTOCADA", "offsetStart": 40, "offsetEnd": 48}, "context": "For our main polystore setting (called \"ESTOCADA polystore engine\" hereafter) we use [10] as a lightweight execution engine and a set of data stores, selected for their capabilities and popularity: an RDBMS (Postgres v9.6), JSON document stores (Postgres v9.6, MongoDB v4.0.2) and AsterixDB v4.9, SparkSQL v2.3.2 and a text search engine (Solr v6.1).", "mentionContextAttributes": {"used": {"value": true, "score": 0.5104551911354065}, "created": {"value": false, "score": 5.424022674560547e-06}, "shared": {"value": false, "score": 6.556510925292969e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999691843986511}, "created": {"value": true, "score": 0.9999369978904724}, "shared": {"value": false, "score": 1.4901161193847656e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ESTOCADA Polystor", "normalizedForm": "ESTOCADA Polystor", "offsetStart": 40, "offsetEnd": 57}, "context": "On the queries Q 60% Bi\u0434DAW G and Q 60% ESTOCADA Polystor e , where the full-text search predicates are not very selective, Big-DAWG execution time is dominated by moving partial results to the join server. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.8513463139533997}, "created": {"value": false, "score": 2.4437904357910156e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.8513463139533997}, "created": {"value": false, "score": 9.000301361083984e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "software-name": {"rawForm": "Postgres", "normalizedForm": "Postgres", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "offsetStart": 43, "offsetEnd": 51}, "version": {"rawForm": "9.6", "normalizedForm": "9.6"}, "context": "plain JSON query evaluation in MongoDB and Postgres, respectively.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999424815177917}, "created": {"value": false, "score": 3.516674041748047e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999645352363586}, "created": {"value": false, "score": 0.08293437957763672}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[4]", "normalizedForm": "[4]", "refKey": 4}, {"label": "[4]", "normalizedForm": "[4]", "refKey": 4}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "BigDAWG", "normalizedForm": "BigDAWG", "offsetStart": 45, "offsetEnd": 52}, "context": "We observed that the cost of such queries in BigDAWG is dominated by moving and ingesting the results of Solr queries in Postgres (relational instance) to join them with the results of other sub-queries. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9981449842453003}, "created": {"value": false, "score": 8.881092071533203e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9984321594238281}, "created": {"value": false, "score": 0.33604854345321655}, "shared": {"value": false, "score": 8.940696716308594e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "software-name": {"rawForm": "Postgres", "normalizedForm": "Postgres", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "offsetStart": 46, "offsetEnd": 54}, "version": {"rawForm": "9.6", "normalizedForm": "9.6"}, "context": "Also, below, PJ and RK stand respectively for Postgres' JSON query language, and for a simple declarative key-value query language we designed for Redis.", "mentionContextAttributes": {"used": {"value": false, "score": 0.14824599027633667}, "created": {"value": false, "score": 0.006875276565551758}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999645352363586}, "created": {"value": false, "score": 0.08293437957763672}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[4]", "normalizedForm": "[4]", "refKey": 4}, {"label": "[4]", "normalizedForm": "[4]", "refKey": 4}]}, {"type": "software", "software-type": "software", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "software-name": {"rawForm": "Postgres", "normalizedForm": "Postgres", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "offsetStart": 47, "offsetEnd": 55}, "version": {"rawForm": "9.6", "normalizedForm": "9.6"}, "context": "On top of view-based performance improvements, Postgres exploits more choices of join order and algorithms.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0001277923583984375}, "created": {"value": false, "score": 0.0003261566162109375}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999645352363586}, "created": {"value": false, "score": 0.08293437957763672}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[4]", "normalizedForm": "[4]", "refKey": 4}, {"label": "[4]", "normalizedForm": "[4]", "refKey": 4}]}, {"type": "software", "software-type": "software", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "software-name": {"rawForm": "Postgres", "normalizedForm": "Postgres", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "offsetStart": 51, "offsetEnd": 59}, "version": {"rawForm": "9.6", "normalizedForm": "9.6"}, "context": "To alleviate this overhead, we materialized in the Postgres server storing JSON a set of 6 views V N EW , which join the data from Solr (using those full-text predicates in the views definitions) with JSON data from the Postgres JSON server.", "mentionContextAttributes": {"used": {"value": true, "score": 0.999207079410553}, "created": {"value": false, "score": 3.260374069213867e-05}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999645352363586}, "created": {"value": false, "score": 0.08293437957763672}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[4]", "normalizedForm": "[4]", "refKey": 4}, {"label": "[4]", "normalizedForm": "[4]", "refKey": 4}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ESTOCADA", "normalizedForm": "ESTOCADA", "offsetStart": 51, "offsetEnd": 59}, "context": "In contrast, the remaining 40% of Q Bi\u0434DAW G and Q ESTOCADA Polystor e queries have highly selective full-text search predicates (we refer to these as queries Q 40% Bi\u0434DAW G and Q 40%", "mentionContextAttributes": {"used": {"value": false, "score": 0.1730218529701233}, "created": {"value": false, "score": 2.3245811462402344e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999691843986511}, "created": {"value": true, "score": 0.9999369978904724}, "shared": {"value": false, "score": 1.4901161193847656e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Big-DAWG", "normalizedForm": "Big-DAWG", "offsetStart": 52, "offsetEnd": 60}, "context": "As mentioned earlier, ESTOCADA polystore engine and Big-DAWG differ in terms of multi-store join evaluation strategies, leading to different performance variations when the queries and/or views change. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0014400482177734375}, "created": {"value": false, "score": 1.9371509552001953e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.8513463139533997}, "created": {"value": false, "score": 1.9371509552001953e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q1165204", "wikipediaExternalRef": 21855450, "lang": "en", "confidence": 0.7501, "software-name": {"rawForm": "MongoDB", "normalizedForm": "MongoDB", "wikidataId": "Q1165204", "wikipediaExternalRef": 21855450, "lang": "en", "confidence": 0.7501, "offsetStart": 55, "offsetEnd": 62}, "context": "To that purpose, we stored all V EX P views in each of MongoDB, AsterixDB, SparkSQL and Postgres.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9987581968307495}, "created": {"value": false, "score": 0.004765987396240234}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999424815177917}, "created": {"value": false, "score": 0.004765987396240234}, "shared": {"value": false, "score": 2.1457672119140625e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "software-name": {"rawForm": "Postgres", "normalizedForm": "Postgres", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "offsetStart": 57, "offsetEnd": 65}, "version": {"rawForm": "9.6", "normalizedForm": "9.6"}, "context": "Finally, in PostgreSQL with JSON support (v9.6), denoted Postgres in the sequel, Q 1 took 12.6 minutes. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999645352363586}, "created": {"value": false, "score": 2.9206275939941406e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999645352363586}, "created": {"value": false, "score": 0.08293437957763672}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[4]", "normalizedForm": "[4]", "refKey": 4}, {"label": "[4]", "normalizedForm": "[4]", "refKey": 4}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ESTOCADA", "normalizedForm": "ESTOCADA", "offsetStart": 58, "offsetEnd": 66}, "context": "Our pivot model recalls the ones described in [16,41] but ESTOCADA generalizes these works by allowing multiple data models both at the application and storage level.", "mentionContextAttributes": {"used": {"value": false, "score": 9.530782699584961e-05}, "created": {"value": false, "score": 0.010844588279724121}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999691843986511}, "created": {"value": true, "score": 0.9999369978904724}, "shared": {"value": false, "score": 1.4901161193847656e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "software-name": {"rawForm": "Postgres", "normalizedForm": "Postgres", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "offsetStart": 62, "offsetEnd": 70}, "version": {"rawForm": "9.6", "normalizedForm": "9.6"}, "context": "For 40% of the queries, single-store view-based evaluation in Postgres outperforms cross-model evaluation, which is the most efficient for 60% of the queries. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.6948142647743225}, "created": {"value": false, "score": 4.07099723815918e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999645352363586}, "created": {"value": false, "score": 0.08293437957763672}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[4]", "normalizedForm": "[4]", "refKey": 4}, {"label": "[4]", "normalizedForm": "[4]", "refKey": 4}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "BigDAWG", "normalizedForm": "BigDAWG", "offsetStart": 63, "offsetEnd": 70}, "context": "The main difference between our ESTO-CADA polystore engine and BigDAWG is that we join subquery results in the mediator using a BindJoin [48], whereas BigDAWG migrates such results to an island capable of performing the join (typically, a relational one).", "mentionContextAttributes": {"used": {"value": false, "score": 0.0008910894393920898}, "created": {"value": false, "score": 0.000278472900390625}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9984321594238281}, "created": {"value": false, "score": 0.33604854345321655}, "shared": {"value": false, "score": 8.940696716308594e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ESTOCADA", "normalizedForm": "ESTOCADA", "offsetStart": 64, "offsetEnd": 72}, "context": "First, not every data model/query language setting supported in ESTOCADA comes with a known view-based query rewriting (VBQR, in short) algorithm: consider key-value pairs as data model and declarative languages over them, or JSON data and its query languages in circulation, etc. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.003959238529205322}, "created": {"value": false, "score": 5.900859832763672e-06}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999691843986511}, "created": {"value": true, "score": 0.9999369978904724}, "shared": {"value": false, "score": 1.4901161193847656e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SOLR", "normalizedForm": "SOLR", "offsetStart": 66, "offsetEnd": 70}, "context": "In fact, exploiting the different strengths of each system (e.g., SOLR's text search, Postgres' efficient join algorithms, etc.) is the second reason (together with materialized view usage) for our performance gains.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0007520914077758789}, "created": {"value": false, "score": 0.00031816959381103516}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0007520914077758789}, "created": {"value": false, "score": 0.006009936332702637}, "shared": {"value": false, "score": 7.748603820800781e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "BigDAWG", "normalizedForm": "BigDAWG", "offsetStart": 66, "offsetEnd": 78}, "context": "(ii) improving performance in the pre-existing polystore engines: BigDAWG [18] and ESTOCADA polystore engine (Section 8.1.2). 8.1.1 ", "mentionContextAttributes": {"used": {"value": false, "score": 0.015575826168060303}, "created": {"value": false, "score": 1.2934207916259766e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9984321594238281}, "created": {"value": false, "score": 0.33604854345321655}, "shared": {"value": false, "score": 8.940696716308594e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ESTOCADA", "normalizedForm": "ESTOCADA", "offsetStart": 71, "offsetEnd": 79}, "context": "Note that Postgres benefits from the view-based rewriting algorithm of ESTOCADA here. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.007247567176818848}, "created": {"value": false, "score": 3.319978713989258e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999691843986511}, "created": {"value": true, "score": 0.9999369978904724}, "shared": {"value": false, "score": 1.4901161193847656e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ESTOCADA", "normalizedForm": "ESTOCADA", "offsetStart": 73, "offsetEnd": 81}, "context": "Our experiments illustrate the significant performance gains achieved by ESTOCADA.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999691843986511}, "created": {"value": false, "score": 0.38175034523010254}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999691843986511}, "created": {"value": true, "score": 0.9999369978904724}, "shared": {"value": false, "score": 1.4901161193847656e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "software-name": {"rawForm": "Postgres", "normalizedForm": "Postgres", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "offsetStart": 74, "offsetEnd": 82}, "version": {"rawForm": "9.6", "normalizedForm": "9.6"}, "context": "For instance, query Q 25 has 5 unnest operators whereas query Q 17 has 2. Postgres outperforms MongoDB because the latter lacks join-reordering optimization, and it does not natively support inner joins. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00045794248580932617}, "created": {"value": false, "score": 3.904104232788086e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999645352363586}, "created": {"value": false, "score": 0.08293437957763672}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[4]", "normalizedForm": "[4]", "refKey": 4}, {"label": "[4]", "normalizedForm": "[4]", "refKey": 4}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ESTOCADA P", "normalizedForm": "ESTOCADA P", "offsetStart": 74, "offsetEnd": 84}, "context": "We have the same set of queries in QBT XM syntax; we call these queries Q ESTOCADA P olyst or e .", "mentionContextAttributes": {"used": {"value": true, "score": 0.8006194233894348}, "created": {"value": false, "score": 1.4722347259521484e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.8006194233894348}, "created": {"value": false, "score": 1.4722347259521484e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "software-name": {"rawForm": "Postgres", "normalizedForm": "Postgres", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "offsetStart": 75, "offsetEnd": 83}, "version": {"rawForm": "9.6", "normalizedForm": "9.6"}, "context": "BigDAWG supports islands for relational, array and text data, based on the Postgres, SciDB [4] and Apache Accumulo [1] stores, respectively.", "mentionContextAttributes": {"used": {"value": false, "score": 5.906820297241211e-05}, "created": {"value": false, "score": 1.8417835235595703e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999645352363586}, "created": {"value": false, "score": 0.08293437957763672}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[4]", "normalizedForm": "[4]", "refKey": 4, "offsetStart": 54764, "offsetEnd": 54767}, {"label": "[4]", "normalizedForm": "[4]", "refKey": 4, "offsetStart": 54764, "offsetEnd": 54767}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SparkSQL", "normalizedForm": "SparkSQL", "offsetStart": 75, "offsetEnd": 83}, "version": {"rawForm": "2.3.2", "normalizedForm": "2.3.2"}, "context": "To that purpose, we stored all V EX P views in each of MongoDB, AsterixDB, SparkSQL and Postgres.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9987581968307495}, "created": {"value": false, "score": 0.004765987396240234}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998550415039062}, "created": {"value": false, "score": 0.004765987396240234}, "shared": {"value": false, "score": 6.556510925292969e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "BindJoin", "normalizedForm": "BindJoin", "offsetStart": 76, "offsetEnd": 89}, "context": "Now, we are able to evaluate Q 1 by a full-text search on V 1 followed by a BindJoin [48] with the result of filtering V 3 , and projecting prescribed drugs as well as patients' admission time and prior location from V 2 . ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999896883964539}, "created": {"value": false, "score": 9.953975677490234e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999896883964539}, "created": {"value": false, "score": 0.000278472900390625}, "shared": {"value": false, "score": 2.980232238769531e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SourceAccess", "normalizedForm": "SourceAccess", "offsetStart": 79, "offsetEnd": 91}, "context": "Optimization develops left-deep join plans in a bottom-up fashion based on the SourceAccess operators.", "mentionContextAttributes": {"used": {"value": false, "score": 4.488229751586914e-05}, "created": {"value": true, "score": 0.5437822341918945}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999899685382843}, "created": {"value": true, "score": 0.5437822341918945}, "shared": {"value": false, "score": 1.1324882507324219e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "BigDAWG", "normalizedForm": "BigDAWG", "offsetStart": 80, "offsetEnd": 87}, "context": "For the other 40% of queries (with very selective full-text search predicates), BigDAWG data movement cost is negligible, thus its evaluation time is dominated by evaluating the join between sub-queries results in the Postgres relational island, where join algorithms and orders may be better chosen than in the ESTOCADA polystore engine (the two platform support different sets of join algorithms). ", "mentionContextAttributes": {"used": {"value": false, "score": 0.1867375373840332}, "created": {"value": false, "score": 2.682209014892578e-06}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9984321594238281}, "created": {"value": false, "score": 0.33604854345321655}, "shared": {"value": false, "score": 8.940696716308594e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q2858103", "wikipediaExternalRef": 10443665, "lang": "en", "confidence": 0.7618, "software-name": {"rawForm": "Solr", "normalizedForm": "Solr", "wikidataId": "Q2858103", "wikipediaExternalRef": 10443665, "lang": "en", "confidence": 0.7618, "offsetStart": 81, "offsetEnd": 85}, "version": {"rawForm": "6.1", "normalizedForm": "6.1"}, "context": "To work with BigDAWG, we extended it with two new CAST operators: (i) to migrate Solr query results to Postgres; (ii) to migrate Postgres JSON query results to a Postgres relational instance and vice-versa.", "mentionContextAttributes": {"used": {"value": false, "score": 0.3405839800834656}, "created": {"value": false, "score": 0.08293437957763672}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999989926815033}, "created": {"value": false, "score": 0.08293437957763672}, "shared": {"value": false, "score": 4.410743713378906e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "software-name": {"rawForm": "Postgres", "normalizedForm": "Postgres", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "offsetStart": 81, "offsetEnd": 89}, "version": {"rawForm": "9.6", "normalizedForm": "9.6"}, "context": "We store the MIMIC-III dataset (in both systems) as follows: patient metadata in Postgres relational instance; caregivers' reports in Solr; patients' lab events, prescriptions, microbiology events, and procedures information in the Postgres JSON instance.", "mentionContextAttributes": {"used": {"value": true, "score": 0.7718170881271362}, "created": {"value": false, "score": 2.1755695343017578e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999645352363586}, "created": {"value": false, "score": 0.08293437957763672}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[4]", "normalizedForm": "[4]", "refKey": 4}, {"label": "[4]", "normalizedForm": "[4]", "refKey": 4}]}, {"type": "software", "software-type": "software", "wikidataId": "Q2858103", "wikipediaExternalRef": 10443665, "lang": "en", "confidence": 0.7618, "software-name": {"rawForm": "Solr", "normalizedForm": "Solr", "wikidataId": "Q2858103", "wikipediaExternalRef": 10443665, "lang": "en", "confidence": 0.7618, "offsetStart": 83, "offsetEnd": 87}, "version": {"rawForm": "6.1", "normalizedForm": "6.1"}, "context": "The performance saving is due to the fact that we no longer have to move data from Solr to a relational Postgres instance (see Figure 10 for queries labeled *).", "mentionContextAttributes": {"used": {"value": false, "score": 0.04401588439941406}, "created": {"value": false, "score": 3.129243850708008e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999989926815033}, "created": {"value": false, "score": 0.08293437957763672}, "shared": {"value": false, "score": 4.410743713378906e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q2858103", "wikipediaExternalRef": 10443665, "lang": "en", "confidence": 0.7618, "software-name": {"rawForm": "Solr", "normalizedForm": "Solr", "wikidataId": "Q2858103", "wikipediaExternalRef": 10443665, "lang": "en", "confidence": 0.7618, "offsetStart": 83, "offsetEnd": 87}, "version": {"rawForm": "6.1", "normalizedForm": "6.1"}, "context": "The high selectivity of these queries reduces the overhead of moving the data from Solr to Postgres (relational instance) in BigDAWG, and in general the data movement is not a bottleneck for these queries.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0024747848510742188}, "created": {"value": false, "score": 4.035234451293945e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999989926815033}, "created": {"value": false, "score": 0.08293437957763672}, "shared": {"value": false, "score": 4.410743713378906e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ESTOCADA", "normalizedForm": "ESTOCADA", "offsetStart": 83, "offsetEnd": 91}, "context": "(ii) improving performance in the pre-existing polystore engines: BigDAWG [18] and ESTOCADA polystore engine (Section 8.1.2). 8.1.1 ", "mentionContextAttributes": {"used": {"value": false, "score": 0.015575826168060303}, "created": {"value": false, "score": 1.2934207916259766e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999691843986511}, "created": {"value": true, "score": 0.9999369978904724}, "shared": {"value": false, "score": 1.4901161193847656e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "software-name": {"rawForm": "Postgres", "normalizedForm": "Postgres", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "offsetStart": 84, "offsetEnd": 92}, "version": {"rawForm": "1", "normalizedForm": "1", "offsetStart": 170, "offsetEnd": 171}, "context": "We used two polystore engines: (i) ESTO-CADA polystore engine instantiated with two Postgres servers (one stores relational data while the other stores JSON) and Solr v6.1 for storing text; (ii) the latest release of the BigDAWG polystore. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9984321594238281}, "created": {"value": false, "score": 2.562999725341797e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999645352363586}, "created": {"value": false, "score": 0.08293437957763672}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[4]", "normalizedForm": "[4]", "refKey": 4}, {"label": "[4]", "normalizedForm": "[4]", "refKey": 4}]}, {"type": "software", "software-type": "software", "wikidataId": "Q1165204", "wikipediaExternalRef": 21855450, "lang": "en", "confidence": 0.7501, "software-name": {"rawForm": "MongoDB", "normalizedForm": "MongoDB", "wikidataId": "Q1165204", "wikipediaExternalRef": 21855450, "lang": "en", "confidence": 0.7501, "offsetStart": 86, "offsetEnd": 93}, "context": "The same model may be associated to several query languages; for instance, AsterixDB, MongoDB and Postgres have different query languages for JSON.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00017333030700683594}, "created": {"value": false, "score": 8.195638656616211e-05}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999424815177917}, "created": {"value": false, "score": 0.004765987396240234}, "shared": {"value": false, "score": 2.1457672119140625e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "software-name": {"rawForm": "Postgres", "normalizedForm": "Postgres", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "offsetStart": 86, "offsetEnd": 94}, "version": {"rawForm": "9.6", "normalizedForm": "9.6"}, "context": "In fact, exploiting the different strengths of each system (e.g., SOLR's text search, Postgres' efficient join algorithms, etc.) is the second reason (together with materialized view usage) for our performance gains.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0007520914077758789}, "created": {"value": false, "score": 0.00031816959381103516}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999645352363586}, "created": {"value": false, "score": 0.08293437957763672}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[4]", "normalizedForm": "[4]", "refKey": 4}, {"label": "[4]", "normalizedForm": "[4]", "refKey": 4}]}, {"type": "software", "software-type": "software", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "software-name": {"rawForm": "Postgres", "normalizedForm": "Postgres", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "offsetStart": 88, "offsetEnd": 96}, "version": {"rawForm": "9.6", "normalizedForm": "9.6"}, "context": "To that purpose, we stored all V EX P views in each of MongoDB, AsterixDB, SparkSQL and Postgres. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9987581968307495}, "created": {"value": false, "score": 0.004765987396240234}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999645352363586}, "created": {"value": false, "score": 0.08293437957763672}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[4]", "normalizedForm": "[4]", "refKey": 4}, {"label": "[4]", "normalizedForm": "[4]", "refKey": 4}]}, {"type": "software", "software-type": "software", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "software-name": {"rawForm": "Postgres", "normalizedForm": "Postgres", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "offsetStart": 91, "offsetEnd": 99}, "version": {"rawForm": "9.6", "normalizedForm": "9.6"}, "context": "The high selectivity of these queries reduces the overhead of moving the data from Solr to Postgres (relational instance) in BigDAWG, and in general the data movement is not a bottleneck for these queries. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0024747848510742188}, "created": {"value": false, "score": 4.035234451293945e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999645352363586}, "created": {"value": false, "score": 0.08293437957763672}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[4]", "normalizedForm": "[4]", "refKey": 4}, {"label": "[4]", "normalizedForm": "[4]", "refKey": 4}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "BigDAWG", "normalizedForm": "BigDAWG", "offsetStart": 92, "offsetEnd": 99}, "context": ", Q 29 in BigDAWG syntax, referring to each part of the data from its respective island (as BigDAWG requires); we refer to the resulting query set as Q Bi\u0434DAW G . ", "mentionContextAttributes": {"used": {"value": true, "score": 0.7072028517723083}, "created": {"value": false, "score": 6.377696990966797e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9984321594238281}, "created": {"value": false, "score": 0.33604854345321655}, "shared": {"value": false, "score": 8.940696716308594e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "software-name": {"rawForm": "Postgres", "normalizedForm": "Postgres", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "offsetStart": 93, "offsetEnd": 101}, "version": {"rawForm": "9.6", "normalizedForm": "9.6"}, "context": "The annotations AJ, PR and SJ stand for the SQL++ language of AsterixDB and the languages of Postgres and Solr, respectively. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9799351096153259}, "created": {"value": false, "score": 1.1861324310302734e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999645352363586}, "created": {"value": false, "score": 0.08293437957763672}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[4]", "normalizedForm": "[4]", "refKey": 4}, {"label": "[4]", "normalizedForm": "[4]", "refKey": 4}]}, {"type": "software", "software-type": "software", "wikidataId": "Q1165204", "wikipediaExternalRef": 21855450, "lang": "en", "confidence": 0.7501, "software-name": {"rawForm": "MongoDB", "normalizedForm": "MongoDB", "wikidataId": "Q1165204", "wikipediaExternalRef": 21855450, "lang": "en", "confidence": 0.7501, "offsetStart": 95, "offsetEnd": 102}, "context": "For instance, query Q 25 has 5 unnest operators whereas query Q 17 has 2. Postgres outperforms MongoDB because the latter lacks join-reordering optimization, and it does not natively support inner joins. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00045794248580932617}, "created": {"value": false, "score": 3.904104232788086e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999424815177917}, "created": {"value": false, "score": 0.004765987396240234}, "shared": {"value": false, "score": 2.1457672119140625e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q1165204", "wikipediaExternalRef": 21855450, "lang": "en", "confidence": 0.7501, "software-name": {"rawForm": "MongoDB", "normalizedForm": "MongoDB", "wikidataId": "Q1165204", "wikipediaExternalRef": 21855450, "lang": "en", "confidence": 0.7501, "offsetStart": 96, "offsetEnd": 103}, "context": "As shown in Figure 12, multi-store evaluation outperforms single-store evaluation with views in MongoDB.", "mentionContextAttributes": {"used": {"value": false, "score": 0.03928029537200928}, "created": {"value": false, "score": 2.6285648345947266e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999424815177917}, "created": {"value": false, "score": 0.004765987396240234}, "shared": {"value": false, "score": 2.1457672119140625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "BigDAWG", "normalizedForm": "BigDAWG", "offsetStart": 96, "offsetEnd": 108}, "context": "Our engine can be easily replaced with another similar execution engine; we exemplify this with BigDAWG [18] in Section 8.1.2.", "mentionContextAttributes": {"used": {"value": false, "score": 8.410215377807617e-05}, "created": {"value": false, "score": 0.011072754859924316}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9984321594238281}, "created": {"value": false, "score": 0.33604854345321655}, "shared": {"value": false, "score": 8.940696716308594e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ESTOCADA", "normalizedForm": "ESTOCADA", "offsetStart": 97, "offsetEnd": 105}, "context": "Queries with Text Search Predicates. Figure 6 reports the total execution plus rewriting time of ESTOCADA using the above views for Q 01 to Q 29 , all of which feature a text search predicate against the text notes in the caregiver's report. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9889532327651978}, "created": {"value": false, "score": 9.715557098388672e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999691843986511}, "created": {"value": true, "score": 0.9999369978904724}, "shared": {"value": false, "score": 1.4901161193847656e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "software-name": {"rawForm": "Postgres", "normalizedForm": "Postgres", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "offsetStart": 98, "offsetEnd": 106}, "version": {"rawForm": "9.6", "normalizedForm": "9.6"}, "context": "The same model may be associated to several query languages; for instance, AsterixDB, MongoDB and Postgres have different query languages for JSON.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00017333030700683594}, "created": {"value": false, "score": 8.195638656616211e-05}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999645352363586}, "created": {"value": false, "score": 0.08293437957763672}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[4]", "normalizedForm": "[4]", "refKey": 4}, {"label": "[4]", "normalizedForm": "[4]", "refKey": 4}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ESTOCADA", "normalizedForm": "ESTOCADA", "offsetStart": 100, "offsetEnd": 108}, "context": "While devising cost models for polystore settings is beyond the scope of this paper, we architected ESTOCADA to take the cost model as configuration parameter.", "mentionContextAttributes": {"used": {"value": false, "score": 0.10477966070175171}, "created": {"value": true, "score": 0.9997978210449219}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999691843986511}, "created": {"value": true, "score": 0.9999369978904724}, "shared": {"value": false, "score": 1.4901161193847656e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Bi\u0434DAW G", "normalizedForm": "Bi\u0434DAW G", "offsetStart": 101, "offsetEnd": 109}, "context": "To the view set V EX P introduced above, we have added a new set of views V N EW which can benefit Q Bi\u0434DAW G and Q ESTOCADA P olyst or e queries as we detail below.", "mentionContextAttributes": {"used": {"value": false, "score": 0.005948781967163086}, "created": {"value": false, "score": 0.0029408931732177734}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999226927757263}, "created": {"value": false, "score": 0.0029408931732177734}, "shared": {"value": false, "score": 5.364418029785156e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "software-name": {"rawForm": "Postgres", "normalizedForm": "Postgres", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "offsetStart": 103, "offsetEnd": 111}, "version": {"rawForm": "9.6", "normalizedForm": "9.6"}, "context": "To work with BigDAWG, we extended it with two new CAST operators: (i) to migrate Solr query results to Postgres; (ii) to migrate Postgres JSON query results to a Postgres relational instance and vice-versa. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.3405839800834656}, "created": {"value": false, "score": 0.08293437957763672}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999645352363586}, "created": {"value": false, "score": 0.08293437957763672}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[4]", "normalizedForm": "[4]", "refKey": 4}, {"label": "[4]", "normalizedForm": "[4]", "refKey": 4}]}, {"type": "software", "software-type": "software", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "software-name": {"rawForm": "Postgres", "normalizedForm": "Postgres", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "offsetStart": 104, "offsetEnd": 112}, "version": {"rawForm": "9.6", "normalizedForm": "9.6"}, "context": "The performance saving is due to the fact that we no longer have to move data from Solr to a relational Postgres instance (see Figure 10 for queries labeled *). ", "mentionContextAttributes": {"used": {"value": false, "score": 0.04401588439941406}, "created": {"value": false, "score": 3.129243850708008e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999645352363586}, "created": {"value": false, "score": 0.08293437957763672}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[4]", "normalizedForm": "[4]", "refKey": 4}, {"label": "[4]", "normalizedForm": "[4]", "refKey": 4}]}, {"type": "software", "software-type": "software", "wikidataId": "Q2858103", "wikipediaExternalRef": 10443665, "lang": "en", "confidence": 0.7618, "software-name": {"rawForm": "Solr", "normalizedForm": "Solr", "wikidataId": "Q2858103", "wikipediaExternalRef": 10443665, "lang": "en", "confidence": 0.7618, "offsetStart": 105, "offsetEnd": 109}, "version": {"rawForm": "6.1", "normalizedForm": "6.1"}, "context": "We observed that the cost of such queries in BigDAWG is dominated by moving and ingesting the results of Solr queries in Postgres (relational instance) to join them with the results of other sub-queries.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9981449842453003}, "created": {"value": false, "score": 8.881092071533203e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999989926815033}, "created": {"value": false, "score": 0.08293437957763672}, "shared": {"value": false, "score": 4.410743713378906e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q2858103", "wikipediaExternalRef": 10443665, "lang": "en", "confidence": 0.7618, "software-name": {"rawForm": "Solr", "normalizedForm": "Solr", "wikidataId": "Q2858103", "wikipediaExternalRef": 10443665, "lang": "en", "confidence": 0.7618, "offsetStart": 106, "offsetEnd": 110}, "version": {"rawForm": "6.1", "normalizedForm": "6.1"}, "context": "The annotations AJ, PR and SJ stand for the SQL++ language of AsterixDB and the languages of Postgres and Solr, respectively.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9799351096153259}, "created": {"value": false, "score": 1.1861324310302734e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999989926815033}, "created": {"value": false, "score": 0.08293437957763672}, "shared": {"value": false, "score": 4.410743713378906e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SparkSQL", "normalizedForm": "SparkSQL", "offsetStart": 107, "offsetEnd": 115}, "version": {"rawForm": "2.3.2", "normalizedForm": "2.3.2"}, "context": "In this setting, AsterixDB failed with an internal error (ArrayIndexOutOfBoundsException is thrown), while SparkSQL still timed out since it has no full-text index support. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9922850728034973}, "created": {"value": false, "score": 4.827976226806641e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998550415039062}, "created": {"value": false, "score": 0.004765987396240234}, "shared": {"value": false, "score": 6.556510925292969e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ESTOCADA", "normalizedForm": "ESTOCADA", "offsetStart": 116, "offsetEnd": 124}, "context": "To the view set V EX P introduced above, we have added a new set of views V N EW which can benefit Q Bi\u0434DAW G and Q ESTOCADA P olyst or e queries as we detail below.", "mentionContextAttributes": {"used": {"value": false, "score": 0.005948781967163086}, "created": {"value": false, "score": 0.0029408931732177734}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999691843986511}, "created": {"value": true, "score": 0.9999369978904724}, "shared": {"value": false, "score": 1.4901161193847656e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "software-name": {"rawForm": "Postgres", "normalizedForm": "Postgres", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "offsetStart": 121, "offsetEnd": 129}, "version": {"rawForm": "9.6", "normalizedForm": "9.6"}, "context": "We observed that the cost of such queries in BigDAWG is dominated by moving and ingesting the results of Solr queries in Postgres (relational instance) to join them with the results of other sub-queries. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9981449842453003}, "created": {"value": false, "score": 8.881092071533203e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999645352363586}, "created": {"value": false, "score": 0.08293437957763672}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[4]", "normalizedForm": "[4]", "refKey": 4}, {"label": "[4]", "normalizedForm": "[4]", "refKey": 4}]}, {"type": "software", "software-type": "software", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "software-name": {"rawForm": "Postgres", "normalizedForm": "Postgres", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "offsetStart": 123, "offsetEnd": 131}, "version": {"rawForm": "9.6", "normalizedForm": "9.6"}, "context": "We performed experiments showing that cross-model evaluation is more efficient than view-based single-store evaluation: on Postgres, for most of our queries; for the other systems, for all our queries. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9997526407241821}, "created": {"value": false, "score": 0.05741560459136963}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999645352363586}, "created": {"value": false, "score": 0.08293437957763672}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[4]", "normalizedForm": "[4]", "refKey": 4}, {"label": "[4]", "normalizedForm": "[4]", "refKey": 4}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ESTOCADA", "normalizedForm": "ESTOCADA", "offsetStart": 123, "offsetEnd": 131}, "context": "Our interpretation of the key-value pairs model is compatible with many current systems, in particular Redis, supported by ESTOCADA.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0002574920654296875}, "created": {"value": true, "score": 0.71864914894104}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999691843986511}, "created": {"value": true, "score": 0.9999369978904724}, "shared": {"value": false, "score": 1.4901161193847656e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Big-DAWG", "normalizedForm": "Big-DAWG", "offsetStart": 124, "offsetEnd": 132}, "context": "On the queries Q 60% Bi\u0434DAW G and Q 60% ESTOCADA Polystor e , where the full-text search predicates are not very selective, Big-DAWG execution time is dominated by moving partial results to the join server. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.8513463139533997}, "created": {"value": false, "score": 2.4437904357910156e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.8513463139533997}, "created": {"value": false, "score": 1.9371509552001953e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "BigDAWG", "normalizedForm": "BigDAWG", "offsetStart": 125, "offsetEnd": 132}, "context": "The high selectivity of these queries reduces the overhead of moving the data from Solr to Postgres (relational instance) in BigDAWG, and in general the data movement is not a bottleneck for these queries. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0024747848510742188}, "created": {"value": false, "score": 4.035234451293945e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9984321594238281}, "created": {"value": false, "score": 0.33604854345321655}, "shared": {"value": false, "score": 8.940696716308594e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "BindJoin", "normalizedForm": "BindJoin", "offsetStart": 128, "offsetEnd": 140}, "context": "The main difference between our ESTO-CADA polystore engine and BigDAWG is that we join subquery results in the mediator using a BindJoin [48], whereas BigDAWG migrates such results to an island capable of performing the join (typically, a relational one).", "mentionContextAttributes": {"used": {"value": false, "score": 0.0008910894393920898}, "created": {"value": false, "score": 0.000278472900390625}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999896883964539}, "created": {"value": false, "score": 0.000278472900390625}, "shared": {"value": false, "score": 2.980232238769531e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "software-name": {"rawForm": "Postgres", "normalizedForm": "Postgres", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "offsetStart": 129, "offsetEnd": 137}, "version": {"rawForm": "9.6", "normalizedForm": "9.6"}, "context": "To work with BigDAWG, we extended it with two new CAST operators: (i) to migrate Solr query results to Postgres; (ii) to migrate Postgres JSON query results to a Postgres relational instance and vice-versa. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.3405839800834656}, "created": {"value": false, "score": 0.08293437957763672}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999645352363586}, "created": {"value": false, "score": 0.08293437957763672}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[4]", "normalizedForm": "[4]", "refKey": 4}, {"label": "[4]", "normalizedForm": "[4]", "refKey": 4}]}, {"type": "software", "software-type": "software", "wikidataId": "Q2858103", "wikipediaExternalRef": 10443665, "lang": "en", "confidence": 0.7618, "software-name": {"rawForm": "Solr", "normalizedForm": "Solr", "wikidataId": "Q2858103", "wikipediaExternalRef": 10443665, "lang": "en", "confidence": 0.7618, "offsetStart": 131, "offsetEnd": 135}, "version": {"rawForm": "6.1", "normalizedForm": "6.1"}, "context": "To alleviate this overhead, we materialized in the Postgres server storing JSON a set of 6 views V N EW , which join the data from Solr (using those full-text predicates in the views definitions) with JSON data from the Postgres JSON server.", "mentionContextAttributes": {"used": {"value": true, "score": 0.999207079410553}, "created": {"value": false, "score": 3.260374069213867e-05}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999989926815033}, "created": {"value": false, "score": 0.08293437957763672}, "shared": {"value": false, "score": 4.410743713378906e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q2858103", "wikipediaExternalRef": 10443665, "lang": "en", "confidence": 0.7618, "software-name": {"rawForm": "Solr", "normalizedForm": "Solr", "wikidataId": "Q2858103", "wikipediaExternalRef": 10443665, "lang": "en", "confidence": 0.7618, "offsetStart": 134, "offsetEnd": 138}, "version": {"rawForm": "6.1", "normalizedForm": "6.1"}, "context": "We store the MIMIC-III dataset (in both systems) as follows: patient metadata in Postgres relational instance; caregivers' reports in Solr; patients' lab events, prescriptions, microbiology events, and procedures information in the Postgres JSON instance.", "mentionContextAttributes": {"used": {"value": true, "score": 0.7718170881271362}, "created": {"value": false, "score": 2.1755695343017578e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999989926815033}, "created": {"value": false, "score": 0.08293437957763672}, "shared": {"value": false, "score": 4.410743713378906e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ESTOCADA", "normalizedForm": "ESTOCADA", "offsetStart": 137, "offsetEnd": 145}, "context": "Moreover, the developer of this additional code should not need to understand any of the other model/language pairs already supported in ESTOCADA.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0007293224334716797}, "created": {"value": false, "score": 0.054486215114593506}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999691843986511}, "created": {"value": true, "score": 0.9999369978904724}, "shared": {"value": false, "score": 1.4901161193847656e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CloudMdsQL", "normalizedForm": "CloudMdsQL", "offsetStart": 144, "offsetEnd": 154}, "context": "CloudMdsQL [36] is an integration language resembling QBT XM , and our cross-model view-based rewriting approach could be easily adapted to use CloudMdsQL as its integration language, just like we adapted it to use BigDAWG's. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00899040699005127}, "created": {"value": false, "score": 0.0008097290992736816}, "shared": {"value": false, "score": 6.556510925292969e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00899040699005127}, "created": {"value": false, "score": 0.0018998980522155762}, "shared": {"value": false, "score": 7.748603820800781e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "BigDAWG", "normalizedForm": "BigDAWG", "offsetStart": 151, "offsetEnd": 158}, "context": "The main difference between our ESTO-CADA polystore engine and BigDAWG is that we join subquery results in the mediator using a BindJoin [48], whereas BigDAWG migrates such results to an island capable of performing the join (typically, a relational one).", "mentionContextAttributes": {"used": {"value": false, "score": 0.0008910894393920898}, "created": {"value": false, "score": 0.000278472900390625}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9984321594238281}, "created": {"value": false, "score": 0.33604854345321655}, "shared": {"value": false, "score": 8.940696716308594e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Bi\u0434DAW G", "normalizedForm": "Bi\u0434DAW G", "offsetStart": 152, "offsetEnd": 160}, "context": ", Q 29 in BigDAWG syntax, referring to each part of the data from its respective island (as BigDAWG requires); we refer to the resulting query set as Q Bi\u0434DAW G .", "mentionContextAttributes": {"used": {"value": true, "score": 0.7072028517723083}, "created": {"value": false, "score": 6.377696990966797e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999226927757263}, "created": {"value": false, "score": 0.0029408931732177734}, "shared": {"value": false, "score": 5.364418029785156e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "software-name": {"rawForm": "Postgres", "normalizedForm": "Postgres", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "offsetStart": 155, "offsetEnd": 163}, "version": {"rawForm": "9.6", "normalizedForm": "9.6"}, "context": "Example 3. We illustrate the QBT XM definition of views V 1 and V 2 from Section 1, using AsterixDB's SQL++ syntax (easier to read than the JSON syntax of Postgres):", "mentionContextAttributes": {"used": {"value": true, "score": 0.9711792469024658}, "created": {"value": false, "score": 8.881092071533203e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999645352363586}, "created": {"value": false, "score": 0.08293437957763672}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[4]", "normalizedForm": "[4]", "refKey": 4}, {"label": "[4]", "normalizedForm": "[4]", "refKey": 4}]}, {"type": "software", "software-type": "software", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "software-name": {"rawForm": "Postgres", "normalizedForm": "Postgres", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "offsetStart": 155, "offsetEnd": 163}, "version": {"rawForm": "9.6", "normalizedForm": "9.6"}, "context": "We set a 60GB buffer cache for all systems, we configured the number of utilizable cores to 39, and we assigned 8GB to the working memory (the default for Postgres). ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9992294311523438}, "created": {"value": false, "score": 0.00012230873107910156}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999645352363586}, "created": {"value": false, "score": 0.08293437957763672}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[4]", "normalizedForm": "[4]", "refKey": 4}, {"label": "[4]", "normalizedForm": "[4]", "refKey": 4}]}, {"type": "software", "software-type": "software", "wikidataId": "Q2858103", "wikipediaExternalRef": 10443665, "lang": "en", "confidence": 0.7618, "software-name": {"rawForm": "Solr", "normalizedForm": "Solr", "wikidataId": "Q2858103", "wikipediaExternalRef": 10443665, "lang": "en", "confidence": 0.7618, "offsetStart": 162, "offsetEnd": 166}, "version": {"rawForm": "6.1", "normalizedForm": "6.1"}, "context": "We used two polystore engines: (i) ESTO-CADA polystore engine instantiated with two Postgres servers (one stores relational data while the other stores JSON) and Solr v6.1 for storing text; (ii) the latest release of the BigDAWG polystore.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9984321594238281}, "created": {"value": false, "score": 2.562999725341797e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999989926815033}, "created": {"value": false, "score": 0.08293437957763672}, "shared": {"value": false, "score": 4.410743713378906e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "software-name": {"rawForm": "Postgres", "normalizedForm": "Postgres", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "offsetStart": 162, "offsetEnd": 170}, "version": {"rawForm": "9.6", "normalizedForm": "9.6"}, "context": "To work with BigDAWG, we extended it with two new CAST operators: (i) to migrate Solr query results to Postgres; (ii) to migrate Postgres JSON query results to a Postgres relational instance and vice-versa. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.3405839800834656}, "created": {"value": false, "score": 0.08293437957763672}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999645352363586}, "created": {"value": false, "score": 0.08293437957763672}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[4]", "normalizedForm": "[4]", "refKey": 4}, {"label": "[4]", "normalizedForm": "[4]", "refKey": 4}]}, {"type": "software", "software-type": "software", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "software-name": {"rawForm": "Postgres", "normalizedForm": "Postgres", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "offsetStart": 165, "offsetEnd": 173}, "version": {"rawForm": "9.6", "normalizedForm": "9.6"}, "context": "Given the Q 60% Bi\u0434DAW G queries, V Post\u0434r es J SO N , V Post\u0434r esSQ L and V N EW , our cross-model views-based rewriting approach finds rewritings using views from Postgres (relational instance) and Postgres (JSON instance). ", "mentionContextAttributes": {"used": {"value": false, "score": 0.29200035333633423}, "created": {"value": false, "score": 2.562999725341797e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999645352363586}, "created": {"value": false, "score": 0.08293437957763672}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[4]", "normalizedForm": "[4]", "refKey": 4}, {"label": "[4]", "normalizedForm": "[4]", "refKey": 4}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Bi\u0434DAW G", "normalizedForm": "Bi\u0434DAW G", "offsetStart": 165, "offsetEnd": 173}, "context": "In contrast, the remaining 40% of Q Bi\u0434DAW G and Q ESTOCADA Polystor e queries have highly selective full-text search predicates (we refer to these as queries Q 40% Bi\u0434DAW G and Q 40%", "mentionContextAttributes": {"used": {"value": false, "score": 0.1730218529701233}, "created": {"value": false, "score": 2.3245811462402344e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999226927757263}, "created": {"value": false, "score": 0.0029408931732177734}, "shared": {"value": false, "score": 5.364418029785156e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q1165204", "wikipediaExternalRef": 21855450, "lang": "en", "confidence": 0.7501, "software-name": {"rawForm": "MongoDB", "normalizedForm": "MongoDB", "wikidataId": "Q1165204", "wikipediaExternalRef": 21855450, "lang": "en", "confidence": 0.7501, "offsetStart": 166, "offsetEnd": 173}, "context": "For each document/tuple from an outer collection in the $lookup operator, $unwind unnests the entire inner collection to perform the join, which is inefficient; (ii) MongoDB requires to place the full-text search predicate at the beginning of a query pipeline, which can hurt performance if the predicate is not highly selective.", "mentionContextAttributes": {"used": {"value": false, "score": 0.025382578372955322}, "created": {"value": false, "score": 1.7285346984863281e-06}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999424815177917}, "created": {"value": false, "score": 0.004765987396240234}, "shared": {"value": false, "score": 2.1457672119140625e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "software-name": {"rawForm": "Postgres", "normalizedForm": "Postgres", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "offsetStart": 166, "offsetEnd": 174}, "version": {"rawForm": "9.6", "normalizedForm": "9.6"}, "context": "Finally, assume available a view V 3 which stores all drugs that are prescribed for each patient that has \"abnormal blood\" test results, as a JSON document stored in Postgres. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0008469223976135254}, "created": {"value": false, "score": 5.346536636352539e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999645352363586}, "created": {"value": false, "score": 0.08293437957763672}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[4]", "normalizedForm": "[4]", "refKey": 4}, {"label": "[4]", "normalizedForm": "[4]", "refKey": 4}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ESTOCADA", "normalizedForm": "ESTOCADA", "offsetStart": 192, "offsetEnd": 200}, "context": "These relational subqueries are then decoded to the native syntax of their respective stores, each constituting a block of the resulting QBT XM rewriting dec(RW Q 1 ) (shown in Appendix C). \u25a1 ESTOCADA's plan generator next translates the decoded QBT XM rewriting to a logical plan that pushes leaf blocks to their native store, applying last-step operators on the results. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9810243844985962}, "created": {"value": false, "score": 4.827976226806641e-06}, "shared": {"value": false, "score": 1.2516975402832031e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999691843986511}, "created": {"value": true, "score": 0.9999369978904724}, "shared": {"value": false, "score": 1.4901161193847656e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "software-name": {"rawForm": "Postgres", "normalizedForm": "Postgres", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "offsetStart": 200, "offsetEnd": 208}, "version": {"rawForm": "9.6", "normalizedForm": "9.6"}, "context": "Given the Q 60% Bi\u0434DAW G queries, V Post\u0434r es J SO N , V Post\u0434r esSQ L and V N EW , our cross-model views-based rewriting approach finds rewritings using views from Postgres (relational instance) and Postgres (JSON instance). ", "mentionContextAttributes": {"used": {"value": false, "score": 0.29200035333633423}, "created": {"value": false, "score": 2.562999725341797e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999645352363586}, "created": {"value": false, "score": 0.08293437957763672}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[4]", "normalizedForm": "[4]", "refKey": 4}, {"label": "[4]", "normalizedForm": "[4]", "refKey": 4}]}, {"type": "software", "software-type": "software", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "software-name": {"rawForm": "Postgres", "normalizedForm": "Postgres", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "offsetStart": 208, "offsetEnd": 216}, "version": {"rawForm": "9.6", "normalizedForm": "9.6", "offsetStart": 218, "offsetEnd": 221}, "context": "For our main polystore setting (called \"ESTOCADA polystore engine\" hereafter) we use [10] as a lightweight execution engine and a set of data stores, selected for their capabilities and popularity: an RDBMS (Postgres v9.6), JSON document stores (Postgres v9.6, MongoDB v4.0.2) and AsterixDB v4.9, SparkSQL v2.3.2 and a text search engine (Solr v6.1). ", "mentionContextAttributes": {"used": {"value": true, "score": 0.5104551911354065}, "created": {"value": false, "score": 5.424022674560547e-06}, "shared": {"value": false, "score": 6.556510925292969e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999645352363586}, "created": {"value": false, "score": 0.08293437957763672}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[4]", "normalizedForm": "[4]", "refKey": 4}, {"label": "[4]", "normalizedForm": "[4]", "refKey": 4}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "BigDAWG", "normalizedForm": "BigDAWG", "offsetStart": 215, "offsetEnd": 222}, "context": "CloudMdsQL [36] is an integration language resembling QBT XM , and our cross-model view-based rewriting approach could be easily adapted to use CloudMdsQL as its integration language, just like we adapted it to use BigDAWG's. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00899040699005127}, "created": {"value": false, "score": 0.0008097290992736816}, "shared": {"value": false, "score": 6.556510925292969e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9984321594238281}, "created": {"value": false, "score": 0.33604854345321655}, "shared": {"value": false, "score": 8.940696716308594e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "software-name": {"rawForm": "Postgres", "normalizedForm": "Postgres", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "offsetStart": 218, "offsetEnd": 226}, "version": {"rawForm": "9.6", "normalizedForm": "9.6"}, "context": "For the other 40% of queries (with very selective full-text search predicates), BigDAWG data movement cost is negligible, thus its evaluation time is dominated by evaluating the join between sub-queries results in the Postgres relational island, where join algorithms and orders may be better chosen than in the ESTOCADA polystore engine (the two platform support different sets of join algorithms).", "mentionContextAttributes": {"used": {"value": false, "score": 0.1867375373840332}, "created": {"value": false, "score": 2.682209014892578e-06}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999645352363586}, "created": {"value": false, "score": 0.08293437957763672}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[4]", "normalizedForm": "[4]", "refKey": 4}, {"label": "[4]", "normalizedForm": "[4]", "refKey": 4}]}, {"type": "software", "software-type": "software", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "software-name": {"rawForm": "Postgres", "normalizedForm": "Postgres", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "offsetStart": 220, "offsetEnd": 228}, "version": {"rawForm": "9.6", "normalizedForm": "9.6"}, "context": "To alleviate this overhead, we materialized in the Postgres server storing JSON a set of 6 views V N EW , which join the data from Solr (using those full-text predicates in the views definitions) with JSON data from the Postgres JSON server.", "mentionContextAttributes": {"used": {"value": true, "score": 0.999207079410553}, "created": {"value": false, "score": 3.260374069213867e-05}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999645352363586}, "created": {"value": false, "score": 0.08293437957763672}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[4]", "normalizedForm": "[4]", "refKey": 4}, {"label": "[4]", "normalizedForm": "[4]", "refKey": 4}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "BigDAWG", "normalizedForm": "BigDAWG", "offsetStart": 221, "offsetEnd": 228}, "context": "We used two polystore engines: (i) ESTO-CADA polystore engine instantiated with two Postgres servers (one stores relational data while the other stores JSON) and Solr v6.1 for storing text; (ii) the latest release of the BigDAWG polystore. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9984321594238281}, "created": {"value": false, "score": 2.562999725341797e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9984321594238281}, "created": {"value": false, "score": 0.33604854345321655}, "shared": {"value": false, "score": 8.940696716308594e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "software-name": {"rawForm": "Postgres", "normalizedForm": "Postgres", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "offsetStart": 232, "offsetEnd": 240}, "version": {"rawForm": "9.6", "normalizedForm": "9.6"}, "context": "We store the MIMIC-III dataset (in both systems) as follows: patient metadata in Postgres relational instance; caregivers' reports in Solr; patients' lab events, prescriptions, microbiology events, and procedures information in the Postgres JSON instance.", "mentionContextAttributes": {"used": {"value": true, "score": 0.7718170881271362}, "created": {"value": false, "score": 2.1755695343017578e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999645352363586}, "created": {"value": false, "score": 0.08293437957763672}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[4]", "normalizedForm": "[4]", "refKey": 4}, {"label": "[4]", "normalizedForm": "[4]", "refKey": 4}]}, {"type": "software", "software-type": "software", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "software-name": {"rawForm": "Postgres", "normalizedForm": "Postgres", "wikidataId": "Q192490", "wikipediaExternalRef": 23824, "lang": "en", "confidence": 0.8658, "offsetStart": 246, "offsetEnd": 254}, "version": {"rawForm": "9.6", "normalizedForm": "9.6"}, "context": "For our main polystore setting (called \"ESTOCADA polystore engine\" hereafter) we use [10] as a lightweight execution engine and a set of data stores, selected for their capabilities and popularity: an RDBMS (Postgres v9.6), JSON document stores (Postgres v9.6, MongoDB v4.0.2) and AsterixDB v4.9, SparkSQL v2.3.2 and a text search engine (Solr v6.1). ", "mentionContextAttributes": {"used": {"value": true, "score": 0.5104551911354065}, "created": {"value": false, "score": 5.424022674560547e-06}, "shared": {"value": false, "score": 6.556510925292969e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999645352363586}, "created": {"value": false, "score": 0.08293437957763672}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[4]", "normalizedForm": "[4]", "refKey": 4}, {"label": "[4]", "normalizedForm": "[4]", "refKey": 4}]}, {"type": "software", "software-type": "software", "wikidataId": "Q1165204", "wikipediaExternalRef": 21855450, "lang": "en", "confidence": 0.7501, "software-name": {"rawForm": "MongoDB", "normalizedForm": "MongoDB", "wikidataId": "Q1165204", "wikipediaExternalRef": 21855450, "lang": "en", "confidence": 0.7501, "offsetStart": 261, "offsetEnd": 268}, "context": "For our main polystore setting (called \"ESTOCADA polystore engine\" hereafter) we use [10] as a lightweight execution engine and a set of data stores, selected for their capabilities and popularity: an RDBMS (Postgres v9.6), JSON document stores (Postgres v9.6, MongoDB v4.0.2) and AsterixDB v4.9, SparkSQL v2.3.2 and a text search engine (Solr v6.1).", "mentionContextAttributes": {"used": {"value": true, "score": 0.5104551911354065}, "created": {"value": false, "score": 5.424022674560547e-06}, "shared": {"value": false, "score": 6.556510925292969e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999424815177917}, "created": {"value": false, "score": 0.004765987396240234}, "shared": {"value": false, "score": 2.1457672119140625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SourceAccess", "normalizedForm": "SourceAccess", "offsetStart": 282, "offsetEnd": 294}, "context": "First, for each view V i used in a rewriting RW , such that V i resides in the datastore DS i , RW decoding (Section 5.4) consolidates the maximum number of atoms that can be pushed (evaluated) into DS i , depending on the query capabilities of the latter; we call such an operator SourceAccess, and systematically choose to evaluate it in DS i .", "mentionContextAttributes": {"used": {"value": true, "score": 0.9746887683868408}, "created": {"value": false, "score": 5.066394805908203e-06}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999899685382843}, "created": {"value": true, "score": 0.5437822341918945}, "shared": {"value": false, "score": 1.1324882507324219e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SparkSQL", "normalizedForm": "SparkSQL", "offsetStart": 297, "offsetEnd": 305}, "version": {"rawForm": "2.3.2", "normalizedForm": "2.3.2", "offsetStart": 307, "offsetEnd": 312}, "context": "For our main polystore setting (called \"ESTOCADA polystore engine\" hereafter) we use [10] as a lightweight execution engine and a set of data stores, selected for their capabilities and popularity: an RDBMS (Postgres v9.6), JSON document stores (Postgres v9.6, MongoDB v4.0.2) and AsterixDB v4.9, SparkSQL v2.3.2 and a text search engine (Solr v6.1). ", "mentionContextAttributes": {"used": {"value": true, "score": 0.5104551911354065}, "created": {"value": false, "score": 5.424022674560547e-06}, "shared": {"value": false, "score": 6.556510925292969e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998550415039062}, "created": {"value": false, "score": 0.004765987396240234}, "shared": {"value": false, "score": 6.556510925292969e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q2858103", "wikipediaExternalRef": 10443665, "lang": "en", "confidence": 0.7618, "software-name": {"rawForm": "Solr", "normalizedForm": "Solr", "wikidataId": "Q2858103", "wikipediaExternalRef": 10443665, "lang": "en", "confidence": 0.7618, "offsetStart": 309, "offsetEnd": 313}, "version": {"rawForm": "6.1", "normalizedForm": "6.1"}, "context": "This is sufficiently expressive to capture the key aspects of the data models in circulation today, including: freely nested collections and objects, object identity (e.g., for XML element nodes and JSON objects), limited binding patterns (as required by key-value stores and full-text indexes such as Lucene/Solr), relationships (in the E/R and ODL sense), functional dependencies and much more.", "mentionContextAttributes": {"used": {"value": false, "score": 0.000284731388092041}, "created": {"value": false, "score": 0.0006082057952880859}, "shared": {"value": false, "score": 4.410743713378906e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999989926815033}, "created": {"value": false, "score": 0.08293437957763672}, "shared": {"value": false, "score": 4.410743713378906e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ESTOCADA", "normalizedForm": "ESTOCADA", "offsetStart": 312, "offsetEnd": 320}, "context": "For the other 40% of queries (with very selective full-text search predicates), BigDAWG data movement cost is negligible, thus its evaluation time is dominated by evaluating the join between sub-queries results in the Postgres relational island, where join algorithms and orders may be better chosen than in the ESTOCADA polystore engine (the two platform support different sets of join algorithms). ", "mentionContextAttributes": {"used": {"value": false, "score": 0.1867375373840332}, "created": {"value": false, "score": 2.6226043701171875e-06}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999691843986511}, "created": {"value": true, "score": 0.9999369978904724}, "shared": {"value": false, "score": 1.4901161193847656e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q1165204", "wikipediaExternalRef": 21855450, "lang": "en", "confidence": 0.7501, "software-name": {"rawForm": "MongoDB", "normalizedForm": "MongoDB", "wikidataId": "Q1165204", "wikipediaExternalRef": 21855450, "lang": "en", "confidence": 0.7501, "offsetStart": 336, "offsetEnd": 343}, "context": "Instead, the data model often dictates the choice of the store, e.g., relational data gets loaded into a relational or \"Big Table\"-style system, JSON documents in a JSON store, etc. Heterogeneous stores also \"accumulate\" in an application along the time, e.g., at some point one decision is made to host dataset D 1 in Spark and D 2 in MongoDB, while later on another application needs to use D 1 and D 2 together.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00446629524230957}, "created": {"value": false, "score": 9.298324584960938e-06}, "shared": {"value": false, "score": 2.1457672119140625e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999424815177917}, "created": {"value": false, "score": 0.004765987396240234}, "shared": {"value": false, "score": 2.1457672119140625e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q2858103", "wikipediaExternalRef": 10443665, "lang": "en", "confidence": 0.7618, "software-name": {"rawForm": "Solr", "normalizedForm": "Solr", "wikidataId": "Q2858103", "wikipediaExternalRef": 10443665, "lang": "en", "confidence": 0.7618, "offsetStart": 339, "offsetEnd": 343}, "version": {"rawForm": "6.1", "normalizedForm": "6.1", "offsetStart": 345, "offsetEnd": 348}, "context": "For our main polystore setting (called \"ESTOCADA polystore engine\" hereafter) we use [10] as a lightweight execution engine and a set of data stores, selected for their capabilities and popularity: an RDBMS (Postgres v9.6), JSON document stores (Postgres v9.6, MongoDB v4.0.2) and AsterixDB v4.9, SparkSQL v2.3.2 and a text search engine (Solr v6.1). ", "mentionContextAttributes": {"used": {"value": true, "score": 0.5104552507400513}, "created": {"value": false, "score": 5.364418029785156e-06}, "shared": {"value": false, "score": 5.960464477539062e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999989926815033}, "created": {"value": false, "score": 0.08293437957763672}, "shared": {"value": false, "score": 4.410743713378906e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "BigDAWG", "normalizedForm": "BigDAWG", "offsetStart": 410, "offsetEnd": 417}, "context": "To make this approach feasible, we had to couple modeling contributions (in designing a reduction from multi-model view-based rewriting to relational rewriting under constraints), with algorithmic contributions (in optimizing and extending the state-of-the-art algorithm for relational view-based rewriting under constraints) and with systems contributions (integrating our rewriting algorithm within [10] and BigDAWG).", "mentionContextAttributes": {"used": {"value": false, "score": 0.477994441986084}, "created": {"value": false, "score": 0.33604854345321655}, "shared": {"value": false, "score": 7.152557373046875e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9984321594238281}, "created": {"value": false, "score": 0.33604854345321655}, "shared": {"value": false, "score": 8.940696716308594e-07}}}], "references": [{"refKey": 4, "tei": "<biblStruct xml:id=\"b4\">\n\t<monogr>\n\t\t<title level=\"m\">Scidb</title>\n\t\t<imprint/>\n\t</monogr>\n</biblStruct>\n"}], "runtime": 94508, "id": "97472d4634fda471bd6208843953177cb914f7a9", "metadata": {"id": "97472d4634fda471bd6208843953177cb914f7a9"}, "original_file_path": "../../datalake/Samuel/SOFTware-Sync/data/xml_not_sofctied/hal-02070827.grobid.tei.xml", "file_name": "hal-02070827.grobid.tei.xml"}