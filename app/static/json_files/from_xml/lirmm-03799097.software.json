{"application": "software-mentions", "version": "0.8.0", "date": "2024-04-15T07:15+0000", "md5": "FB966892098594997EEBE26CB8525D5D", "mentions": [{"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 0, "offsetEnd": 6}, "context": "SAVIME: A multi-dimensional array in-memory DBMS [1] that enriches the framework with declarative, SQL-Like, query processing that is used to explore registered datasets and invoke ML models. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00018864870071411133}, "created": {"value": false, "score": 0.00024646520614624023}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00018864870071411133}, "created": {"value": false, "score": 0.00024646520614624023}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 0, "offsetEnd": 6}, "context": "SAVIME can process the datasets directly from their raw format with no data ingestion cost.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0001169443130493164}, "created": {"value": false, "score": 1.5139579772949219e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00018864870071411133}, "created": {"value": false, "score": 0.00024646520614624023}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "implicit", "software-name": {"rawForm": "scripts", "normalizedForm": "scripts", "offsetStart": 65, "offsetEnd": 72}, "context": "It also offers a notebook interface and an API for direct python scripts integration with the framework services. ", "mentionContextAttributes": {"used": {"value": false, "score": 2.849102020263672e-05}, "created": {"value": false, "score": 0.026803553104400635}, "shared": {"value": false, "score": 0.0003447532653808594}}, "documentContextAttributes": {"used": {"value": false, "score": 2.849102020263672e-05}, "created": {"value": false, "score": 0.026803553104400635}, "shared": {"value": false, "score": 0.0003447532653808594}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Apache Spark", "normalizedForm": "Apache Spark", "offsetStart": 93, "offsetEnd": 105}, "context": "For data transformation processes, data locality is prioritized and Big Data frameworks like Apache Spark and Dask are usual choices. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0004544854164123535}, "created": {"value": false, "score": 0.0004870891571044922}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0004544854164123535}, "created": {"value": false, "score": 0.0004870891571044922}, "shared": {"value": false, "score": 1.1920928955078125e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Dask", "normalizedForm": "Dask", "offsetStart": 110, "offsetEnd": 114}, "context": "For data transformation processes, data locality is prioritized and Big Data frameworks like Apache Spark and Dask are usual choices. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0004544854164123535}, "created": {"value": false, "score": 0.0004870891571044922}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0004544854164123535}, "created": {"value": false, "score": 0.0004870891571044922}, "shared": {"value": false, "score": 1.1920928955078125e-07}}}], "references": [], "runtime": 46764, "id": "4ede8c41c96d3a34150e9a7d4216b7cea4b42082", "metadata": {"id": "4ede8c41c96d3a34150e9a7d4216b7cea4b42082"}, "original_file_path": "../../datalake/Samuel/SOFTware-Sync/data/xml_not_sofctied/lirmm-03799097.grobid.tei.xml", "file_name": "lirmm-03799097.grobid.tei.xml"}