{"application": "software-mentions", "version": "0.8.0", "date": "2024-04-12T16:57+0000", "md5": "BF43306E7784C77A2D0D227485FBC347", "mentions": [{"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGNN", "normalizedForm": "KeGNN", "offsetStart": 0, "offsetEnd": 5}, "context": "KeGNN can be seen as a variant of knowledge enhanced neural networks (KENN), which stack knowledge enhancement layers onto a multi-layer perceptron (MLP) and have been proven successful in semantic point cloud segmentation, image segmentation and multi-label classification [14]- [16].", "mentionContextAttributes": {"used": {"value": false, "score": 5.21540641784668e-05}, "created": {"value": false, "score": 0.0011159181594848633}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999940037727356}, "created": {"value": true, "score": 0.999938428401947}, "shared": {"value": false, "score": 3.635883331298828e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGNN", "normalizedForm": "KeGNN", "offsetStart": 0, "offsetEnd": 5}, "context": "KeGNN is a neuro-symbolic approach that can be applied to node classification tasks with the capacity of handling graph structure at the base neural network level.", "mentionContextAttributes": {"used": {"value": false, "score": 2.1517276763916016e-05}, "created": {"value": false, "score": 0.00937199592590332}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999940037727356}, "created": {"value": true, "score": 0.999938428401947}, "shared": {"value": false, "score": 3.635883331298828e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGNN", "normalizedForm": "KeGNN", "offsetStart": 0, "offsetEnd": 5}, "context": "KeGNN best falls into the second category, since the prior knowledge is interpreted in fuzzy logic to be integrated with the neural model and update the GNN's predictions.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0003928542137145996}, "created": {"value": false, "score": 3.904104232788086e-05}, "shared": {"value": false, "score": 6.556510925292969e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999940037727356}, "created": {"value": true, "score": 0.999938428401947}, "shared": {"value": false, "score": 3.635883331298828e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGNN", "normalizedForm": "KeGNN", "offsetStart": 3, "offsetEnd": 8}, "context": "In KeGNN, the GNN implements the functions f P U (see Section II-D). ", "mentionContextAttributes": {"used": {"value": false, "score": 0.013824522495269775}, "created": {"value": false, "score": 0.0001112818717956543}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999940037727356}, "created": {"value": true, "score": 0.999938428401947}, "shared": {"value": false, "score": 3.635883331298828e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGNN", "normalizedForm": "KeGNN", "offsetStart": 3, "offsetEnd": 8}, "context": "In KeGNN, knowledge enhancement layers [13] are stacked on top of a GNN and adjust its predictions in order to increase the satisfaction of some prior knowledge.", "mentionContextAttributes": {"used": {"value": false, "score": 0.020337045192718506}, "created": {"value": false, "score": 1.9729137420654297e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999940037727356}, "created": {"value": true, "score": 0.999938428401947}, "shared": {"value": false, "score": 3.635883331298828e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGNN", "normalizedForm": "KeGNN", "offsetStart": 8, "offsetEnd": 13}, "context": "The way KeGNN computes the final predictions can be divided in two stages. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.014225006103515625}, "created": {"value": false, "score": 1.1026859283447266e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999940037727356}, "created": {"value": true, "score": 0.999938428401947}, "shared": {"value": false, "score": 3.635883331298828e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGNN", "normalizedForm": "KeGNN", "offsetStart": 9, "offsetEnd": 14}, "context": "We apply KeGNN to the benchmark datasets for node classification Cora, Citeseer, PubMed [19] and Flickr [20].", "mentionContextAttributes": {"used": {"value": true, "score": 0.9996351003646851}, "created": {"value": false, "score": 2.682209014892578e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999940037727356}, "created": {"value": true, "score": 0.999938428401947}, "shared": {"value": false, "score": 3.635883331298828e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGNN", "normalizedForm": "KeGNN", "offsetStart": 9, "offsetEnd": 14}, "context": "However, KeGNN is based on GNNs that are suited for learning representations of graphs attributed with node features. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00010138750076293945}, "created": {"value": false, "score": 0.003433704376220703}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999940037727356}, "created": {"value": true, "score": 0.999938428401947}, "shared": {"value": false, "score": 3.635883331298828e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "code", "normalizedForm": "code", "offsetStart": 11, "offsetEnd": 15}, "context": "The source code of the experiments are publicly available4 . .", "mentionContextAttributes": {"used": {"value": false, "score": 0.014814794063568115}, "created": {"value": false, "score": 0.08684182167053223}, "shared": {"value": true, "score": 0.8689162135124207}}, "documentContextAttributes": {"used": {"value": true, "score": 0.5616335272789001}, "created": {"value": false, "score": 0.08684182167053223}, "shared": {"value": true, "score": 0.8689162135124207}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGNN", "normalizedForm": "KeGNN", "offsetStart": 12, "offsetEnd": 17}, "context": "At present, KeGNN can handle clauses containing binary predicates, but their truth values are initialized with artificial predictions, where a high value encodes the presence of an edge. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00013518333435058594}, "created": {"value": false, "score": 0.0008584260940551758}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999940037727356}, "created": {"value": true, "score": 0.999938428401947}, "shared": {"value": false, "score": 3.635883331298828e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGNN", "normalizedForm": "KeGNN", "offsetStart": 13, "offsetEnd": 18}, "context": "Essentially, KeGNN consists of a graph neural network as a base upon which knowledge enhancement layers are stacked with the goal of refining predictions with respect to prior knowledge.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0001895427703857422}, "created": {"value": false, "score": 0.0007388591766357422}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999940037727356}, "created": {"value": true, "score": 0.999938428401947}, "shared": {"value": false, "score": 3.635883331298828e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGNN", "normalizedForm": "KeGNN", "offsetStart": 13, "offsetEnd": 18}, "context": "In contrast, KeGNN is based on GNNs that process the graph structure, which makes both the neural and symbolic components sufficiently powerful to exploit the graph structure.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0012810826301574707}, "created": {"value": false, "score": 0.0032376646995544434}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999940037727356}, "created": {"value": true, "score": 0.999938428401947}, "shared": {"value": false, "score": 3.635883331298828e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGNN", "normalizedForm": "KeGNN", "offsetStart": 14, "offsetEnd": 19}, "context": "The method of KeGNN is limited in some aspects, which we present in this section. ", "mentionContextAttributes": {"used": {"value": false, "score": 5.84721565246582e-05}, "created": {"value": false, "score": 0.0818556547164917}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999940037727356}, "created": {"value": true, "score": 0.999938428401947}, "shared": {"value": false, "score": 3.635883331298828e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGAT", "normalizedForm": "KeGAT", "offsetStart": 14, "offsetEnd": 19}, "context": "For Citeseer, KeGAT and GAT both outperform KeMLP.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0485764741897583}, "created": {"value": false, "score": 1.0788440704345703e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998552799224854}, "created": {"value": false, "score": 5.9545040130615234e-05}, "shared": {"value": false, "score": 1.0132789611816406e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGNN", "normalizedForm": "KeGNN", "offsetStart": 15, "offsetEnd": 20}, "context": "An overview of KeGNN is given in Figure 2.", "mentionContextAttributes": {"used": {"value": false, "score": 0.005873203277587891}, "created": {"value": false, "score": 0.0010561347007751465}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999940037727356}, "created": {"value": true, "score": 0.999938428401947}, "shared": {"value": false, "score": 3.635883331298828e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGNN", "normalizedForm": "KeGNN", "offsetStart": 15, "offsetEnd": 20}, "context": "We instantiate KeGNN in conjunction with two well-known graph neural networks, Graph Convolutional Networks and Graph Attention Networks, and evaluate KeGNN on multiple benchmark datasets for node classification.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999399781227112}, "created": {"value": true, "score": 0.7155583500862122}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999940037727356}, "created": {"value": true, "score": 0.999938428401947}, "shared": {"value": false, "score": 3.635883331298828e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGCN", "normalizedForm": "KeGCN", "offsetStart": 15, "offsetEnd": 20}, "context": "When comparing KeGCN and GCN, there is no clear difference.", "mentionContextAttributes": {"used": {"value": false, "score": 0.09525418281555176}, "created": {"value": false, "score": 2.6166439056396484e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998552799224854}, "created": {"value": false, "score": 5.9545040130615234e-05}, "shared": {"value": false, "score": 1.0132789611816406e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGCN", "normalizedForm": "KeGCN", "offsetStart": 15, "offsetEnd": 20}, "context": "In the case of KeGCN, the clause weights are predominantly set to values close to zero.", "mentionContextAttributes": {"used": {"value": false, "score": 0.08683085441589355}, "created": {"value": false, "score": 3.36766242980957e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998552799224854}, "created": {"value": false, "score": 5.9545040130615234e-05}, "shared": {"value": false, "score": 1.0132789611816406e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGAT", "normalizedForm": "KeGAT", "offsetStart": 17, "offsetEnd": 22}, "context": "The findings for KeGAT are in line with those for KeGCN.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9998552799224854}, "created": {"value": false, "score": 3.68952751159668e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998552799224854}, "created": {"value": false, "score": 5.9545040130615234e-05}, "shared": {"value": false, "score": 1.0132789611816406e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGNN", "normalizedForm": "KeGNN", "offsetStart": 18, "offsetEnd": 23}, "context": "In the following, KeGNN is called KeGCN and KeGAT when instantiated to a GCN or a GAT, respectively. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.014706671237945557}, "created": {"value": false, "score": 2.5331974029541016e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999940037727356}, "created": {"value": true, "score": 0.999938428401947}, "shared": {"value": false, "score": 3.635883331298828e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGCN", "normalizedForm": "KeGCN", "offsetStart": 19, "offsetEnd": 24}, "context": "Just as a GCN, the KeGCN is not necessarily robust to wrong prior knowledge since the GCN component uses the entire neighborhood, including the misleading nodes.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0012854933738708496}, "created": {"value": false, "score": 3.439188003540039e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998552799224854}, "created": {"value": false, "score": 5.9545040130615234e-05}, "shared": {"value": false, "score": 1.0132789611816406e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGNN", "normalizedForm": "KeGNN", "offsetStart": 21, "offsetEnd": 26}, "context": "However, even though KeGNN's clause weights introduce a notion of impact of a clause when predictions are made, they cannot directly be interpreted as the confidence in a rule.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0022289156913757324}, "created": {"value": false, "score": 0.0002796649932861328}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999940037727356}, "created": {"value": true, "score": 0.999938428401947}, "shared": {"value": false, "score": 3.635883331298828e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGNN", "normalizedForm": "KeGNN", "offsetStart": 22, "offsetEnd": 27}, "context": "Within this category, KeGNN belongs to the model-based approaches, where prior knowledge in the form of knowledge enhancement layers is an integral part of the model [14]. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00014257431030273438}, "created": {"value": false, "score": 0.0002624988555908203}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999940037727356}, "created": {"value": true, "score": 0.999938428401947}, "shared": {"value": false, "score": 3.635883331298828e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGNN", "normalizedForm": "KeGNN", "offsetStart": 22, "offsetEnd": 27}, "context": "Another limitation of KeGNN is scalability. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00011628866195678711}, "created": {"value": false, "score": 0.00010031461715698242}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999940037727356}, "created": {"value": true, "score": 0.999938428401947}, "shared": {"value": false, "score": 3.635883331298828e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "code", "normalizedForm": "code", "offsetStart": 23, "offsetEnd": 27}, "context": "1) Implementation: The code 4 is based on PyTorch [39] and the graph learning library PyTorch Geometric [37]. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.5616335272789001}, "created": {"value": false, "score": 1.8894672393798828e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.5616335272789001}, "created": {"value": false, "score": 0.08684182167053223}, "shared": {"value": true, "score": 0.8689162135124207}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGCN", "normalizedForm": "KeGCN", "offsetStart": 23, "offsetEnd": 28}, "context": "This includes not only KeGCN and KeGAT, but also the GNN baselines.", "mentionContextAttributes": {"used": {"value": true, "score": 0.6938226819038391}, "created": {"value": false, "score": 5.9545040130615234e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998552799224854}, "created": {"value": false, "score": 5.9545040130615234e-05}, "shared": {"value": false, "score": 1.0132789611816406e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGNN", "normalizedForm": "KeGNN", "offsetStart": 24, "offsetEnd": 29}, "context": "In other words, can the KeGNN successfully deal with nodes having mainly neighbors that belong to a different ground truth class and thus contribute misleading information to the node classification?", "mentionContextAttributes": {"used": {"value": false, "score": 0.0013223886489868164}, "created": {"value": false, "score": 0.0002052783966064453}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999940037727356}, "created": {"value": true, "score": 0.999938428401947}, "shared": {"value": false, "score": 3.635883331298828e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGCN", "normalizedForm": "KeGCN", "offsetStart": 28, "offsetEnd": 33}, "context": "It is observed that GCN and KeGCN yield similar results as the evolution of the compliance during training for both models is mostly aligned.", "mentionContextAttributes": {"used": {"value": false, "score": 0.013848364353179932}, "created": {"value": false, "score": 1.4960765838623047e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998552799224854}, "created": {"value": false, "score": 5.9545040130615234e-05}, "shared": {"value": false, "score": 1.0132789611816406e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGNN", "normalizedForm": "KeGNN", "offsetStart": 28, "offsetEnd": 33}, "context": "In this work, we introduced KeGNN, a neuro-symbolic model that integrates GNNs with symbolic knowledge enhancement layers to create an end-to-end differentiable model.", "mentionContextAttributes": {"used": {"value": false, "score": 4.118680953979492e-05}, "created": {"value": true, "score": 0.999937117099762}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999940037727356}, "created": {"value": true, "score": 0.999938428401947}, "shared": {"value": false, "score": 3.635883331298828e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGNN", "normalizedForm": "KeGNN", "offsetStart": 29, "offsetEnd": 34}, "context": "In this work, we instantiate KeGNN in conjunction with two well-known GNNs: Graph Attention Networks [17] and Graph Convolutional Networks [18].", "mentionContextAttributes": {"used": {"value": false, "score": 0.00040608644485473633}, "created": {"value": true, "score": 0.9993904829025269}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999940037727356}, "created": {"value": true, "score": 0.999938428401947}, "shared": {"value": false, "score": 3.635883331298828e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGNN", "normalizedForm": "KeGNN", "offsetStart": 31, "offsetEnd": 36}, "context": "To evaluate the performance of KeGNN, we apply it to the datasets Citeseer, Cora, PubMed and Flickr that are common benchmarks for node classification in a transductive setting. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9997649192810059}, "created": {"value": false, "score": 8.165836334228516e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999940037727356}, "created": {"value": true, "score": 0.999938428401947}, "shared": {"value": false, "score": 3.635883331298828e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGNN", "normalizedForm": "KeGNN", "offsetStart": 31, "offsetEnd": 36}, "context": "This limits the application of KeGNN to datasets for which the graph structure is complete and known a priori.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00019979476928710938}, "created": {"value": false, "score": 0.0009918808937072754}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999940037727356}, "created": {"value": true, "score": 0.999938428401947}, "shared": {"value": false, "score": 3.635883331298828e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGAT", "normalizedForm": "KeGAT", "offsetStart": 33, "offsetEnd": 38}, "context": "This includes not only KeGCN and KeGAT, but also the GNN baselines.", "mentionContextAttributes": {"used": {"value": true, "score": 0.6938226819038391}, "created": {"value": false, "score": 5.9545040130615234e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998552799224854}, "created": {"value": false, "score": 5.9545040130615234e-05}, "shared": {"value": false, "score": 1.0132789611816406e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGCN", "normalizedForm": "KeGCN", "offsetStart": 34, "offsetEnd": 39}, "context": "In the following, KeGNN is called KeGCN and KeGAT when instantiated to a GCN or a GAT, respectively. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.014706671237945557}, "created": {"value": false, "score": 2.5331974029541016e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998552799224854}, "created": {"value": false, "score": 5.9545040130615234e-05}, "shared": {"value": false, "score": 1.0132789611816406e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGCN", "normalizedForm": "KeGCN", "offsetStart": 36, "offsetEnd": 41}, "context": "By contrast, when comparing GCN and KeGCN, for both models, the accuracy is observed superior for nodes with a higher degree.", "mentionContextAttributes": {"used": {"value": true, "score": 0.8439928293228149}, "created": {"value": false, "score": 7.092952728271484e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998552799224854}, "created": {"value": false, "score": 5.9545040130615234e-05}, "shared": {"value": false, "score": 1.0132789611816406e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGNN", "normalizedForm": "KeGNN", "offsetStart": 38, "offsetEnd": 43}, "context": "Some prior knowledge K is provided to KeGNN. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.6299781203269958}, "created": {"value": false, "score": 0.0007293224334716797}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999940037727356}, "created": {"value": true, "score": 0.999938428401947}, "shared": {"value": false, "score": 3.635883331298828e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGCN", "normalizedForm": "KeGCN", "offsetStart": 41, "offsetEnd": 46}, "context": "In contrast, no significant advantage of KeGCN or KeGAT in comparison to the standalone base model is observed.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0005372762680053711}, "created": {"value": false, "score": 4.786252975463867e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998552799224854}, "created": {"value": false, "score": 5.9545040130615234e-05}, "shared": {"value": false, "score": 1.0132789611816406e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGNN", "normalizedForm": "KeGNN", "offsetStart": 42, "offsetEnd": 47}, "context": "In the multifaceted neuro-symbolic field, KeGNN can be placed in the category of knowledge-guided learning [13], where the focus lies on learning in the presence of additional supervision introduced as prior knowledge. ", "mentionContextAttributes": {"used": {"value": false, "score": 4.8100948333740234e-05}, "created": {"value": false, "score": 3.916025161743164e-05}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999940037727356}, "created": {"value": true, "score": 0.999938428401947}, "shared": {"value": false, "score": 3.635883331298828e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q47509047", "wikipediaExternalRef": 54022970, "lang": "en", "confidence": 0.7826, "software-name": {"rawForm": "PyTorch", "normalizedForm": "PyTorch", "wikidataId": "Q47509047", "wikipediaExternalRef": 54022970, "lang": "en", "confidence": 0.7826, "offsetStart": 42, "offsetEnd": 54}, "context": "1) Implementation: The code 4 is based on PyTorch [39] and the graph learning library PyTorch Geometric [37]. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.5616335272789001}, "created": {"value": false, "score": 1.8894672393798828e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.5616335272789001}, "created": {"value": false, "score": 7.790327072143555e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGAT", "normalizedForm": "KeGAT", "offsetStart": 44, "offsetEnd": 49}, "context": "In the following, KeGNN is called KeGCN and KeGAT when instantiated to a GCN or a GAT, respectively. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.014706671237945557}, "created": {"value": false, "score": 2.5331974029541016e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998552799224854}, "created": {"value": false, "score": 5.9545040130615234e-05}, "shared": {"value": false, "score": 1.0132789611816406e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGNN", "normalizedForm": "KeGNN", "offsetStart": 47, "offsetEnd": 52}, "context": "2) Model Parameters and Hyperparameter Tuning: KeGNN contains a set of hyperparameters.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0010740160942077637}, "created": {"value": false, "score": 8.64267349243164e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999940037727356}, "created": {"value": true, "score": 0.999938428401947}, "shared": {"value": false, "score": 3.635883331298828e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGAT", "normalizedForm": "KeGAT", "offsetStart": 50, "offsetEnd": 55}, "context": "In contrast, no significant advantage of KeGCN or KeGAT in comparison to the standalone base model is observed.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0005372762680053711}, "created": {"value": false, "score": 4.786252975463867e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998552799224854}, "created": {"value": false, "score": 5.9545040130615234e-05}, "shared": {"value": false, "score": 1.0132789611816406e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGCN", "normalizedForm": "KeGCN", "offsetStart": 50, "offsetEnd": 55}, "context": "The findings for KeGAT are in line with those for KeGCN.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9998552799224854}, "created": {"value": false, "score": 3.68952751159668e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998552799224854}, "created": {"value": false, "score": 5.9545040130615234e-05}, "shared": {"value": false, "score": 1.0132789611816406e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGNN", "normalizedForm": "KeGNN", "offsetStart": 51, "offsetEnd": 56}, "context": "A perspective for further work is the extension of KeGNN to more generic data structures such as incomplete and heterogeneous knowledge graphs in conjunction with more complex prior knowledge.", "mentionContextAttributes": {"used": {"value": false, "score": 4.8100948333740234e-05}, "created": {"value": true, "score": 0.9984976053237915}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999940037727356}, "created": {"value": true, "score": 0.999938428401947}, "shared": {"value": false, "score": 3.635883331298828e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGNN", "normalizedForm": "KeGNN", "offsetStart": 53, "offsetEnd": 58}, "context": "We propose Knowledge Enhanced Graph Neural Networks (KeGNN), a neurosymbolic framework for graph completion that combines both paradigms as it allows for the integration of prior knowledge into a graph neural network model.", "mentionContextAttributes": {"used": {"value": false, "score": 9.590387344360352e-05}, "created": {"value": true, "score": 0.9999282956123352}, "shared": {"value": false, "score": 3.635883331298828e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999940037727356}, "created": {"value": true, "score": 0.999938428401947}, "shared": {"value": false, "score": 3.635883331298828e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGNN", "normalizedForm": "KeGNN", "offsetStart": 54, "offsetEnd": 59}, "context": "To interpret Boolean logic in the real-valued domain, KeGNN uses fuzzy logic [22], which maps Boolean truth values to the continuous interval [0, 1] \u2282 R. A constant in C is interpreted as a realvalued feature vector x \u2208 R d . ", "mentionContextAttributes": {"used": {"value": true, "score": 0.8735499382019043}, "created": {"value": false, "score": 2.086162567138672e-06}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999940037727356}, "created": {"value": true, "score": 0.999938428401947}, "shared": {"value": false, "score": 3.635883331298828e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGNN", "normalizedForm": "KeGNN", "offsetStart": 63, "offsetEnd": 68}, "context": "In this work, we consider two wellknown GNNs as components for KeGNN: Graph Convolutional Networks (GCN) [18] and Graph Attention Networks (GAT) [17]. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0019910335540771484}, "created": {"value": true, "score": 0.9975768327713013}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999940037727356}, "created": {"value": true, "score": 0.999938428401947}, "shared": {"value": false, "score": 3.635883331298828e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q47509047", "wikipediaExternalRef": 54022970, "lang": "en", "confidence": 0.7826, "software-name": {"rawForm": "PyTorch", "normalizedForm": "PyTorch", "wikidataId": "Q47509047", "wikipediaExternalRef": 54022970, "lang": "en", "confidence": 0.7826, "offsetStart": 66, "offsetEnd": 73}, "context": "The datasets are publicly available on the dataset collection3 of PyTorch Geometric [37]. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0600009560585022}, "created": {"value": false, "score": 7.790327072143555e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.5616335272789001}, "created": {"value": false, "score": 7.790327072143555e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGNN", "normalizedForm": "KeGNN", "offsetStart": 71, "offsetEnd": 76}, "context": "Furthermore, limitations appear in the context of link prediction with KeGNN. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0010507702827453613}, "created": {"value": false, "score": 0.00020313262939453125}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999940037727356}, "created": {"value": true, "score": 0.999938428401947}, "shared": {"value": false, "score": 3.635883331298828e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGNN", "normalizedForm": "KeGNN", "offsetStart": 72, "offsetEnd": 77}, "context": "While K can be defined in the logic language L, the neural component in KeGNN relies on continuous and differentiable representations. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0002943277359008789}, "created": {"value": false, "score": 0.0009298324584960938}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999940037727356}, "created": {"value": true, "score": 0.999938428401947}, "shared": {"value": false, "score": 3.635883331298828e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGNN", "normalizedForm": "KeGNN", "offsetStart": 76, "offsetEnd": 81}, "context": "Adaptations are necessary on both the neural and the symbolic side to apply KeGNN to heterogeneous graphs. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.23426514863967896}, "created": {"value": false, "score": 1.2099742889404297e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999940037727356}, "created": {"value": true, "score": 0.999938428401947}, "shared": {"value": false, "score": 3.635883331298828e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGNN", "normalizedForm": "KeGNN", "offsetStart": 82, "offsetEnd": 87}, "context": "This indicates that for more complex knowledge that is harder for a GNN to learn, KeGNN has the potential to bring higher improvements. ", "mentionContextAttributes": {"used": {"value": false, "score": 5.608797073364258e-05}, "created": {"value": false, "score": 0.0010330677032470703}, "shared": {"value": false, "score": 6.556510925292969e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999940037727356}, "created": {"value": true, "score": 0.999938428401947}, "shared": {"value": false, "score": 3.635883331298828e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGCN", "normalizedForm": "KeGCN", "offsetStart": 86, "offsetEnd": 91}, "context": "Figure 6 plots the evolution of the clause compliance for the six clauses for GCN vs. KeGCN and MLP vs. KeMLP.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9902772903442383}, "created": {"value": false, "score": 3.212690353393555e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998552799224854}, "created": {"value": false, "score": 5.9545040130615234e-05}, "shared": {"value": false, "score": 1.0132789611816406e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PyTorch Geometric", "normalizedForm": "PyTorch Geometric", "offsetStart": 86, "offsetEnd": 107}, "context": "1) Implementation: The code 4 is based on PyTorch [39] and the graph learning library PyTorch Geometric [37]. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.5616335272789001}, "created": {"value": false, "score": 1.8894672393798828e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.5616335272789001}, "created": {"value": false, "score": 1.8894672393798828e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGCN", "normalizedForm": "KeGCN", "offsetStart": 88, "offsetEnd": 93}, "context": "This is in accordance with the absence of a significant performance gap between GCN and KeGCN.", "mentionContextAttributes": {"used": {"value": false, "score": 0.08492648601531982}, "created": {"value": false, "score": 5.59687614440918e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998552799224854}, "created": {"value": false, "score": 5.9545040130615234e-05}, "shared": {"value": false, "score": 1.0132789611816406e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGNN", "normalizedForm": "KeGNN", "offsetStart": 93, "offsetEnd": 98}, "context": "Eventually, the datasets used in this work and the set of prior knowledge are too simple for KeGNN to exploit its potential and lead to a significant improvement over the GNN. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00012201070785522461}, "created": {"value": false, "score": 0.0008452534675598145}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999940037727356}, "created": {"value": true, "score": 0.999938428401947}, "shared": {"value": false, "score": 3.635883331298828e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGNN", "normalizedForm": "KeGNN", "offsetStart": 95, "offsetEnd": 100}, "context": "In this work, we present the neuro-symbolic approach Knowledge enhanced Graph Neural Networks (KeGNN) to conduct node classification given graph data and a set of prior knowledge.", "mentionContextAttributes": {"used": {"value": false, "score": 3.784894943237305e-05}, "created": {"value": true, "score": 0.999938428401947}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999940037727356}, "created": {"value": true, "score": 0.999938428401947}, "shared": {"value": false, "score": 3.635883331298828e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGNN", "normalizedForm": "KeGNN", "offsetStart": 106, "offsetEnd": 111}, "context": "The idea of confidence values in category three shares the common property of weighting knowledge as with KeGNN's clause weights.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0008770227432250977}, "created": {"value": false, "score": 0.0011786818504333496}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999940037727356}, "created": {"value": true, "score": 0.999938428401947}, "shared": {"value": false, "score": 3.635883331298828e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGAT", "normalizedForm": "KeGAT", "offsetStart": 109, "offsetEnd": 114}, "context": "Nevertheless, all GNN-based models outperform KeMLP, reporting significantly higher mean test accuracies for KeGAT, GAT, GCN and KeGCN. 1) Exploitation of the Graph Structure: It turns out that the performance gap between MLP and KeMLP is larger than for KeGNN in comparison to the standalone GNN.", "mentionContextAttributes": {"used": {"value": false, "score": 0.08538120985031128}, "created": {"value": false, "score": 2.9206275939941406e-06}, "shared": {"value": false, "score": 1.0132789611816406e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998552799224854}, "created": {"value": false, "score": 5.9545040130615234e-05}, "shared": {"value": false, "score": 1.0132789611816406e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGCN", "normalizedForm": "KeGCN", "offsetStart": 125, "offsetEnd": 130}, "context": "Therefore, in Figure 3 we analyze the accuracy grouped by the node degree for the entire graph for MLP vs. KeMLP and GCN vs. KeGCN.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9988952875137329}, "created": {"value": false, "score": 6.377696990966797e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998552799224854}, "created": {"value": false, "score": 5.9545040130615234e-05}, "shared": {"value": false, "score": 1.0132789611816406e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGNN", "normalizedForm": "KeGNN", "offsetStart": 126, "offsetEnd": 131}, "context": "Methods from scalable graph learning [20], [43], [44] represent potential solutions for the neighborhood explosion problem in KeGNN.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00024962425231933594}, "created": {"value": false, "score": 2.682209014892578e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999940037727356}, "created": {"value": true, "score": 0.999938428401947}, "shared": {"value": false, "score": 3.635883331298828e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGCN", "normalizedForm": "KeGCN", "offsetStart": 129, "offsetEnd": 134}, "context": "Nevertheless, all GNN-based models outperform KeMLP, reporting significantly higher mean test accuracies for KeGAT, GAT, GCN and KeGCN. 1) Exploitation of the Graph Structure: It turns out that the performance gap between MLP and KeMLP is larger than for KeGNN in comparison to the standalone GNN.", "mentionContextAttributes": {"used": {"value": false, "score": 0.08538120985031128}, "created": {"value": false, "score": 2.9206275939941406e-06}, "shared": {"value": false, "score": 1.0132789611816406e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998552799224854}, "created": {"value": false, "score": 5.9545040130615234e-05}, "shared": {"value": false, "score": 1.0132789611816406e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGNN", "normalizedForm": "KeGNN", "offsetStart": 141, "offsetEnd": 146}, "context": "In the well-known Kautz Taxonomy [36] that classifies neuro-symbolic approaches according to the integration of neural and symbolic modules, KeGNN falls best into the category Neuro[Symbolic] (Type 6) of fully-integrated neuro-symbolic systems that embed symbolic reasoning in a neural architecture.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0002894401550292969}, "created": {"value": false, "score": 0.000171661376953125}, "shared": {"value": false, "score": 6.556510925292969e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999940037727356}, "created": {"value": true, "score": 0.999938428401947}, "shared": {"value": false, "score": 3.635883331298828e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGCN", "normalizedForm": "KeGCN", "offsetStart": 149, "offsetEnd": 154}, "context": "To compare the performance of all models, we examine the average test accuracy over 50 runs (10 for Flickr) for the knowledge enhanced models KeMLP, KeGCN, KeGAT and the standalone base models MLP, GCN, GAT on the named datasets.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9998416900634766}, "created": {"value": false, "score": 3.2782554626464844e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998552799224854}, "created": {"value": false, "score": 5.9545040130615234e-05}, "shared": {"value": false, "score": 1.0132789611816406e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGNN", "normalizedForm": "KeGNN", "offsetStart": 151, "offsetEnd": 156}, "context": "We instantiate KeGNN in conjunction with two well-known graph neural networks, Graph Convolutional Networks and Graph Attention Networks, and evaluate KeGNN on multiple benchmark datasets for node classification.", "mentionContextAttributes": {"used": {"value": true, "score": 0.999940037727356}, "created": {"value": true, "score": 0.7155583500862122}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999940037727356}, "created": {"value": true, "score": 0.999938428401947}, "shared": {"value": false, "score": 3.635883331298828e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGCN", "normalizedForm": "KeGCN", "offsetStart": 152, "offsetEnd": 157}, "context": "As a reference, we measure the clause compliance based on the ground truth labels in the training set. Figure 5 displays the learned clause weights for KeGCN and KeMLP versus the clause compliance on the ground truth labels of the training set.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9977960586547852}, "created": {"value": false, "score": 4.291534423828125e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998552799224854}, "created": {"value": false, "score": 5.9545040130615234e-05}, "shared": {"value": false, "score": 1.0132789611816406e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGAT", "normalizedForm": "KeGAT", "offsetStart": 156, "offsetEnd": 161}, "context": "To compare the performance of all models, we examine the average test accuracy over 50 runs (10 for Flickr) for the knowledge enhanced models KeMLP, KeGCN, KeGAT and the standalone base models MLP, GCN, GAT on the named datasets.", "mentionContextAttributes": {"used": {"value": true, "score": 0.999841570854187}, "created": {"value": false, "score": 3.2186508178710938e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998552799224854}, "created": {"value": false, "score": 5.9545040130615234e-05}, "shared": {"value": false, "score": 1.0132789611816406e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KeGNN", "normalizedForm": "KeGNN", "offsetStart": 255, "offsetEnd": 260}, "context": "Nevertheless, all GNN-based models outperform KeMLP, reporting significantly higher mean test accuracies for KeGAT, GAT, GCN and KeGCN. 1) Exploitation of the Graph Structure: It turns out that the performance gap between MLP and KeMLP is larger than for KeGNN in comparison to the standalone GNN.", "mentionContextAttributes": {"used": {"value": false, "score": 0.08538120985031128}, "created": {"value": false, "score": 2.86102294921875e-06}, "shared": {"value": false, "score": 9.5367431640625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999940037727356}, "created": {"value": true, "score": 0.999938428401947}, "shared": {"value": false, "score": 3.635883331298828e-06}}}], "references": [], "runtime": 89231, "id": "4ee2ccd7386508c60aad83a64ebcb15ce2f479b1", "metadata": {"id": "4ee2ccd7386508c60aad83a64ebcb15ce2f479b1"}, "original_file_path": "../../datalake/Samuel/SOFTware-Sync/data/xml_not_sofctied/hal-04041691.grobid.tei.xml", "file_name": "hal-04041691.grobid.tei.xml"}