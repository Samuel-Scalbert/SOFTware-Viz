<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Who started this rumor? Quantifying the natural differential privacy of gossip protocols</title>
				<funder ref="#_9kbrwAq">
					<orgName type="full">European ERC</orgName>
				</funder>
				<funder>
					<orgName type="full">MSR-INRIA joint</orgName>
				</funder>
				<funder ref="#_2gWBXjs">
					<orgName type="full">Agence Nationale de la Recherche</orgName>
					<orgName type="abbreviated">ANR</orgName>
				</funder>
				<funder ref="#_KfRdjKc">
					<orgName type="full">unknown</orgName>
				</funder>
				<funder ref="#_BVBHGm4">
					<orgName type="full">CPER Nord-Pas de Calais/FEDER DATA Advanced</orgName>
				</funder>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2020-08-04">4 Aug 2020</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Aurélien</forename><surname>Bellet</surname></persName>
							<email>aurelien.bellet@inria.fr</email>
							<affiliation key="aff0">
								<orgName type="institution">INRIA</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Rachid</forename><surname>Guerraoui</surname></persName>
							<email>rachid.guerraoui@epfl.ch</email>
							<affiliation key="aff1">
								<orgName type="institution">EPFL</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Hadrien</forename><surname>Hendrikx</surname></persName>
							<email>hadrien.hendrikx@inria.fr</email>
							<affiliation key="aff2">
								<orgName type="department">DIENS</orgName>
								<orgName type="laboratory">PSL</orgName>
								<orgName type="institution">INRIA</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Who started this rumor? Quantifying the natural differential privacy of gossip protocols</title>
					</analytic>
					<monogr>
						<imprint>
							<date type="published" when="2020-08-04">4 Aug 2020</date>
						</imprint>
					</monogr>
					<idno type="MD5">AD67DCAD887100E97BE8623B8D662D7B</idno>
					<idno type="arXiv">arXiv:1902.07138v6[cs.DC]</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.8.0" ident="GROBID" when="2024-04-12T14:54+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Subject Classification Security and privacy → Privacy-preserving protocols Gossip Protocol</term>
					<term>Rumor Spreading</term>
					<term>Differential Privacy</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Gossip protocols (also called rumor spreading or epidemic protocols) are widely used to disseminate information in massive peer-to-peer networks. These protocols are often claimed to guarantee privacy because of the uncertainty they introduce on the node that started the dissemination. But is that claim really true? Can the source of a gossip safely hide in the crowd? This paper examines, for the first time, gossip protocols through a rigorous mathematical framework based on differential privacy to determine the extent to which the source of a gossip can be traceable. Considering the case of a complete graph in which a subset of the nodes are curious, we study a family of gossip protocols parameterized by a "muting" parameter s: nodes stop emitting after each communication with a fixed probability 1 -s. We first prove that the standard push protocol, corresponding to the case s = 1, does not satisfy differential privacy for large graphs. In contrast, the protocol with s = 0 (nodes forward only once) achieves optimal privacy guarantees but at the cost of a drastic increase in the spreading time compared to standard push, revealing an interesting tension between privacy and spreading time. Yet, surprisingly, we show that some choices of the muting parameter s lead to protocols that achieve an optimal order of magnitude in both privacy and speed. Privacy guarantees are obtained by showing that only a small fraction of the possible observations by curious nodes have different probabilities when two different nodes start the gossip, since the source node rapidly stops emitting when s is small. The speed is established by analyzing the mean dynamics of the protocol, and leveraging concentration inequalities to bound the deviations from this mean behavior. We also confirm empirically that, with appropriate choices of s, we indeed obtain protocols that are very robust against concrete source location attacks (such as maximum a posteriori estimates) while spreading the information almost as fast as the standard (and non-private) push protocol.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Gossip protocols (also called rumor spreading or epidemic protocols), in which participants randomly choose a neighbor to communicate with, are both simple and efficient means to exchange information in P2P networks <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b1">2,</ref><ref type="bibr" target="#b2">3,</ref><ref type="bibr" target="#b3">4]</ref>. They are a basic building block to propagate and aggregate information in distributed databases <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b5">6]</ref> and social networks <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b7">8]</ref>, to model the spread of infectious diseases <ref type="bibr" target="#b8">[9]</ref>, as well as to train machine learning models on distributed datasets <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b10">11,</ref><ref type="bibr" target="#b11">12,</ref><ref type="bibr" target="#b12">13]</ref>.</p><p>Some of the information gossiped may be sensitive, and participants sharing it may not want to be identified. This can for instance be the case of whistle-blowers or individuals that would like to exercise their right to freedom of expression in totalitarian regimes. Conversely, it may sometimes be important to locate the source of a (computer or biological) virus, or fake news, in order to prevent it from spreading before too many participants get "infected".</p><p>There is a folklore belief that gossip protocols inherently guarantee some form of source anonymity because participants cannot know who issued the information in the first place <ref type="bibr" target="#b13">[14]</ref>. Similarly, identifying "patient zero" for real-world epidemics is known to be a very hard task. Intuitively indeed, random and local exchanges make identification harder. But to what extent? Although some work has been devoted to the design of source location strategies in specific settings <ref type="bibr" target="#b14">[15,</ref><ref type="bibr" target="#b15">16,</ref><ref type="bibr" target="#b16">17]</ref>, the general anonymity claim has never been studied from a pure privacy perspective, that is, independently of the very choice of a source location technique. Depending on the use-case, it may be desirable to have strong privacy guarantees (e.g., in anonymous information dissemination) or, on the contrary, we may hope for weak guarantees, e.g., when trying to identify the source of an epidemic. In both cases, it is crucial to precisely quantify the anonymity level of gossip protocols and study its theoretical limits through a principled approach. This is the challenge we take up in this paper for the classic case of gossip dissemination in a complete network graph.</p><p>Our first contribution is an information-theoretic model of anonymity in gossip protocols based on ( , δ)-differential privacy (DP) <ref type="bibr" target="#b17">[18,</ref><ref type="bibr" target="#b18">19]</ref>. Originally introduced in the database community, DP is a precise mathematical framework recognized as the gold standard for studying the privacy guarantees of information release protocols. In our proposed model, the information to protect is the source of the gossip, and an adversary tries to locate the source by monitoring the communications (and their relative order) received by a subset of f curious nodes. In a computer network, these curious nodes may have been compromised by a surveillance agency; in our biological example, they could correspond to health professionals who are able to identify whether a given person is infected. Our notion of DP then requires that the probability of any possible observation of the curious nodes is almost the same no matter who is the source, thereby limiting the predictive power of the adversary regardless of its actual source location strategy. A distinctive aspect of our model is that the mechanism that seeks to ensure DP comes only from the natural randomness and partial observability of gossip protocols, not from additional perturbation or noise which affects the desired output as generally needed to guarantee DP <ref type="bibr" target="#b19">[20]</ref>. We believe our adaptation of DP to the gossip context to be of independent interest. We also complement it with a notion of prediction uncertainty which guarantees that even unlikely events do not fully reveal the identity of the source under a uniform prior on the source. This property directly upper bounds the probability of success of any source location attack, including the maximum likelihood estimate.</p><p>We use our proposed model to study the privacy guarantees of a generic family of gossip protocols parameterized by a muting parameter s: nodes have a fixed probability 1 -s to stop emitting after each communication (until they receive the rumor again). In our biological parallel, this corresponds to the fact that a person stops infecting other people after some time. The muting parameter captures the ability of the protocol to forget initial conditions, thereby helping to conceal the identity of the source. In the extreme case where s = 1, we recover the standard "push" gossip protocol <ref type="bibr" target="#b1">[2]</ref>, and show that it is inherently not differentially private for large graphs. In contrast, we also show that, at the other end of the Table <ref type="table">1</ref> Summary of results to illustrate the tension between privacy and speed. n is the total number of nodes and f /n is the fraction of curious nodes in the graph. δ ∈ [0, 1] quantifies differential privacy guarantees (smaller is better). Spreading time is asymptotic in n. spectrum, choosing s = 0 leads to optimal privacy guarantees among all gossip protocols.</p><p>More generally, we determine matching upper and lower bounds on the privacy guarantees of gossip protocols. Essentially, our upper bounds on privacy are obtained by tightly lower bounding the probability that the source node contacts a curious node before another node does, and upper bounding the probability that this happens for a random node fixed in advance, in a way that holds for all gossip algorithms. Remarkably, despite the fact that the source node always has a non-negligible probability of telling the rumor to a curious node first, our results highlight the fact that setting s = 0 leads to strong privacy guarantees in several regimes, including the pure ( , 0)-DP as well as prediction uncertainty.</p><p>It turns out that, although achieving optimal privacy guarantees, choosing s = 0 leads to a very slow spreading time (log-linear in the number of nodes n). This highlights an interesting tension between privacy and spreading time: the two extreme values for the muting parameter s recover the two extreme points of this trade-off. We then show that more balanced trade-offs can be achieved: appropriate choices of the muting parameter lead to gossip protocols that are near-optimally private with a spreading time that is logarithmic in the size of the graph. In particular, the trade-off between privacy and speed shows up in the constants but, surprisingly, some choices of the parameter lead to protocols that achieve an optimal order of magnitude for both aspects. Our results on this trade-off are summarized in Table <ref type="table">1</ref>: for a proportion f /n of curious nodes, one can see that setting the muting parameter s = f /n achieves almost optimal privacy (up to a factor 2) while being substantially faster than s = 0 (optimal up to a factor f /n). Similarly, if one wants to achieve (0, δ 0 )-differential privacy with δ 0 &gt; 2f /n, then it is possible to set s = δ 0 /2 and obtain a protocol that respects the privacy constraint with spreading time O(log(n)/δ 0 ). From a technical perspective, these privacy results are obtained by showing that only a small fraction of the possible observations by curious nodes have different probabilities when two different nodes start with the gossip. This requires to precisely evaluate the probability of well-chosen worst-case sequences, which is generally hard as randomness is involved both when nodes decide to stop spreading the rumor (with probability 1 -s) and when they choose who to communicate with. Our parameterized gossip protocol can be seen as a population protocol <ref type="bibr" target="#b20">[21]</ref>, and we prove its speed by analyzing its mean dynamics and leveraging concentration inequalities to bound the deviations from the mean dynamics.</p><p>We support our theoretical findings by an empirical study of our parameterized gossip protocols. The results show that appropriate choices of s lead to protocols that are very robust against classical source location attacks (such as maximum a posteriori estimates) while spreading the information almost as fast as the standard (and non-private) push protocol. Crucially, we observe that our differential privacy guarantees are very well aligned with the ability to withstand attacks that leverage background information, e.g., targeting known activists or people who have been to certain places.</p><p>The rest of the paper is organized as follows. We first discuss related work and formally introduce our concept of differential privacy for gossip. Then, we study two extreme cases of our parameterized gossip protocol: the standard push protocol, which we show is not private, and a privacy-optimal but slow protocol. This leads us to investigate how to better control the trade-off between speed and privacy. Finally, we present our empirical study and conclude by discussing open questions.</p><p>For pedagogical reasons, we keep our model relatively simple to avoid unnecessary technicalities in the derivation and presentation of our results. For completeness, we discuss the impact of possible extensions (e.g., information observed by the adversary, malicious behavior, termination criterion) in Appendix A. For space limitations, some detailed proofs are also deferred to the appendix.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2</head><p>Background and Related Work</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Gossiping</head><p>The idea of disseminating information in a distributed system by having each node push messages to a randomly chosen neighbor, initially coined the random phone-call model, dates back to even before the democratization of the Internet <ref type="bibr" target="#b1">[2]</ref>. Such protocols, later called gossip, epidemic or rumor spreading, were for instance applied to ensure the consistency of a replicated database system <ref type="bibr" target="#b4">[5]</ref>. They have gained even more importance when argued to model spreading of infectious diseases <ref type="bibr" target="#b8">[9]</ref> and information dissemination in social networks <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b7">8]</ref>. Gossip protocols can also be used to compute aggregate queries on a database distributed across the nodes of a network <ref type="bibr" target="#b21">[22,</ref><ref type="bibr" target="#b5">6]</ref>, and have recently become popular in federated machine learning <ref type="bibr" target="#b22">[23]</ref> to optimize cost functions over data distributed across a large set of peers <ref type="bibr" target="#b9">[10,</ref><ref type="bibr" target="#b10">11,</ref><ref type="bibr" target="#b11">12,</ref><ref type="bibr" target="#b12">13]</ref>. Gossip protocols differ according to their interaction schemes, i.e., pull or push, sometimes combining both <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b23">24,</ref><ref type="bibr" target="#b24">25]</ref>.</p><p>In this work, we focus on the classical push form in the standard case of a complete graph with n nodes (labeled from 0 to n -1). We now define its key communication primitive. Denoting by I the set of informed nodes, tell_gossip(i, I) allows an informed node i ∈ I to tell the information to another node j ∈ {0, ..., n -1} chosen uniformly at random. tell_gossip(i, I) returns j (the node that received the message) and the updated I (the new set of informed nodes that includes j). Equipped with this primitive, we can now formally define the class of gossip protocols that we consider in this paper.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Definition 1 (Gossip protocols). A gossip protocol on a complete graph is one that (a)</head><p>terminates almost surely, (b) ensures that at the end of the execution the set of informed nodes I is equal to {0, ..., n -1}, and (c) can modify I only through calls to tell_gossip.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Locating the Source of the Gossip</head><p>Determining the source of a gossip is an active research topic, especially given the potential applications to epidemics and social networks, see <ref type="bibr" target="#b14">[15]</ref> for a recent survey. Existing approaches have focused so far on building source location attacks that compute or approximate the maximum likelihood estimate of the source given some observed information. Each approach typically assumes a specific kind of graphs (e.g., trees, small world, etc.), dissemination model and observed information. In rumor centrality <ref type="bibr" target="#b16">[17]</ref>, the gossip communication graph is assumed to be fully observed and the goal is to determine the center of this graph to deduce the node that started the gossip. Another line of work studies the setting in which some nodes are curious sensors that inform a central entity when they receive a message <ref type="bibr" target="#b15">[16]</ref>. Gossiping is assumed to happen at random times and the source node is estimated by comparing the different timings at which information reaches the sensors. The proposed attack is natural in trees but does not generalize to highly connected graphs. The work of <ref type="bibr" target="#b25">[26]</ref> focuses on hiding the source instead of locating it. The observed information is a snapshot of who has the rumor at a given time. A specific dissemination protocol is proposed to hide the source but the privacy guarantees only hold for tree graphs.</p><p>We emphasize that the privacy guarantees (i.e., the probability not to be detected) that can be derived from the above work only hold under the specific attacks considered therein. Furthermore, all approaches rely on maximum likelihood and hence assume a uniform prior on the probability of each node to be the source. The guarantees thus break if the adversary knows that some of the nodes could not have started the rumor, or if he is aware that the protocol is run twice from the same source.</p><p>We note that other problems at the intersection of gossip protocols and privacy have been investigated in previous work, such as preventing unintended recipients from learning the rumor <ref type="bibr" target="#b26">[27]</ref>, and hiding the initial position of agents in a distributed system <ref type="bibr" target="#b27">[28]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Differential Privacy</head><p>While we borrow ideas from the approaches mentioned above (e.g., we assume that a subset of nodes are curious sensors as in <ref type="bibr" target="#b15">[16]</ref>), we aim at studying the fundamental limits of any source location attack by measuring the amount of information leaked by a gossip scheme about the identity of the source. For this purpose, a general and robust notion of privacy is required. Differential privacy <ref type="bibr" target="#b17">[18,</ref><ref type="bibr" target="#b19">20]</ref> has emerged as a gold standard for it holds independently of any assumption on the model, the computational power, or the background knowledge that the adversary may have. Differentially private protocols have been proposed for numerous problems in the fields of databases, data mining and machine learning: examples include computing aggregate and linear counting queries <ref type="bibr" target="#b19">[20]</ref>, releasing and estimating graph properties <ref type="bibr" target="#b28">[29,</ref><ref type="bibr" target="#b29">30]</ref>, clustering <ref type="bibr" target="#b30">[31]</ref>, empirical risk minimization <ref type="bibr" target="#b31">[32]</ref> and deep learning <ref type="bibr" target="#b32">[33]</ref>.</p><p>In this work, we consider the classic version of differential privacy which involves two parameters , δ ≥ 0 that quantify the privacy guarantee <ref type="bibr" target="#b18">[19]</ref>. More precisely, given any two databases D 1 and D 2 that differ in at most one record, a randomized information release protocol P is said to guarantee ( , δ)-differential privacy if for any possible output S:</p><formula xml:id="formula_0">p(P(D 1 ) ∈ S) ≤ e p(P(D 2 ) ∈ S) + δ,<label>(1)</label></formula><p>where p(E) denotes the probability of event E. Parameter places a bound on the ratio of the probability of any output when changing one record of the database, while parameter δ is assumed to be small and allows the bound to be violated with small probability. When = 0, δ gives a bound on the total variation distance between the output distributions, while δ = 0 is sometimes called "pure" -differential privacy. DP guarantees hold regardless of the adversary and its background knowledge about the records in the database. In our context, the background information could be the knowledge that the source is among a subset of all nodes. Robustness against such background knowledge is crucial in some applications, for instance when sharing secret information that few people could possibly know or when the source of an epidemic is known to be among people who visited a certain place. Another key feature of differential privacy is composability: if ( , δ)-differential privacy holds for a release protocol, then querying this protocol two times about the same dataset satisfies (2 , 2δ)-differential privacy. This is important for rumor spreading as it enables to quantify privacy when the source propagates multiple rumors that the adversary can link to the same source (e.g., due to the content of the message). We will see in Section 6 that these properties are essential in practice to achieve robustness to concrete source location attacks.</p><p>Existing differentially private protocols typically introduce additional perturbation (also called noise) to hide critical information <ref type="bibr" target="#b19">[20]</ref>. In contrast, an original aspect of our work is that we will solely rely on the natural randomness and limited observability brought by gossip protocols to guarantee differential privacy.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">A Model of Differential Privacy for Gossip Protocols</head><p>Our first contribution is a precise mathematical framework for studying the fundamental privacy guarantees of gossip protocols. We formally define the inputs of the gossip protocols introduced in Definition 1, the outputs observed by the adversary during their execution, and the privacy notions we investigate. To ease the exposition, we adopt the terminology of information dissemination, but we sometimes illustrate the ideas in the context of epidemics.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Inputs and Outputs</head><p>As described in Section 2.3, differential privacy is a probabilistic notion that measures the privacy guarantees of a protocol based on the variations of its output distribution for a change in its input. In this paper, we adapt it to our gossip context. We first formalize the inputs and outputs of gossip protocols, in the case of a single piece of information to disseminate (multiple pieces can be addressed through composition, see Section 2.3). At the beginning of the protocol, a single node, the source, has the information (the gossip, or rumor). This node defines the input of the gossip protocol, and it is the actual "database" that we want to protect. Therefore, in our context, input databases in Equation (1) have only 1 record, which contains the identity of the source (an integer between 0 and n -1). Therefore, all possible input databases differ in at most one record, and differential privacy aims at protecting the content of the database, i.e., which node started the rumor. We now turn to the outputs of a gossip protocol. The execution of a protocol generates an ordered sequence S omni of pairs (i, j) of calls to tell_gossip where (S omni ) t corresponds to the t-th time the tell_gossip primitive has been called, i is the node on which tell_gossip was used and j the node that was told the information. If several calls to tell_gossip happen simultaneously, ties are broken arbitrarily. We assume that the messages are received in the same order that they are sent. This protocol can thus be seen as an epidemic population protocol model <ref type="bibr" target="#b20">[21]</ref> in which nodes interact using tell_gossip. The sequence S omni corresponds to the output that would be observed by an omniscient entity who could eavesdrop on all communications. It is easy to see that, for any execution, the source can be identified exactly from S omni simply by retrieving (S omni ) 0 .</p><p>In this work, we focus on adversaries that monitor a set of curious nodes C of size f , i.e. they observe all communications involving a curious node. This model, previously introduced in <ref type="bibr" target="#b15">[16]</ref>, is particularly meaningful in large distributed networks: while it is unlikely that an adversary can observe the full state of the network at any given time, compromising or impersonating a subset of the nodes appears more realistic. The number of curious nodes is directly linked with the release mechanism of DP: while the final state of the system is always the same (everyone knows the rumor), the information released depends on which messages were received by the curious nodes during the execution. Formally, the output disclosed to the adversary during the execution of the protocol, i.e., the information he can use to try to identify the source, is a subsequence of S omni as defined below. Assumption 2. The sequence S observed by the adversary through the (random) execution of the protocol is a (random) subsequence S = ((S omni ) t |(S omni ) t = (i, j) with j ∈ C), that contains all messages sent to curious nodes. The adversary has access to the relative order of tuples in S, which is the same as in S omni , but not to the index t in S omni .</p><p>It is important to note that the adversary does not know which messages were exchanged between non-curious nodes. In particular, he does not know how many messages were sent in total at a given time. As we focus on complete graphs, knowing which curious node received the rumor gives no information on the source node. For a given output sequence S, we write S t = i to denote that the t-th tell_gossip call in S originates from node i. Omitting the dependence on S, we also denote t i (j) the time at which node j first receives the message (even for the source) and t d (j) the time at which j first communicates with a curious node.</p><p>The ratio f /n of curious nodes determines the probability of the adversary to gather information (the more curious nodes, the more information leaks). For a fixed f , the adversary only becomes weaker as the network grows bigger. Since we would like to study adversaries with fixed power, unless otherwise noted we make the following assumption.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Assumption 3. The ratio of curious nodes f /n is constant.</head><p>Finally, we emphasize that we do not restrict the computational power of the adversary.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Privacy Definitions</head><p>We now formally introduce our privacy definitions. The first one is a direct application of differential privacy (Equation <ref type="formula" target="#formula_0">1</ref>) for the inputs and outputs specified in the previous section. To ease notations, we denote by I 0 the source of the gossip (the set of informed nodes at time 0), and for any given i ∈ {0, ..., n -1}, we denote by p i (E) = p(E|I 0 = {i}) the probability of event E if node i is the source of the gossip. The protocol is therefore abstracted in this notation. Denoting by S the set of all possible outputs, we say that a gossip protocol is ( , δ)-differentially private if:</p><formula xml:id="formula_1">p i (S) ≤ e p j (S) + δ, ∀S ⊂ S, ∀i, j ∈ {0, ..., n -1},<label>(2)</label></formula><p>where p(S) is the probability that the output belongs to the set S. This formalizes a notion of source indistinguishability in the sense that any set of output which is likely enough to happen if node i starts the gossip (say, p i (S) ≥ δ) is almost as likely (up to a e multiplicative factor) to be observed by the adversary regardless of the source. Note however that when δ &gt; 0, this definition can be satisfied for protocols that release the identity of the source (this can happen with probability δ). To capture the behavior under unlikely events, we also consider the complementary notion of c-prediction uncertainty for c &gt; 0, which is satisfied if for a uniform prior p(I 0 ) on source nodes and any i ∈ {0, ..., n -1}:</p><formula xml:id="formula_2">p(I 0 = {i}|S)/p(I 0 = {i}|S) ≥ c,<label>(3)</label></formula><p>for any S ⊂ S such that p i (S) &gt; 0. Prediction uncertainty guarantees that no observable output S (however unlikely) can identify a node as the source with large enough probability: it ensures that the probability of success of any source location attack is upper bounded by 1/(1 + c). This holds in particular for the maximum likelihood estimate. Prediction uncertainty does not have the robustness of differential privacy against background knowledge, as it assumes a uniform prior on the source. While it can be shown that ( , 0)-DP with &gt; 0 implies prediction uncertainty, the converse is not true. Indeed, prediction uncertainty is satisfied as soon as no output identifies any node with enough probability, without necessarily making all pairs of nodes indistinguishable as required by DP. We will see that prediction uncertainty allows to rule out some naive protocols that have nonzero probability of generating sequences which reveal the source with certainty.</p><p>Thanks to the symmetry of our problem, we consider without loss of generality that node 0 starts the rumor (I 0 = {0}) and therefore we will only need to verify Equations ( <ref type="formula" target="#formula_1">2</ref>) and ( <ref type="formula" target="#formula_2">3</ref>) for i = 0 and j = 1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Extreme Privacy Cases</head><p>In this section, we study the fundamental limits of gossip in terms of privacy. To do so, we parameterize gossip protocols by a muting parameter s ∈ [0, 1], as depicted in Algorithm 1.</p><p>We thereby capture, within a generic framework, a large family of protocols that fit Definition 1 and work as follows. They maintain a set A of active nodes (initialized to the source node) which spread the rumor asynchronously and in parallel: this is modeled by the fact that at each step of the protocol, a randomly selected node i ∈ A invokes the tell_gossip primitive to send the rumor to another node (which in turn becomes active), while i also stays active with probability s. This is illustrated in Figure <ref type="figure">1</ref>. The muting parameter s can be viewed as a randomized version of fanout in <ref type="bibr" target="#b33">[34]</ref>.<ref type="foot" target="#foot_0">1</ref> Algorithm 1 follows the population protocol model <ref type="bibr" target="#b20">[21]</ref>, and is also related to the SIS epidemic model <ref type="bibr" target="#b8">[9]</ref> but in which the rumor never dies regardless of the value of s ∈ [0, 1] (there always remain some active nodes). Although we present it from a centralized perspective, we emphasize that Algorithm 1 is asynchronous and can be implemented by having active nodes wake up following a Poisson process.</p><p>In the rest of this section, we show that extreme privacy guarantees are obtained for extreme values of the muting parameter s.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Standard Push has Minimal Privacy</head><p>The natural case to study first in our framework is when the muting parameter is set to s = 1: this corresponds to the standard push protocol <ref type="bibr" target="#b1">[2]</ref> in which nodes always keep emitting after they receive the rumor. Theorem 4 shows that, surprisingly, the privacy guarantees of this protocol become arbitrarily bad as the size of the graph increases (keeping the fraction of curious nodes constant).</p><p>Theorem 4 (Standard push is not differentially private). If Algorithm 1 with s = 1 guarantees ( , δ)-DP for all values of n and constant &lt; ∞, then δ = 1. This result may seem counter-intuitive at first since one could expect that it would be more and more difficult to locate the source when the size of the graph increases. Yet, since the ratio of curious nodes is kept constant, this result comes from the fact that the event {t d (0) ≤ t i (1)} (node 0 communicates with a curious node before node 1 gets the message) becomes more and more likely as n grows, hence preventing any meaningful differential privacy guarantee when n is large enough. The proof is in Appendix C.1. Theorem 4 clearly highlights the fact that the standard gossip protocol (s = 1) is not differentially private in general. We now turn to the other extreme case, where the muting parameter s = 0. Green nodes know the rumor, and red circled nodes are active. When s = 0, there is only one active node at a time, which always stops emitting after telling the gossip. In the case s = 1, nodes always remain active once they know the rumor (this is the standard push gossip protocol <ref type="bibr" target="#b1">[2]</ref>). When 0 &lt; s &lt; 1, each node remains active with probability s after each communication.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Muting After Infecting has Maximal Privacy</head><p>We now study the privacy guarantees of generic Algorithm 1 when s = 0. In this protocol, nodes forward the rumor to exactly one random neighbor when they receive it and then stop emitting until they receive the rumor again. Intuitively, this is good for privacy: the source changes and it is quickly impossible to recover which node started the gossip (as initial conditions are quickly forgotten). In fact, once the source tells the rumor once, the state of the system (the set of active nodes, which in this case is only one node) is completely independent from the source. A similar idea was used in the protocol introduced in <ref type="bibr" target="#b25">[26]</ref>.</p><p>The following result precisely quantifies the privacy guarantees of Algorithm 1 with parameter s = 0 and shows that it is optimally private among all gossip protocols (in the precise sense of Definition 1). Theorem 5. Let ≥ 0. For muting parameter s = 0, Algorithm 1 satisfies ( , δ)-differential</p><formula xml:id="formula_3">privacy with δ = f n 1 -e -1</formula><p>f and c-prediction uncertainty with c = n f +1 -1. Furthermore, these privacy guarantees are optimal among all gossip protocols. Proof of Theorem 5. We start by proving the fundamental limits on the privacy of any gossip protocol, and then prove matching guarantees for Algorithm 1 with s = 0.</p><p>(Fundamental limits in privacy) Proving a lower bound on the differential privacy parameters can be achieved by finding a set of possible outputs S (here, a set of ordered sequences) such that p 0 (S) ≥ p 1 (S). Indeed, a direct application of the definition of Equation (2) yields that given any gossip protocol, S ⊂ S and w 0 , w 1 ∈ R such that w 0 ≤ p 0 (S) and p 1 (S) ≤ w 1 , if the protocol satisfies ( , δ) differential privacy then δ ≥ w 0 -e w 1 . The proofs need to consider all the messages sent and then distinguish between the ones that are disclosed (sent to curious nodes) and the ones that are not.</p><p>Since I = {0} then tell_gossip is called for the first time by node 0 and it is called at least once otherwise the protocol terminates with I = {0}, violating the conditions of Definition 1. We denote by S (0) the set of output sequences such that S 0 = 0 (i.e., 0 is the first to communicate with a curious node). We also define the event T c 0 = {t d (0) = 0} (the source does not send its first message to a curious node). For all i / ∈ C ∪ {0}, we have that</p><formula xml:id="formula_4">p 0 (S 0 = i|T c 0 ) ≤ p 0 (S 0 = 0|T c 0 ) since p 0 (A 1 = {0}) = p 0 (i ∈ A 1 )</formula><p>, where A 1 is the set of active nodes at time 1. From this inequality we get</p><formula xml:id="formula_5">i / ∈C p 0 (S 0 = 0|T c 0 ) ≥ i / ∈C p 0 (S 0 = i|T c 0 ) = 1 ≥ i / ∈C p 0 (S 0 = 1|T c 0 ),</formula><p>where the equality comes from the fact that S 0 = i for some i / ∈ C. The second inequality comes from the fact that p j (S 0 = i|T c 0 ) = p j (S 0 = k|T c 0 ) for all i, k = j. Therefore, we have p 0 (S 0 = 0|T c 0 ) ≥ 1 n-f and p 0 (S 0 = 1|T c 0 ) ≤ 1 n-f . Combining the above expressions, we derive the probability of S (0) when 0 started the gossip. We write p 0 (S (0) ) = p 0 (S (0) , t d (0) = 0) + p 0 (S (0) , T c 0 ) and then, since p 0 S (0) |t d (0) = 0 = 1:</p><formula xml:id="formula_6">p 0 S (0) = p 0 t d (0) = 0 p 0 S (0) |t d (0) = 0 + p 0 S (0) |T c 0 p 0 T c 0 ≥ f n + 1 n -f 1 - f n</formula><p>In the end, p 0 (S (0) ) ≥ f n + 1 n . If node 1 initially has the message, we do the same split and obtain p 1 (S (0) |t d (0) = 0) = 0 and so p 1 (S (0</p><formula xml:id="formula_7">) ) = p 1 (T c 0 )p 1 (S (0) |T c 0 ) ≤ 1 n .</formula><p>The upper bound on prediction uncertainty is derived using the same quantities:</p><formula xml:id="formula_8">p(I 0 = 0|S (0) ) p(I 0 = 0|S (0) ) = i / ∈C∪{0} p i (S (0) ) p 0 (S (0) ) ≤ (n -f -1) p 1 (S (0) ) p 0 (S (0) ) ≤ n -f -1 f + 1 = n f + 1 -1.</formula><p>Note that we have never assumed that curious nodes knew how many messages were sent at a given point in time. We have only bounded the probability that the source is the first node that sends a message to curious nodes.</p><p>(Matching guarantees for Algorithm 1 with s = 0) For this protocol, the only outputs S such that p 0 (S) = p 1 (S) are those in which t d (0) = 0 or t d (1) = 0. We write:</p><formula xml:id="formula_9">p 0 (S 0 = 0) = p 0 (t d (0) = 0)p 0 (S 0 = 0|t d (0) = 0) + p 0 (T c 0 )p 0 (S 0 = 0|T c 0 ).</formula><p>For any i / ∈ C where C is the set of curious nodes, we have that p 0 (S 0 = 0|T c 0 ) = p 0 (S 0 = i|T c 0 ) = 1 n-f . Indeed, given that t d (0) = 0, the node that receives the first message is selected uniformly at random among non-curious nodes, and has the same probability to disclose the gossip at future rounds. Plugging into the previous equation, we obtain:</p><formula xml:id="formula_10">p 0 (S 0 = 0) = f n + 1 - f n 1 n -f = f + 1 n .</formula><p>For any other node i /</p><formula xml:id="formula_11">∈ C ∪ {0}, p 0 (S 0 = i) = p 0 (T c 0 )p 0 (S 0 = i|T c 0 ) = 1 n because p 0 (S 0 = i|t d (0) = 0) = 0.</formula><p>Combining these results we get p 0 (S (0) ) ≤ e p 1 (S (0) ) + δ for any &gt; 0 and δ = f n (1 -e -1 f ). By symmetry, we make a similar derivation for S (1) . To prove the prediction uncertainty result, we use the differential privacy result with e = f + 1 (and thus δ = 0) and write that for any S ∈ S:</p><formula xml:id="formula_12">p(I 0 = 0|S) p(I 0 = 0|S) = i / ∈C∪{0} p i (S) p 0 (S) ≥ (n -f -1)e -= n f + 1 -1.</formula><p>Theorem 5 establishes matching upper and lower bounds on the privacy guarantees of gossip protocols. More specifically, it shows that setting the muting parameter to s = 0 provides strong privacy guarantees that are in fact optimal. Note that in the regime where = 0 (where DP corresponds to the total variation distance), δ cannot be smaller than the proportion of curious nodes. This is rather intuitive since the source node has probability at least f /n to send its first message to a curious node. However, one can also achieve differential privacy with δ much smaller than f /n by trading-off with &gt; 0. In particular, the pure version of differential privacy (δ = 0) is attained for ≈ log f , which provides good privacy guarantees when the number of curious nodes is not too large. Furthermore, even though the probability of disclosing some information is of order f /n, prediction uncertainty guarantee shows that an adversary with uniform prior always has a high probability of making a mistake when predicting the source. Crucially, these privacy guarantees are made possible by the natural randomness and partial observability of gossip protocols.</p><p>Remark 6 (Special behavior of the source). A subtle but key property of Algorithm 1 is that the source follows the same behavior as other nodes. To illustrate how violating this property may give away the source, consider this natural protocol: the source node transmits the rumor to one random node and stops emitting, then standard push (Algorithm 1 with s = 1) starts from the node that received the information. While this delayed start gossip protocol achieves optimal differential privacy in some regimes, it is fundamentally flawed. In particular, it does not guarantee prediction uncertainty in the sense that c → 0 as the graph grows. Indeed, the adversary can identify the source with high probability by detecting that it communicated only once and then stopped emitting for many rounds. We refer to Appendix B for the formal proof.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Privacy vs. Speed Trade-offs</head><p>While choosing s = 0 achieves optimal privacy guarantees, an obvious drawback is that it leads to a very slow protocol since only one node can transmit the rumor at any given time.</p><p>It is easy to see that the number of gossip operations needed to inform all nodes can be reduced to the time needed for the classical coupon collection problem: it takes O(n log n) communications to inform all nodes with probability at least 1 -1/n <ref type="bibr" target="#b34">[35]</ref>. As this protocol performs exactly one communication at any given time, it needs time O(n log n) to inform all nodes with high probability. This is in stark contrast to the standard push gossip protocol (s = 1) studied in Section 4.1 where all informed nodes can transmit the rumor in parallel, requiring only time O(log n) <ref type="bibr" target="#b0">[1]</ref>. These observations motivate the exploration of the privacy-speed trade-off (with parameter 0 &lt; s &lt; 1). We first show below that nearly optimal privacy can be achieved for small values of s. Then, we study the spreading time and show that the O(log n) time of the standard gossip protocol also holds for s &gt; 0, leading to a sweet spot in the privacy-speed trade-off.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Privacy Guarantees</head><p>Theorem 7 conveys a (0, δ)-differential privacy result, which means that apart from some unlikely outputs that may disclose the identity of the source node, most of these outputs actually have the same probability regardless of which node triggered the dissemination. We emphasize that the guarantee we obtain holds for any graph size with fixed proportion f /n of curious nodes.</p><p>Theorem 7 (Privacy guarantees for s &lt; 1). For 0 &lt; s &lt; 1 and any fixed r ∈ N * , Algorithm 1 with muting parameter s guarantees (0, δ)-differential privacy with:</p><formula xml:id="formula_13">δ = 1 -(1 -s) ∞ k=0 s k 1 - f n k+1 ≤ 1 -(1 -s r ) 1 - f n r .</formula><p>For example, choosing r = 1 leads to δ ≤ s + (1 -s) f n , as reported in Table <ref type="table">1</ref>. Slightly tighter bounds can be obtained, but this is enough already to recover optimal guarantees as s → 0.</p><p>Proof. We first consider that S is such that t d (0) ≥ t d <ref type="bibr" target="#b0">(1)</ref>. Then, p 0 (S) ≤ p 1 (S) since node 0 needs to receive the rumor before being able to communicate it to curious nodes, and Equation ( <ref type="formula" target="#formula_1">2</ref>) is verified. Suppose now that S is such that t d (0) ≤ t d <ref type="bibr" target="#b0">(1)</ref>. In this case, we note t m the first time at which the source stops to emit (which happens with probability 1 -s each time it sends a message). Then, we denote F = {t d (0) ≤ t m } (and F c its complement). In this case, p 0 (S|F c ) ≤ p 1 (S|F c ). Indeed, conditioned on F c , t d (0) ≥ t i (0) if node 0 is not the source and t d (0) ≥ max(t m , t i (0)) if it is. Then, we can write:</p><formula xml:id="formula_14">p 0 (S) = p 0 (S, F c ) + p 0 (S, F ) ≤ p 1 (S, F c ) + p 0 (F ) ≤ p 1 (S) + p 0 (F ).</formula><p>Denoting T f the number of messages after which the source stops emitting, we write:</p><formula xml:id="formula_15">p 0 (F ) = ∞ k=1 p 0 (T f = k)p 0 (F |T f = k) = ∞ k=0 (1 -s)s k 1 -1 - f n k+1 , for s &gt; 0.</formula><p>Note that we can also write for k ≥ 1 that p 0 (F ) = p 0 (F, T f ≤ k) + p 0 (F, T f &gt; k), and so:</p><formula xml:id="formula_16">p 0 (F ) ≤ (1 -s k ) 1 -1 - f n k + s k = 1 -(1 -s k ) 1 - f n k .</formula><p>The differential privacy guarantees given by Theorem 7 and the optimal guarantees of Theorem 5 are of the same order of magnitude when s is of order f /n. Indeed, consider = 0. Then, setting r = 1 in Theorem 7 leads to an additive gap of s(1 -f /n) between the privacy of Algorithm 1 and the optimal guarantee, showing that one can be as close as desired to the optimal privacy as long as s is chosen close enough to 0. In particular, the ratio between the privacy of Algorithm 1 and the lower bound is less than 2 for all s ≤ f /n. This indicates that the privacy guarantees are very tight in this regime. We also recover exactly the optimal guarantee of Theorem 5 in the case s = 0 (without the ability to control the trade-off between and δ). Importantly, we also show that Algorithm 1 with s &lt; 1 satisfies prediction uncertainty, unlike the case where s = 1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Theorem 8. Algorithm 1 guarantees prediction uncertainty with</head><formula xml:id="formula_17">c = (1 -f +1 n )(1 -s).</formula><p>This result is another evidence that picking s &lt; 1 allows to derive meaningful privacy guarantees. The proof can be found in Appendix C.1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Spreading time</head><p>We have shown that parameter s has a significant impact on privacy, from optimal (s = 0) to very weak (s = 1) guarantees. Yet, s also impacts the spreading time: the larger s, the more active nodes at each round. This is highlighted by the two extreme cases, for which the spreading time is already known and exhibits a large gap: O(log n) for s = 1 and O(n log n) for s = 0. To establish whether we can obtain a protocol that is both private and fast, we need to characterize the spreading time for the cases where 0 &lt; s &lt; 1.</p><p>The key result of this section is to prove that the logarithmic speed of the standard push gossip protocol holds more generally for all s &gt; 0. This result is derived from the fact that the ability to forget does not prevent an exponential growth phase. What changes is that the population of active nodes takes approximately 1/s rounds to double instead of 1 for standard gossip. For ease of presentation, we state below the result for the synchronous version of Algorithm 1, in which the notion of round corresponds to iterating over the full set A. A similar result (with an appropriate notion of rounds) can be obtained for the asynchronous version given in Algorithm 1.</p><p>Theorem 9. For a given s &gt; 0 and for all 1 &gt; δ &gt; 0 and C ≥ 1, there exists n large enough such that the synchronous version of Algorithm 1 with parameter s sends at least Cn log n messages in 6C log(n)/s rounds with probability at least 1 -δ.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Proof sketch.</head><p>The key argument of the proof is that the gossip process very closely follows its mean dynamics. After a transition phase of a logarithmic number of rounds, a constant fraction of the nodes (depending on s) remains active despite the probability to stop emitting after each communication. This "determinism of gossip process" has been introduced in <ref type="bibr" target="#b35">[36]</ref>, but their analysis only deals with the case s = 1. Our proof takes into account the nontrivial impact of nodes deactivation in the exponential and linear growth phase. Besides, we need to introduce and analyze a last phase, showing that with high probability the population never drops below a critical threshold of active nodes. The full proof is in Appendix C.2.</p><p>Theorem 9 shows that generic gossip with s &gt; 0 still achieves a logarithmic spreading time even though nodes can stop transmitting the message. The 1/s dependence is intuitive since 1/s rounds are needed in expectation to double the population of active nodes (without taking collisions into account). Therefore, the exponential growth phase which usually takes time O(log n) now takes time O(log(n)/s) for s &lt; 1. To summarize, we have shown that one can achieve both fast spreading and near-optimal privacy, leading to the values presented in Table <ref type="table">1</ref> of the introduction.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Empirical Evaluation</head><p>In this section, we evaluate the practical impact of s on the spreading time as well as on the robustness to source location attacks run by adversaries with background knowledge. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1">Spreading Time</head><p>To complement Theorem 9, which proves logarithmic spreading time (asymptotic in n), we run simulations on a network of size n = 2 16 . The logarithmic spreading time for s &gt; 0 is clearly visible in Figure <ref type="figure">2a</ref>, where we see that the gossip spreads almost as fast for s = 0.5 that it does for s = 1. We also observe that even when s is small, the gossip remains much faster than for s = 0. The results in Figure <ref type="figure">2b</ref> illustrate that the fraction of active nodes grows exponentially fast for all values of s &gt; 0 and then reaches a plateau when the probability of creating a new active node is compensated by the probability of informing an already active node. Empirically, this happens when the fraction of active nodes is of order s.</p><p>We note incidentally that gossip protocols are often praised for their robustness to lost messages <ref type="bibr" target="#b36">[37,</ref><ref type="bibr" target="#b37">38]</ref>. While the protocol with s = 0 does not tolerate a single lost message, setting s &gt; 0 improve the resilience thanks to the linear proportion of active nodes. The latter property makes it unlikely that the protocol stops because of lost messages as long as s is larger than the probability of losing messages. Of course, the protocol remains somewhat sensitive to messages lost during the first few steps.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Robustness Against Source Location Attacks</head><p>Getting an intuitive understanding of the privacy guarantees provided by Theorem 7 is not straightforward, as often the case with differential privacy. Therefore, we illustrate the effect of the muting parameter on the guarantees of our gossip protocol by simulating concrete source location attacks. We consider two challenging scenarios where the adversary has some background knowledge: either 1) prior knowledge that the source belongs to a subset of the nodes, or 2) side information indicating that the same source disseminates multiple rumors.</p><p>Prior knowledge on the source. We first consider the case where the adversary is able to narrow down the set of suspected nodes. In this case we can design a provably optimal attack, as shown by the following theorem (see Appendix C.3 for the proof).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Theorem 10.</head><p>If the adversary has a uniform prior over a subset P of nodes, i.e., p(I 0 = i) = p(I 0 = j) for all i, j ∈ P and p(I 0 = i) = 0 for i / ∈ P , and for some output sequence S, t c is such that S tc ∈ P and S t / ∈ P if t &lt; t c , then p(I 0 = S tc |S) ≥ p(I 0 = i|S) for all i.</p><p>Theorem 10 means that under a uniform prior over nodes in P , the attack in which curious nodes predict the source to be the first node in P that communicates with them corresponds to the Maximum A Posteriori (MAP) estimator. The set P represents the prior knowledge of the adversary: he knows for sure that the source belongs to P . Figure <ref type="figure">3a</ref> shows the precision of this attack as a function of s for varying degrees of prior knowledge. We see that, when s is small, the prior knowledge does not improve the attack precision significantly, and that the precision remains very close to the probability that the source sends its first message to a curious node. This robustness to prior knowledge is consistent with the properties of differential privacy (see 2.3). On the contrary, when s is high (i.e., differential privacy guarantees are weak), the impact of the prior knowledge on the precision of the attack is much stronger.</p><p>Multiple dissemination. We investigate another scenario in which differential privacy guarantees can also provide robustness, namely when the adversary knows that the same source node disseminates multiple rumors. In this setting, analytically deriving an optimal attack is very difficult. Instead, we design an attack which leverages the fact that even though the source is not always the first node to communicate with curious nodes, with high probability it will be among the first to do so. More precisely, the curious nodes record the 10 first nodes that communicate with them in each instance (results are not very sensitive to this choice), and they predict the source to be the node that appears in the largest number of instances. In case of a tie, the curious nodes choose the node that first communicated with them, with ties broken at random. Figure <ref type="figure">3b</ref> shows that the precision of this attack increases dramatically with the number of rumors when s is large, reaching almost sure detection for 10 rumors. Remarkably, for small values of s, the attack precision increases much more gracefully with the number of rumors, as expected from the composition property of differential privacy discussed in Section 2.3. Meaningful privacy guarantees can still be achieved as long as the source does not spread too many rumors.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Concluding Remarks</head><p>This paper initiates the formal study of privacy in gossip protocols to determine to which extent the source of a gossip can be traceable. Essentially: <ref type="bibr" target="#b0">(1)</ref> We propose a formal model of anonymity in gossip protocols based on an adaptation of differential privacy; (2) We establish tight bounds on the privacy of gossip protocols, highlighting their natural privacy guarantees; (3) We precisely capture the trade-off between privacy and speed, showing in particular that it is possible to design both fast and near-optimally private gossip protocols; (4) We experimentally evaluate the speed of our protocols as well as their robustness to source location attacks, validating the relevance of our formal differential privacy guarantees in scenarios where the adversary has some background knowledge. Our work opens several interesting perspectives. In particular, it paves the way to the study of differential privacy for gossip protocols in general graphs, which is challenging and requires relaxations of differential privacy in order to obtain nontrivial guarantees. We refer to Appendix D for a discussion of these questions. Another avenue for future research is motivated by very recent work showing that hiding the source of a message can amplify differential privacy guarantees for the content of the message <ref type="bibr" target="#b38">[39,</ref><ref type="bibr" target="#b39">40,</ref><ref type="bibr" target="#b40">41]</ref>. Unfortunately, classic primitives to hide the source of messages such as mixnets can be difficult and costly to deploy. Showing that gossip protocols can naturally amplify differential privacy for the message contents would make them very desirable for privacy-preserving distributed AI applications, such as those based on federated <ref type="bibr" target="#b22">[23]</ref> and decentralized machine learning <ref type="bibr" target="#b41">[42]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A Model Extensions</head><p>We kept our model relatively simple in the main paper to avoid unnecessary complexity in the notations and additional technicalities in the derivation and presentation of our results.</p><p>In this appendix, we briefly discuss various possible extensions. Basically, we make here the point that, although these generally lead to technical complications, they do not significantly impact privacy guarantees.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.1 Pull and Push-Pull Protocols</head><p>Our study focus on the classic push form of gossip protocols. This can be justified by the fact that, for regular graphs, synchronous push has asymptotic spreading time guarantees that are comparable with the push-pull variant <ref type="bibr" target="#b42">[43]</ref>. Besides, the differential privacy guarantees of any gossip protocol are limited by the probability that the first node informed by the source is a curious node, and we show this bound can be matched with push protocols. Nevertheless, extensions of our results to pull and push-pull variants of gossip protocols <ref type="bibr" target="#b2">[3]</ref> are possible. Forgetting mechanisms similar to the ones in Algorithm 1 can be introduced for these protocols, i.e. nodes would have a probability 1 -s to stop disclosing information after each time they are pulled (if they do not pull someone with the information in between).</p><p>Although slightly different, the optimal privacy guarantees would remain of the same order of magnitude. Yet, we expect pull guarantees to be even worse in the case s = 1 because curious nodes could stop suspecting all nodes that they have pulled and that did not have the rumor. Besides, the pull protocol for s = 0 would be even slower than its push counterpart.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.2 Eavesdropping Adversary</head><p>Since we consider a complete graph, our formalization of the adversary as a fraction f /n of curious nodes is closely related to an eavesdropping adversary who would observe each communication with probability f /n. Indeed, both models consider that each communication has a probability f /n of being disclosed to the adversary. Most of our results are thus easily transferable to this alternative setting. The only difference would be that all nodes can be suspected in the eavesdropping model, thus introducing a (1 -f /n) -1 factor each time we consider the population of non-curious nodes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.3 Information Observed by the Adversary</head><p>We discuss three possible variants of the output observed by the adversary.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.3.1 Messages Sent by Curious Nodes</head><p>For simplicity of exposition, we considered that curious nodes only observe messages that are sent to them and not the messages that they send. However, including the messages sent by curious nodes in their observed output would not impact the bounds on privacy (i.e., the guarantees for the algorithms). For the optimal algorithm, we only consider what happens during the first round, so including the messages sent by curious nodes does not change the result. This in particular implies that the fundamental limits of Theorem 5 remain the same (since the adversary observes strictly more information). Similarly, for the parameterized algorithm, Theorem 7 is obtained by bounding the probability of a set Ŝ. Then, we have p( Ŝ, S out ) ≤ p( Ŝ) where S out is the sequence of messages sent by the curious nodes. In general, adding the messages sent by curious nodes to the output sequences has little or no impact on our results.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.3.2 Message Ordering</head><p>We assumed that the relative order of messages is preserved in the output sequence observed by curious nodes. This could be relaxed, as in real-world networks a message sent before another may well be received after it. One could for instance introduce a random swapping model to take this into account and investigate whether this weaker output leads to an improvement in the privacy guarantees. However, we argue that this improvement would be quite limited. First of all, it would not affect the privacy guarantees of the optimal protocol: since there is a single active node able to send a message at any given time, swapping is not possible. Therefore, the lower bound and the matching algorithm would not be affected by this change. Since parameterized gossip is almost privacy-optimal for small values of s and swapping would only increase privacy, then we argue that the guarantees of parameterized gossip would be very similar in this case. Furthermore, even when several nodes are active at the same time (e.g., in Algorithm 1 large s), the proofs can be adapted to work with counting the messages received instead of the messages sent. In this case, swapping is as likely to expose the source (making its messages arrive earlier) than to hide it (delaying the messages it sends).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.3.3 Global Timing</head><p>In our model, we assume that curious nodes only have access to the relative ordering in which they received the messages but they have no information on the global time at which it was sent. This is justified in practice by the asynchrony and locality of the exchanges. We briefly discuss here how the privacy guarantees are affected if one considers a stronger adversary that has access to the number of times the tell_gossip procedure has been called. Formally, this adversary observes the set S = {(t, i, j)|(i, j) = (S omni ) t , j ∈ C}. This set can be turned into a sequence by ordering it by increasing values of t. Note that this is not a realistic adversary as gossip protocols naturally enforce partial observability of the events.</p><p>The following result quantifies the limits of privacy for this stronger adversary, which can be compared to the results of Theorem 5 in the main text. We can see that in the regime = 0 (total variation distance), the limits remain the same. However, achieving δ &lt; f /n and prediction uncertainty is not possible against this stronger adversary. Note also that Algorithm 1 with s = 0 remains optimal.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Theorem 11. If a gossip protocol satisfies ( , δ)-differential privacy and c-prediction uncertainty then we have δ ≥ f</head><p>n and c = 0 in the strong adversary setting. Furthermore, these bounds are tight and matched by Algorithm 1 when its parameter is set to s = 0.</p><p>Proof. The fact that tell_gossip is called at least once and is first called on node 0 still holds. Sequence S (0) now denotes the fact that node 0 communicates with a curious node at time 0. Since the protocol is run on the complete graph, the node selected by tell_gossip is chosen uniformly within {0, ..., n -1}, so a curious node is selected with probability f n . We thus have p 0 (S (0) ) = f n . Besides, node 0 cannot communicate with a curious node at time 0 if node 1 starts the rumor so p 1 (S (0) ) = 0. For prediction uncertainty, using the same sequence S (0) yields pi(S (0) ) p0(S (0) ) = 0 for all i = 0 and therefore c = 0. It remains to show that these bounds are matched by Algorithm 1 with s = 0. The fact that the only outputs that have a different probability if node 0 starts (compared to the case when 1 starts) are those in which 0 (or 1) communicates with a curious node for its first communication is still true with the stronger adversary. Then, we write p 0 (S 0 = 0) = p 1 (S 0 = 1) = f n and p 0 (S 0 = 1) = p 1 (S 0 = 0) = 0. This ensures that p 0 (S (0) ) ≤ p 1 (S (0) ) + f n (similarly for S (1) ), and the result follows.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.4 Malicious Behavior</head><p>We also assumed for simplicity that nodes are curious but not malicious, i.e., they follow the protocol. This is motivated by a practical scenario where a subset of nodes are simply being monitored by a curious entity. If curious nodes can also act maliciously, they have three possible ways to affect the protocol (abstracting away the content of the information): emitting more, emitting less, or not choosing neighbors uniformly at random. If they emit more, they will inform more nodes, which makes it more difficult for them to locate the source. If they emit less (potentially not at all), then in the case s &lt; 1, the protocol could stop before all nodes are informed. Yet, the privacy bounds are derived from the fact that the source forgets the information before communicating to a curious node. Choosing the neighbors they send the messages to reduces to the case in which they emit less (for they do not send messages to uninformed nodes) but without affecting protocol speed or termination (this does not reduce the number of active nodes). Thus, the impact on the observed output and therefore on the privacy would be minimal. In the case s = 1, malicious nodes have slightly more impact but remain quite small: this case only makes the set of informed nodes grow slightly slower.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A.5 Termination Criterion</head><p>For simplicity, in all our gossip protocols we used a global termination criterion (the protocol terminates when all nodes are informed). Termination without using global coordination is a problem in its own right that has been extensively studied (see for instance <ref type="bibr" target="#b2">[3]</ref>). Although some termination criteria could have a great impact on privacy, we argue that termination can be handled late in the execution so as to reveal very little about the beginning, hence avoiding any significant impact on privacy. For instance, it is possible to design a variant of Algorithm 1 in which nodes only flip a coin with probability s for a fixed number of times, and then stop emitting completely. This fixed number would have to depend on s, but then if it is large enough, it would guarantee both termination and privacy. Indeed, nodes would not communicate with curious nodes each time they are activated with high probability so this counter would actually provide very little information to the curious nodes. Determining how large this number of iterations should be, and the exact impact on privacy (which we argue is very small), is beyond the scope of this paper.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B Delayed Start Gossip</head><p>Consider the protocol described in Remark 6, which we call delayed start gossip:</p><p>1. The source calls tell_gossip once to forward to an arbitrary node, say node j.</p><p>2. Node j then starts a standard push protocol (Algorithm 1 with s = 1).</p><p>This simple protocol is clearly optimal from the point of view of differential privacy in the regime = 0 (total variation distance). Indeed, if the first communication does not hit a curious node then the probability of a given output when two different nodes start the gossip is the same. It is also fast since it runs the standard gossip after the first round.</p><p>Yet, this naive protocol has a major flaw. Indeed, when the first communication hits a curious node, the adversary can monitor whether the sender communicates with curious nodes again in the next rounds. If it does not, they can guess that the node is the source, and they will in fact make a correct guess with probability arbitrarily close to 1 for large enough graphs. On the other hand, when the sender communicates again with a curious node shortly after, they can be very confident that this node is not the source. Hence, it is possible to design a very simple attack with a very high precision (almost always right) and almost optimal recall (identifying the source with certainty every time the information is actually released, i.e. with probability f n ). Making sure that the adversary is uncertain about its prediction is therefore a desirable property. This is captured by our notion of prediction uncertainty. The following proposition formalizes the above claims.</p><p>Proposition 12. We call c ds the prediction uncertainty constant of the delayed start protocol and we assume the ratio of curious nodes f /n to be constant. Then c ds → 0 when n → ∞.</p><p>More generally, it is in principle possible to prove similar results for any protocol in which the source node does not behave like other nodes. Indeed, if the special behaviour can be detected, then the adversary can know for sure the source of the rumor. This motivates the need for more involved protocols such as those covered by Algorithm 1.</p><p>Proof of Proposition 12. The proof reuses some elements of the proof of Theorem 4. We consider the sequence S (0) r such that node 0 is the first node to communicate with a curious node (S 0 = 0) and then r other nodes communicate with curious nodes before 0 does (S i = 0 for i ∈ {1, ..., r}). We denote by t 0 the time at which node 0 gets the message and becomes active again (we refer here to the global order, although of course the curious nodes do not have access to it). Then, with the usual notations we have:</p><formula xml:id="formula_18">p 0 S (0) r = p 0 (S 0 = 0)p 0 S (0) r |S 0 = 0 ≥ f n p 0 (∩ r i=1 S i = 0|S 0 = 0) ≥ f n p 0 (t 0 ≥ r) ≥ f n p 0 (n c (r) ≤ k * )p 0 (t 0 ≥ r|n c (r) ≤ k * ).</formula><p>Then, we recall from the proof of Theorem 4 that</p><formula xml:id="formula_19">p 0 (n c (r) ≤ k) = p Binom(k, f n ) ≥ r = p Binom(k, 1 - f n ) &lt; k -r = 1 -p Binom(k, 1 - f n ) ≥ k -r ,</formula><p>so if we set k = 2n f r and use tail bounds on the binomial law (Theorem 1 of <ref type="bibr" target="#b43">[44]</ref>) then there exists a constant H (only depending on f /n) such that p 0 (n c (r) ≤ r 2n f ) ≥ 1 -e -rH . Therefore, we have:</p><formula xml:id="formula_20">p 0 S (0) r ≥ f n 1 -e -rH 1 - 1 n r 2f n ≥ C 1 (r, n). (<label>4</label></formula><formula xml:id="formula_21">)</formula><p>The last line comes from calculations done in the proof of Theorem 4. We now study p 1 (S (0) r ). Since node 1 started the protocol then it means that no other node (and in particular 0) will stop emitting the message. Therefore, if node 0 is the first to communicate with a curious node then it will remain active for the whole duration of the protocol. Consider that the first disclosure happens after T f communications. We can write:</p><formula xml:id="formula_22">p 1 S (0) r ≤ p 1 (S 0 = 0)p 1 (∩ r i=1 S i = 0|S 0 = 0, T f ≤ t f ) + p 1 (T f &gt; t f ).</formula><p>Since the fraction of curious nodes is constant, we can choose t f independently of n or r</p><formula xml:id="formula_23">such that p(T f &gt; t f ) ≤ e -f n t f ≤ 4(n-f ) if t f = n f log 4(n-f</formula><p>) in order to control the second term. Then,</p><formula xml:id="formula_24">p 1 (∩ r i=1 S i = 0|S 0 = 0, T f ≤ t f ) ≤ t f +r t=t f 1 - f n 1 t ≤ e -f n t f +r t=t f 1 t .</formula><p>A series-integral comparison yields that if r = log 2 (n) then expf n t f +r t=t f 1 t ≤ 4 for n large enough. Finally, we use the fact that p 1 (S 0 = 0)</p><formula xml:id="formula_25">≤ 1 n-f to write that p 1 S (0) r ≤ 2(n-f ) .</formula><p>Finally, we observe that C 1 (log 2 n, n) → f n when n → ∞ where C 1 is defined in Equation <ref type="formula" target="#formula_20">4</ref>. In particular, C 1 (log 2 n, n) ≥ f 2n for n large enough, so we have</p><formula xml:id="formula_26">p(I 0 = 0|S (0) r ) p(I 0 = 0|S (0) r ) = i / ∈C∪{0} p i (S (0) r ) p 0 (S (0) r ) ≤ n f . (<label>5</label></formula><formula xml:id="formula_27">)</formula><p>Since can be picked arbitrarily small and n f is assumed to be constant then the previous ratio can be made arbitrary small.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C Detailed Proofs</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C.1 Privacy Guarantees</head><p>Proof of Theorem 4. Intuitively, the proof relies on the fact that the event {t d (0) ≤ t i (1)} (node 0 communicates with a curious node before node 1 gets the message) becomes more and more likely as n grows, hence preventing any meaningful differential privacy guarantee when n is large enough. To formalize this, we study S (0) r = {S, S t = 0 for some t ≤ r}, the set of output sequences such that the rank of node 0 in the sequence is less than r. For a specific sequence to not be in S (0) r , there must have been at least r communications (because r nodes must have communicated with curious nodes), and none of them involved 0 and a curious node. Therefore, if we note n c (r) the number of communications that actually happened before the output sequence reached size r, we have n c (r) ≥ r. Then, denoting by C(t) the node that communicated with a curious node at time t (with C(t) = -1 when the communication did not involve a curious node):</p><formula xml:id="formula_28">p 0 (S (0) r ) = 1 -p ∩ nc(r) t=0 C(t) = 0 = 1 - nc(r) t=0 p (C(t) = 0) ≥ 1 - r t=0 1 -f n 1 t+1 ,</formula><p>where the last step comes from the fact that the probability of node 0 to be selected at time t is 1 |It| ≥ 1 t because at most one node is informed at each step and the active node is selected uniformly among informed nodes. We use the fact that log(1 + x) ≤ x for any x &gt; -1 on x = -f n 1 t+1 to get:</p><formula xml:id="formula_29">r t=0 1 -f n 1 t+1 = exp r t=0 log 1 -f n 1 t+1 ≤ exp -f n r t=0 1 t+1 . (<label>6</label></formula><formula xml:id="formula_30">)</formula><p>Therefore, p 0 (S (0) r ) goes to 1 as r goes to infinity. We emphasize that we do not need to fix any network size for this result to hold since the ratio f /n is assumed to be constant.</p><p>Then, for a given r and for any k &gt; 0, p(n c (r) ≤ k) is equal to p(Binom(k, f n ) ≥ r) where Binom(k, f n ) is the binomial law of parameters k and f n . This is because it is the probability of having exactly r successes with the sum of less than k Bernoullis of parameter f n , which is equal to the probability of having more than r successes with the sum of k Bernoullis of the same parameters. Therefore, p(n c (r) ≤ k) is independent of n and we can choose k * independently of n such that p(n c (r) &gt; k * ) ≤ 1 n . Then, we write that</p><formula xml:id="formula_31">p 1 (S (0) r ) = p 1 (S (0) r , n c (r) ≤ k * ) + p 1 (S (0) r , n c (r) &gt; k * ) ≤ p 1 (S (0) r |n c (r) ≤ k * ) + 1/n.</formula><p>This implies p 1 (S (0)</p><formula xml:id="formula_32">r |n c (r) ≤ k * ) ≤ p 1 (0 ∈ I r |n c (r) ≤ k * ) ≤ 1 -p 1 (0 / ∈ I r |n c (r) ≤ k * ).</formula><p>We know that only r communications have reached curious nodes but the others have reached a random node in the graph, and there is at most k * of them, so finally:</p><formula xml:id="formula_33">p 1 (S (0) r ) ≤ 1 -1 - 1 n k * + 1 n .</formula><p>We immediately see that p 1 (S (0) r ) goes to 0 as n grows because k * is independent of n, and we have shown above that p 0 (S (0) r ) goes to 1 as n grows. Since we must have that p 0 (S (0) r ) ≤ e p 1 (S (0) r ) + δ, we must have δ = 1 if we want δ and to be independent of n.</p><p>Proof of Theorem 8. For any set of sequences S ⊂ S such that p 0 (S) &gt; 0:</p><formula xml:id="formula_34">p(I 0 = 0|S) p(I 0 = 0|S) = i / ∈C∪{0} p i (S) p 0 (S) ≥ i / ∈C∪{0} p i (A 1 = {0})p i (S|A 1 = {0}) p 0 (S) ,</formula><p>where A 1 is the set of active nodes at round 1. Because the state of the system (active nodes) is the same in both cases we can write that p i (S|A 1 = {0}) = p 0 (S). Besides, p i (A 1 = {0}) corresponds to the probability that node i sends a message to node 0 and then stops emitting. Therefore:</p><formula xml:id="formula_35">p(I0 =0|S) p(I0=0|S) ≥ 1 -f +1 n (1 -s) &gt; 0.</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C.2 Spreading time</head><p>Proof of Theorem 9. The idea of this proof is to rely on the "determinism" of gossip process, similarly to <ref type="bibr" target="#b35">[36]</ref>. This means that the gossip process very closely follows its mean dynamics. In our case, there is an added difficulty in the fact that extra randomness is introduced by the deactivation of the nodes. Yet, we precisely quantify the impact of this phenomenon on the results. We start by showing that if more than k(s) nodes are informed at a given time, then with very high probability the number of informed nodes never drops below this fraction once it is reached. Therefore, a number of messages proportional to the size of the graph is sent at each round. The condition on s for this to happen is written in Equation <ref type="bibr" target="#b10">(11)</ref>. More formally, we fix s ∈ (0, 1] and denote by A t the number of nodes that are active at round t, which is such that A t = α t n. Then, we note</p><formula xml:id="formula_36">f : α → 1 -p u (α)(1 -αs),<label>(7)</label></formula><p>where</p><formula xml:id="formula_37">p u (α) = (1 -1 n ) αn . Note that f (α) = 1 n E[A t+1 |A t = αn].</formula><p>To see this, we count the number of active nodes at time t + 1. In total, A t = αn messages are sent at the beginning of the round. Therefore, for each node, the probability of having received a message at the end of the round is exactly 1 -p u (α) since each message has a 1/n probability to be sent to this specific node. In the end, n (1 -p u (α)) nodes get the message in expectation. The rest of the active nodes at time t + 1 is made of the nodes that were active, did not receive the message and did not deactivate, which represents a portion nαp u (α)s of the nodes. Then, one can see that the function f is simply the sum of these 2 terms. We show by using that (1 -x)</p><p>y ≤ e -xy ≤ 1 -xy + x 2 y 2 2 that for α ≤ α s = s 1+2s , we have:</p><formula xml:id="formula_38">f (α) ≥ 1 + s 2 α. (<label>8</label></formula><formula xml:id="formula_39">)</formula><p>Then, we follow the same steps as in Lemma 15 in <ref type="bibr" target="#b35">[36]</ref>. We call A t the number of active nodes at round t, and A t,m the number of active nodes at round t after m messages have been sent (so during the round). Then, we can define X i = A t,i+1 -A t,i . A t,i+1 only depends on A t,i and so does X i :</p><formula xml:id="formula_40">X i = 1 with proba s(1 - |A t,i | n ) -1 with proba (1 -s) |A t,i |-1 n 0 otherwise</formula><p>Then, we define the martingale</p><formula xml:id="formula_41">Z i = E[ At i=1 X i |X 1 , • • • , X i , A t ]</formula><p>. This allows us to write</p><formula xml:id="formula_42">A t+1 -nf (α) = Z 0 -Z At . If we call S k,t = At i=k X i then for any d ∈ {-1, 0, 1}: E[S 1,t |X 1 , , X i , X i+1 = 1, A t ] ≥ E[S 1,t |X 1 , • • • , X i , X i+1 = d, A t ] ≥ E[S 1,t |X 1 , • • • , X i , X i+1 = -1, A t ], because the distribution of X i only depends on A t,i . Therefore, |Z i+1 -Z i | ≤ (1+E[S i+1,t |A t + 1]) -(E[S i+1,t |A t -1] -1)] ≤ 2.</formula><p>Azuma's inequality <ref type="bibr" target="#b44">[45]</ref> then gives:</p><formula xml:id="formula_43">p A t+1 -nf ( A t n ) ≤ -λA t |A t = k ≤ e -(λk) 2 8k . (<label>9</label></formula><formula xml:id="formula_44">)</formula><p>We also have that p(A t+1 &lt; k|A t ≥ k) ≤ p(A t+1 ≤ k|A t = k). Then, for any α ≤ α s , Equation 8 yields that for all λ:</p><formula xml:id="formula_45">p A t+1 ≤ A t 1 + s 2 -λ |A t ≤ e -λ 2 8 At . (<label>10</label></formula><formula xml:id="formula_46">)</formula><p>We can then bound this expression by using Equation 9 with λ = s 2 , leading to</p><formula xml:id="formula_47">p(A t+1 &lt; k|A t ≥ k) ≤ e -s 2 32 k if α ≤ α s .</formula><p>Denoting by N k,j the number of messages sent between rounds k and j, we can decompose over Cα -1 log n rounds so that if m is such that there are at least α active nodes at round m then:</p><formula xml:id="formula_48">p(N m,m+Cα -1 log n ≥ Cn log n) ≥ (1 -e -s 2 αn 32 ) Cα -1 log n ,</formula><p>because it is equal to the probability that the fraction of active nodes never goes below α for Cα -1 log n rounds. Therefore, if</p><formula xml:id="formula_49">s 2 ≥ 32 αn log C log n α log(1 -δ) , then p(N m,m+Cα -1 log n ≥ Cn log n) ≥ 1 -δ. (<label>11</label></formula><formula xml:id="formula_50">)</formula><p>Equation 11 gives a lower bound on the value of α. Note that for a fixed α, this lower bound goes to 0 as n grows so in particular, Equation 11 is satisfied for α = α s if n is large enough. It now remains to show that such a fraction α of active nodes can be reached in logarithmic time. Usual gossip analysis takes advantage of the exponential growth of the informed nodes during early rounds for which no collision occur. We have to adapt the analysis to the fact that nodes may stop communicating with some probability and split the analysis into two phases.</p><p>In the rest of the proof, we prove that a constant fraction of the nodes (independent of n) can be reached with a logarithmic number of rounds. We first analyze how long it takes to go from O(log n) to O(n) active nodes and then from 1 to O(log n). Equation 8 along with Equation 9 with λ = s 4 give that as long as </p><formula xml:id="formula_51">A t0 (1 + s 4 ) t ≤ α s n then p A t+t0+1 ≥ A t0 (1 + s 4 ) t+1 |A t = A t0 (1 + s 4 ) t ≥ 1 -e -</formula><formula xml:id="formula_52">A t0 ≥ - 128 s 2 log 1 -(1 -δ) 1 tα s , then p(A tα s +t0 ≥ nα s |A t0 ) ≥ 1 -δ. (<label>12</label></formula><formula xml:id="formula_53">)</formula><p>Using the fact that (1</p><formula xml:id="formula_54">-x) y ≤ e -xy ≤ 1 -xy + x 2 y 2 2</formula><p>along with the fact that δ &lt; 1 ≤ t αs to simplify Equation <ref type="formula" target="#formula_52">12</ref>, we show that if A t0 satisfies:</p><formula xml:id="formula_55">A t0 ≥ 128 s 2 log 2t αs δ ,<label>(13)</label></formula><p>then it also satisfies Equation <ref type="formula" target="#formula_52">12</ref>.</p><p>It only remains to prove that such an A t0 can be reached with t 0 logarithmic in n. For this, use again Azuma inequality but on κ consecutive rounds this time. Therefore, Equation 10 becomes, assuming that at least A t messages are sent at each round:</p><formula xml:id="formula_56">p A t+κ ≤ A t 1 + κs 2 -λ |A t ≤ e -λ 2 8κ At . (<label>14</label></formula><formula xml:id="formula_57">)</formula><p>We apply this inequality for κ = 2C log(n)/s and λ = C log(n)/2 (which is valid because at least A 0 = 1 node is active at each round), which yields:</p><formula xml:id="formula_58">p A κ ≤ 1 + C log(n) 2 |A t ≤ e -s log(n) 64 C . (<label>15</label></formula><formula xml:id="formula_59">)</formula><p>In particular, for a fixed values of C, s, and δ, then p A κ ≥ C log(n)</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2</head><p>|A t ≤ 1 -δ for n large enough. Finally, t αs is logarithmic in n so similarly, Equation ( <ref type="formula" target="#formula_55">13</ref>) is satisfied for t 0 = κ if n is large enough.</p><p>We conclude the proof by noting that</p><formula xml:id="formula_60">p N 0,t0+tα s +Cα -1 log n ≥ Cn log n ≥ p A t0 ≥ 128 s 2 log 2t αs δ p A tα s +t0 ≥ nα s |A t0 ≥ 128 s 2 log 2t αs δ × p N tα s +t0,tα s +t0+Cα -1 log n ≥ Cn log n|A t0+tα s ≥ nα s ≥ (1 -δ) 3 ≥ 1 -3δ.</formula><p>Finally, we have that t 0 ≤ 2C log(n)/s, t αs ≤ log(n)/s and 1/α s ≤ 3/s so in the end, t 0 + t αs + Cα -1 log n ≤ 6C log(n)/s. Without loss of generality, δ can also be replaced by δ/3.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Remark 13 (Extension to the Asynchronous Version).</head><p>The first part of the proof directly extends to the asynchronous algorithm by simply considering slices of time during which a set of αn nodes send αn messages, which essentially means constant time. Then, we consider a logarithmic number of slices. The phase from 1 to O(log n) active nodes requires sending a logarithmic number of messages and can thus be done in logarithmic time. Finally, phase 2 (going from O(log n) to O(n) active nodes) consists in evaluating a logarithmic number of rounds during which a logarithmic number of nodes are active. Again, the only important thing is the number of messages sent (and not which node sent them) so using constant time intervals ensures that enough messages are sent between each pseudo-rounds with high probability. To summarize, it is possible to prove a statement very similar to that of Theorem 9 in the asynchronous setting, where the notion of rounds is replaced by constant time intervals. We omit the exact details of this alternative formulation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C.3 Maximum Likelihood Estimation</head><p>Proof of Theorem 10. We recall that S is the output sequence observed by curious nodes, so that S 0 , is the first node that communicates with a curious node. The source is noted I 0 , as it is the first node informed of the rumor. The set P is such that p(I 0 = i) = 0 if i / ∈ P . Recall that t c is such that S tc ∈ P and S t / ∈ P for 0 ≤ t &lt; t c . By a slight abuse of notation, note A t the set of active nodes at the time where S t is disclosed (time of t-th communication with a curious node), so S t ∈ A t for all t.</p><p>We know that for all i ∈ P then p((S t ) t&lt;tc |A tc , I 0 = i) = p((S t ) t&lt;tc |A tc ) since S t / ∈ P for t &lt; t c . Similarly, p((S t ) t≥tc |A tc , I 0 = i, (S t ) t&lt;tc ) = p((S t ) t≥tc |A tc ) since the output after some time only depends on the active nodes at that time. Therefore, p(S|A tc , I 0 = i) = p(S|A tc ) for all i ∈ P , which critically relies on the fact that t c is the time of first disclosure of a node in P (the first inequality would not hold otherwise). We note [n] = {1, ..., n}. We then write for i ∈ P :</p><formula xml:id="formula_61">p(I 0 = i|S) = A⊂[n] p(A tc = A|S)p(I 0 = i|A tc = A, S) = A⊂[n] p(A tc = A|S)p(I 0 = i|A tc = A) = A⊂[n]:St c ∈A p(A tc = A|S) p(I 0 = i) p(A tc = A) p(A tc = A|I 0 = i). Let j ∈ P ∩ A tc . If i ∈ A tc then p(A tc = A|I 0 = i) = p(A tc = A|I 0 = j). Otherwise, let us denote E ij (A) = ∩ k∈A\{j} {k active at time t c } ∩ k /</formula><p>∈A∪{i} {k inactive at time t c }. This event represents the realization of A tc for all nodes different from i and j. We then write:</p><formula xml:id="formula_62">p(A tc = A|I 0 = i) = p(∩ k∈A {k ∈ A tc } ∩ k / ∈A {k / ∈ A tc }|I 0 = i) = p(E ij (A)|I 0 = i)p(j ∈ A tc , i / ∈ A tc |I 0 = i, E ij (A)) = p(E ij (A)|I 0 = j)p(j ∈ A tc , i / ∈ A tc |I 0 = i, E ij (A)) ≤ p(E ij (A)|I 0 = j)p(j ∈ A tc , i / ∈ A tc |I 0 = j, E ij (A))) = p(A tc = A|I 0 = j).</formula><p>The inequality comes from the fact that it is more likely that j is active and i is inactive if j is the source than if i is (i.e., if it is already the case at the beginning). This means that p(A tc = A|I 0 = i) ≤ p(A tc = A|I 0 = j) for all i ∈ [n] and j ∈ A tc .</p><p>Since the summation is over all A such that S 0 ∈ A (by definition of S tc and A tc ), and p(A tc = A|I 0 = i) ≤ p(A tc = A|I 0 = S tc ), we have for all considered A: p(I 0 = i|S) = This means that S tc is more likely to be the source than any other suspected node when the adversary observes output S. Note that this requires uniform prior over nodes that can be suspected since we used the fact that p(I 0 = i) = p(I 0 = S tc ) for all i ∈ P . For i / ∈ P , p(I 0 = i|S) = 0 ≤ p(I 0 = S tc |S).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D Challenges of Private Gossip for General Graphs</head><p>A natural extension of this work is to consider general graphs. We discuss in this section several aspects related to the natural privacy of gossip protocols in arbitrary graphs. In particular, we highlight the fact that problem-specific modeling choices are needed to go beyond the complete graph, and that even defining a notion of privacy that is suitable for all graphs is very challenging.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D.1 Average-Case versus Worst-Case Privacy</head><p>Unlike the case of complete graphs, the location of curious nodes critically impacts the privacy guarantees in arbitrary graphs. A naive way to deal with this issue is to randomize the location of curious nodes a posteriori. Let us denote by L f i,j the set containing all subsets of nodes of size f of the graph that do not contain i and j. For fixed nodes i and j, the set of curious nodes C is drawn from U (L f i,j ), the uniform distribution over L f i,j . For some parameters , δ ≥ 0, privacy can be defined as follows: ∀i, j ∈ {0, ..., n -1}, ∀S ∈ S E C∼U (L f i,j ) [p i (S, C) -e p j (S, C)] ≤ δ.</p><p>Note that p i (S, C) = 0 if the output sequence S is not compatible with the set of curious nodes C, i.e. if (k, l) ∈ S and k, l / ∈ C. To pick the curious nodes, it is possible to either pick a set of f curious nodes at once or to pick each node (except for i and j) with probability f /n. This randomized definition allows to prove a bound similar to that of Theorem 5 for arbitrary graphs. Indeed, the first node that receives the rumor has probability f n of being a curious node. However, such average-case notions of privacy are highly undesirable: in this case, no protection is provided against a (much more realistic) adversary that controls a fraction of nodes fixed in advance.</p><p>The worst-case approach consists in bounding the maximum difference instead of the expectation. This is the approach taken in our work for the complete graph (the max operator is implicit because the location of curious nodes does not matter in a complete graph). In the case of general graphs, the corresponding privacy definition is given by: ∀i, j ∈ {0, ..., n -1}, ∀S ∈ S, max</p><formula xml:id="formula_63">C∈L f i,j</formula><p>[p i (S, C) -e p j (S, C)] ≤ δ.</p><p>We immediately observe that with this definition, it is impossible to have δ &lt; 1 as soon as there is a node in the graph with less than f neighbors. This modeling choice is quite unrealistic as well because having a node surrounded by curious nodes means that the adversary actually believes this specific node has a strong probability of being the source and therefore put more sensors around it. A possible alternative would be to place curious nodes so as to bound the maximum privacy for any pair of nodes, and then evaluate the minimum privacy in this setting. This definition would mean that the adversary wants to be able to distinguish any pair of nodes as best as possible.</p><p>We see that choosing the locations of the curious nodes in an arbitrary graph is a complex problem that is heavily dependent on the topology of the graph and on the prior of the adversary on the locations of the curious nodes. Indeed, the adversary may simply want to isolate a sufficiently small group of nodes that have a high probability of being the source.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D.2 Relaxing the Differential Privacy Definition</head><p>Differential privacy is a very strong notion that enforces indistinguishability between all pairs of nodes, in order to be robust to any prior information about who might be the source. In particular, an adversary should not be able to precisely identify the source even if it knows that only two nodes in the graph can be the source. Although it was possible to obtain meaningful privacy guarantees of this kind for the complete graph, this appears to be too strong of a requirement for some graph topology and location of curious nodes. Consider for instance the extreme case of a line graph. It is clear that any non-trivial adversary can always distinguish between two segments of the line. This intuition directly extends to any graph which admits a cut with only curious nodes in it.</p><p>A natural idea is to restrict the pairs of nodes that are required to be indistinguishable. Several ways of doing this may be considered. For instance, one could require that each node is indistinguishable from k other nodes in the graph. Such relaxed definition could be obtained using the Pufferfish framework <ref type="bibr" target="#b45">[46]</ref>, which explicitly provides a notion of secret to protect. But how to choose such k nodes based on the topology and how to characterize the optimal locations of curious nodes is very challenging. Another direction could be to adapt the notions of metric-based differential privacy <ref type="bibr">[47,</ref><ref type="bibr">48]</ref> to design a notion of privacy where the required indistinguishability for a given node is a function of its distance to curious nodes in the graph, or to require that pairs of nodes become less indistinguishable with distance in the graph. Yet, it is not clear how to characterize the influence of the graph topology.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>D.3 Optimality of Algorithm 1 with s=0</head><p>We have seen in this section that the privacy guarantees for arbitrary graphs heavily rely on the particular privacy notion and that some recent privacy frameworks may provide tools to relax the classic differential privacy definition which is generally too strong for arbitrary graphs. We conjecture that for some of these relaxed definitions, the optimal algorithm for general graphs will be the same as in our case of the complete graph. Indeed, the strength of Algorithm 1 with s = 0 is to forget initial conditions quickly. In the complete graph, it does so in one step. In an arbitrary graph, the information about the part of the graph the source belongs to is still present after some steps, but the source should quickly be completely indistinguishable from its direct neighbors. In particular, attacks based on centrality <ref type="bibr" target="#b16">[17]</ref> are rather meaningless against this algorithm because spreading only occurs along a random walk in the graph. As in the case of the complete graph, Algorithm 1 with s &gt; 0 is then likely to enjoy near-optimal privacy guarantees.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>O</head><label></label><figDesc>Muting param. δ ensuring (0, δ)-DP Spreading time Standard push (minimal privacy, maximal speed) (n log n) Generic parameterized gossip (privacy vs. speed trade-off) 0 &lt; s &lt; 1 s + (1 -s) f n O (log(n)/s)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Algorithm 1 3 : 2 Figure 1</head><label>1321</label><figDesc>Figure 1Left: Parameterized Gossip. Right: Illustration of the role of muting parameter s. S indicates the source and C a curious node. Green nodes know the rumor, and red circled nodes are active. When s = 0, there is only one active node at a time, which always stops emitting after telling the gossip. In the case s = 1, nodes always remain active once they know the rumor (this is the standard push gossip protocol<ref type="bibr" target="#b1">[2]</ref>). When 0 &lt; s &lt; 1, each node remains active with probability s after each communication.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>( a )Figure 2</head><label>a2</label><figDesc>Figure 2 Effect of parameter s of Algorithm 1 on the spreading time for a network of n = 2 16nodes. The curves represent median values and the shaded area represents the 10 and 90 percent confidence intervals over 100 runs. Each curve stops when all nodes are informed (and so the protocol terminates), except for s = 0 since the protocol is very slow in this case.</figDesc><graphic coords="14,100.63,98.65,178.58,132.82" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>( a )Figure 3</head><label>a3</label><figDesc>Figure 3 Effect of parameter s of Algorithm 1 on the precision of source location attacks for a network of n = 2 16 node with 10% of curious nodes. Precision is estimated over 15,000 random runs.</figDesc><graphic coords="15,117.64,98.65,178.58,133.93" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head></head><label></label><figDesc>A⊂[n]:Stc ∈A p(A tc = A|S) p(I 0 = i) p(A tc = A) p(A tc = A|I 0 = i) ≤ A⊂[n]:St c ∈A p(A tc = A|S) p(I 0 = S tc ) p(A tc = A) p(A tc = A|I 0 = S tc )= p(I 0 = S tc |S).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head></head><label></label><figDesc>rounds (so for a logarithmic number of rounds) then p A tα s +t0 ≥ nα|A t0 ≥ 1-e -</figDesc><table><row><cell></cell><cell>αns 2</cell></row><row><cell></cell><cell>128</cell></row><row><cell>for any t ≥ t 0 such that A t0 1 + c 2</cell><cell>t ≤ nα s . Therefore, if we do this for all t ≤ t αs = log(αsn) log(1+ s 4 ) A t 0 s 2 128 tα s</cell></row><row><cell>because in this case, A</cell><cell></cell></row></table><note><p>t ≥ A t0 for t ≥ t 0 . Therefore, if</p></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>Unlike in the classic fanout, nodes start to gossip again each time they receive a message instead of deactivating permanently.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="47" xml:id="foot_1"><p>M. E. Andrés, N. E. Bordenabe, K. Chatzikokolakis, and C. Palamidessi, "Geoindistinguishability: differential privacy for location-based systems," in CCS, 2013.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="48" xml:id="foot_2"><p>48 K. Chatzikokolakis, M. E. Andrés, N. E. Bordenabe, and C. Palamidessi, "Broadening the Scope of Differential Privacy Using Metrics," in PETS, 2013.</p></note>
		</body>
		<back>

			<div type="funding">
<div><p>Funding <rs type="person">Aurélien Bellet</rs>: This research was supported by grants <rs type="grantNumber">ANR-16-CE23-0016-01</rs> and <rs type="grantNumber">ANR-18-CE23-0018-03</rs>, by the <rs type="funder">European Union</rs>'s <rs type="programName">Horizon 2020 Research and Innovation Program</rs> under Grant Agreement No. <rs type="grantNumber">825081</rs> COMPRISE (https://project.inria.fr/comprise/), by a grant from <rs type="funder">CPER Nord-Pas de Calais/FEDER DATA Advanced</rs> data science and technologies 2015-2020. <rs type="person">Rachid Guerraoui</rs>: This research was supported by <rs type="funder">European ERC</rs> Grant <rs type="grantNumber">339539 -AOC</rs>. <rs type="person">Hadrien Hendrikx</rs>: This research was supported by the <rs type="funder">MSR-INRIA joint</rs> centre.</p></div>
			</div>
			<listOrg type="funding">
				<org type="funding" xml:id="_KfRdjKc">
					<idno type="grant-number">ANR-16-CE23-0016-01</idno>
				</org>
				<org type="funding" xml:id="_2gWBXjs">
					<idno type="grant-number">ANR-18-CE23-0018-03</idno>
					<orgName type="program" subtype="full">Horizon 2020 Research and Innovation Program</orgName>
				</org>
				<org type="funding" xml:id="_BVBHGm4">
					<idno type="grant-number">825081</idno>
				</org>
				<org type="funding" xml:id="_9kbrwAq">
					<idno type="grant-number">339539 -AOC</idno>
				</org>
			</listOrg>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">The shortest-path problem for graphs with random arc-lengths</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">M</forename><surname>Frieze</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><forename type="middle">R</forename><surname>Grimmett</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Discrete Applied Mathematics</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="57" to="77" />
			<date type="published" when="1985">1985</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">On spreading a rumor</title>
		<author>
			<persName><forename type="first">B</forename><surname>Pittel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM Journal on Applied Mathematics</title>
		<imprint>
			<biblScope unit="volume">47</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="213" to="223" />
			<date type="published" when="1987">1987</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Randomized rumor spreading</title>
		<author>
			<persName><forename type="first">R</forename><surname>Karp</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Schindelhauer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Shenker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Vocking</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">FOCS</title>
		<imprint>
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Efficient information exchange in the random phone-call model</title>
		<author>
			<persName><forename type="first">P</forename><surname>Berenbrink</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Czyzowicz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Elsässer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Gasieniec</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Automata, Languages and Programming</title>
		<imprint>
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Epidemic algorithms for replicated database maintenance</title>
		<author>
			<persName><forename type="first">A</forename><surname>Demers</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Greene</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Hauser</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Irish</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Larson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Shenker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Sturgis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Swinehart</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Terry</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">PODC</title>
		<imprint>
			<date type="published" when="1987">1987</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Randomized gossip algorithms</title>
		<author>
			<persName><forename type="first">S</forename><surname>Boyd</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Ghosh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Prabhakar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Shah</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Information Theory</title>
		<imprint>
			<biblScope unit="volume">52</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="2508" to="2530" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Social networks spread rumors in sublogarithmic time</title>
		<author>
			<persName><forename type="first">B</forename><surname>Doerr</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Fouz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Friedrich</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">STOC</title>
		<imprint>
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Privacy-conscious information diffusion in social networks</title>
		<author>
			<persName><forename type="first">G</forename><surname>Giakkoupis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Guerraoui</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Jégou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A.-M</forename><surname>Kermarrec</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Mittal</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Symposium on Distributed Computing</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2015">2015</date>
			<biblScope unit="page" from="480" to="496" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">The mathematics of infectious diseases</title>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">W</forename><surname>Hethcote</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM Review</title>
		<imprint>
			<biblScope unit="volume">42</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="599" to="653" />
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Dual Averaging for Distributed Optimization: Convergence Analysis and Network Scaling</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">C</forename><surname>Duchi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Agarwal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">J</forename><surname>Wainwright</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Automatic Control</title>
		<imprint>
			<biblScope unit="volume">57</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="592" to="606" />
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Gossip dual averaging for decentralized optimization of pairwise functions</title>
		<author>
			<persName><forename type="first">I</forename><surname>Colin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Bellet</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Salmon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Clémençon</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICML</title>
		<imprint>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Decentralized collaborative learning of personalized models over networks</title>
		<author>
			<persName><forename type="first">P</forename><surname>Vanhaesebrouck</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Bellet</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Tommasi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">AISTATS</title>
		<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Decentralized Stochastic Optimization and Gossip Algorithms with Compressed Communication</title>
		<author>
			<persName><forename type="first">A</forename><surname>Koloskova</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Stich</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Jaggi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICML</title>
		<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">How to discreetly spread a rumor in a crowd</title>
		<author>
			<persName><forename type="first">M</forename><surname>Ghaffari</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Newport</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">DISC</title>
		<imprint>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Identifying propagation sources in networks: State-of-the-art and comparative studies</title>
		<author>
			<persName><forename type="first">J</forename><surname>Jiang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Wen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Xiang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Zhou</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Communications Surveys &amp; Tutorials</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="465" to="481" />
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Locating the source of diffusion in large-scale networks</title>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">C</forename><surname>Pinto</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Thiran</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Vetterli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Physical Review Letters</title>
		<imprint>
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Rumors in a network: Who&apos;s the culprit?</title>
		<author>
			<persName><forename type="first">D</forename><surname>Shah</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Zaman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Information Theory</title>
		<imprint>
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Differential Privacy</title>
		<author>
			<persName><forename type="first">C</forename><surname>Dwork</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICALP</title>
		<imprint>
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Our data, ourselves: Privacy via distributed noise generation</title>
		<author>
			<persName><forename type="first">C</forename><surname>Dwork</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Kenthapadi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Mcsherry</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Mironov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Naor</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EUROCRYPT</title>
		<imprint>
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">The algorithmic foundations of differential privacy</title>
		<author>
			<persName><forename type="first">C</forename><surname>Dwork</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Roth</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Foundations and Trends in Theoretical Computer Science</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">3-4</biblScope>
			<biblScope unit="page" from="211" to="407" />
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Fast computation by population protocols with a leader</title>
		<author>
			<persName><forename type="first">D</forename><surname>Angluin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Aspnes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Eisenstat</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Distributed Computing</title>
		<imprint>
			<biblScope unit="volume">21</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="183" to="199" />
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Gossip-Based Computation of Aggregate Information</title>
		<author>
			<persName><forename type="first">D</forename><surname>Kempe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Dobra</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Gehrke</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">FOCS</title>
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<monogr>
		<title level="m" type="main">Advances and Open Problems in Federated Learning</title>
		<author>
			<persName><forename type="first">P</forename><surname>Kairouz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">B</forename><surname>Mcmahan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Avent</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Bellet</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Bennis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">N</forename><surname>Bhagoji</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Bonawitz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Charles</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Cormode</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Cummings</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">G L</forename><surname>D'oliveira</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">E</forename><surname>Rouayheb</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Evans</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Gardner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Garrett</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Gascón</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Ghazi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">B</forename><surname>Gibbons</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Gruteser</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Harchaoui</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>He</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Huo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Hutchinson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Hsu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Jaggi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Javidi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Joshi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Khodak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Konečný</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Korolova</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Koushanfar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Koyejo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Lepoint</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Liu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Mittal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Mohri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Nock</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Özgür</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Pagh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Raykova</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Qi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Ramage</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Raskar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Song</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Song</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">U</forename><surname>Stich</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Sun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">T</forename><surname>Suresh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Tramèr</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Vepakomma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Xiong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Xu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><forename type="middle">X</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Zhao</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1912.04977</idno>
		<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
		<respStmt>
			<orgName>Tech. Rep.</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Estimating time complexity of rumor spreading in ad-hoc networks</title>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">R</forename><surname>Kowalski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">T</forename><surname>Caro</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Conference on Ad-Hoc Networks and Wireless</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2013">2013</date>
			<biblScope unit="page" from="245" to="256" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">On the push&amp;pull protocol for rumor spreading</title>
		<author>
			<persName><forename type="first">H</forename><surname>Acan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Collevecchio</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Mehrabian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Wormald</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">SIAM Journal on Discrete Mathematics</title>
		<imprint>
			<biblScope unit="volume">31</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="647" to="668" />
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title level="a" type="main">Hiding the rumor source</title>
		<author>
			<persName><forename type="first">G</forename><surname>Fanti</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Kairouz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Oh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Ramchandran</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Viswanath</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Information Theory</title>
		<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Confidential gossip</title>
		<author>
			<persName><forename type="first">C</forename><surname>Georgiou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Gilbert</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">R</forename><surname>Kowalski</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICDCS</title>
		<imprint>
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">On location hiding in distributed systems</title>
		<author>
			<persName><forename type="first">K</forename><surname>Gotfryd</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Klonowski</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Pajak</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Colloquium on Structural Information and Communication Complexity</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page" from="174" to="192" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Exponential random graph estimation under differential privacy</title>
		<author>
			<persName><forename type="first">W</forename><surname>Lu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Miklau</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">KDD</title>
		<imprint>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title level="a" type="main">Analyzing subgraph statistics from extended local views with decentralized differential privacy</title>
		<author>
			<persName><forename type="first">H</forename><surname>Sun</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><surname>Xiao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Khalil</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Z</forename><surname>Qin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Yu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CCS</title>
		<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Optimal differentially private algorithms for k-means clustering</title>
		<author>
			<persName><forename type="first">Z</forename><surname>Huang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Liu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">PODS</title>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Differentially Private Empirical Risk Minimization</title>
		<author>
			<persName><forename type="first">K</forename><surname>Chaudhuri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Monteleoni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">D</forename><surname>Sarwate</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Machine Learning Research</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page" from="1069" to="1109" />
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<monogr>
		<title level="m" type="main">Deep learning with differential privacy</title>
		<author>
			<persName><forename type="first">M</forename><surname>Abadi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Chu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">J</forename><surname>Goodfellow</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">B</forename><surname>Mcmahan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Mironov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Talwar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Zhang</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2016">2016</date>
			<publisher>CCS</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Epidemic information dissemination in distributed systems</title>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">T</forename><surname>Eugster</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Guerraoui</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A.-M</forename><surname>Kermarrec</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Massoulié</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Computer</title>
		<imprint>
			<biblScope unit="volume">37</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="60" to="67" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title level="a" type="main">On a classical problem of probability theory</title>
		<author>
			<persName><forename type="first">P</forename><surname>Erdős</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Rényi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Publ. Math. Inst. Hung. Acad. Sci</title>
		<imprint>
			<date type="published" when="1961">1961</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<analytic>
		<title level="a" type="main">Gossiping with multiple messages</title>
		<author>
			<persName><forename type="first">S</forename><surname>Sanghavi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Hajek</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Massoulié</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Information Theory</title>
		<imprint>
			<biblScope unit="volume">53</biblScope>
			<biblScope unit="issue">12</biblScope>
			<biblScope unit="page" from="4640" to="4654" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
		<title level="a" type="main">How efficient can gossip be?(on the cost of resilient information exchange)</title>
		<author>
			<persName><forename type="first">D</forename><surname>Alistarh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Gilbert</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Guerraoui</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Zadimoghaddam</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICALP</title>
		<imprint>
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title level="a" type="main">Asynchronous gossip</title>
		<author>
			<persName><forename type="first">C</forename><surname>Georgiou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Gilbert</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Guerraoui</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">R</forename><surname>Kowalski</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of the ACM</title>
		<imprint>
			<biblScope unit="volume">60</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page">11</biblScope>
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<monogr>
		<title level="m" type="main">Amplification by Shuffling: From Local to Central Differential Privacy via Anonymity</title>
		<author>
			<persName><forename type="first">U</forename><surname>Erlingsson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Feldman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Mironov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">R</forename><surname>Talwar</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1811.12469</idno>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
		<respStmt>
			<orgName>Tech. Rep.</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<monogr>
		<title level="m" type="main">Distributed Differential Privacy via Shuffling</title>
		<author>
			<persName><forename type="first">A</forename><surname>Cheu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">D</forename><surname>Smith</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Ullman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Zeber</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Zhilyaev</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1808.01394</idno>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
		<respStmt>
			<orgName>Tech. Rep.</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b40">
	<monogr>
		<title level="m" type="main">The Privacy Blanket of the Shuffle Model</title>
		<author>
			<persName><forename type="first">B</forename><surname>Balle</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Bell</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Gascon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Nissim</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1903.02837</idno>
		<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
		<respStmt>
			<orgName>Tech. Rep.</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b41">
	<analytic>
		<title level="a" type="main">Personalized and Private Peer-to-Peer Machine Learning</title>
		<author>
			<persName><forename type="first">A</forename><surname>Bellet</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Guerraoui</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Taziki</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Tommasi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">AISTATS</title>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b42">
	<analytic>
		<title level="a" type="main">How asynchrony affects rumor spreading time</title>
		<author>
			<persName><forename type="first">G</forename><surname>Giakkoupis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Nazari</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Woelfel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">PODC</title>
		<imprint>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b43">
	<analytic>
		<title level="a" type="main">Tutorial on large deviations for the binomial distribution</title>
		<author>
			<persName><forename type="first">R</forename><surname>Arratia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Gordon</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Bulletin of mathematical biology</title>
		<imprint>
			<biblScope unit="volume">51</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="125" to="131" />
			<date type="published" when="1989">1989</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b44">
	<monogr>
		<author>
			<persName><forename type="first">M</forename><surname>Mitzenmacher</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename></persName>
		</author>
		<title level="m">Probability and computing: Randomized algorithms and probabilistic analysis</title>
		<imprint>
			<publisher>Cambridge University Press</publisher>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b45">
	<analytic>
		<title level="a" type="main">Pufferfish: A framework for mathematical privacy definitions</title>
		<author>
			<persName><forename type="first">D</forename><surname>Kifer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Machanavajjhala</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Database Systems</title>
		<imprint>
			<biblScope unit="volume">39</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page">3</biblScope>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
