<?xml version='1.0' encoding='utf-8'?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.1" xsi:schemaLocation="http://www.tei-c.org/ns/1.0 http://api.archives-ouvertes.fr/documents/aofr-sword.xsd">
  <teiHeader>
    <fileDesc>
      <titleStmt>
        <title>HAL TEI export of hal-02096750</title>
      </titleStmt>
      <publicationStmt>
        <distributor>CCSD</distributor>
        <availability status="restricted">
          <licence target="http://creativecommons.org/licenses/by/4.0/">Distributed under a Creative Commons Attribution 4.0 International License</licence>
        </availability>
        <date when="2024-04-29T11:46:25+02:00" />
      </publicationStmt>
      <sourceDesc>
        <p part="N">HAL API platform</p>
      </sourceDesc>
    </fileDesc>
  </teiHeader>
  <text>
    <body>
      <listBibl>
        <biblFull>
          <titleStmt>
            <title xml:lang="en">MapRepair: Mapping and Repairing under Policy Views</title>
            <author role="aut">
              <persName>
                <forename type="first">Angela</forename>
                <surname>Bonifati</surname>
              </persName>
              <email type="md5">32960671936c6ade8b6bc5d67c56c8a0</email>
              <email type="domain">univ-lyon1.fr</email>
              <idno type="idhal" notation="string">angela-bonifati</idno>
              <idno type="idhal" notation="numeric">4999</idno>
              <idno type="halauthorid" notation="string">26579-4999</idno>
              <idno type="IDREF">https://www.idref.fr/169046664</idno>
              <idno type="ORCID">https://orcid.org/0000-0002-9582-869X</idno>
              <affiliation ref="#struct-401125" />
              <affiliation ref="#struct-1042449" />
            </author>
            <author role="aut">
              <persName>
                <forename type="first">Ugo</forename>
                <surname>Comignani</surname>
              </persName>
              <email type="md5">c9026ad6eb7adbd3aa79dc73b4af823a</email>
              <email type="domain">inria.fr</email>
              <idno type="idhal" notation="string">ugo-comignani</idno>
              <idno type="idhal" notation="numeric">14364</idno>
              <idno type="halauthorid" notation="string">48821-14364</idno>
              <idno type="ORCID">https://orcid.org/0000-0002-7730-9028</idno>
              <idno type="GOOGLE SCHOLAR">https://scholar.google.com/citations?user=VKtnNfwAAAAJ&amp;hl=fr</idno>
              <affiliation ref="#struct-401125" />
            </author>
            <author role="aut">
              <persName>
                <forename type="first">Efthymia</forename>
                <surname>Tsamoura</surname>
              </persName>
              <idno type="halauthorid">1562851-0</idno>
              <orgName ref="#struct-302612" />
              <affiliation ref="#struct-302612" />
            </author>
            <editor role="depositor">
              <persName>
                <forename>Tyrex</forename>
                <surname>Equipe</surname>
              </persName>
              <email type="md5">47765fff30f2ece1a6a1e5781eda648d</email>
              <email type="domain">inria.fr</email>
            </editor>
          </titleStmt>
          <editionStmt>
            <edition n="v1" type="current">
              <date type="whenSubmitted">2020-09-29 00:26:43</date>
              <date type="whenModified">2024-04-04 21:10:11</date>
              <date type="whenReleased">2020-09-29 11:08:19</date>
              <date type="whenProduced">2019-06-30</date>
              <date type="whenEndEmbargoed">2020-09-29</date>
              <ref type="file" target="https://inria.hal.science/hal-02096750/document">
                <date notBefore="2020-09-29" />
              </ref>
              <ref type="file" n="1" target="https://inria.hal.science/hal-02096750/file/__Mapping_and_Repairing_under_Policy_Views.pdf">
                <date notBefore="2020-09-29" />
              </ref>
            </edition>
            <respStmt>
              <resp>contributor</resp>
              <name key="184412">
                <persName>
                  <forename>Tyrex</forename>
                  <surname>Equipe</surname>
                </persName>
                <email type="md5">47765fff30f2ece1a6a1e5781eda648d</email>
                <email type="domain">inria.fr</email>
              </name>
            </respStmt>
          </editionStmt>
          <publicationStmt>
            <distributor>CCSD</distributor>
            <idno type="halId">hal-02096750</idno>
            <idno type="halUri">https://inria.hal.science/hal-02096750</idno>
            <idno type="halBibtex">bonifati:hal-02096750</idno>
            <idno type="halRefHtml">&lt;i&gt;SIGMOD 2019 - ACM SIGMOD/PODS International Conference on Management of Data&lt;/i&gt;, Jun 2019, Amsterdam, Netherlands. pp.1873-1876 (Demonstration), &lt;a target="_blank" href="https://dx.doi.org/10.1145/3299869.3320228"&gt;&amp;#x27E8;10.1145/3299869.3320228&amp;#x27E9;&lt;/a&gt;</idno>
            <idno type="halRef">SIGMOD 2019 - ACM SIGMOD/PODS International Conference on Management of Data, Jun 2019, Amsterdam, Netherlands. pp.1873-1876 (Demonstration), &amp;#x27E8;10.1145/3299869.3320228&amp;#x27E9;</idno>
          </publicationStmt>
          <seriesStmt>
            <idno type="stamp" n="UGA">HAL Grenoble Alpes</idno>
            <idno type="stamp" n="CNRS">CNRS - Centre national de la recherche scientifique</idno>
            <idno type="stamp" n="INRIA">INRIA - Institut National de Recherche en Informatique et en Automatique</idno>
            <idno type="stamp" n="UNIV-LYON1">Université Claude Bernard - Lyon I</idno>
            <idno type="stamp" n="UNIV-LYON2">Université Lumière Lyon 2</idno>
            <idno type="stamp" n="INSA-LYON">Institut National des Sciences Appliquées de Lyon</idno>
            <idno type="stamp" n="EC-LYON">Ecole Centrale de Lyon</idno>
            <idno type="stamp" n="INPG">Institut polytechnique de Grenoble</idno>
            <idno type="stamp" n="INRIA-RHA">INRIA Grenoble - Rhône-Alpes</idno>
            <idno type="stamp" n="LIG">Laboratoire d'Informatique de Grenoble</idno>
            <idno type="stamp" n="LIRIS" corresp="UNIV-LYON1">Laboratoire d'InfoRmatique en Image et Systèmes d'information</idno>
            <idno type="stamp" n="INRIA_TEST">INRIA - Institut National de Recherche en Informatique et en Automatique</idno>
            <idno type="stamp" n="LORIA2">Publications du LORIA</idno>
            <idno type="stamp" n="TESTALAIN1">TESTALAIN1</idno>
            <idno type="stamp" n="INRIA2">INRIA 2</idno>
            <idno type="stamp" n="INRIA-RENGRE">INRIA-RENGRE</idno>
            <idno type="stamp" n="LYON2">Université Lyon2</idno>
            <idno type="stamp" n="INSA-GROUPE">Groupe INSA</idno>
            <idno type="stamp" n="UDL">UDL</idno>
            <idno type="stamp" n="UNIV-LYON">Université de Lyon</idno>
            <idno type="stamp" n="UGA-COMUE">Université Grenoble Alpes [2016-2019]</idno>
            <idno type="stamp" n="LIG_SIDCH" corresp="LIG">Systèmes intelligents pour les données, les connaissances et les humains</idno>
            <idno type="stamp" n="INRIA-ROYAUMEUNI">INRIA-ROYAUMEUNI</idno>
          </seriesStmt>
          <notesStmt>
            <note type="audience" n="2">International</note>
            <note type="invited" n="0">No</note>
            <note type="popular" n="0">No</note>
            <note type="peer" n="1">Yes</note>
            <note type="proceedings" n="1">Yes</note>
          </notesStmt>
          <sourceDesc>
            <biblStruct>
              <analytic>
                <title xml:lang="en">MapRepair: Mapping and Repairing under Policy Views</title>
                <author role="aut">
                  <persName>
                    <forename type="first">Angela</forename>
                    <surname>Bonifati</surname>
                  </persName>
                  <email type="md5">32960671936c6ade8b6bc5d67c56c8a0</email>
                  <email type="domain">univ-lyon1.fr</email>
                  <idno type="idhal" notation="string">angela-bonifati</idno>
                  <idno type="idhal" notation="numeric">4999</idno>
                  <idno type="halauthorid" notation="string">26579-4999</idno>
                  <idno type="IDREF">https://www.idref.fr/169046664</idno>
                  <idno type="ORCID">https://orcid.org/0000-0002-9582-869X</idno>
                  <affiliation ref="#struct-401125" />
                  <affiliation ref="#struct-1042449" />
                </author>
                <author role="aut">
                  <persName>
                    <forename type="first">Ugo</forename>
                    <surname>Comignani</surname>
                  </persName>
                  <email type="md5">c9026ad6eb7adbd3aa79dc73b4af823a</email>
                  <email type="domain">inria.fr</email>
                  <idno type="idhal" notation="string">ugo-comignani</idno>
                  <idno type="idhal" notation="numeric">14364</idno>
                  <idno type="halauthorid" notation="string">48821-14364</idno>
                  <idno type="ORCID">https://orcid.org/0000-0002-7730-9028</idno>
                  <idno type="GOOGLE SCHOLAR">https://scholar.google.com/citations?user=VKtnNfwAAAAJ&amp;hl=fr</idno>
                  <affiliation ref="#struct-401125" />
                </author>
                <author role="aut">
                  <persName>
                    <forename type="first">Efthymia</forename>
                    <surname>Tsamoura</surname>
                  </persName>
                  <idno type="halauthorid">1562851-0</idno>
                  <orgName ref="#struct-302612" />
                  <affiliation ref="#struct-302612" />
                </author>
              </analytic>
              <monogr>
                <meeting>
                  <title>SIGMOD 2019 - ACM SIGMOD/PODS International Conference on Management of Data</title>
                  <date type="start">2019-06-30</date>
                  <date type="end">2019-07-05</date>
                  <settlement>Amsterdam</settlement>
                  <country key="NL">Netherlands</country>
                </meeting>
                <imprint>
                  <publisher>ACM</publisher>
                  <biblScope unit="volume">4</biblScope>
                  <biblScope unit="pp">1873-1876 (Demonstration)</biblScope>
                  <date type="datePub">2019</date>
                </imprint>
              </monogr>
              <idno type="doi">10.1145/3299869.3320228</idno>
              <ref type="publisher">http://sigmod2019.org/</ref>
            </biblStruct>
          </sourceDesc>
          <profileDesc>
            <langUsage>
              <language ident="en">English</language>
            </langUsage>
            <textClass>
              <keywords scheme="author">
                <term xml:lang="en">privacy-preserving data exchange</term>
                <term xml:lang="en">mappings</term>
                <term xml:lang="en">repairs</term>
                <term xml:lang="en">privacy-preserving data exchange</term>
              </keywords>
              <classCode scheme="halDomain" n="info.info-wb">Computer Science [cs]/Web</classCode>
              <classCode scheme="halTypology" n="COMM">Conference papers</classCode>
              <classCode scheme="halOldTypology" n="COMM">Conference papers</classCode>
              <classCode scheme="halTreeTypology" n="COMM">Conference papers</classCode>
            </textClass>
            <abstract xml:lang="en">
              <p>Mapping design is overwhelming for end users, who have to check at parthe correctness of the mappings and the possible informationdisclosure over the exported source instance. In this demonstration,we focus on the latter problem by proposing a novel practical solutionto ensure that a mapping faithfully complies with a set of privacyrestrictions specified as source policy views. We showcase MapRepair,that guides the user through the tasks of visualizing the results ofthe data exchange process with and without the privacy restrictions.MapRepair leverages formal privacy guarantees and is inherentlydata-independent, i.e. if a set of criteria are satisfied by themapping statement, then it guarantees that both the mapping and theunderlying instances do not leak sensitive information. Furthermore,MapRepair also allows to automatically repair an input mapping w.r.t.a set of policy views in case of information leakage. We build onvarious demonstration scenarios, including synthetic and real-worldinstances and mappings.</p>
            </abstract>
          </profileDesc>
        </biblFull>
      </listBibl>
    </body>
    <back>
      <listOrg type="structures">
        <org type="researchteam" xml:id="struct-401125" status="VALID">
          <orgName>Base de Données</orgName>
          <orgName type="acronym">BD</orgName>
          <desc>
            <address>
              <country key="FR" />
            </address>
          </desc>
          <listRelation>
            <relation active="#struct-2003" type="direct" />
            <relation active="#struct-33804" type="indirect" />
            <relation active="#struct-126765" type="indirect" />
            <relation active="#struct-301088" type="indirect" />
            <relation active="#struct-194495" type="indirect" />
            <relation active="#struct-219748" type="indirect" />
            <relation active="#struct-301232" type="indirect" />
            <relation name="UMR5205" active="#struct-441569" type="indirect" />
          </listRelation>
        </org>
        <org type="researchteam" xml:id="struct-1042449" status="OLD">
          <idno type="RNSR">201221059T</idno>
          <orgName>Types and Reasoning for the Web</orgName>
          <orgName type="acronym">TYREX</orgName>
          <date type="start">2016-01-01</date>
          <date type="end">2019-12-31</date>
          <desc>
            <address>
              <addrLine>Centre de recherche Inria655 avenue de l'Europe38330 Montbonnot Saint-Martin</addrLine>
              <country key="FR" />
            </address>
            <ref type="url">http://www.inria.fr/equipes/tyrex</ref>
          </desc>
          <listRelation>
            <relation active="#struct-2497" type="direct" />
            <relation active="#struct-300009" type="indirect" />
            <relation active="#struct-1041964" type="direct" />
            <relation active="#struct-89889" type="indirect" />
            <relation name="UMR5217" active="#struct-441569" type="indirect" />
            <relation active="#struct-445543" type="indirect" />
          </listRelation>
        </org>
        <org type="institution" xml:id="struct-302612" status="VALID">
          <idno type="ROR">https://ror.org/052gg0110</idno>
          <orgName>University of Oxford</orgName>
          <desc>
            <address>
              <addrLine>Wellington Square, Oxford OX1 2JD</addrLine>
              <country key="GB" />
            </address>
            <ref type="url">http://www.ox.ac.uk/</ref>
          </desc>
        </org>
        <org type="laboratory" xml:id="struct-2003" status="VALID">
          <idno type="IdRef">149705271</idno>
          <idno type="ISNI">0000000122577669</idno>
          <idno type="RNSR">200511875R</idno>
          <orgName>Laboratoire d'InfoRmatique en Image et Systèmes d'information</orgName>
          <orgName type="acronym">LIRIS</orgName>
          <date type="start">2003-01-01</date>
          <desc>
            <address>
              <addrLine>Bâtiment Blaise Pascal - 20, avenue Albert Einstein - 69621 Villeurbanne cedex</addrLine>
              <country key="FR" />
            </address>
            <ref type="url">https://liris.cnrs.fr/</ref>
          </desc>
          <listRelation>
            <relation active="#struct-33804" type="direct" />
            <relation active="#struct-126765" type="direct" />
            <relation active="#struct-301088" type="indirect" />
            <relation active="#struct-194495" type="direct" />
            <relation active="#struct-219748" type="direct" />
            <relation active="#struct-301232" type="indirect" />
            <relation name="UMR5205" active="#struct-441569" type="direct" />
          </listRelation>
        </org>
        <org type="institution" xml:id="struct-33804" status="VALID">
          <idno type="ROR">https://ror.org/03rth4p18</idno>
          <orgName>Université Lumière - Lyon 2</orgName>
          <orgName type="acronym">UL2</orgName>
          <desc>
            <address>
              <addrLine>86, rue Pasteur - 69007 Lyon</addrLine>
              <country key="FR" />
            </address>
            <ref type="url">http://www.univ-lyon2.fr</ref>
          </desc>
        </org>
        <org type="institution" xml:id="struct-126765" status="VALID">
          <idno type="ROR">https://ror.org/05s6rge65</idno>
          <orgName>École Centrale de Lyon</orgName>
          <orgName type="acronym">ECL</orgName>
          <desc>
            <address>
              <addrLine>36 avenue Guy de Collongue - 69134 Ecully cedex</addrLine>
              <country key="FR" />
            </address>
            <ref type="url">http://www.ec-lyon.fr</ref>
          </desc>
          <listRelation>
            <relation active="#struct-301088" type="direct" />
          </listRelation>
        </org>
        <org type="regroupinstitution" xml:id="struct-301088" status="VALID">
          <idno type="ROR">https://ror.org/01rk35k63</idno>
          <orgName>Université de Lyon</orgName>
          <desc>
            <address>
              <addrLine>92 rue Pasteur - CS 30122, 69361 Lyon Cedex 07</addrLine>
              <country key="FR" />
            </address>
            <ref type="url">https://www.universite-lyon.fr/</ref>
          </desc>
        </org>
        <org type="institution" xml:id="struct-194495" status="VALID">
          <idno type="IdRef">026402823</idno>
          <idno type="ISNI">0000000121686185</idno>
          <idno type="ROR">https://ror.org/029brtt94</idno>
          <orgName>Université Claude Bernard Lyon 1</orgName>
          <orgName type="acronym">UCBL</orgName>
          <desc>
            <address>
              <addrLine>43, boulevard du 11 novembre 1918, 69622 Villeurbanne cedex</addrLine>
              <country key="FR" />
            </address>
            <ref type="url">http://www.univ-lyon1.fr/</ref>
          </desc>
          <listRelation>
            <relation active="#struct-301088" type="direct" />
          </listRelation>
        </org>
        <org type="institution" xml:id="struct-219748" status="VALID">
          <idno type="IdRef">052444724</idno>
          <idno type="ISNI">0000 0001 2292 0228</idno>
          <orgName>Institut National des Sciences Appliquées de Lyon</orgName>
          <orgName type="acronym">INSA Lyon</orgName>
          <date type="start">1957-03-18</date>
          <desc>
            <address>
              <addrLine>20 Avenue Albert Einstein, 69621 Villeurbanne cedex</addrLine>
              <country key="FR" />
            </address>
            <ref type="url">http://www.insa-lyon.fr/</ref>
          </desc>
          <listRelation>
            <relation active="#struct-301088" type="direct" />
            <relation active="#struct-301232" type="direct" />
          </listRelation>
        </org>
        <org type="regroupinstitution" xml:id="struct-301232" status="VALID">
          <idno type="IdRef">162105150</idno>
          <orgName>Institut National des Sciences Appliquées</orgName>
          <orgName type="acronym">INSA</orgName>
          <desc>
            <address>
              <country key="FR" />
            </address>
          </desc>
        </org>
        <org type="regroupinstitution" xml:id="struct-441569" status="VALID">
          <idno type="IdRef">02636817X</idno>
          <idno type="ISNI">0000000122597504</idno>
          <idno type="ROR">https://ror.org/02feahw73</idno>
          <orgName>Centre National de la Recherche Scientifique</orgName>
          <orgName type="acronym">CNRS</orgName>
          <date type="start">1939-10-19</date>
          <desc>
            <address>
              <country key="FR" />
            </address>
            <ref type="url">https://www.cnrs.fr/</ref>
          </desc>
        </org>
        <org type="laboratory" xml:id="struct-2497" status="VALID">
          <idno type="RNSR">199218244V</idno>
          <idno type="ROR">https://ror.org/00n8d6z93</idno>
          <orgName>Inria Grenoble - Rhône-Alpes</orgName>
          <desc>
            <address>
              <addrLine>Inovallée655 avenue de l'Europe38330 Montbonnot</addrLine>
              <country key="FR" />
            </address>
            <ref type="url">http://www.inria.fr/centre/grenoble</ref>
          </desc>
          <listRelation>
            <relation active="#struct-300009" type="direct" />
          </listRelation>
        </org>
        <org type="institution" xml:id="struct-300009" status="VALID">
          <idno type="ROR">https://ror.org/02kvxyf05</idno>
          <orgName>Institut National de Recherche en Informatique et en Automatique</orgName>
          <orgName type="acronym">Inria</orgName>
          <desc>
            <address>
              <addrLine>Domaine de VoluceauRocquencourt - BP 10578153 Le Chesnay Cedex</addrLine>
              <country key="FR" />
            </address>
            <ref type="url">http://www.inria.fr/en/</ref>
          </desc>
        </org>
        <org type="laboratory" xml:id="struct-1041964" status="OLD">
          <idno type="IdRef">148425550</idno>
          <idno type="ISNI">0000 0001 2286 4035</idno>
          <idno type="RNSR">200711886U</idno>
          <idno type="ROR">https://ror.org/01c8rcg82</idno>
          <orgName>Laboratoire d'Informatique de Grenoble</orgName>
          <orgName type="acronym">LIG </orgName>
          <date type="start">2016-01-01</date>
          <date type="end">2019-12-31</date>
          <desc>
            <address>
              <addrLine>UMR 5217 - Laboratoire LIG - Bâtiment IMAG - 700 avenue Centrale - Domaine Universitaire de Saint-Martin-d’Hères Adresse postale : CS 40700 - 38058 Grenoble cedex 9Tél. : 04 57 42 14 00</addrLine>
              <country key="FR" />
            </address>
            <ref type="url">http://www.liglab.fr/</ref>
          </desc>
          <listRelation>
            <relation active="#struct-89889" type="direct" />
            <relation name="UMR5217" active="#struct-441569" type="direct" />
            <relation active="#struct-445543" type="direct" />
          </listRelation>
        </org>
        <org type="institution" xml:id="struct-89889" status="OLD">
          <idno type="IdRef">026388804</idno>
          <idno type="ROR">https://ror.org/05sbt2524</idno>
          <orgName>Institut polytechnique de Grenoble - Grenoble Institute of Technology</orgName>
          <orgName type="acronym">Grenoble INP </orgName>
          <date type="start">2007-01-01</date>
          <date type="end">2019-12-31</date>
          <desc>
            <address>
              <addrLine>46 avenue Félix Viallet 38031 Grenoble Cedex 1</addrLine>
              <country key="FR" />
            </address>
            <ref type="url">http://www.grenoble-inp.fr/</ref>
          </desc>
        </org>
        <org type="institution" xml:id="struct-445543" status="OLD">
          <idno type="IdRef">188399275</idno>
          <idno type="ROR">https://ror.org/02rx3b187</idno>
          <orgName>Université Grenoble Alpes [2016-2019]</orgName>
          <orgName type="acronym">UGA [2016-2019]</orgName>
          <date type="start">2016-01-01</date>
          <date type="end">2019-12-31</date>
          <desc>
            <address>
              <addrLine>38058 Grenoble cedex</addrLine>
              <country key="FR" />
            </address>
          </desc>
        </org>
      </listOrg>
    </back>
  <teiCorpus>
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">MapRepair: Mapping and Repairing under Policy Views</title>
			</titleStmt>
			<publicationStmt>
				<publisher />
				<availability status="unknown"><licence /></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Angela</forename><forename type="middle">Bonifati</forename><surname>Lyon</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">University &amp; Liris CNRS</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Ugo</forename><forename type="middle">Comignani</forename><surname>Lyon</surname></persName>
							<affiliation key="aff1">
								<orgName type="institution">University &amp; Liris CNRS</orgName>
							</affiliation>
						</author>
						<author role="corresp">
							<persName><forename type="first">Efthymia</forename><surname>Tsamoura</surname></persName>
							<email>efthymia.tsamoura@cs.ox.ac.uk</email>
							<affiliation key="aff2">
								<orgName type="institution">University of Oxford</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">MapRepair: Mapping and Repairing under Policy Views</title>
					</analytic>
					<monogr>
						<imprint>
							<date />
						</imprint>
					</monogr>
					<idno type="MD5">B7A5A6D084C6988BB5F1853EA935B82F</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.8.0" ident="GROBID" when="2024-04-12T14:44+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid" />
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Information systems → Data exchange privacy-preserving data exchange</term>
					<term>mappings</term>
					<term>repairs</term>
				</keywords>
			</textClass>
			<abstract>
<div><p>Mapping design is overwhelming for end users, who have to check at par the correctness of the mappings and the possible information disclosure over the exported source instance. In this demonstration, we focus on the latter problem by proposing a novel practical solution to ensure that a mapping faithfully complies with a set of privacy restrictions specified as source policy views. We showcase <software>MapRepair</software>, that guides the user through the tasks of visualizing the results of the data exchange process with and without the privacy restrictions. <software ContextAttributes="created">MapRepair</software> leverages formal privacy guarantees and is inherently data-independent, i.e. if a set of criteria are satisfied by the mapping statement, then it guarantees that both the mapping and the underlying instances do not leak sensitive information. Furthermore, <software ContextAttributes="created">MapRepair</software> also allows to automatically repair an input mapping w.r.t. a set of policy views in case of information leakage. We build on various demonstration scenarios, including synthetic and real-world instances and mappings.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div><head n="1">INTRODUCTION</head><p>We consider the problem of exchanging data between a source schema S and a target schema T via a set of source-to-target (s-t) dependencies Σ 𝑠𝑡 expressed as tuple-generating dependencies (tgds) <ref type="bibr" target="#b4">[5]</ref>.</p><p>Our work considers a privacy-conscious variant of the data exchange problem, in which the source schema comes with a set of privacy constraints (under the form of policy views), representing the data that is safe to expose to the target schema over all instances of the source. As a worst-case scenario, when wanting to protect the information of the source instance we assume that all users, both the malicious and the non-malicious ones, might know the source and the target schemas, the target instances along with the s-t tgds within the mapping.</p><p>Inspired by prior theoretical work on privacy preservation <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b6">7]</ref>, we define a set of s-t tgds to be safe w.r.t. the policy views if every information, both in term of values and joins between attributes, that is kept secret by the source policy views is also kept secret by the s-t tgds during the data exchange process. Contributions. We demonstrate <software ContextAttributes="created">MapRepair</software>, a system allowing a user to : (i) visualize the information leakage of policy views defined on the source schema of her data, (ii) visualize how a mapping violates the privacy rules defined by the policy views over its source schema, and (iii) automatically repair a mapping that does not respect the policy views over its source schema.</p><p>Both the privacy compliance and the repairing algorithms implemented by <software>MapRepair</software> are data-independent. Instead, these tasks only need to be performed over the schemas, allowing <software ContextAttributes="created">MapRepair</software> to provide mapping with strong privacy preservation guarantees over all instances of the sources.</p><p>During our demonstration, we will showcase <software>MapRepair</software> both on real-life mapping scenarios borrowed from a real hospital in the UK allowing to better experience the way the algorithms behind <software ContextAttributes="created">MapRepair</software> work, and on complex synthetically generated scenarios showing the performance of <software ContextAttributes="created">MapRepair</software> on such cases.</p><p>To the best of our knowledge, <software ContextAttributes="used">MapRepair</software> is the first system to show the underpinnings of privacy-preserving data exchange, while classical data exchange <ref type="bibr" target="#b3">[4,</ref><ref type="bibr" target="#b4">5]</ref> focused on the privacy-unaware case.</p><p>Modifications of the underlying source and target instances by leveraging probabilistic approaches and anonymization techniques <ref type="bibr" target="#b5">[6,</ref><ref type="bibr" target="#b7">8]</ref> are orthogonal to our approach, which is inherently dataindependent. The source code along with the experimental scenarios are publicly available .</p><p>Paper layout. We present an overview of <software>MapRepair</software> in Section 2 and the details of our demonstration in Section 3.</p></div>
<div><head n="2">SYSTEM OVERVIEW</head><p>Our system can be used either to visualize the information leakage occurring when exchanging data from source to target across the mappings or to automatically repair the mappings in order to make them compliant with a given set of source policy views.</p><p>In this section, we illustrate the key concepts of our approach (fully detailed in <ref type="bibr" target="#b2">[3]</ref>), then we describe the implementation of our system and give an illustration of its scalability.</p></div>
<div><head>Main algorithmic concepts.</head><p>We illustrate the main algorithmic concepts underlying our system by using the running example shown in Figure <ref type="figure">1</ref>. Precisely, Figure <ref type="figure">1</ref>(i) and (ii) show the source and target schemas of a real-life mapping scenario describing two hospitals in the UK, while Figure <ref type="figure">1</ref>(iii) shows the set of policy views V (a) Views design using information disclosure.</p></div>
<div><head>Disclosure comparison between mapping and policy views:</head><p>Unwanted values: country1, pathology1</p><p>Disclosed joins:</p><p>Oncology.idInsurance3 Student.idInsurance3</p></div>
<div><head>Current mapping:</head><p>Views design Mapping design  associated with the source schema. Figure <ref type="figure">1</ref>(iv) shows the schema mapping Σ for which we would like to detect information disclosure, whereas Figure <ref type="figure">1</ref>(v) shows a possible repair for Σ w.r.t. V as output by our system <software ContextAttributes="used">MapRepair</software>.</p><p>In the following, we are now going to introduce the basic ingredients of our approach by using the running example as a basis for the presentation.</p><p>• Critical instance and visible chase. In order to detect information disclosure of a set of s-t tgds, we rely on the visible chase algorithm over the critical instance of the source schema, as defined in previous work <ref type="bibr" target="#b1">[2]</ref> for the simple case of boolean queries. Since we handle non-boolean conjunctive queries in our mappings, we extended this notion accordingly. The critical instance of a schema S is an instance such that, for each tuple over S, its domain contains exactly one constant. For example, borrowing the source schema from Figure <ref type="figure">1</ref> The next visible chase step aims at finding which information can be deduced from the interactions between the dependencies. To this end, the visible chase algorithm checks whether a homomorphism from the dependencies bodies into 𝐼 0 allowing to unify labeled nulls to the value * exists. In our example, this will lead to unify 𝑛 ′ 𝑐 and 𝑛 ′′ 𝑒 to * , thus obtaining the following tuples as output of the visible chase :</p><formula xml:id="formula_0">𝑆𝑡𝑢𝑑𝑒𝑛𝑡 (𝑛 𝑖 , 𝑛 𝑛 , * , 𝑛 𝑐 ) 𝑂𝑛𝑐𝑜𝑙𝑜𝑔𝑦 (𝑛 𝑖 , 𝑛 𝑡 , 𝑛 𝑒 ) 𝑃𝑎𝑡𝑖𝑒𝑛𝑡 (𝑛 ′ 𝑖 , 𝑛 ′ 𝑛 , * , * ) 𝐻𝑜𝑠𝑝𝑖𝑡𝑎𝑙 (𝑛 ′ 𝑖 , * ) • Repairing of mappings.</formula><p>Based on the visible chase algorithm, it can be shown that a mapping Σ preserves the privacy of a set of source policy views V if, and only if, there exists a homomorphism from the visible chase results over Σ into the visible chase results over V.</p><p>Thus, the repairing algorithm implemented in <software>MapRepair</software> allows to ensure that the output mapping respects such a constraint. It also aims at maximizing the disclosure of non-sensitive information at the same time in order to let the data exchange process seamlessly occur. Our algorithm works in two fundamental steps. The first step (F-repair) will ensure that each tgd of the repaired mapping Σ is safe w.r.t. the set of policy views V, leading to a so-called partially safe mapping. This algorithm will produce repairs by breaking joins in the bodies or hiding exported target variables, and choose the best repair based on a preference function. The second step (S-repair) aims at ensuring that the repaired mapping is safe, despite the possible interactions between its tgds. This is done by focusing on homomorphisms similar to the second step of the visible chase algorithm described above. This step tracks which tgds lead to break the safety and corrects them by either hiding exported variables or breaking joins in their bodies. As in the first step, the output mapping is chosen among multiple rewritings by using a preference function.</p><p>On our running example, the repaired mapping w.r.t. V will be the mapping shown in Figure <ref type="figure">1(v)</ref>.</p><p>Data exchange privacy-aware workflow. We present the workflow of our system as the transition between four steps. A high-level architecture of <software ContextAttributes="used">MapRepair</software> is provided in Figure <ref type="figure" target="#fig_4">3</ref> to illustrate the communication involved in our workflow.</p><p>• Initial state : waiting to load policy views. At first, <software ContextAttributes="used">MapRepair</software> waits for the user to load a set of policy views, by either using an input file or by entering the views manually through the graphiuser interface. The user might want to add new policy views at this step by using the corresponding 'Add New View' button as shown in Figure <ref type="figure" target="#fig_2">2a</ref>. Next, the user can choose to visualize the results of the visible chase over the set of policy views as shown in Figure <ref type="figure" target="#fig_2">2a</ref>, and interactively update them to meet our desired privacy restrictions. In this figure, we show how our system will represent information disclosure of the view V from our running example, by representing the disclosed values highlighted in red and disclosed joins over labeled nulls highlighted in orange, respectively. The underlying chase engine of <software ContextAttributes="used">MapRepair</software> allows us to obtain in real time this information about the color-coded items illustrated in the interface.</p><p>• Waiting to load mapping to repair. Once the policy views have been validated by the user, the system is kept on hold for a mapping as input. Like for the policy views, it can be provided either by using an input file or by entering the mappings by hand through the graphical interface using the corresponding 'Add New Tgd' button as shown in Figure <ref type="figure" target="#fig_2">2b</ref>. As shown in this figure, the GUI also allows a comparison of information leakage between the mapping Σ and the set of policy views V (shown for our running example in the screenshot). The interface will highlight in red a value that is disclosed by the mapping whereas it should be hidden according to the policy views. Analogously, if the mapping discloses a join over labeled nulls and that should be hidden according to the policy views, then this join will be color-coded in orange. Finally, if an information disclosed by the mapping is allowed according to the policy views, then this value will be in green. At this point, the user can update manually the tgds in her mapping and visualize the effect of her modification on the disclosed information. • Repairing in progress. Pressing the dedicated button triggers the generation of a repaired mapping. This will lead to the computation as describe previously, with the use of the chase engine and the repairing module of <software ContextAttributes="used">MapRepair</software>.</p><p>• Final state : repairing complete. At the end of the repairing process, the output mapping is loaded in the interface. As soon as the mapping is safe w.r.t. the policy views, all variables in the mapping will be highlighted in green in the interface. At this point, the user can choose to manually update this mapping, and <software>MapRepair</software> will show her how the applied modifications affect the disclosed information. The obtained mapping can be exported as an xml file and reused in case by the system.</p><p>System implementation and assessment. The core algo- rithms behind <software ContextAttributes="used">MapRepair</software> are implemented using Java 8. The chase engine uses a <software ContextAttributes="used">PostgreSQL</software> 10.6 database to store tuples during computations. The graphical user interface is coded in JavaScript and allows users to load their views and mappings either by providing a xml file or writing them directly in the interface. The interface also allows to update input views/mappings and the output repaired mapping in order to allow users to gauge the effect of their modifications on information disclosure. Our demonstration scenarios also show that, despite the complexity of homomorphism detection, our repair algorithm efficiently scales in the presence of mappings including hundreds of s-t tgds. Figure <ref type="figure" target="#fig_5">4</ref> shows several execution times obtained by repairing scenarios (that were generated with <software ContextAttributes="used">iBench</software> <ref type="bibr" target="#b0">[1]</ref>) with mappings containing up to 300 s-t tgds, these tgds containing up to five atoms in their bodies. We can easily notice that the runtimes of our repairing algorithms are small and suitable for an interactive demonstration.</p></div>
<div><head n="3">DEMONSTRATION OVERVIEW</head><p>We now discuss the capabilities of <software>MapRepair</software> that we will demonstrate on a set of mapping scenarios.</p><p>Showcased scenarios. We borrowed mapping scenarios both from real-life use cases and synthetically generated mappings obtained with the state-of-the-art benchmark <software ContextAttributes="used">iBench</software> <ref type="bibr" target="#b0">[1]</ref>.</p><p>• Scenario 1 is the simplest scenario, containing 3 policy views and a mapping of 3 s-t tgds, both defined over schemas with relations containing up to 4 attributes. This is the running example used to illustrate our approach in the previous section. • Scenario 2 is a more complex real-life healthcare scenario describing the exchange of data between two hospitals in the UK. This scenario consists of a set of 6 policy views and a mapping of 8 s-t tgds, both defined over schemas with relations containing up to 51 attributes.</p><p>• Scenario 3 is a medium-complexity scenario synthetically generated with <software>iBench</software>. This scenario consists of a set of 20 policy views and a mapping of 20 s-t tgds, both defined over schemas with relations containing up to 20 attributes.</p><p>• Scenario 4 is a highly complex scenario synthetically generated with <software>iBench</software>. This scenario includes a set of 300 policy views and a mapping of 300 s-t tgds, both defined over schemas with relations containing up to 50 attributes.</p><p>Notice that the first two scenarios will allow the attendee to have a better grasp of the underpinnings of our approach due to their reasonable size, whereas the larger third and fourth mapping scenarios will be used to show the scalability of the system (as shown in Figure <ref type="figure" target="#fig_5">4</ref>). Showcased features. Through the scenarios described in the previous section, we will showcase the following: • Design of policy views. We will demonstrate how <software ContextAttributes="created">MapRepair</software> can guide a mapping designer through the specification of privacypreserving views and schema mappings that do not violate the policy views over their source schema.</p><p>• Detection of information leakage in the mappings. We will demonstrate how <software>MapRepair</software> can help to spot mapping violations wrt. policy views, and manually modify the mappings to recover privacy compliance.</p><p>• Automatic reparation of mappings. Finally, we will show how <software>MapRepair</software> can automatically repair a mapping that violate policy views.</p><p>• Performances. We will showcase the scalability of our system in presence of highly complex scenarios. To illustrate that, we will particularly emphasize the repairing of Scenarios 3 and 4 and their runtimes.</p></div><figure xml:id="fig_0"><head>( i )Figure 1 :</head><label>i1</label><figDesc>Figure 1: Running example : policy views and mapping over a hospital schema.</figDesc></figure>
<figure xml:id="fig_1"><head /><label /><figDesc>Patient(idInsurance, name, ethnicity, country) AND Hospital(idInsurance, pathology) CountryDis(country, pathology) Student(idInsurance, name, ethnicity, country) AND Oncology(idInsurance, treatment, evolution) SO(ethnicity) Patient(idInsurance, name, ethnicity, country) AND Hospital(idInsurance, pathology) EthDis(ethnicity, pathology) Patient(idInsurance1, name1, ethnicity1, country1) Student(idInsurance3, name3, ethnicity3, country3) Patient(idInsurance2, name2, ethnicity2, country2) Hospital(idInsurance1, pathology1) Oncology(idInsurance3, treatment3, evolution3) Hospital(idInsurance2, pathology2) (b) Automatic repair of a mapping w.r.t. policy views.</figDesc></figure>
<figure xml:id="fig_2"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Workflow of MapRepair.</figDesc></figure>
<figure xml:id="fig_3"><head /><label /><figDesc>(i), and assuming we choose the constant * , the corresponding critical instance Crt S for S is as follows : 𝑆𝑡𝑢𝑑𝑒𝑛𝑡 ( * , * , * , * ) 𝑂𝑛𝑐𝑜𝑙𝑜𝑔𝑦 ( * , * , * ) 𝑃𝑎𝑡𝑖𝑒𝑛𝑡 ( * , * , * , * )𝐻𝑜𝑠𝑝𝑖𝑡𝑎𝑙 ( * , * ) Running the visible chase algorithm over such an instance and a set of dependencies Σ will work in two steps. The first step of the visible chase aims at detecting information leakage over each dependency taken separately, i.e., interactions between dependencies are not considered at this step. For this first step, the chase is run over Σ then the result is chased over Σ -1 , allowing to see the disclosed information for each tgd. As an example, running this step over the mapping Σ in Figure1(iv) will first give an instance : 𝐼 S = chase(Σ, Crt S ) = {𝑉 1 ( * , * ); 𝑉 2 ( * , * ); 𝑉 3 ( * )} then the chase of 𝐼 S over Σ -1 will give an instance 𝐼 0 with the following tuples : 𝑆𝑡𝑢𝑑𝑒𝑛𝑡 (𝑛 𝑖 , 𝑛 𝑛 , * , 𝑛 𝑐 ) 𝑂𝑛𝑐𝑜𝑙𝑜𝑔𝑦 (𝑛 𝑖 , 𝑛 𝑡 , 𝑛 𝑒 ) 𝑃𝑎𝑡𝑖𝑒𝑛𝑡 (𝑛 ′ 𝑖 , 𝑛 ′ 𝑛 , * , 𝑛 ′ 𝑐 ) 𝐻𝑜𝑠𝑝𝑖𝑡𝑎𝑙 (𝑛 ′ 𝑖 , * ) 𝑃𝑎𝑡𝑖𝑒𝑛𝑡 (𝑛 ′′ 𝑖 , 𝑛 ′′ 𝑛 , 𝑛 ′′ 𝑒 , * ) 𝐻𝑜𝑠𝑝𝑖𝑡𝑎𝑙 (𝑛 ′′ 𝑖 , * ) with the variables 𝑛 being labeled nulls. From this first step, we can see which values are disclosed by our mapping by looking at the * values. When values are not disclosed, we can still see which joins are disclosed by looking at the labeled nulls such as 𝑛 𝑖 showing that, in our mapping Σ, students tuples are linked to oncology appointments tuples.</figDesc></figure>
<figure xml:id="fig_4"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: MapRepair architecture.</figDesc></figure>
<figure xml:id="fig_5"><head>Figure 4 :</head><label>4</label><figDesc>Figure 4: Repairing times for mappings up to 300 tgds.</figDesc></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">The iBench integration metadata generator</title>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">C</forename><surname>Arocena</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Glavic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Ciucanu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Miller</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">VLDB</title>
		<imprint>
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Source Information Disclosure in Ontology-Based Data Integration</title>
		<author>
			<persName><forename type="first">M</forename><surname>Benedikt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">Cuenca</forename><surname>Grau</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Kostylev</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">AAAI</title>
		<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Repairing mappings under policy views</title>
		<author>
			<persName><forename type="first">A</forename><surname>Bonifati</surname></persName>
		</author>
		<author>
			<persName><forename type="first">U</forename><surname>Comignani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Tsamoura</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1903.09242</idno>
		<imprint>
			<date type="published" when="2019">2019. 2019</date>
		</imprint>
	</monogr>
	<note type="report_type">CoRR</note>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Functional Dependencies Unleashed for Scalable Data Exchange</title>
		<author>
			<persName><forename type="first">Angela</forename><surname>Bonifati</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ioana</forename><surname>Ileana</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Michele</forename><surname>Linardi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SSDBM</title>
		<imprint>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Data exchange: semantics and query answering</title>
		<author>
			<persName><forename type="first">R</forename><surname>Fagin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">G</forename><surname>Kolaitis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">J</forename><surname>Miller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Popa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Theoretical Computer Science</title>
		<imprint>
			<biblScope unit="volume">336</biblScope>
			<biblScope unit="page">1</biblScope>
			<date type="published" when="2005">2005. 2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">A formal analysis of information disclosure in data exchange</title>
		<author>
			<persName><forename type="first">G</forename><surname>Miklau</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Suciu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Comput. Syst. Sci</title>
		<imprint>
			<biblScope unit="volume">73</biblScope>
			<biblScope unit="page">3</biblScope>
			<date type="published" when="2007">2007. 2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Privacy in GLAV Information Integration</title>
		<author>
			<persName><forename type="first">A</forename><surname>Nash</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Deutsch</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICDT</title>
		<imprint>
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">k-Anonymity: A Model for Protecting Privacy</title>
		<author>
			<persName><forename type="first">L</forename><surname>Sweeney</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Uncertainty, Fuzziness and Knowledge-Based Systems</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="557" to="570" />
			<date type="published" when="2002">2002. 2002</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</teiCorpus></text>
</TEI>