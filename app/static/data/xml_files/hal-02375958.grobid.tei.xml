<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">A Projection-Stable Grammatical Model to Specify Workflows for their P2P and Artifact-Centric Execution</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Milliam</forename><surname>Maxime</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Zekeng</forename><surname>Ndadji</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Mathematics and Computer Science</orgName>
								<orgName type="institution">University of Dschang</orgName>
								<address>
									<postBox>PO Box 67</postBox>
									<settlement>Dschang</settlement>
									<country key="CM">Cameroon</country>
								</address>
							</affiliation>
						</author>
						<author role="corresp">
							<persName><forename type="first">Maurice</forename><forename type="middle">Tchoupé</forename><surname>Tchendji</surname></persName>
							<email>maurice.tchoupe@univ-dschang.org</email>
							<affiliation key="aff0">
								<orgName type="department">Department of Mathematics and Computer Science</orgName>
								<orgName type="institution">University of Dschang</orgName>
								<address>
									<postBox>PO Box 67</postBox>
									<settlement>Dschang</settlement>
									<country key="CM">Cameroon</country>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="institution">Inria</orgName>
								<address>
									<settlement>Sophia Antipolis</settlement>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">A Projection-Stable Grammatical Model to Specify Workflows for their P2P and Artifact-Centric Execution</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">111911D8A07E1E1DF846650122385139</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.8.0" ident="GROBID" when="2024-04-12T14:44+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Workflow Management Systems</term>
					<term>Workflow Specification Language</term>
					<term>Artifacts</term>
					<term>Accreditation</term>
					<term>Projection</term>
					<term>Partial replica</term>
					<term>Peer to Peer Système de Gestion des Workflows</term>
					<term>Langage de Spécification des Workflows</term>
					<term>Artefacts</term>
					<term>Accréditation</term>
					<term>Projection</term>
					<term>Réplique Partielle</term>
					<term>Pair à Pair</term>
				</keywords>
			</textClass>
			<abstract xml:lang="fr">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>In this manuscript, we are interested in the specification and decentralized execution of administrative workflows. We present a grammatical model to specify such processes by indicating, in addition to their fundamental elements, the permissions (reading, writing and execution) of each actor in relation to each of the tasks that compose them. We then present a decentralized and artifact-centric execution model of these processes, on a Peer to Peer (P2P) Workflow Management System (WfMS). Our execution model allows the confidential execution of certain tasks by ensuring that, each actor potentially has only a partial perception of the overall process execution status. In our approach, we propose various stable projection algorithms, making it possible to obtain, to verify the coherence and to guarantee the convergence of the various potentially partial perceptions. Our algorithms are then coded and tested using a graphical tool to simulate the decentralized execution of administrative processes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>RÉSUMÉ</head><p>. Dans ce manuscrit, nous nous intéressons à la spécification et à l'exécution décentralisée des processus workflows administratifs. Nous présentons un modèle grammatical permettant de spécifier de tels processus en précisant en plus de leurs éléments fondamentaux, les permissions (lecture, écriture et exécution) de chaque acteur relativement à chacune des tâches qui les composent. Nous présentons ensuite un modèle d'exécution décentralisée et centré-artefact de ces processus, sur un Système de Gestion de Workflows (SGWf) Pair à Pair (P2P). Notre modèle d'exécution autorise l'exécution confidentielle de certaines tâches en permettant à chaque acteur, de n'avoir potentiellement qu'une perception partielle de l'état d'exécution global du processus. Dans notre démarche, nous proposons divers algorithmes de projection stables, permettant d'obtenir, de vérifier la cohérence et de garantir la convergence des diverses perceptions potentiellement partielles. Nos algorithmes sont ensuite codés et expérimentés à l'aide d'un outil graphique de simulation d'exécution décentralisée des processus administratifs.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>To easily automate their business processes and increase their competitiveness, organisations are increasingly interested in workflow technology. Indeed, in its most widespread approach, the latter reduces the automation of a given business process to its formal specification (modeling) using a Workflow Process Specification Language (WfPSL) <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b2">3]</ref>.</p><p>To automate a given administrative process <ref type="foot" target="#foot_0">1</ref> , we can conceive it as a set of annotated trees called target artifacts, representing possible execution scenarios of the said process (see fig. <ref type="figure" target="#fig_0">1</ref>). From this set of artifacts, we will derive an equivalent grammar called Grammatical Model of Workflow <ref type="bibr">(GMWf)</ref>. By associating this model with a list (subsequently called set of accreditations) informing on the permissions of each process actor for each task, we obtain a complete (ready to be executed) specification of the studied process.</p><p>Instances of an administrative process described using a GMWf and a set of accreditations, can be executed in a decentralized mode, by a P2P-WfMS-View; it is a Workflow Management System (WfMS) whose geographically dispersed instances (peers) communicate in Peer to Peer (P2P) by exchanging artifacts (artifact-centric). As a prerequisite to do so, each peer is configured using the model (GMWf + set of accreditations) of the process. From the (global) GMWf, each peer completes its configuration by deriving by projection, a local GMWf according to the accreditations of the local actor (GMWf projection). During the proper execution, actors coordinate by exchanging locally updated artifacts, to incrementally build one of the target artifacts: that's why the workflow execution process is said to be artifact-centric. On a given peer, when an artifact is received, it is projected (artifact projection) in accordance with the accreditations of the local actor in order to meet any confidentiality requirements. The local actor potentially manipulates only a partial replica of the global artifact under execution; his actions on it are guided by his local GMWf. At the end of its local execution, his updates to the manipulated partial replica must be integrated into the global artifact being executed. We then merge these two artifacts that are conform to two different models (we say that we realize the expansion-pruning of the updated partial replica). When this merging is complete, the process execution continues with the updated global artifact under execution. Contributions: In this paper, we propose 1) a simple Language for Specifying Administrative Workflow Processes (LSAWfP), allowing to model each administrative process in the form of a GMWf to which a set of actors accreditations is added; 2) stable projection operations (GMWf projection, artifacts projection and expansion-pruning) for decentralized execution of processes using a P2P-WfMS-View. Manuscript organization: in section 2 of this manuscript, we give a formal definition of our language (LSAWfP) and then we discuss its expressiveness. Then, in section 3, we present our model for decentralized execution of administrative processes specified using our LSAWfP, as well as its key algorithms. Finally, in appendices, we analyze the stability of our algorithms (sec. A) and we present a prototype of a P2P WfMS integrating our algorithms.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">A Language for the Specification of Administrative Workflow Processes (LSAWfP)</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.">Language definition</head><p>In the rest of this manuscript, we designate by the expression "a Language for the Specification of Administrative Workflow Processes" (LSAWfP), the language that we propose for processes specification. Also, we refer to Grammatical Model of Administrative Workflow Process (GMAWfP) as any specification of a business process produced using the language LSAWfP. Formally, a GMAWfP is defined as follows :</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Définition 1 The Grammatical Model of Administrative Workflow Process (GMAWfP)</head><p>W f of a given business process, is a triplet W f = G, L P k , L A k wherein G is the studied process (global) GMWf, L P k is the set of k actors taking part in its execution and L A k represents the set of these actors accreditations. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.1.">Concept of GMWf</head><p>The set of tasks of an administrative process and their ordering can be described using a set of target artifacts (see fig. <ref type="figure" target="#fig_0">1</ref>). In these, nodes represent tasks to be executed and each hierarchical decomposition (a node and its sons) represents an ordering. In the artifacts that we handle, we consider only two types of ordering : (1) sequential ordering, noted X 0 → X s1 . . . X sn for a set {X 0 , X s1 . . . X sn } of tasks, which describes how the task X 0 precedes tasks X s1 . . . X sn that should be executed sequentially and, (2) parallel ordering, noted X 0 → X p1 . . . X pn , which indicates how the task X 0 precedes tasks X p1 , . . . , X pn that can be executed concurrently. The set of target artifacts can therefore be substituted by a grammar G (a GMWf) in which, each symbol refers to a task and, each production p is of one of the following two forms: p : X 0 → X 1 . . . X n or p : X 0 → X 1 . . . X n . In this case, each target artifact t i is conform to G and we note t i ∴ G. More formally, Définition 2 A Grammatical Model of Workflow (GMWf) is defined by G = (S , P , A) where S is a finite set of grammatical symbols or sorts corresponding to various tasks to be executed in the studied business process; A ∈ S is a particular symbol called axiom, and P ⊆ S × S * is a finite set of productions decorated by the operators " " (is sequential to) and " " (is parallel to): they are precedence rules. A production P = X P(0) , X P(1) • • • X P(|P|) is either of the form P : X 0 → X 1 . . . X |P| , or of the form P : X 0 → X 1 . . . X |P| and |P| designates the length of P right-hand side. Each grammatical symbol X ∈ S is associated with an attribute called status, that can be updated when the task X is executed; X.status provides access (read and write) to its content. A production with the symbol X as left-hand side is called a X-production.</p><p>For some business processes, there may be particular cases where it is impossible to strictly order all tasks using the two production forms adopted for GMWf 2 . In such case, it is neccessary to insert new symbols, known as (re)structuring symbols, not related to tasks, to achieve a correct ordering that meets the forms of productions. To take into account such cases, we adapt the previously made GMWf definition to obtain the following complete one: <ref type="bibr">Workflow (GMWf)</ref> is defined by G = (S , P , A G ) wherein P refers to the same purpose as in definition 2, S = {A G }∪T ∪T Struc is a finite set of grammatical symbols or sorts in which, those of T correspond to tasks of the studied business process, while those of T Struc are (re)structuring symbols. A G is the axiom of grammar.</p><formula xml:id="formula_0">Définition 3 A Grammatical Model of</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.2.">Concept of accreditation of an actor</head><p>Since business processes are generally carried out collectively, it is necessary for coordination and confidentiality reasons, to clarify the permissions of each actor on each process task. In our case, we propose to do this when specifying the process, using accreditations. The accreditation of a given actor provides information on the rights (permissions) he has on each sort (task) of the GMWf. The nomenclature of the rights we handle is inspired by the one used in Unix-like operating systems. Three types of accreditation are therefore defined: accreditation in reading (r), in writing (w) and in execution (x).</p><p>1. Accreditation in reading (r): an actor accredited in reading on sort X, may be not only informed on the execution of the related task, but he may also access its execution status. We call an actor's vue the set of sorts on which he is accredited in reading.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Accreditation in writing (w):</head><p>an actor accredited in writing on sort X is in charge of the execution of the related task. Any actor accredited in writing on a symbol must necessarily be accredited in reading on it.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Accreditation in execution (x):</head><p>an actor accredited in execution on sort X is authorized to ask to the actor who is accredited in writing on it to execute it.</p><p>More formally, an accreditation is defined as follows:</p><p>Définition 4 An accreditation A A i defined on the set S of grammatical symbols for an actor A i , is a triplet</p><formula xml:id="formula_1">A A i = A A i (r) , A A i (w) , A A i (x) such that, A A i (r) ⊆ S also called view of actor A i ,</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>is the set of symbols on which A i is accredited in reading,</head><formula xml:id="formula_2">A A i (w) ⊆ A A i (r)</formula><p>is the set of symbols on which A i is accredited in writing and A A i (x) ⊆ S is the set of symbols on which A i is accredited in execution.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.">On the expressiveness of our language</head><p>Our language (LSAWfP) covers the three workflow conceptual models identified in <ref type="bibr" target="#b3">[4]</ref>. In our case, the organizational model (that expresses and assigns the resources that must execute tasks) is specified using the couple L P k , L A k . As for the information model (it describes the data structure being manipulated), it is given by the type of the attribute status 3 . LSAWfP does not impose any constraints on the type of this attribute and leaves  the responsibility to the designer to specify it; by default it is a string type. The process model (that provides information on the tasks and their sequencing) is provided by the GMWf (G). Note that it is possible, in our case, to represent all forms of routing between tasks (sequential, parallel, alternative 4 and iterative 5 ).</p><p>Compared to other languages used in the literature (Business Process Model and Notation <ref type="bibr" target="#b6">[7]</ref>, Petri Nets <ref type="bibr" target="#b7">[8]</ref>, Petri Nets with Objects <ref type="bibr" target="#b2">[3]</ref> etc.), ours is mainly distinguished by the fact that it allows designers to statically specify the accreditations of various actors with regard to each task.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">GMAWfP P2P execution model and corresponding algorithms</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.">Key elements and constraints of the execution model</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.1.">The execution environment</head><p>To execute a given GMAWfP in a decentralized mode, we use a completely decentralized (P2P) WfMS model (which we call P2P-WfMS-View), proposing an artifact-centric execution of business processes specified using grammatical models. For this purpose, instances of a P2P-WfMS-View are installed on the sites of the various actors involved in processes execution. These communicate (sending/receiving requests/responses) by service invocation.</p><p>During the process execution, each peer keeps a copy of a (global) artifact said to be under execution, which represents the current process execution status. Such an artifact provides information on already executed tasks, on those ready to be executed and on their executors. Technically, an artifact under execution is materialized by the presence within it of buds. These indicate at a moment, the only places where contributions are expected. A bud can be either unlocked or locked depending on whether the corresponding task is ready to be executed or not. Buds are typed; a bud of type X ∈ S is a leaf node labelled either by X ω or by X ω depending on its state (locked or unlocked) (see fig. <ref type="figure" target="#fig_1">2</ref>). The local actions of a given actor will therefore have the effect of extending its local copy of the (global) artifact by developing, through appropriate productions, the different unlocked buds it contains. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.2.">Confidential execution of certain tasks</head><p>For confidentiality reasons, each actor acts potentially on a partial replica of his local copy of the (global) artifact. Technically, a partial replica t V i of an artifact t is obtained by 4. Such routing is represented by several productions with the same symbol as left-hand side. 5. To do such routing, all you need is to include recursive symbols in the definition of GMWf productions.</p><p>projection (using an operator π said of artifact projection) of t according to the view V i of the concerned actor: we note t V i = π V i (t). To ensure the effectiveness of the confidential execution of certain tasks, each actor acts locally through a specialized graphic tool (see fig. <ref type="figure" target="#fig_2">3</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.3.">The need of a local GMWf at each site</head><p>Since the local actions of a particular actor depend on his perception of the process, it is necessary to control them in order not only to preserve the possible confidentiality of certain tasks, but also to ensure the consistency of local updates. To do this, we must derive a local GMWf on each site, by projecting the global GMWf according to the view of the local actor (GMWf projection). This projection is carried out using Π operator and the GMWf obtained is noted</p><formula xml:id="formula_3">G V i = Π V i (G).</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.4.">The expansion operation</head><p>Still with the aim of ensuring system convergence, the contributions made by a given actor and contained in an updated partial replica t ma j V i , must be integrated into the local copy of the (global) artifact before any synchronization between peers. It is therefore necessary to be able to merge these two artifacts, which are based on two different models. We find here, a version of the expansion problem as formulated in <ref type="bibr" target="#b1">[2]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.">Execution model and peer activity</head><p>Globally then, before the execution of a given process, peers are configured using its GMAWfP W f = G, L P k , L A k . From the global GMWf G and the view V i of the local actor, each peer derives a local GMWf G V i = Π V i (G). Then, the execution of a case of the process is triggered when an artifact t is introduced into the system (on the appropriate peer); this artifact is actually an unlocked bud of the type of the axiom A (initial task) of G. During execution, peers synchronize themselves by exchanging their local copies of the artifact being executed.</p><p>After receiving an artifact on a given peer, the latter merges it (see fig. <ref type="figure" target="#fig_2">3</ref>) with its local copy (if it exists) and then the result is projected. The partial replica obtained is then completed when needed, using the specialized editor.</p><p>At the end of the completion, the expansion-pruning of the obtained updated partial replica is made in order to obtain the updated configuration of the (global) artifact local copy. If the resulting configuration shows that the process should be continued at other sites 6 , then replicas of the artifact are sent to them by invoking the service "forwardTo". Else 7 , a replica is returned to the pair from whom the artifact was previously received by invoking the service "returnTo".</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.">The main algorithms of the execution model</head><p>The GMAWfP execution model is mainly based on three algorithms: artifact projection, GMWf projection and expansion. In this section, we propose versions of these algorithms.</p><p>6. This is the case when the artifact contains buds created on the current peer and whose actors accredited in writing are on distant peers.</p><p>7. The artifact is complete (it no longer contains buds), or semi-complete (it contains buds that were created on other peers and on which, the actor on the current peer is not accredited in writing). </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.1.">The artifact projection algorithm</head><p>Technically, the projection t V i of an artifact t in the view V i = A A i (r) is obtained by deleting in t all nodes whose types do not belong to V i . In our case, the main challenges in this operation are: (1) to preserve the previously existing execution order between nodes of t, (2) to preserve the use of the only two forms of production retained for GMWf and (3) to obtain only one artifact after projection to ensure the continuation of processes execution.</p><p>Our operation is noted π. Inspired by the one proposed in <ref type="bibr" target="#b1">[2]</ref>, we project an artifact by preserving the hierarchy (father-son relationship) between nodes of the artifact (we thus meet challenge (1)); but in addition, we insert into the projected artifact when necessary, new additional (re)structuring symbols (accessible in reading and writing by the actor for whom the projection is made). This enables us to meet challenge (2). Figure <ref type="figure" target="#fig_5">4</ref> presents an artifact t as well as two partial replicas t v 1 and t v 2 respectively obtained from the views V 1 = {A, B,C} and V 2 = {A, B, D}. Note the presence in t v 2 of the (re)structuring symbol</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>S1.</head><p>The algorithm: concretely, to project an artifact t according to a given view V (i.e to find pro js t = π V (t)), the following recursive processing is applied to the root node n = X [t 1 , . . . ,t m ] (this notation indicates that n is labelled with the symbol X and has m sub-artifacts t 1 , . . . ,t m ) of t (note by p n , the production of the GMWf that was used to extend node n; note also that the algorithm described here can return several artifacts):</p><p>Algorithm for projecting a given artifact according to a given view.</p><p>• If symbol X is visible (X ∈ V ) then :</p><p>1. n is kept in the artifact; 2. For each sub-artifact t i of n, having node n i = X i t i 1 , . . . ,t i k as root (of which p n i is the production that was used to extend it), the following processing is applied : a. The projection of t i according to V is done. We obtain the list pro js</p><formula xml:id="formula_4">t i = π V (t i ) = t i V 1 , . . . ,t i V l ; b.</formula><p>If the type of p n i is the same as the type of p n or the projection of t i has produced no more than one artifact (|pro js t i | ≤ 1), we just replace t i by artifacts</p><formula xml:id="formula_5">t i V 1 , . . . ,t i V l of the list pro js t i ;</formula><p>Otherwise, a new (re)structuring symbol S i is introduced and we replace the sub-artifact t i with a new artifact new_t i whose root node is</p><formula xml:id="formula_6">n t i = S i t i V 1 , . . . ,t i V l ; 3. If the list of new sub-artifacts of n contains only one element t 1 having n 1 = S 1 t 1 V 1 , . . . ,t 1 V l</formula><p>(with S 1 a newly created (re)structuring symbol) as root node, we replace in this one, t 1 by the sub-artifacts</p><formula xml:id="formula_7">t 1 V 1 , . . . ,t 1 V l of n 1 .</formula><p>This removes a nonimportant (re)structuring symbol.</p><p>• Else, n is deleted and the result of the projection (pro js t ) is the union of the projections of each of its sub-artifacts:</p><formula xml:id="formula_8">pro js t = π V (t) = m i=1 π V (t i )</formula><p>To avoid that the previous algorithm produces a forest in some cases and thus meet challenge (3), we make the following assumption: GMAWfP manipulated in this work are such that all actors are accredited in reading on the GMWf axiom (axiom's visibility assumption). It should be noted that with our language, all administrative processes can be designed in a form that validates this assumption.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.2.">GMWf projection algorithm</head><p>The goal of this algorithm is to derive by projection of a given GMWf G = (S , P , A G )</p><formula xml:id="formula_9">according to a view V , a local GMWf G V = S V , P V , A G V (we note G V = Π V (G)).</formula><p>The algorithm we propose is as follows:</p><p>Algorithm for projecting a given GMWf according to a given view.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>1.</head><p>First of all, it is necessary to generate all the target artifacts denoted by G; we thus obtain a set arts G = {t 1 , . . . ,t n }; 2. Then, each of the target artifacts must be projected according to V . We thus obtain a set arts G V = t V 1 , . . . ,t V m (with m ≤ n because there may be duplicates; in this case, only one copy is kept) of artifacts partial replicas; 3. Then, collect the different (re)structuring symbols appearing in artifacts of arts G V , making sure to remove duplicates and to consequently update the artifacts and the set arts G V . We thus obtain a set S V Struc of symbols and a final set arts G V = t V 1 , . . . ,t V l (with l ≤ m) of artifacts. These are exactly the only ones that must be conform to the searched GMWf G V . So we call them, local target artifacts for the view V ; 4. At this stage, it is time to collect all the productions that made it possible to build each of the local target artifacts for the view V . We obtain a set P V of distinct produc-tions.  REMARK. -The GMWf projection algorithm presented here only works for GMWf that do not allow recursive symbols 8 . We therefore assume that, for this execution model, the manipulated GMAWfP are those whose GMWf do not contain recursive symbols (nonrecursive GMWf assumption). Therefore, it is no longer possible to express iterative routing between process tasks (in the general case); except in cases where the exact number of iterations is known in advance.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>The searched local GMWf</head><formula xml:id="formula_10">G V = S V , P V , A G V is</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3.3.">The expansion algorithm</head><p>Consider a (global) artifact under execution t and t V = π V (t), its partial replica on the site of an actor A i whose view is V . Consider the partial replica t ma j V ≥ t V obtained by developing some unlocked buds of t V as a result of A i contribution. The expansion problem is to find a (global) artifact under execution t f , which integrates nodes of t and t V . To solve this problem made difficult by the fact that t and t V are conform to two different models (G and G V = Π V (G)), we perform a three-way merge <ref type="bibr" target="#b5">[6]</ref>. We merge the artifacts t and t V using a (global) target artifact t g such that: (a) t is a prefix of t g 8. It is only in this context that all the target artifacts can be enumerated.</p><p>(t ≤ t g ) and (b) t ma j</p><p>V is a prefix of the partial replica of t g according to V (t ma j V ≤ π V (t g )).</p><p>Our algorithm proceeds in two steps.</p><p>Step 1 -Search for the merging guide t g : the algorithm is as follows :</p><p>Algorithm searching for a merging guide.</p><p>1. First of all, we have to generate the set arts G = {t 1 , . . . ,t n } of target artifacts denoted by G; 2. Then, we must filter this set to retain only the artifacts t i admitting t as a prefix (criterion (a)) and whose projections according to V (t i V j ) admit t ma j V as a prefix (criterion (b)). We obtain the set guides = t g 1 , . . . ,t g k of artifacts that can guide the merging; 3. Finally, we randomly select an element t g from the set guides.</p><p>Step 2 -Merging t, t ma j V and t g : we want to find an artifact t f that includes all the contributions already made during the workflow execution. The structure of the searched artifact t f is the same as that of t g : hence the interest to use t g as a guide. The merging is carried out as follows :</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Three-way merging algorithm.</head><p>A prefixed depth path of the three artifacts is made simultaneously until there is no longer a node to visit in t g . Let n t i (resp. n t ma j V j and n t g k ) be the node located at the address w i (resp. w j and w k ) of t (resp. t ma j V and t g ) and currently being visited. If nodes n t i , n t ma j V j and n t g k are such that (processing):</p><p>1. n t ma j V j is associated with a (re)structuring symbol (fig. <ref type="figure" target="#fig_8">6(d)</ref>) then: we take a step forward in the depth path of t ma j V and we resume processing; 2. n t i , n t ma j V j and n t g k exist and are all associated with the same symbol X (fig. <ref type="figure" target="#fig_8">6</ref>(a) and 6(b)) then: we insert n t ma j V j (it is the most up-to-date node) into t f at the address w k ; if n t ma j V j is a bud then we prune (delete sub-artifacts) t g at the address w k ; we take a step forward in the depth path of the three artifacts and we resume processing.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">n t i , n t ma j</head><p>V j and n t g k exist and are respectively associated with symbols X i , X j and X k such that X k = X i and X k = X j (fig. <ref type="figure" target="#fig_8">6(e)</ref>) then: we add n t g k in t f at address w k . This is an upstair bud; we take a step forward in the depth path of t g and we resume processing. 4. n t i (resp. n t ma j V j ) and n t g k exist and are associated with the same symbol X (fig. <ref type="figure" target="#fig_8">6(c</ref>) and 6(f)) then: we insert n t i (resp. n t ma j V j ) into t f at the address w k ; if n t i (resp. n t ma j V j</p><p>) is a bud, we prune t g at the address w k ; we take a step forward in the depth path of the artifacts t (resp. t ma j V ) and t g , then we resume processing.</p><p>Note that an upstair bud is a node associated with a process task that has not yet been executed, and which is revealed during expansion rather than during the execution phase via the specialized editor (this is due to the fact that it is associated with a symbol that does not belong to the view of the considered site). Such a bud appears above other buds in the expansion artifact (hence its name). </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Conclusion</head><p>In this work, we proposed LSAWfP, a Workflow Specification Language using grammatical models. We then presented a decentralized and artifact-centric model of workflow processes execution (P2P-WfMS-View). Based on the principles of this model, we proposed versions of its key algorithms (artifact projection, GMWf projection and expansionpruning). These algorithms are perfectly usable (proof of their stability is given in appendix A). We implemented them in several languages and tested them with highly satisfactory results (see appendix B). However, in order to ensure that our algorithms produce the expected results, we have made some assumptions. In particular, the assumption of non-recursivity of GMWf, which had the direct effect of slightly limiting the expressiveness of our language. Therefore, one perspective of this work, is to propose other versions of the algorithms presented here, which would incorporate the same key principles while addressing the assumption of non-recursivity of GMWf in order to offer more comfort to GMAWfP's designers.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 .</head><label>1</label><figDesc>Figure 1. Example of target artifacts for a given process (peer-review process)</figDesc><graphic coords="4,208.19,379.36,176.20,86.85" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>2 .</head><label>2</label><figDesc>For example, this is true for a process with four tasks A,B,C et D such as: A precedes all the others, B and C can be concurrently executed and they precede D. Here, the insertion of a new symbol S solves the issue and allows to obtain the following productions: p 1 : A → S D, p 2 : S → B C, p 3 : B → ε, p 4 : C → ε and p 5 : D → ε.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>3 .</head><label>3</label><figDesc>Reminder: each task is represented by a grammatical symbol with an attribute named status (see definition 2)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 2 .</head><label>2</label><figDesc>Figure 2. An intentional representation of an annotated artifact containing buds.</figDesc><graphic coords="6,230.57,575.46,131.39,81.25" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 3 .</head><label>3</label><figDesc>Figure 3. Activity of a peer in the system.</figDesc><graphic coords="8,120.59,186.92,354.13,154.85" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 4 .</head><label>4</label><figDesc>Figure 4. Example of projections made on an artifact and partial replicas obtained.</figDesc><graphic coords="8,178.43,521.65,235.82,149.88" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head></head><label></label><figDesc>such as: a. its set of symbols isS V = V ∪ S V Struc ; b. its set of productions is P V ; c. its axiom is A G V = A G Illustration: Figure 5 illustrates the research of a local model G V EC such as G V EC = Π V EC (G) with V EC = A EC(r) = {A,B,C, D, H1, H2, I1, I2, F}. Target artifacts generated from G (fig. 5(b)) are projected to obtain two local target artifacts for the view V EC (fig. 5(c)). From the local target artifacts thus obtained, the searched GMWf is produced (fig. 5(d)).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 5 .</head><label>5</label><figDesc>Figure 5. Example of projection of a GMWf according to a given view.</figDesc><graphic coords="10,141.11,333.49,310.53,200.64" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 6 .</head><label>6</label><figDesc>Figure 6. Some scenarios to be managed during the expansion.</figDesc><graphic coords="12,130.89,186.84,333.49,375.63" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0"><head></head><label></label><figDesc></figDesc><graphic coords="14,122.18,524.22,348.47,187.24" type="bitmap" /></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>These are variable processes of which we know all the cases; that is, the tasks are predictable and the sequence are simple and clearly defined<ref type="bibr" target="#b7">[8]</ref>.</p></note>
		</body>
		<back>
			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Some properties of our projection algorithms</head><p>Proposition 5 For all GMAWfP W f = G, L P k , L A k verifying the axiom's visibility as- sumption, the projection of an artifact t which is conform to its GMWf (t ∴ G) according to a given view V , results in a single artifact t V = π V (t) (stability property of π).</p><p>Proof. Note that the only case in which the projection of an artifact t according to a view V produces a forest, is when the root node of t is associated with an invisible symbol X (X / ∈ V ). Knowing that t ∴ G and that W f validates the axiom's visibility assumption, it is deduced that the root node of t is labelled by the axiom A G of G and that A G ∈ V (hence the uniqueness of the produced tree). Since the projection operation preserves the form of productions, it is concluded that t V = π V (t) is an artifact. ✷ Proposition 6 For all GMAWfP W f = G, L P k , L A k verifying the axiom's visibility and the non-recursivity of GMWf assumptions, the projection of its GMWf G = (S , P , A G )</p><p>the assumptions of axiom visibility and non-recursivity of GMWf (stability property of Π).</p><p>Proof. As W f = G, L P k , L A k validates the non-recursivity of GMWf assumption, the set of target artifacts (arts G = {t 1 , . . . ,t n }) that it denotes is finished and can therefore be fully enumerated. Knowing further that W f validates the axiom's visibility assumption, we deduce that the set arts</p><p>) is finite and the root node of each artifact t V i is associated with the axiom A G of G (see proposition 5). G V being built from the set arts G V , its axiom A G V = A G is visible to all actors and its productions are only of the two forms retained for GMWf. In addition, each new (re)structuring symbol (S ∈ S V Struc )) is created and used only once to replace a symbol that is not visible and not recursive (by assumption) when projecting artifacts of arts G . The new symbols are therefore not recursive. By replacing in</p><p>verifying the assumptions of axiom visibility and non-recursivity of GMWf. ✷ Proposition 7 For all GMAWfP W f = G, L P k , L A k verifying the axiom's visibility and the non-recursivity of GMWf assumptions, the projection of an artifact t which is conform to the GMWf G according to a given view V , is an artifact which is conform to the projection of G according to</p><p>through the renaming of some potential (re)structuring symbols, is part of the set arts G V of artifacts that have generated</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Experimentation with P2PTinyWfMS</head><p>The algorithms presented in this manuscript, have been coded in Haskell and Java then tested with satisfactory results. In java, we introduced these algorithms in the tool P2PTinyWfMS. It is a tool developed under Eclipse 9 and dedicated to the simulation of the completely decentralized execution of administrative workflows specified using LSAWfP. P2PTinyWfMS has a front-end for the display and the graphical editing of artifacts handled during the execution of a business process (see fig. <ref type="figure">7</ref>), as well as a Service-Oriented communication module built using SON (Shared-data Overlay Network) <ref type="bibr" target="#b4">[5]</ref>.  </p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<ptr target="http://www.aiim.org/wfmc/mainframe.htm" />
		<title level="m">Wfmc Standards: the Workflow Reference Model</title>
		<imprint>
			<date type="published" when="1995">1995</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Merging Hierarchically-Structured Documents in Workflow Systems</title>
		<author>
			<persName><forename type="first">Eric</forename><surname>Badouel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Maurice</forename><surname>Tchoupé</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tchendji</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Electronic Notes in Theoretical Computer Science</title>
		<imprint>
			<biblScope unit="volume">203</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="3" to="24" />
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<author>
			<persName><forename type="first">Mohamed</forename><surname>Amine Chaâbane</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Lotfi</forename><surname>Bouzguenda</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Rafik</forename><surname>Bouaziz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Faïez</forename><surname>Gargouri</surname></persName>
		</author>
		<title level="m">Actes des 7èmes journées scientifiques des jeunes chercheurs en Génie Electrique et Informatique (GEI)</title>
		<meeting>s des 7èmes journées scientifiques des jeunes chercheurs en Génie Electrique et Informatique (GEI)</meeting>
		<imprint>
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
	<note>Etude comparative de quelques langages de spécification de processus workflow</note>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Interorganizational workflows for enterprise coordination</title>
		<author>
			<persName><forename type="first">Monica</forename><surname>Divitini</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Chihab</forename><surname>Hanachi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Christophe</forename><surname>Sibertin-Blanc</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Coordination of Internet agents</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2001">2001</date>
			<biblScope unit="page" from="369" to="398" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">A Lightweight Middleware for Developing P2P Applications with Component and Service-Based Principles</title>
		<author>
			<persName><forename type="first">Ayoub</forename><surname>Ait</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Lahcen</forename></persName>
		</author>
		<author>
			<persName><forename type="first">Didier</forename><surname>Parigot</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">15th IEEE International Conference on Computational Science and Engineering, CSE 2012</title>
		<meeting><address><addrLine>Paphos, Cyprus</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2012">December 5-7, 2012. 2012</date>
			<biblScope unit="page" from="9" to="16" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">A State-of-the-Art Survey on Software Merging</title>
		<author>
			<persName><forename type="first">Tom</forename><surname>Mens</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of IEEE Transactions on Software Engineering</title>
		<imprint>
			<biblScope unit="volume">28</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="449" to="462" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Notation (BPMN) version 2.0. OMG Specification, Object Management Group</title>
		<imprint>
			<date type="published" when="2011">2011</date>
			<biblScope unit="page" from="22" to="31" />
		</imprint>
	</monogr>
	<note>Business Process Model</note>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">The Application of Petri Nets to Workflow Management</title>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">P</forename><surname>Wil</surname></persName>
		</author>
		<author>
			<persName><surname>Van Der Aalst</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Circuits, Systems, and Computers</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="21" to="66" />
			<date type="published" when="1998">1998</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
