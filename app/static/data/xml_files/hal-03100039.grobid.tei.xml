<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Joint Learning of the Graph and the Data Representation for Graph-Based Semi-Supervised Learning</title>
				<funder ref="#_KThCdX5">
					<orgName type="full">Agence Nationale de la Recherche</orgName>
					<orgName type="abbreviated">ANR</orgName>
				</funder>
				<funder ref="#_W2y6FmM">
					<orgName type="full">CPER Nord-Pas de Calais/FEDER</orgName>
				</funder>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Mariana</forename><surname>Vargas-Vieyra</surname></persName>
							<affiliation key="aff1">
								<orgName type="laboratory">UMR 9189</orgName>
								<orgName type="institution" key="instit1">Université de Lille</orgName>
								<orgName type="institution" key="instit2">CNRS</orgName>
								<address>
									<postCode>59650</postCode>
									<settlement>CRIStAL, Villeneuve d&apos;Ascq</settlement>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><surname>Aurélien Bellet</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Pascal</forename><surname>Denis</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Magnet Team</orgName>
								<orgName type="institution">Inria Lille -Nord</orgName>
								<address>
									<country>Europe</country>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="laboratory">UMR 9189</orgName>
								<orgName type="institution" key="instit1">Université de Lille</orgName>
								<orgName type="institution" key="instit2">CNRS</orgName>
								<address>
									<postCode>59650</postCode>
									<settlement>CRIStAL, Villeneuve d&apos;Ascq</settlement>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Joint Learning of the Graph and the Data Representation for Graph-Based Semi-Supervised Learning</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">457C81377C50224DC2A05200322BBA01</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.8.0" ident="GROBID" when="2024-04-12T14:50+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Graph-based semi-supervised learning is appealing when labels are scarce but large amounts of unlabeled data are available. These methods typically use a heuristic strategy to construct the graph based on some fixed data representation, independently of the available labels. In this paper, we propose to jointly learn a data representation and a graph from both labeled and unlabeled data such that (i) the learned representation indirectly encodes the label information injected into the graph, and (ii) the graph provides a smooth topology with respect to the transformed data. Plugging the resulting graph and representation into existing graph-based semi-supervised learning algorithms like label spreading and graph convolutional networks, we show that our approach outperforms standard graph construction methods on both synthetic data and real datasets.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>An important bottleneck for the development of accurate Natural Language Processing (NLP) tools for many applications and languages is the lack of annotated data. A natural remedy to this issue lies in semi-supervised learning (SSL) methods, which are able to leverage smaller labeled datasets in combination with large amounts of unannotated text data (which are often more easily available). In particular, graph-based SSL algorithms <ref type="bibr" target="#b25">(Subramanya and Talukdar, 2014)</ref>, among which variants of label propagation <ref type="bibr" target="#b32">(Zhu and Ghahramani, 2002;</ref><ref type="bibr" target="#b33">Zhu et al., 2003;</ref><ref type="bibr" target="#b31">Zhou et al., 2004</ref>) and more recently graph convolutional networks <ref type="bibr" target="#b16">(Kipf and Welling, 2017;</ref><ref type="bibr" target="#b5">Chen et al., 2018;</ref><ref type="bibr" target="#b29">Wu et al., 2019)</ref>, have attracted a lot of attention due to their interesting theoretical properties and good empirical performance. They have successfully been applied to several NLP problems, such as sentiment analysis <ref type="bibr" target="#b13">(Goldberg and Zhu, 2006)</ref>, word sense disambiguation <ref type="bibr" target="#b0">(Alexandrescu and Kirchhoff, 2007)</ref>, text categorization <ref type="bibr" target="#b24">(Subramanya and Bilmes, 2008)</ref>, POS tagging <ref type="bibr" target="#b26">(Subramanya et al., 2010)</ref>, semantic parsing <ref type="bibr" target="#b7">(Das and Smith, 2011)</ref>, machine translation <ref type="bibr" target="#b23">(Saluja et al., 2014)</ref>, or lexicon induction <ref type="bibr" target="#b11">(Faruqui et al., 2016)</ref>. As their name suggests, graph-based SSL methods represent all data points (that is, labeled and unlabeled) as nodes in a graph with weighted edges encoding the similarity between pairs of points. This graph is then used as a propagation operator to transfer labels from labeled to unlabeled points. Despite differences in the way this propagation is achieved, graph-based SSL approaches all rely on two assumptions: (i) the graph representing the data provides a faithful approximation of the manifold on which the data actually live, and (ii) the underlying labels are smooth with respect to this manifold.</p><p>In many NLP problems, there is often no a priori-known graph, which raises the question of how to best construct this graph over the dataset given some data representation. Most existing work rely on classic graph construction heuristics such as k-nn graphs, -graphs or radial kernel graphs <ref type="bibr" target="#b25">(Subramanya and Talukdar, 2014)</ref>, which may poorly adapt to the intrinsic structure of the data manifold and hence violate assumption (i). More recently, in the machine learning and signal processing communities, some algorithms were proposed to learn more flexible graphs by enforcing the topology to be smooth with respect to the input data <ref type="bibr" target="#b6">(Daitch et al., 2009;</ref><ref type="bibr" target="#b15">Kalofolias, 2016;</ref><ref type="bibr" target="#b10">Dong et al., 2016)</ref>. All these approaches This work is licensed under a Creative Commons Attribution 4.0 International License. License details: http:// creativecommons.org/licenses/by/4.0/.</p><p>heavily depend on the choice of data representation and disregard the label information, making them unable to adapt to the prediction task and therefore potentially violating assumption (ii). While supervised representation learning techniques such as metric learning <ref type="bibr" target="#b2">(Bellet et al., 2015)</ref> could be used to adapt the representation to the task of interest, for instance by bringing closer points with the same label, the lack of labeled data in the semi-supervised learning scenario makes them prone to overfitting.</p><p>In this paper, we propose an original semi-supervised algorithm for graph construction that adapts to both the data and the predictive task. Specifically, our approach leverages the labeled and unlabeled data to jointly learn a graph and a data representation. On the one hand, the graph is learned to provide a smooth topology with respect to the learned representation. On the other hand, the representation should bring closer (labeled and unlabeled) points that are neighbors in the graph as well as similarly labeled points, while pulling away points of different labels. A key feature of our approach is that the learned representation indirectly encodes and injects label information into the graph beyond the labeled points alone. We formulate our problem as a joint optimization problem over the representation and the graph weights, with a hyperparameter to easily control the sparsity of the resulting graph and thereby obtain a good approximation of the underlying manifold. We discuss some appropriate parameterizations for learning the representation, which revolve around adapting pre-trained embeddings so as to avoid overfitting. We then propose to solve our joint problem by alternating optimization on the representation and the graph. We validate our approach through several graph-based SSL experiments using label spreading <ref type="bibr" target="#b31">(Zhou et al., 2004)</ref> and graph convolutional networks (GCN) (Kipf and Welling, 2017), both on synthetic and real text classification datasets. Incidentally, note that our approach is generic and could in principle be used in combination with any existing graph-based SSL framework. The results show that our approach outperforms previous methods which rely on heuristic graphs, generally by a considerable margin. Interestingly, we also observe that our approach effectively bridges the accuracy gap between a simple method like label spreading and a richer neural-based approach like GCN.</p><p>The rest of this paper is organized as follows. We introduce some notations and discuss the related work in Section 2. We then describe our approach and algorithm in Section 3. Our experimental results are presented in Section 4, and we conclude with future work directions in Section 5.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Notations and Related Work</head><p>Our work lies in the intersection of two topics: graph-based semi-supervised learning and graph learning. In this section, we start by introducing some useful notations. We then briefly review some related work in both areas.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Notations</head><p>We consider a dataset consisting of l labeled points L = {(x i , y i )} l i=1 and u unlabeled points U = {x i } l+u i=l+1 , where data points x i lie in some space X (typically X ⊂ IR d ) and labels y i ∈ {1, . . . , C} are discrete. We denote the combined data by X ∈ IR n×d , where n = l+u. We place ourselves in the typical semi-supervised scenario where l u, and the goal is to predict y l+1 , . . . , y l+u . Let G = (V, W ) be a graph composed of a set of nodes V = {v 1 , . . . , v n } and a symmetric nonnegative weighted adjacency matrix W ∈ IR n×n . We denote the set W of admissible weighted adjacency matrices by</p><formula xml:id="formula_0">W = {W : W ≥ 0, diag(W ) = 0, W = W }.</formula><p>(1)</p><p>Every observation x i (labeled or unlabeled) can be seen as a signal occurring at node v i , and W assigns a weight to each pair of nodes. We say that two nodes v i and v j are connected when W ij &gt; 0.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Graph-based SSL</head><p>Graph-based SSL takes as input a graph G = (V, W ) over the labeled and unlabeled data, the known labels and optionally some feature representation X ∈ IR n×d of the data, and aims to predict the labels of the unlabeled points. Many approaches exist for graph-based SSL, see <ref type="bibr" target="#b25">(Subramanya and Talukdar, 2014)</ref> for a review of standard approaches. Classic algorithms take as input only the graph and use it to propagate the known labels to the unlabeled points <ref type="bibr" target="#b32">(Zhu and Ghahramani, 2002;</ref><ref type="bibr" target="#b31">Zhou et al., 2004;</ref><ref type="bibr" target="#b4">Bengio et al., 2006)</ref>. A popular approach is label spreading <ref type="bibr" target="#b31">(Zhou et al., 2004)</ref>, which can be formulated as a convex optimization problem implementing a trade-off between two terms. The first term is a graph Laplacian regularization term which encourages similar predictions for strongly connected points in the graph, while the second one tries to keep the predictions accurate for points with known labels. There also exist algorithms formalized as graph partitioning problems inspired from spectral clustering <ref type="bibr" target="#b14">(Joachims, 2003)</ref>.</p><p>Graph-based SSL methods can also leverage a feature representation of the data in addition to the graph. A generic strategy is to add the graph Laplacian regularization term to existing supervised learning algorithms such as SVM or neural networks <ref type="bibr" target="#b1">(Belkin et al., 2006;</ref><ref type="bibr" target="#b28">Weston et al., 2012)</ref>. Following a different direction, <ref type="bibr" target="#b30">(Yang et al., 2016)</ref> builds upon graph embeddings approaches to propose a method to predict labels based on the input representation as well as some embeddings learned from the input graph and known labels. Finally, there has been some recent interest in graph convolutional networks (GCN) <ref type="bibr" target="#b16">(Kipf and Welling, 2017;</ref><ref type="bibr" target="#b5">Chen et al., 2018;</ref><ref type="bibr" target="#b29">Wu et al., 2019)</ref>. Much like CNNs for images, they rely on an (approximation of) a notion of graph convolution, allowing them to learn a nonlinear transformation of the input representation while encoding the graph structure when propagating inputs from a layer to the next.</p><p>In all these approaches, the graph is fixed and given as input to the algorithm (for several methods, this is also true for the data representation). Their performance is thus very sensitive to the relevance of the graph for the task at hand: in particular, the underlying labeling should be smooth with respect to the graph. Our method is a principled approach to learn such a task-specific graph, and also infers a relevant data representation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Graph Construction and Learning</head><p>As pointed out by <ref type="bibr" target="#b25">(Subramanya and Talukdar, 2014)</ref>, graph-based SSL methods typically rely on graphs constructed from the input data representation with a simple heuristic strategy. Popular choices include k-nearest neighbor graphs (connecting pairs of points that are among the k-closest to each other), -graph (connecting points that are within distance ), and radial kernel graphs (building a fully connected graph with exponentially decreasing weights W ij = e -γ x i -x j 2 ). Recently, more sophisticated methods that learn the graph weights as the solution of an optimization problem have been introduced <ref type="bibr" target="#b6">(Daitch et al., 2009;</ref><ref type="bibr" target="#b15">Kalofolias, 2016;</ref><ref type="bibr" target="#b10">Dong et al., 2016)</ref>. Essentially, the weights are learned to be smooth over the data representation (i.e., assigning large weights to nearby points) with some regularization to enforce or control some properties such as connectedness and sparsity. In any case, the graphs obtained with the above approaches are task-independent in the sense that they ignore the labels.</p><p>To the best of our knowledge, there have been very few attempts to learn task-specific graphs for SSL. <ref type="bibr" target="#b0">(Alexandrescu and Kirchhoff, 2007)</ref> propose to train a supervised classifier on labeled points and using the soft label predictions as the representation to build the graph. While this gives a way to incorporate label information, the supervised predictions are very dependent on the initial representation and the classifier itself can heavily overfit due to scarce labels.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Proposed Model</head><p>Our approach learns a graph and a data representation for use in downstream graph-based SSL algorithms. In this section, we start by introducing our formulation as a joint optimization problem over the representation and the graph. We then discuss some relevant choices for the parameterization of the learned representation, and finally present our alternating optimization scheme.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Problem Formulation</head><p>For the sake of generality, in this section we formulate our problem with respect to a generic representation function φ Θ : X → IR k , parameterized by Θ, which represents any data point x ∈ X as a k-dimensional vector φ Θ (x) ∈ IR k . We discuss some relevant choices of representation functions in Section 3.2.</p><p>We propose to learn a weighted adjacency matrix W * and a representation function φ Θ * by minimizing a joint objective function f that involves both the labeled and unlabeled data points:</p><formula xml:id="formula_1">W * , Θ * = arg min W ∈W,Θ f (W, Θ).</formula><p>Once the above optimization problem has been solved, the learned graph W * (which is based on the learned representation function φ Θ * ) and possibly the representation φ Θ * can then be given as input to any graph-based SSL algorithm to obtain predictions for the unlabeled data.</p><p>Our objective function f (W, Θ) decomposes into three terms:</p><formula xml:id="formula_2">f (W, Θ) = f 1 (Θ) + α[f 2 (W ) + f 3 (W, Θ)]<label>(2)</label></formula><p>where f 1 (Θ) and f 2 (W ) are respectively the representation and graph specific terms, while f 3 (W, Θ) is the joint term. Hyperparameter α ≥ 0 controls the trade-off between the (supervised) representation learning term f 1 and the unsupervised part (f 2 and f 3 ). We now define these three terms. For notational convenience, let us denote by Z ∈ IR n×n the matrix whose entries are the normalized squared Euclidean distances between data points in the transformed space, i.e.</p><formula xml:id="formula_3">(Z Θ ) ij = ||φ Θ (x i )-φ Θ (x j )|| 2 i&lt;j ||φ Θ (x i )-φ Θ (x j )|| 2 .</formula><p>The normalization conveniently removes the dependency on the scale of the data and Θ. The representation term f 1 (Θ) is defined on the labeled data points only and takes the following form:</p><formula xml:id="formula_4">f 1 (Θ) = x i ,x j ,x k ∈L y i =y j ,y i =y k (Z Θ ) ij -(Z Θ ) ik + 1 + ,<label>(3)</label></formula><p>where</p><formula xml:id="formula_5">[•] + = max(0, •)</formula><p>. This is a large-margin triplet loss similar to those used in metric learning <ref type="bibr" target="#b2">(Bellet et al., 2015)</ref>: it attempts to learn a representation function φ Θ that brings each point x i closer to points x j with the same label than to differently labeled points x k , with a safety margin of 1. In practice, we can subsample instead of summing over all possible triplets. The graph term f 2 (W ) is inspired from the (unsupervised) graph learning approach proposed by <ref type="bibr" target="#b15">(Kalofolias, 2016)</ref>:</p><formula xml:id="formula_6">f 2 (W ) = β||W || 2 F -1 log(1 W ),<label>(4)</label></formula><p>The log-barrier term on the degrees prevents any node from being isolated in the graph, while the Frobenius norm is a shrinkage term over the graph weights. Combined with our joint term (6) defined below, hyperparameter β ≥ 0 directly controls the sparsity of the learned graph: the smaller β, the more concentrated the weights of each point on its nearest neighbors in the learned representation (hence the sparser the graph). On the other hand, as β → +∞, the graph becomes complete with uniform weights. Sparsity allows to enforce the locality property (only close points are connected in the graph) which is necessary to obtain a good approximation of the data manifold. It also reduces the computational cost in downstream graph-based SSL algorithms, whose complexity typically depends on the number of edges in the graph.</p><p>Other options are possible for f 2 (W ) depending on the prior we want to have on the structure of the graph. For instance, one may use</p><formula xml:id="formula_7">f 2 (W ) = (1/γ) i,j W ij [log(W ij ) -1],<label>(5)</label></formula><p>where γ &gt; 0 is a hyperparameter. This will force the graph to be fully connected. Finally, we introduce the joint term bringing together the graph and the representation:</p><formula xml:id="formula_8">f 3 (W, Θ) = tr(W Z Θ ) = i,j W ij (Z Θ ) ij .<label>(6)</label></formula><p>This can be seen as a weighted L 1 norm term on W (which is why it induces sparsity), and equivalently written as a quadratic form of the Laplacian matrix of the graph encoded by the symmetric matrix W .</p><p>It is also used in approaches based on graph Laplacian regularization (see Section 2), but in our case both the graph and the representation are learned in joint manner. This term makes the graph and the representation as smooth as possible with respect to each other on both labeled and unlabeled points.</p><p>Overall, our joint objective function ( <ref type="formula" target="#formula_2">2</ref>) is designed to produce a sparse topology that tends to be smooth with respect to the data manifold and the underlying labeling function through an appropriate representation. We now discuss the choice of representation function φ Θ .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Choices of Representation Functions</head><p>Many options are possible for the representation function φ Θ depending on the nature of the data and task at hand. However, it is important to keep in mind that the amount of labeled information is scarce, hence learning complex text representations from scratch is likely to lead to severe overfitting. We argue that it is preferable to adapt pre-trained representations, which generally requires to optimize much fewer parameters. We give some concrete examples below.</p><p>Linear transformation. Pre-trained word embeddings <ref type="bibr" target="#b18">(Mikolov et al., 2013;</ref><ref type="bibr" target="#b21">Pennington et al., 2014)</ref> are commonly used to represent texts in a vectorial space, e.g. by averaging the embeddings of the words occurring in a document. In order to adapt the representation to the task, we can learn a simple linear mapping φ Θ (x) = Θx which transforms the initial d-dimensional representation into a k-dimensional one, with Θ ∈ IR k×d and k ≤ d. Such a strategy has been previously explored in the supervised setting to "re-embed" words in a task-specific manner <ref type="bibr" target="#b8">(Denis and Ralaivola, 2017)</ref>. This is the representation function that we use in our experiments (see Section 4).</p><p>Weighted combination. Recent work in learning deep contextualized word representations such as ELMo <ref type="bibr" target="#b22">(Peters et al., 2018)</ref> and BERT <ref type="bibr" target="#b9">(Devlin et al., 2019)</ref> allows to learn a task-specific combination of the token representations obtained at the K layers of the model, which typically capture different aspects of tokens (from syntax to semantics). In this case, we have K initial d-dimensional representations x ∈ IR K×d for each text x and we learn a weighted combination φ Θ (x) = Θx ∈ IR d where Θ ∈ IR K is simply a K-dimensional parameter vector.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Optimization</head><p>We propose to optimize the cost function f (W, Θ) by alternating minimization over W and Θ, which is guaranteed to converge to a local optimum. This is a natural approach: one step learns a smooth graph given the current representation Θ, while the other learns a smooth representation with respect to the current graph (this can be seen as a regularizer for Θ based on unlabeled data) and also tries to keep labeled points of the same class closer than points of different class.</p><p>As the joint problem is nonconvex, initialization plays an important role. We propose to initialize the graph weights to zero and to start by optimizing Θ so that the initial representation focuses only on the (scarce) labeled data. The graph learned on this representation will thus strongly connect together the labeled points as well as unlabeled points that are very close to the labeled points and are thus likely to share the same label. At the next iteration, these unlabeled points will then contribute in learning a better representation and in turn a graph which strongly connects new unlabeled points. This process can be seen as a principled version of self-training heuristics popular in traditional (non-graph-based) semi-supervised learning <ref type="bibr" target="#b27">(Triguero et al., 2015)</ref>.</p><p>The subproblem of optimizing W given Θ is convex regardless of whether we define f 2 (W ) as (4) or (5). Using ( <ref type="formula" target="#formula_7">5</ref>) is computationally convenient as the subproblem has a closed-form solution: the weights are exponentially decreasing with the distance in the current representation φ Θ , as given by the radial kernel W ij = exp(-γ(Z Θ ) ij ) <ref type="bibr" target="#b15">(Kalofolias, 2016)</ref>. Note that unlike the classic radial kernel baseline construction method mentioned in Section 2.3, our graph is computed based on the learned representation φ Θ by minimizing the joint objective function with respect to W . One drawback of using ( <ref type="formula" target="#formula_7">5</ref>) is that the resulting graphs are always fully connected. Using (4) instead, we can obtain sparse graphs but the solution must be computed with an iterative algorithm. We found that the primal-dual algorithm introduced by <ref type="bibr" target="#b15">(Kalofolias, 2016)</ref> converges slowly in practice -we instead optimize W by simple gradient descent over the "effective" n(n -1)/2 weights, adding a small positive constant inside the log term in (4) to make the objective function smooth.</p><p>As φ Θ is typically differentiable in Θ (as in the examples outlined in Section 3.2), we also solve the subproblem in Θ by (stochastic) gradient descent. Note that this subproblem is generally nonconvex due to the distance difference in f 1 (Θ).</p><p>Remark. Updating W requires to optimize over O(n 2 ) variables, which was manageable for the datasets used in our experiments. To scale to larger datasets, one can restrict the optimization to the weights corresponding to pairs of points that are close enough in the learned representation space 1 (other weights are kept to 0). This has a negligible impact on the solution in sparse regimes (small β).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Experiments</head><p>In this section, we study the practical behavior of our method by comparing the accuracy of downstream graph-based SSL algorithms when the graph (along with the underlying representation) is learned with our approach ( ours) rather than constructed with the following baseline strategies:</p><p>• radial: Complete graph with weights W ij = exp(-γ x i -x j 2 ).</p><p>• knn: W ij = 1 for x i in the k-neighborhood of x j (or vice versa), and W ij = 0 otherwise.</p><p>• kalo: Unsupervised graph learning with the method of <ref type="bibr" target="#b15">(Kalofolias, 2016)</ref>. This corresponds to our approach when using the graph term (4) and keeping the original representation fixed.</p><p>In all cases the graph is constructed over the union of labeled (train set) and unlabeled data (validation and test sets). For experiments with our method, the learned representation is a linear transformation of the initial features as explained in Section 3.2.</p><p>We perform experiments with two graph-based SSL approaches: Label Spreading (LS) <ref type="bibr" target="#b31">(Zhou et al., 2004)</ref> and the Graph Convolutional Network (GCN) method of (Kipf and Welling, 2017). We used the scikit-learn <ref type="bibr" target="#b20">(Pedregosa et al., 2011)</ref> implementation of LS. For GCN, we used the TensorFlow implementation provided by the authors 2 and follow the recommended architecture:</p><formula xml:id="formula_9">Ŷ = softmax( L max(0, LXH 0 )H 1 ),<label>(7)</label></formula><p>where L = D1/2 W D1/2 is the normalized Laplacian corresponding to the graph W = W +λI (the input graph augmented with self-loops), D is the diagonal degree matrix ( Dii = j Dij ), and H 0 ∈ IR d×h , H 1 ∈ IR h×C are the parameters to be learned. We set the number of hidden units h to 16 and λ to 1 as done in <ref type="bibr" target="#b16">(Kipf and Welling, 2017)</ref>.</p><p>To illustrate the behavior of our approach, we first present some experiments on synthetic data. We then show some results on real text classification datasets.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Synthetic Data</head><p>We generated a 3-dimensional dataset consisting of 100 points evenly distributed in two classes (Figure <ref type="figure" target="#fig_0">1</ref>). We have two clusters per class placed far from each other while keeping clusters from different classes closer. We randomly picked 60% of the points and removed their labels.</p><p>We compare the classification error of GCN and Label Spreading when the input graph is given by our approach instead of using baseline graph construction methods. For GCN, we also give as input the representation learned with our approach. For our approach, we use the graph term (4) and for each labeled point x i , we random sample 2 points x j of the same class and 3 points x k of different class and construct all combinations (x i , x j , x k ), leading to 6 triplets for each x i in the triplet loss (3). The results given in Table <ref type="table" target="#tab_0">1</ref> show that our approach clearly and consistently outperforms all methods in both GCN and Label Spreading. 3 The improvements are especially large for Label Spreading, as LS makes 1 These can be identified in near-linear time using approximate nearest-neighbor techniques <ref type="bibr" target="#b19">(Muja and Lowe, 2014</ref>).</p><p>2 https://github.com/tkipf/gcn 3 For this illustrating experiment, we picked the values of hyperparameters giving the best results for each method.  predictions based on the graph only. In contrast, GCN learns its own (nonlinear) transformation of the representation given as input in an end-to-end manner. Still, our method is able to provide some gains for GCN as well, by providing it with a better graph. Note for instance the significant improvement compared to kalo, which learns the graph on the original representation.</p><p>To visualize this difference, Figure <ref type="figure" target="#fig_2">2a</ref> shows the graph learned by kalo. Although the graph is learned to minimize the smoothness criterion with respect to the data, it fails to accurately capture the label distribution due to the limitations of the initial representation. Our alternating optimization approach overcomes this issue by learning a task-specific graph through an appropriate representation. In Figure <ref type="figure" target="#fig_2">2b-2c-2d</ref>, we can see how label information is gradually injected at each step: after the first iteration, the graph is already significantly more smooth with respect to the underlying labeling and the graph is also sparser, but some edges between differently labeled points as well as an overly connected point remain. The following iterations further improve the graph quality. This explains the better performance obtained in downstream semi-supervised algorithms.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Real Data</head><p>We now evaluate our method on three text classification tasks derived from the 20NewsGroups dataset,<ref type="foot" target="#foot_0">4</ref> a collection of documents categorized into 20 topics, each one of which is partitioned into sub-topics. We chose the topics of computers with classes IBM and Mac (n = 1945 documents), religion with classes atheism and Christian (n = 1796), and sports with classes baseball and hockey <ref type="bibr">(n = 1993)</ref>.</p><p>For all datasets, we represent data points using the average token embedding based on word2vec <ref type="bibr" target="#b18">(Mikolov et al., 2013)</ref>. These embeddings are of dimension d = 300 and were trained on a 100B word corpus of Google news data (vocabulary size is 3M). <ref type="foot" target="#foot_1">5</ref>We experiment with different proportions of unlabeled points in the training set (90%, 75%, 60% and 40%), while the rest of the data is evenly split into a validation and a test set. As commonly done in semisupervised learning, we train on the union of the (labeled) training set and the (unlabeled) validation and test sets, select the values of hyperparameters based on the accuracy on the validation set, and report the corresponding accuracy on the test set.</p><p>To evaluate our approach we optimize the objective (2) as described in Section 3.3 with the graph term defined as in (4). To compute the representation term of our objective defined in (3), we construct triplets    as follows: for each pair (x i , y i ) in the labeled set we obtain the closest points with labels other than y i ("imposters"), and the closest points with label y i ("targets"). We picked 8 imposters and 3 targets. We tune the hyperparameters α from {0.001, 0.01, 1}, β from {0.00001, 0.001, 0.1, 1}, the dimension k of the learned representation from {16, 32, 64}, and perform early stopping with respect to the number of alternating steps between learning the graph and learning the representation (up to 10 alternating steps). We also tuned the hyperparameters of each baseline method (γ for radial, k for knn and β for kalo) and the trade-off hyperparameter of Label Spreading. Finally, we computed the McNemar test of significance <ref type="bibr" target="#b17">(McNemar Quinn, 1947)</ref> to compare the performance of our method against the best baseline. Results marked with a dagger symbol † yield a statistically significant test for a significance level of 0.05.</p><p>Label Spreading. Table <ref type="table" target="#tab_2">2a</ref> reports test classification accuracies obtained on the test set for each configuration of dataset and proportion of unlabeled data. Our approach clearly outperforms all baselines, most of the time by a large margin. Also, McNemar test indicates that we tend to be significantly better than the best baseline in the more challenging settings where labeled data is the most scarce. The results also show that learning the representation along with the graph makes a clear difference compared to learning the graph only (as seen by the superior performance of ours over kalo).</p><p>As LS only uses the graph to make predictions, these results provide strong evidence of the superior quality of the graphs learned with our method.</p><p>Graph Convolutional Networks. We now turn to the more complex GCN prediction model. We reuse the same setup as for LS and feed GCN with both the learned representation and the learned graph.</p><p>Table <ref type="table" target="#tab_2">2b</ref> summarizes the results. The gains obtained with our approach are smaller than those ob-  tained in LS, which is to be expected since GCN has the ability to learn nonlinear transformations of the data. Nevertheless, we do observe some performance gains, as our approach generally improves upon or closely matches the performance of the best baseline. An interesting finding is that our method tends to close the gap of performance between LS and the richer neural-based GCN model. This suggests that simple propagation approaches may be sufficient in practice for many datasets, if provided with the right graph.</p><p>Visualization. We provide visualizations of the representation and the graph learned with our approach on the rel dataset. Figure <ref type="figure" target="#fig_3">3</ref> shows 3D PCA visualizations of the original representation and the representation learned with our approach. We see that the two classes are quite mixed up in the original representation while the learned representation is much smoother with respect to the underlying labeling (even in this crude low-dimensional summary). Figure <ref type="figure" target="#fig_4">4</ref> gives a snapshot of the graph learned with our approach by showing a subgraph of 50 randomly sampled nodes (subsampling helps to avoid clutter). The graph is very smooth with respect to the underlying labeling, and suggests that the learned high-dimensional representation has a nice manifold structure, with some regions of higher densities.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Discussion and Future Work</head><p>We presented a novel method bringing together graph learning, representation learning and SSL by jointly inferring the graph and the representation from semi-supervised data. The output of our approach can then be plugged into any graph-based SSL algorithm in place of using common graph constructions. Our experimental results suggest that the gains are especially significant for graph-based SSL algorithms that are unable to adapt the data representation (like label spreading and its variants), although we observe some gains also for GCN. To further improve the performance with richer models like GCNs, a promising direction is to extend our approach to learn the graph, the representation and the classifier in an end-toend manner. We note that there has been very recent attempts in this general direction <ref type="bibr" target="#b12">(Franceschi et al., 2019)</ref>, though specific to GCN and with completely different modeling and assumptions.</p><p>The ideas underlying our approach could also be useful to tackle transfer learning settings and in particular domain adaptation <ref type="bibr" target="#b3">(Ben-David et al., 2010)</ref>. The latter can be seen as a SSL problem where the distribution of the target (unlabeled) data follows a different distribution that the source (training) data. Our objective function could be modified to encourage the learned representation and graph to serve as a "bridge" between the source and target distributions.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: Original 3-dimensional synthetic data. Semi-transparent points are unlabeled.</figDesc><graphic coords="8,219.40,62.81,158.75,130.42" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>(a) kalo on original data. (b) ours after 1st iteration. (c) ours after 2nd iteration. (d) ours at last iteration.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Force-directed drawing (spring layout) of graphs learned with kalo, and with our method at several iterations of our alternating optimization algorithm. Semi-transparent points are unlabeled.</figDesc><graphic coords="9,72.45,62.81,111.11,99.84" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: 3D PCA visualization of the original representation (left) and the representation learned with our approach (right) on the rel dataset (%75 unlabeled). Transparent dots represent unlabeled documents.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 4 :</head><label>4</label><figDesc>Figure4: Force-directed drawing (spring layout) of a random 50-node subgraph of the graph learned with our approach on the rel dataset (%75 labeled).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1 :</head><label>1</label><figDesc>Classification accuracy on the synthetic dataset.</figDesc><table><row><cell></cell><cell cols="2">Label Spreading GCN</cell></row><row><cell>radial</cell><cell>50.7</cell><cell>93.3</cell></row><row><cell>knn</cell><cell>81.3</cell><cell>93.3</cell></row><row><cell>kalo</cell><cell>77.3</cell><cell>88.0</cell></row><row><cell>ours</cell><cell>96.0</cell><cell>96.0</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 2 :</head><label>2</label><figDesc>Classification accuracies of Label Spreading and GCN for different graph construction methods and proportions of unlabeled data. McNemar test to compare ours vs. the best baseline is statistically significant for those results marked with a dagger symbol †.</figDesc><table /></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4" xml:id="foot_0"><p>http://qwone.com/ ˜jason/20Newsgroups/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="5" xml:id="foot_1"><p>https://code.google.com/archive/p/word2vec/</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div><head>Acknowledgements</head><p>The authors would like to thank the <rs type="funder">Agence Nationale de la Recherche</rs> for funding this project with the grant number <rs type="grantNumber">ANR-16-CE33-0011</rs>, and the reviewers for their feedback and suggestions. We also thank Grid5000 team for providing the necessary resources and technical support for this project, and <rs type="funder">CPER Nord-Pas de Calais/FEDER</rs> <rs type="programName">DATA Advanced data science</rs> and technologies 2015-2020.</p></div>
			</div>
			<listOrg type="funding">
				<org type="funding" xml:id="_KThCdX5">
					<idno type="grant-number">ANR-16-CE33-0011</idno>
				</org>
				<org type="funding" xml:id="_W2y6FmM">
					<orgName type="program" subtype="full">DATA Advanced data science</orgName>
				</org>
			</listOrg>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Data-Driven Graph Construction for Semi-Supervised Graph-Based Learning in NLP</title>
		<author>
			<persName><forename type="first">Andrei</forename><surname>Alexandrescu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Katrin</forename><surname>Kirchhoff</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">HLT-NAACL</title>
		<imprint>
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Manifold Regularization: A Geometric Framework for Learning from Labeled and Unlabeled Examples</title>
		<author>
			<persName><forename type="first">Mikhail</forename><surname>Belkin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Partha</forename><surname>Niyogi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Vikas</forename><surname>Sindhwani</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Machine Learning Research</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="page" from="2399" to="2434" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Metric Learning</title>
		<author>
			<persName><forename type="first">Aurélien</forename><surname>Bellet</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Amaury</forename><surname>Habrard</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Marc</forename><surname>Sebban</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2015">2015</date>
			<publisher>Morgan &amp; Claypool Publishers</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Transductive Learning via Spectral Graph Partitioning</title>
		<author>
			<persName><forename type="first">Shai</forename><surname>Ben-David</surname></persName>
		</author>
		<author>
			<persName><forename type="first">John</forename><surname>Blitzer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Koby</forename><surname>Crammer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Alex</forename><surname>Kulesza</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Fernando</forename><surname>Pereira</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jennifer</forename><forename type="middle">Wortman</forename><surname>Vaughan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Machine Learning</title>
		<imprint>
			<biblScope unit="volume">79</biblScope>
			<biblScope unit="issue">1-2</biblScope>
			<biblScope unit="page" from="151" to="175" />
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Label Propagation and Quadratic Criterion</title>
		<author>
			<persName><forename type="first">Yoshua</forename><surname>Bengio</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Olivier</forename><surname>Delalleau</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Nicolas</forename><forename type="middle">Le</forename><surname>Roux</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Semi-Supervised Learning</title>
		<editor>
			<persName><forename type="first">Olivier</forename><surname>Chapelle</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">Bernhard</forename><surname>Schölkopf</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">Alexander</forename><surname>Zien</surname></persName>
		</editor>
		<imprint>
			<publisher>MIT Press</publisher>
			<date type="published" when="2006">2006</date>
			<biblScope unit="page" from="193" to="216" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">FastGCN: Fast Learning with Graph Convolutional Networks via Importance Sampling</title>
		<author>
			<persName><forename type="first">Jie</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tengfei</forename><surname>Ma</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Cao</forename><surname>Xiao</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICLR</title>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Fitting a graph to vector data</title>
		<author>
			<persName><forename type="first">I</forename><surname>Samuel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jonathan</forename><forename type="middle">A</forename><surname>Daitch</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Daniel</forename><forename type="middle">A</forename><surname>Kelner</surname></persName>
		</author>
		<author>
			<persName><surname>Spielman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICML</title>
		<imprint>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Semi-supervised frame-semantic parsing for unknown predicates</title>
		<author>
			<persName><forename type="first">Dipanjan</forename><surname>Das</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Noah</forename><forename type="middle">A</forename><surname>Smith</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACL</title>
		<imprint>
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Online Learning of Task-specific Word Representations with a JointBiconvex Passive-Aggressive Algorithm</title>
		<author>
			<persName><forename type="first">Pascal</forename><surname>Denis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Liva</forename><surname>Ralaivola</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EACL</title>
		<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding</title>
		<author>
			<persName><forename type="first">Jacob</forename><surname>Devlin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ming-Wei</forename><surname>Chang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kenton</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kristina</forename><surname>Toutanova</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">NAACL-HLT</title>
		<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Learning Laplacian Matrix in Smooth Graph Signal Representations</title>
		<author>
			<persName><forename type="first">Xiaowen</forename><surname>Dong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Dorina</forename><surname>Thanou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Pascal</forename><surname>Frossard</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Pierre</forename><surname>Vandergheynst</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Signal Processing</title>
		<imprint>
			<biblScope unit="volume">64</biblScope>
			<biblScope unit="issue">23</biblScope>
			<biblScope unit="page" from="6160" to="6173" />
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Morpho-syntactic lexicon generation using graphbased semi-supervised learning</title>
		<author>
			<persName><forename type="first">Manaal</forename><surname>Faruqui</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ryan</forename><surname>Mcdonald</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Radu</forename><surname>Soricut</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Transactions of the Association for Computational Linguistics</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page" from="1" to="16" />
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Learning Discrete Structures for Graph Neural Networks</title>
		<author>
			<persName><forename type="first">Luca</forename><surname>Franceschi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mathias</forename><surname>Niepert</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Massimiliano</forename><surname>Pontil</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xiao</forename><surname>He</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICML</title>
		<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Seeing stars when there aren&apos;t many stars: Graph-based semisupervised learning for sentiment categorization</title>
		<author>
			<persName><forename type="first">Andrew</forename><surname>Goldberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xiaojin</forename><surname>Zhu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">HLT-NAACL 2006 Workshop on Textgraph</title>
		<imprint>
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Transductive Learning via Spectral Graph Partitioning</title>
		<author>
			<persName><forename type="first">Thorsten</forename><surname>Joachims</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Machine Learning</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="290" to="297" />
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">How to learn a graph from smooth signals</title>
		<author>
			<persName><forename type="first">Vassilis</forename><surname>Kalofolias</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">AISTATS</title>
		<imprint>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Semi-supervised Classification with Graph-convolutional Neural Networks</title>
		<author>
			<persName><forename type="first">N</forename><surname>Thomas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Max</forename><surname>Kipf</surname></persName>
		</author>
		<author>
			<persName><surname>Welling</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICLR</title>
		<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Note on the sampling error of the difference between correlated proportions or percentages</title>
		<author>
			<persName><forename type="first">Mcnemar</forename><surname>Quinn</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Psychometrika</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="153" to="157" />
			<date type="published" when="1947">1947</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title level="m" type="main">Efficient Estimation of Word Representations in Vector Space</title>
		<author>
			<persName><forename type="first">Tomas</forename><surname>Mikolov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kai</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Greg</forename><surname>Corrado</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jeffrey</forename><surname>Dean</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1301.3781</idno>
		<imprint>
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Scalable Nearest Neighbor Algorithms for High Dimensional Data</title>
		<author>
			<persName><forename type="first">Marius</forename><surname>Muja</surname></persName>
		</author>
		<author>
			<persName><forename type="first">David</forename><forename type="middle">G</forename><surname>Lowe</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Pattern Analysis and Machine Intelligence</title>
		<imprint>
			<biblScope unit="volume">36</biblScope>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page" from="2227" to="2240" />
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Scikitlearn: Machine Learning in Python</title>
		<author>
			<persName><forename type="first">F</forename><surname>Pedregosa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Varoquaux</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Gramfort</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Michel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Thirion</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Grisel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Blondel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Prettenhofer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Weiss</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Dubourg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Vanderplas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Passos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Cournapeau</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Brucher</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Perrot</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Duchesnay</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Machine Learning Research</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page" from="2825" to="2830" />
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Glove: Global vectors for word representation</title>
		<author>
			<persName><forename type="first">Jeffrey</forename><surname>Pennington</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Richard</forename><surname>Socher</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Christopher</forename><surname>Manning</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EMNLP</title>
		<imprint>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Deep contextualized word representations</title>
		<author>
			<persName><forename type="first">Matthew</forename><forename type="middle">E</forename><surname>Peters</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mark</forename><surname>Neumann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mohit</forename><surname>Iyyer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Matt</forename><surname>Gardner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Christopher</forename><surname>Clark</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kenton</forename><surname>Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Luke</forename><surname>Zettlemoyer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">NAACL</title>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Graph-based semi-supervised learning of translation models from monolingual data</title>
		<author>
			<persName><forename type="first">Avneesh</forename><surname>Saluja</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Hany</forename><surname>Hassan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kristina</forename><surname>Toutanova</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Chris</forename><surname>Quirk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACL</title>
		<imprint>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Soft-supervised Learning for Text Classification</title>
		<author>
			<persName><forename type="first">Amarnag</forename><surname>Subramanya</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jeff</forename><surname>Bilmes</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EMNLP</title>
		<imprint>
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<monogr>
		<title level="m" type="main">Graph-Based Semi-Supervised Learning</title>
		<author>
			<persName><forename type="first">Amarnag</forename><surname>Subramanya</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Partha</forename><surname>Pratim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Talukdar</forename></persName>
		</author>
		<imprint>
			<date type="published" when="2014">2014</date>
			<publisher>Morgan &amp; Claypool Publishers</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<analytic>
		<title level="a" type="main">Efficient Graph-based Semi-supervised Learning of Structured Tagging Models</title>
		<author>
			<persName><forename type="first">Amarnag</forename><surname>Subramanya</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Slav</forename><surname>Petrov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Fernando</forename><surname>Pereira</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EMNLP</title>
		<imprint>
			<date type="published" when="2010">2010</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title level="a" type="main">Self-labeled techniques for semi-supervised learning: taxonomy, software and empirical study</title>
		<author>
			<persName><forename type="first">Isaac</forename><surname>Triguero</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Salvador</forename><surname>García</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Francisco</forename><surname>Herrera</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Knowledge and Information Systems</title>
		<imprint>
			<biblScope unit="volume">42</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="245" to="284" />
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title level="a" type="main">Deep Learning via Semi-supervised Embedding</title>
		<author>
			<persName><forename type="first">Jason</forename><surname>Weston</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Frédéric</forename><surname>Ratle</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Hossein</forename><surname>Mobahi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ronan</forename><surname>Collobert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Neural Networks: Tricks of the Trade -Second Edition</title>
		<imprint>
			<date type="published" when="2012">2012</date>
			<biblScope unit="page" from="639" to="655" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<monogr>
		<title level="m" type="main">Simplifying Graph Convolutional Networks</title>
		<author>
			<persName><forename type="first">Felix</forename><surname>Wu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tianyi</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Amauri</forename><surname>Holanda De</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Christopher</forename><surname>Souza</surname><genName>Jr</genName></persName>
		</author>
		<author>
			<persName><forename type="first">Tao</forename><surname>Fifty</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Kilian</forename><forename type="middle">Q</forename><surname>Yu</surname></persName>
		</author>
		<author>
			<persName><surname>Weinberger</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1902.07153</idno>
		<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title level="a" type="main">Revisiting semi-supervised learning with graph embeddings</title>
		<author>
			<persName><forename type="first">Zhilin</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">William</forename><forename type="middle">W</forename><surname>Cohen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ruslan</forename><surname>Salakhutdinov</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICML</title>
		<imprint>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title level="a" type="main">Learning with Local and Global Consistency</title>
		<author>
			<persName><forename type="first">Dengyong</forename><surname>Zhou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Olivier</forename><surname>Bousquet</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Thomas</forename><surname>Navin Lal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jason</forename><surname>Weston</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Bernhard</forename><surname>Schölkopf</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">NIPS</title>
		<imprint>
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<monogr>
		<title level="m" type="main">Learning from Labeled and Unlabeled Data with Label Propagation</title>
		<author>
			<persName><forename type="first">Xiaojin</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Zoubin</forename><surname>Ghahramani</surname></persName>
		</author>
		<idno>CMU-CALD-02-107</idno>
		<imprint>
			<date type="published" when="2002">2002</date>
		</imprint>
		<respStmt>
			<orgName>Carnegie Mellon University</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title level="a" type="main">Semi-supervised learning using Gaussian fields and harmonic functions</title>
		<author>
			<persName><forename type="first">Xiaojin</forename><surname>Zhu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">John</forename><surname>Ghahramani</surname></persName>
		</author>
		<author>
			<persName><surname>Lafferty</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICML</title>
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
