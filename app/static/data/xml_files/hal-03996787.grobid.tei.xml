<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Pushing Edge Computing one Step Further: Resilient and Privacy-Preserving Processing on Personal Devices</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Ludovic</forename><surname>Javet</surname></persName>
							<email>ludovic.javet@inria.fr</email>
							<affiliation key="aff0">
								<orgName type="institution">Inria Saclay U. Versailles-St-Q.-en-Yvelines U. Paris-Saclay</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Nicolas</forename><surname>Anciaux</surname></persName>
							<email>nicolas.anciaux@inria.fr</email>
							<affiliation key="aff1">
								<orgName type="institution">Inria Saclay U. Versailles-St-Q.-en-Yvelines U. Paris-Saclay</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Luc</forename><surname>Bouganim</surname></persName>
							<email>luc.bouganim@inria.fr</email>
							<affiliation key="aff2">
								<orgName type="institution">Inria Saclay U. Versailles-St-Q.-en-Yvelines U. Paris-Saclay</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Léo</forename><surname>Lamoureux</surname></persName>
							<affiliation key="aff3">
								<orgName type="institution">Inria Saclay U. Versailles-St-Q.-en-Yvelines U. Paris-Saclay</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Philippe</forename><surname>Pucheral</surname></persName>
							<email>philippe.pucheral@inria.fr</email>
							<affiliation key="aff4">
								<orgName type="institution">Inria Saclay U. Versailles-St-Q.-en-Yvelines U. Paris-Saclay</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Pushing Edge Computing one Step Further: Resilient and Privacy-Preserving Processing on Personal Devices</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">0461DA15E30F5F4CD9856D10BA3F5AB6</idno>
					<idno type="DOI">10.48786/edbt.2023.77</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.8.0" ident="GROBID" when="2024-04-12T14:53+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Can we push Edge computing one step further? This demonstration paper proposes an answer to this question by leveraging the generalization of Trusted Execution Environments at the very edge of the network to enable resilient and privacy-preserving computation on personal devices. Based on preliminary published results, we show that this can drastically change the way distributed processing over personal data is conceived and achieved. The platform presented here demonstrates the pertinence of the approach through execution scenarios integrating heterogeneous secure personal devices.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>With forecasts at 29.3 billion connected devices by 2023 <ref type="bibr" target="#b0">[1]</ref>, the current reliable, server-based, and infrastructure-centric data management approach exhibits its limits in terms of efficiency, privacy, and energy consumption. While Edge computing aims at letting the data close to the sources and leverage in situ computing resources <ref type="bibr" target="#b21">[22]</ref>, data is usually gathered again on cloud or cloudlet servers <ref type="bibr" target="#b18">[19]</ref> whenever multi-sources computation is required (e.g., to perform statistics or machine learning).</p><p>A game changer is the generalization of Trusted Execution Environments (TEEs) <ref type="bibr" target="#b17">[18]</ref> at the extreme edge of the network: Intel SGX <ref type="bibr" target="#b9">[10]</ref> on PC and tablets, ARM's TrustZone <ref type="bibr" target="#b16">[17]</ref> on smartphones (Figure <ref type="figure" target="#fig_0">1</ref>.a) and Trusted Platform Module (TPM) on smart objects (Figure <ref type="figure" target="#fig_0">1</ref>.b). The security features of TEEs enable generic and scalable computations, processing cleartext data without any tradeoff between privacy and accuracy. Hence, large-scale privacy-preserving computations are within reach in a more generic and flexible way than with homomorphic cryptography <ref type="bibr" target="#b7">[8]</ref>, differential privacy <ref type="bibr" target="#b11">[12]</ref>, or secure multiparty computation protocols <ref type="bibr" target="#b5">[6]</ref>.</p><p>In <ref type="bibr" target="#b13">[14]</ref>, we advocate that the convergence between TEEs and Opportunistic Networks (OppNets) <ref type="bibr" target="#b15">[16]</ref> can be leveraged to organize fully decentralized and secure query computations among data scattered on multiple personal devices, without resorting to any central authority. We call this new data management paradigm Edgelet computing and propose dedicated execution strategies that guarantee three fundamental properties, namely Resiliency -a query completes before a given deadline according to a given fault presumption rate -, Validity -the query result is equivalent to the one obtained in a centralized context -and Crowd Liability -the liability of the processing is equally distributed among all query participants -. The shift of responsibility from a unique data controller (in the GDPR sense) to the crowd is a salient feature of Edgelet computing. These properties provide tangible guarantees to both Data Contributors (individuals supplying the data) and Data Processors (people whose personal device performs the processing), but also to the beneficiaries of the query results.</p><p>This research work is being validated in the field through the DomYcile project <ref type="bibr" target="#b1">[2]</ref>: 8,000 elderly people receiving home care in the French Yvelines district are equipped with a secure box (see Figure <ref type="figure" target="#fig_0">1</ref>.b) where their medical records are stored and processed (local queries today, clustering algorithms crossing the data of several patients tomorrow); currently, the boxes are not connected to the Internet for subscription cost and acceptability reasons, but are connected opportunistically by caregivers during their visits. Today, we aim at enlarging the use cases targeted by Edgelet computing, considering that the solutions proposed in <ref type="bibr" target="#b13">[14]</ref> apply whenever decentralized computations satisfying Resiliency, Validity, and Crowd Liability need to be performed among TEEenabled personal devices (edgelets) connected through "uncertain" communications. OppNets are an extreme case of uncertain communications in terms of latency and then fault presumption, but uncertainty is inherent in any decentralized computation over a crowd of personal devices, because devices can be disconnected at will, be temporarily out of reach, or simply fail. We sketch below two promising use cases as motivating examples:</p><p>Opportunistic polling: during events that welcome a large audience (e.g., a conference, a museum, a concert, a match, a protest), the participants using a TrustZone-based smartphone could contribute with their data (e.g., their centers of interest, nationality, age, etc.) to a global processing to improve the user experience in real time (i.e., adapting the services to the characteristics of the audience).</p><p>Data altruism: the Data Governance Act <ref type="bibr" target="#b2">[3]</ref> fosters data subjects to give consent to process their personal data for purposes such as scientific research or public services improvement (e.g., a health survey organized by Santé Publique France). The Edgelet framework allows individuals to provide their health data with strong guarantees of confidentiality, through a secure box, a smartphone, or a PC, and to benefit from the results obtained.</p><p>The goal of this demo paper is twofold. First, it exemplifies the versatility of the approach by demonstrating the Edgelet computing mechanisms running on different TEE-enabled devices (from PC with SGX up to smart objects with TPM). Second, it presents the internals of Edgelet computing and let the audience play with important parameters related to resiliency and data privacy and observe the outcome by themselves. A video of the demonstration is available online 1 .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">EDGELET COMPUTING FRAMEWORK</head><p>A lot of research work has been produced on the different areas encompassed by Edgelet computing: Computing architectures: from cloud, fog, edge computing to mobile edge <ref type="bibr" target="#b12">[13]</ref>, mobile ad-hoc cloud computing <ref type="bibr" target="#b24">[25]</ref> and cross-device federated machine learning <ref type="bibr" target="#b6">[7]</ref>; Private/Confidential computing: using homomorphic encryption <ref type="bibr" target="#b7">[8]</ref>, secure multiparty computation <ref type="bibr" target="#b5">[6]</ref>, differential privacy techniques <ref type="bibr" target="#b11">[12]</ref> or TEEs (in the cloud <ref type="bibr" target="#b19">[20]</ref>, or at the edges <ref type="bibr" target="#b8">[9,</ref><ref type="bibr" target="#b14">15]</ref>). To the best of our knowledge, none of the aforementioned papers and surveys address the challenge raised by Edgelet computing: how to perform complex and scalable distributed queries on data scattered on multiple personal devices while ensuring fault and disconnection tolerance?</p><p>In this section, we first recall from <ref type="bibr" target="#b13">[14]</ref> the basics of Edgelet execution strategies that can scale to a large number of participants while providing privacy guarantees. Then, we present a resilient execution strategy that handles device failures as well as temporary disconnections, and produces accurate results.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Design of Edgelet Computation Plans</head><p>Contrary to participatory sensing or sensor networks which focus on stream queries over elementary data, Edgelet computing aims at handling rich data (e.g., healthcare folders, spending habits) and complex processing (e.g., machine learning, data mining) over edgelets data seen as a horizontal partitioning of a shared database (i.e., edgelets data conform to a common schema). We represent these computations in the form of a Query Execution Plan (QEP), that is a directed graph where vertices materialize the operators to be computed and edges represent the dataflow among them. A secure assignment of these operators is then essential to avoid any targeted attacks, but is not detailed here for the sake of brevity.</p><p>The simplest form of a QEP is a tree with Data Contributors at the leaves (one per edgelet contributing to the query with its data) sending the requested data to a Snapshot Builder operator, the role of which is to collect a representative snapshot of cardinality 𝐶 (e.g., select tuples from 𝐶 = 2000 patients over 65 years old).</p><p>The Snapshot Builder then sends the representative snapshot to a Computer operator which, in turn, computes the final result and eventually delivers it to the Querier.</p><p>The Data Processors (here, the Snapshot Builder and the Computer) can be decomposed into sub-operators assigned to different edgelets (i.e., TEE-enabled devices) for performance or privacy concerns. Indeed, although highly difficult to conduct and requiring physical instrumentation, side-channel attacks compromising data confidentiality cannot be totally ignored <ref type="bibr" target="#b23">[24]</ref>, placing the TEE in a "sealed glass" mode <ref type="bibr" target="#b22">[23]</ref> (the integrity guarantee is preserved, but not the confidentiality). This decomposition can help minimizing the amount of data exposed at each edgelet by horizontally partitioning the dataset. This can also preclude the concomitant exposure, in the same edgelet, of data items that become sensitive when combined (e.g., a quasi-identifier) by vertically partitioning the dataset. This can finally help minimizing the workload (e.g., when energy consumption matters) or exploit the inherent Edgelet computing parallelism. A Computing Combiner operator must then be added in the QEP to combine the outputs of all sub-operators.</p><p>Figure <ref type="figure" target="#fig_1">2</ref> presents the QEP for an example query using horizontal partitioning (Data Contributors are assigned to Snapshot Builders, e.g., by hashing their public key) and vertical partitioning (each Computer manages a single statistic, e.g., Age, BMI).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Edgelet Query Execution</head><p>During the execution of a QEP, each edgelet acting as a Data Processor is a potential Single Point of Failure, either because it really fails or because of a temporary disconnection.</p><p>To solve this problem, we explored in <ref type="bibr" target="#b13">[14]</ref> two resiliency strategies, namely Backup and Overcollection, which both enable the execution of a query while respecting the resiliency, validity and crowd liability properties introduced earlier. These two strategies differ on complexity, performance and on the way privacy is enforced, making each strategy best adapted to different contexts (see <ref type="bibr" target="#b13">[14]</ref> for a complete taxonomy). In this demonstration, we focus on the Overcollection strategy which is best adapted to any use case where performance matters and approximate results are acceptable (e.g., statistics, machine learning processes).</p><p>We illustrate the Overcollection principle by considering a query over a sample dataset (e.g., 𝐶 individuals with age &gt; 65) where Data Processors (i.e., Snapshot Builder and Computers) execute distributive operators. Instead of executing the operators on single edgelets, we distribute (using hashing) its execution over 𝑛 + 𝑚 edgelets where each one processes a partition of the original dataset, with 𝑛 the minimum number of partitions to be collected and 𝑚 the overcollection parameter (see Figure <ref type="figure" target="#fig_2">3</ref>). The validity is then trivially preserved as long as (1) each of the 𝑛 + 𝑚 partitions is representative and has a cardinality 𝐶/𝑛, and</p><p>(2) less than m partitions are lost. Note that we need to add to the Computing Combiner an Active Backup, i.e., a replicated instance running in parallel with it, in order to handle its potential failure. Many data-intensive queries of interest are distributive by nature and can accommodate Overcollection. This is also the case of general interest Machine Learning (ML) algorithms. However, ML algorithms are often iterative and require to exchange partial results computed over different data partitions. A strict validity between the different iterations would require that a valid snapshot is processed at each iteration, and that the same valid snapshot (same partitions) is kept during the subsequent iterations, which is not easily ensured due to various message loss at each iteration. Fortunately, strict validity is not a prerequisite for these algorithms, and resampling at each iteration sometimes even produces better accuracy (as in Mini-batch K-Means <ref type="bibr" target="#b20">[21]</ref>).</p><p>The method for executing an iterative algorithm A (e.g., K-Means <ref type="bibr" target="#b10">[11]</ref>) in the Edgelet context is the following: each edgelet implementing a Computer iterates on (1) a local convergence phase where it computes A on its local partition, improving its local knowledge (e.g., its centroids), and broadcasts this knowledge to all others Computers, and (2) a synchronization phase where it receives the knowledge of the other Computers it has heard of and integrates them in its own knowledge (e.g., the barycenter for each centroid). Right before the query deadline, the knowledge is sent to the Computing Combiner which combines all received knowledges and sends the final result to the Querier. We enforce the progression of the algorithm on all edgelets thanks to a Heartbeat, that is each iteration is cadenced by a clock, whatever the local state of the processing, i.e., the Computers move to the next iteration even if few or no messages were received (failures or disconnections).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">DEMONSTRATION 3.1 Demonstration Platform</head><p>The first objective of this demonstration is to present the computational mechanisms of the Edgelet framework using TEE-enabled devices ranging from high-end device (PC) to low-end device (home box). Therefore, we deploy the following hardware:</p><p>• PC (Intel SGX). A laptop with an Intel Core i5-9400H 2.5GHz 4 Cores with SGX 1-FLC runs secure enclaves in an Ubuntu Linux 20.04 environment. The code is written on top of Open Enclave <ref type="bibr" target="#b4">[5]</ref>, an SDK for developing enclave applications in C/C++. Open Enclave provides support for Intel SGX as well as preview support for ARM TrustZone, thus aiming to generalize the development of enclave applications across TEEs.</p><p>• Home boxes (TPM). These secure boxes (see Figure <ref type="figure" target="#fig_0">1</ref>.b, identical to those deployed in the field by the DomYcile project <ref type="bibr" target="#b1">[2]</ref>, incorporate a STM32F417 microcontroller. The latter is connected to a 𝜇-SD card hosting the owner's raw data and to a tamper-proof Trusted Platform Module (TPM). This TPM secures the cryptographic keys and guarantees, during the secure boot, that the embedded code has not been tampered with.</p><p>The second objective is to present the internal aspects of the solution, we thus develop the following software: (1) a GUI implemented in Dash Python that allows interactive configuration and visualization of Edgelet queries; (2) an Edgelet manager that orchestrates executions and communications between simulated and real edgelets (PC and home boxes); (3) a web client accessible to attendees' smartphones via a QR code allowing them to visualize the processed data and interact in real-time with the execution.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Demonstration Scenario</head><p>In this demonstration, we take the motivating example presented in the introduction. Santé Publique France (Querier) wants to perform a set of queries on population health data to improve the quality of its services. Some individuals are equipped with a PC, others with a secure home box, but all are interconnected by uncertain communications. The scenario consists of two interactive parts related to the configuration and execution of Edgelet computations. In the first part, the attendees will understand the impact of privacy and resiliency parameters on the QEPs. In the second part, they will follow the execution in real time and visualize the results obtained. These two parts are represented on Figure <ref type="figure">4</ref>.</p><p>Part 1: QEP Configuration. The attendees are first invited to select a query among the 2 proposed ones: (i) a Grouping Sets query <ref type="bibr" target="#b3">[4]</ref> which allows multiple Group-By clauses to be evaluated within a single SQL query (e.g., to cross multiple statistics over the same data sample); or (ii) a K-Means <ref type="bibr" target="#b10">[11]</ref> followed by a Group By on the resulting clusters (e.g., to identify which characteristics most influence the dependency level of an elderly person). Then, following their intuition, the attendees can try to improve the privacy of the QEP of the selected query to reduce data exposure in case of TEEs compromise. To do so, they can adjust the horizontal and vertical partitioning parameters presented in Section 2.1, by specifying the maximum number of raw data per edgelet and selecting the attribute pairs to be separated. Finally, the attendees can vary the failure probability value of the scenario and observe automatic changes in the execution plan to keep it resilient. We illustrate the Overcollection principle by considering a query over a sample dataset (e.g., C individuals with age &gt; 65) where Data Processors (i.e., Snapshot Builder and Computers) execute distributive operators. Instead of executing the operators on single edgelets, we distribute (using hashing) its execution over n+m edgelets where each one processes a partition of the original dataset, with n the minimum number of partitions to be collected and m the overcollection parameter (see Figure <ref type="figure" target="#fig_2">3</ref>). The validity is then trivially preserved as long as (1) each of the n+m partitions is representative and has a cardinality C/n, and (2) less than m partitions are lost. Note that we need to add to the Computing Combiner an Active Backup, i.e., a replicated instance running in parallel with it, in order to handle its potential failure.</p><p>Many data-intensive queries of interest are distributive by nature and can accommodate Overcollection. This is also the case of general interest Machine Learning (ML) algorithms. However, ML algorithms are often iterative and require to exchange partial results computed over different data partitions. A strict validity between the different iterations would require that a valid snapshot is processed at each iteration, and that the same valid snapshot (same partitions) is kept during the subsequent iterations, which is not easily ensured due to various message loss at each iteration. Fortunately, strict validity is not a prerequisite for these algorithms, and resampling at each iteration sometimes even produces better accuracy (as in Mini-batch K-Means <ref type="bibr" target="#b19">[20]</ref>).</p><p>The method for executing an iterative algorithm A (e.g., K-Means <ref type="bibr" target="#b6">[7]</ref>) in the Edgelet context is the following: each edgelet implementing a Computer iterates on (1) a local convergence phase where it computes A on its local partition, improving its local knowledge (e.g., its centroids), and broadcasts this knowledge to all others Computers, and (2) a synchronization phase where it receives the knowledge of the other Computers it has heard of and integrates them in its own knowledge (e.g., the barycenter for each centroid). Right before the query deadline, the knowledge is sent to the Computing Combiner which combines all received knowledges and sends the final result to the Querier. We enforce the progression of the algorithm on all edgelets thanks to a Heartbeat, that is each iteration is cadenced by a clock, whatever the local state of the processing, i.e., the Computers move to the next iteration even if few or no messages were received (failures or disconnections).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">DEMONSTRATION</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Demonstration Platform</head><p>The first objective of this demonstration is to present the computational mechanisms of the Edgelet framework using TEEenabled devices ranging from high-end device (PC) to low-end device (home box). Therefore, we deploy the following hardware:</p><p>• PC (Intel SGX). A laptop with an Intel Core i5-9400H 2.5GHz</p><p>4 Cores with SGX 1-FLC runs secure enclaves in an Ubuntu Linux 20.04 environment. The code is written on top of Open Enclave <ref type="bibr" target="#b13">[14]</ref>, an SDK for developing enclave applications in C/C++. Open Enclave provides support for Intel SGX as well as preview support for ARM TrustZone, thus aiming to generalize the development of enclave applications across TEEs. • Home boxes (TPM). These secure boxes (see Figure <ref type="figure" target="#fig_0">1</ref>.b), identical to those deployed in the field by the DomYcile project <ref type="bibr" target="#b7">[8]</ref>, incorporate a STM32F417 microcontroller. The latter is connected to a μ-SD card hosting the owner's raw data and to a tamper-proof Trusted Platform Module (TPM). This TPM secures the cryptographic keys and guarantees, during the secure boot, that the embedded code has not been tampered with. The second objective is to present the internal aspects of the solution, we thus develop the following software: (1) a GUI implemented in Dash Python that allows interactive configuration and visualization of Edgelet queries; <ref type="bibr" target="#b1">(2)</ref> an Edgelet manager that orchestrates executions and communications between simulated and real edgelets (PC and home boxes); (3) a web client accessible to attendees' smartphones via a QR code allowing them to visualize the processed data and interact in real-time with the execution.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Demonstration Scenario</head><p>In this demonstration, we take the motivating example presented in the introduction. Santé Publique France (Querier) wants to perform a set of queries on population health data to improve the quality of its services. Some individuals are equipped with a PC, others with a secure home box, but all are interconnected by uncertain communications. The scenario consists of two interactive parts related to the configuration and execution of Edgelet computations. In the first part, the attendees will understand the impact of privacy and resiliency parameters on the QEPs. In the second part, they will follow the execution in real time and visualize the results obtained. These two parts are represented on the figure below.  Part 2: Execution of an Edgelet computation. After the attendees have configured the query as desired, we proceed to its real-time execution on the heterogeneous personal devices available for the demonstration (concrete edgelets), the rest of the operators being associated to a configurable number of simulated edgelets to attest scalability. The demonstration platform allows the attendees to visualize, step by step, the query execution. Initially, we launch the collection phase where Snapshot Builders receive contributions from thousands of simulated Data Contributors and build representative snapshots. Next, the Edgelet platform redistributes the data and launches the computation phase with the corresponding Computers. At each step, the user can interact with the execution using their own smartphone to analyze the input and output data. At the end, the aggregated data is transmitted to the Computing Combiners for the combination phase and the query is completed. In case of failures or disconnections, the attendees will be able to directly identify the concerned edgelets on the QEP and understand the impacts on the execution. For example, we can intentionally power off some concrete devices to generate a failure at will. In order to verify the results, the attendees can take the same dataset used with the distributed edgelets and run the processing centrally on the demonstration platform.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Demonstration Results</head><p>The demonstration shows the internals of the Edgelet computing framework applied to the fully decentralized context and illustrates its usage through execution scenarios on multiple personal devices. It helps to answer the following questions:</p><p>Does Edgelet computing concretely make sense? The practical implementation on high-end and low-end personal devices demonstrates both its applicability and versatility. It shows that large-scale general-purpose computations can be performed over devices while providing high-security guarantees. This opens up important opportunities in terms of personal data management.</p><p>Can any form of computation be handled? Edgelet computing leverages the TEE security to perform computations on clear-text data (once decrypted locally). It can then combine computation generality -demonstrated by our demonstration queries -and scalability -demonstrated by the number of simulated edgelets -, contrary to homomorphic encryption, secure multiparty computation, or local differential privacy solutions. Note that the Overcollection strategy only applies if the processing is distributive; otherwise, the Backup strategy can be used at the price of a higher complexity and lower performance (see <ref type="bibr" target="#b13">[14]</ref> for details).</p><p>Is privacy protected whatever the attack? While highly difficult to implement, side-channel attacks on TEEs could compromise the confidentiality of the manipulated data. Edgelet computing counter-measures are horizontal and vertical partitioning. Through the demonstration, attendees will be able to visualize the distribution of data among the edgelets and measure the respective benefit of both types of partitioning. They will also understand that only the results of the computations, i.e. the aggregated data, are sent (encrypted) to the successor operators.</p><p>Can a query always proceed despite the failures? Providing fault tolerance in a distributed context where messages are sent among weakly connected personal devices is a real challenge, either because they are down or because they are temporarily unavailable (e.g., offline smartphones). The demonstration shows that the Overcollection strategy can answer this: attendees will be allowed to vary the failure context (e.g., disconnection probability) and see the impact on the overcollection degree as well as the effects on the results accuracy with respect to the number of heartbeats.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: Instances of Trusted Execution Environments.</figDesc><graphic coords="2,303.59,501.11,56.98,62.14" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Vertically and Horizontally partitioned QEP.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: Overcollection for the QEP of Figure 2.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: Overcollection for the QEP of Figure 2</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Part 1 :</head><label>1</label><figDesc>Configuration of a QEP Part 2: Execution of an Edgelet Computation</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 4 :Figure 4 :</head><label>44</label><figDesc>Figure 4: Edgelet computing demonstration platform</figDesc><graphic coords="4,309.92,623.39,234.02,106.72" type="bitmap" /></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<ptr target="https://tinyurl.com/cisco-internet-report" />
		<title level="m">Cisco Annual Internet Report</title>
		<imprint>
			<date type="published" when="2018">2020. 2018-2023</date>
		</imprint>
	</monogr>
	<note>White Paper</note>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<ptr target="https://tinyurl.com/e-tonomy" />
		<title level="m">DomYcile Project</title>
		<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<ptr target="https://tinyurl.com/data-governance-act" />
		<title level="m">Proposal for a Regulation of the European Parliament and of the Concil on European data governance (Data Governance Act)</title>
		<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<ptr target="https://tinyurl.com/grouping-sets" />
		<title level="m">Group By Grouping Sets -Snowflake Documentation</title>
		<imprint>
			<date type="published" when="2023">2023</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<ptr target="https://openenclave.io/sdk/" />
		<title level="m">Open Enclave SDK</title>
		<imprint>
			<date type="published" when="2023">2023</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">SMCQL: Secure Query Processing for Private Data Networks</title>
		<author>
			<persName><forename type="first">Johes</forename><surname>Bater</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Gregory</forename><surname>Elliott</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Craig</forename><surname>Eggen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Satyender</forename><surname>Goel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Abel</forename><forename type="middle">N</forename><surname>Kho</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jennie</forename><surname>Rogers</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Proc. VLDB Endow</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page" from="673" to="684" />
			<date type="published" when="2017">2017. 2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Towards Federated Learning at Scale: System Design</title>
		<author>
			<persName><forename type="first">A</forename><surname>Kallista</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Hubert</forename><surname>Bonawitz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Wolfgang</forename><surname>Eichner</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Dzmitry</forename><surname>Grieskamp</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Alex</forename><surname>Huba</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Vladimir</forename><surname>Ingerman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Chloé</forename><surname>Ivanov</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jakub</forename><surname>Kiddon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Stefano</forename><surname>Konečný</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Brendan</forename><surname>Mazzocchi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Timon</forename><surname>Mcmahan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">David</forename><surname>Van Overveldt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Daniel</forename><surname>Petrou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jason</forename><surname>Ramage</surname></persName>
		</author>
		<author>
			<persName><surname>Roselander</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">MLSys 2019</title>
		<meeting><address><addrLine>Stanford, CA, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Private Database Queries Using Somewhat Homomorphic Encryption</title>
		<author>
			<persName><forename type="first">Dan</forename><surname>Boneh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Craig</forename><surname>Gentry</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Shai</forename><surname>Halevi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Frank</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">David</forename><forename type="middle">J</forename><surname>Wu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACNS 2013</title>
		<meeting><address><addrLine>Banff, AB, Canada</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2013">2013</date>
			<biblScope unit="volume">7954</biblScope>
			<biblScope unit="page" from="102" to="118" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Highly distributed and privacy-preserving queries on personal data management systems</title>
		<author>
			<persName><forename type="first">Luc</forename><surname>Bouganim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Julien</forename><surname>Loudet</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Iulian Sandu</forename><surname>Popa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The VLDB Journal</title>
		<imprint>
			<biblScope unit="page" from="1" to="31" />
			<date type="published" when="2022">2022. 2022</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">An Extensive and Secure Personal Data Management System Using SGX</title>
		<author>
			<persName><forename type="first">Robin</forename><surname>Carpentier</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Floris</forename><surname>Thiant</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Iulian</forename><surname>Sandu Popa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Nicolas</forename><surname>Anciaux</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Luc</forename><surname>Bouganim</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EDBT 2022</title>
		<meeting><address><addrLine>Edinburgh, UK</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2022">2022</date>
			<biblScope unit="page" from="570" to="573" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">A Data-Clustering Algorithm on Distributed Memory Multiprocessors</title>
		<author>
			<persName><forename type="first">S</forename><surname>Inderjit</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Dharmendra</forename><forename type="middle">S</forename><surname>Dhillon</surname></persName>
		</author>
		<author>
			<persName><surname>Modha</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGKDD 1999</title>
		<meeting><address><addrLine>San Diego, CA, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1999">1999</date>
			<biblScope unit="volume">1759</biblScope>
			<biblScope unit="page" from="245" to="260" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Differential Privacy</title>
		<author>
			<persName><forename type="first">Cynthia</forename><surname>Dwork</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Automata, Languages and Programming, 33rd International Colloquium, ICALP 2006</title>
		<meeting><address><addrLine>Venice, Italy</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2006">2006</date>
			<biblScope unit="volume">4052</biblScope>
			<biblScope unit="page" from="1" to="12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Towards the Decentralised Cloud: Survey on Approaches and Challenges for Mobile, Ad hoc, and Edge Computing</title>
		<author>
			<persName><forename type="first">Ana</forename><forename type="middle">Juan</forename><surname>Ferrer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Joan</forename><surname>Manuel Marquès</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Josep</forename><surname>Jorba</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Comput. Surv</title>
		<imprint>
			<biblScope unit="volume">51</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page">36</biblScope>
			<date type="published" when="2019">2019. 2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Edgelet Computing: Pushing Query Processing and Liability at the Extreme Edge of the Network</title>
		<author>
			<persName><forename type="first">Ludovic</forename><surname>Javet</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Nicolas</forename><surname>Anciaux</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Luc</forename><surname>Bouganim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Philippe</forename><surname>Pucheral</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CCGrid 2022</title>
		<meeting><address><addrLine>Taormina, Italy</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2022">2022</date>
			<biblScope unit="page" from="160" to="169" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Trustworthy Distributed Computations on Personal Data Using Trusted Execution Environments</title>
		<author>
			<persName><forename type="first">Riad</forename><surname>Ladjel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Nicolas</forename><surname>Anciaux</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Philippe</forename><surname>Pucheral</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Guillaume</forename><surname>Scerri</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">TrustCom 2019</title>
		<meeting><address><addrLine>Rotorua, New Zealand</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2019">2019</date>
			<biblScope unit="page" from="381" to="388" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Opportunistic networking: data forwarding in disconnected mobile ad hoc networks</title>
		<author>
			<persName><forename type="first">Luciana</forename><surname>Pelusi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Andrea</forename><surname>Passarella</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Marco</forename><surname>Conti</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Communications Magazine</title>
		<imprint>
			<biblScope unit="volume">44</biblScope>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page" from="134" to="141" />
			<date type="published" when="2006">2006. 2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Demystifying Arm TrustZone: A Comprehensive Survey</title>
		<author>
			<persName><forename type="first">Sandro</forename><surname>Pinto</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Nuno</forename><surname>Santos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Comput. Surv</title>
		<imprint>
			<biblScope unit="volume">51</biblScope>
			<biblScope unit="issue">6</biblScope>
			<biblScope unit="page">36</biblScope>
			<date type="published" when="2019">2019. 2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Trusted Execution Environment: What It is, and What It is Not</title>
		<author>
			<persName><forename type="first">Mohamed</forename><surname>Sabt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mohammed</forename><surname>Achemlal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Abdelmadjid</forename><surname>Bouabdallah</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Trustcom/BigDataSE/ISPA</title>
		<imprint>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="57" to="64" />
			<date type="published" when="2015">2015. 2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">The Case for VM-Based Cloudlets in Mobile Computing</title>
		<author>
			<persName><forename type="first">Mahadev</forename><surname>Satyanarayanan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Paramvir</forename><surname>Bahl</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ramón</forename><surname>Cáceres</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Nigel</forename><surname>Davies</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Pervasive Comput</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="14" to="23" />
			<date type="published" when="2009">2009. 2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">VC3: Trustworthy Data Analytics in the Cloud Using SGX</title>
		<author>
			<persName><forename type="first">Felix</forename><surname>Schuster</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Manuel</forename><surname>Costa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Cedric</forename><surname>Fournet</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Christos</forename><surname>Gkantsidis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Marcus</forename><surname>Peinado</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Gloria</forename><surname>Mainar-Ruiz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mark</forename><surname>Russinovich</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">2015 IEEE Symposium on Security and Privacy, SP 2015</title>
		<meeting><address><addrLine>San Jose, CA, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2015">2015</date>
			<biblScope unit="page" from="38" to="54" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Web-scale k-means clustering</title>
		<author>
			<persName><forename type="first">D</forename><surname>Sculley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 19th International Conference on World Wide Web, WWW 2010</title>
		<meeting>the 19th International Conference on World Wide Web, WWW 2010<address><addrLine>Raleigh, North Carolina, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="1177" to="1178" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title level="a" type="main">Edge Computing: Vision and Challenges</title>
		<author>
			<persName><forename type="first">Weisong</forename><surname>Shi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jie</forename><surname>Cao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Quan</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Youhuizi</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Lanyu</forename><surname>Xu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Internet of Things Journal</title>
		<imprint>
			<biblScope unit="volume">3</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="637" to="646" />
			<date type="published" when="2016">2016. 2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title level="a" type="main">Sealed-Glass Proofs: Using Transparent Enclaves to Prove and Sell Knowledge</title>
		<author>
			<persName><forename type="first">Florian</forename><surname>Tramer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Fan</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Huang</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jean-Pierre</forename><surname>Hubaux</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ari</forename><surname>Juels</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Elaine</forename><surname>Shi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EuroS&amp;P 2017</title>
		<meeting><address><addrLine>Paris, France</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page" from="19" to="34" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title level="a" type="main">Leaky Cauldron on the Dark Land: Understanding Memory Side-Channel Hazards in SGX</title>
		<author>
			<persName><forename type="first">Wenhao</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Guoxing</forename><surname>Chen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xiaorui</forename><surname>Pan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yinqian</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xiaofeng</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Vincent</forename><surname>Bindschaedler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Haixu</forename><surname>Tang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Carl</forename><forename type="middle">A</forename><surname>Gunter</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CCS 2017</title>
		<meeting><address><addrLine>Dallas, TX, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page" from="2421" to="2434" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title level="a" type="main">Mobile ad hoc cloud: A survey</title>
		<author>
			<persName><forename type="first">Ibrar</forename><surname>Yaqoob</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ejaz</forename><surname>Ahmed</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Abdullah</forename><surname>Gani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Salimah</forename><surname>Mokhtar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Muhammad</forename><surname>Imran Razzak</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sghaier</forename><surname>Guizani</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Wirel. Commun. Mob. Comput</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="page" from="2572" to="2589" />
			<date type="published" when="2016">2016. 2016</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
