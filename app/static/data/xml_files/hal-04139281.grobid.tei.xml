<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Confidential Truth Finding with Multi-Party Computation</title>
				<funder ref="#_fjyerD8">
					<orgName type="full">Campus for Research Excellence and Technological Enterprise (CREATE)</orgName>
				</funder>
				<funder>
					<orgName type="full">National Research Foundation, Prime Minister&apos;s Office, Singapore</orgName>
				</funder>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Angelo</forename><surname>Saadeh</surname></persName>
							<email>angelo.saadeh@telecom-paris.fr</email>
							<affiliation key="aff0">
								<orgName type="laboratory">LTCI</orgName>
								<orgName type="institution" key="instit1">Télécom Paris</orgName>
								<orgName type="institution" key="instit2">IP</orgName>
								<address>
									<settlement>Paris, Palaiseau</settlement>
									<country key="FR">France</country>
								</address>
							</affiliation>
							<affiliation key="aff5">
								<orgName type="institution">CNRS@CREATE LTD</orgName>
								<address>
									<country key="SG">Singapore</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Pierre</forename><surname>Senellart</surname></persName>
							<email>pierre@senellart.com</email>
							<affiliation key="aff1">
								<orgName type="department">DI ENS</orgName>
								<orgName type="institution" key="instit1">ENS</orgName>
								<orgName type="institution" key="instit2">PSL University</orgName>
								<orgName type="institution" key="instit3">CNRS</orgName>
								<address>
									<settlement>Paris</settlement>
									<country key="FR">France</country>
								</address>
							</affiliation>
							<affiliation key="aff3">
								<orgName type="institution">Inria</orgName>
								<address>
									<settlement>Paris</settlement>
									<country key="FR">France</country>
								</address>
							</affiliation>
							<affiliation key="aff4">
								<orgName type="institution">Institut Universitaire de France</orgName>
							</affiliation>
							<affiliation key="aff5">
								<orgName type="institution">CNRS@CREATE LTD</orgName>
								<address>
									<country key="SG">Singapore</country>
								</address>
							</affiliation>
							<affiliation key="aff6">
								<orgName type="laboratory">IPAL</orgName>
								<orgName type="institution">CNRS</orgName>
								<address>
									<country key="SG">Singapore</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Stéphane</forename><surname>Bressan</surname></persName>
							<affiliation key="aff2">
								<orgName type="institution">National University of Singapore</orgName>
								<address>
									<country key="SG">Singapore</country>
								</address>
							</affiliation>
							<affiliation key="aff5">
								<orgName type="institution">CNRS@CREATE LTD</orgName>
								<address>
									<country key="SG">Singapore</country>
								</address>
							</affiliation>
							<affiliation key="aff6">
								<orgName type="laboratory">IPAL</orgName>
								<orgName type="institution">CNRS</orgName>
								<address>
									<country key="SG">Singapore</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Confidential Truth Finding with Multi-Party Computation</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">3B547A568ACBA4ABA292490D33EB5540</idno>
					<note type="submission">Submitted on 23 Jun 2023</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.8.0" ident="GROBID" when="2024-04-12T14:50+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>truth finding</term>
					<term>secure multi-party computation</term>
					<term>secretsharing</term>
					<term>uncertain data</term>
					<term>privacy</term>
				</keywords>
			</textClass>
			<abstract xml:lang="fr">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>ou non, émanant des établissements d'enseignement et de recherche français ou étrangers, des laboratoires publics ou privés.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Truth-finding algorithms <ref type="bibr" target="#b5">[6]</ref> help corroborate data from disagreeing sources. For each query it receives, a truth-finding algorithm predicts a truth value of the answer, possibly updating the trustworthiness factor of each source. Few works, however, address the issues of confidentiality and privacy. We consider the design and implementation of truth-finding algorithms that protect the confidentiality of sources' data, using secret-sharing-based secure multi-party computation <ref type="bibr" target="#b2">[3]</ref>, or simply secure multi-party computation (MPC).</p><p>We devise and present a secure multi-party pseudo-equality protocol that securely computes additions depending on a condition -we call them conditioned additions -for truth-finding algorithms. In particular, we present a secure equality test alternative that uses a polynomial evaluation to reduce the number of communication; this is used for conditioned additions, an operation that is an essential building block of many truth-finding algorithms. The protocol guarantees the confidentiality of the data. We also devise several variants of privacy-preserving truth-finding algorithms; ones that implement the truthfinding algorithms without changes, and others with modifications that aim to make the computation more efficient.</p><p>The secure multi-party protocols are then implemented with two servers. We empirically evaluate the performance of the proposed protocol on a state-of-theart truth-finding algorithm, 3-Estimates [4, <ref type="bibr">Algorithm 4]</ref> (see also <ref type="bibr" target="#b1">[2,</ref><ref type="bibr" target="#b4">5]</ref> for further experiments on this algorithm), and compare it with that of the non-secure baseline algorithms. The results confirm that the secure multi-party algorithm is as accurate as the corresponding baseline except for proposed modifications to reduce the efficiency loss incurred.</p><p>Set n ∈ N * , and let V be a set of n sources. The client would like to label k queries (or facts) {f 1 , ..., f k }. A truth-finding algorithm outputs a truth value for a query when different data sources (or sources) provide disagreeing information on it. Concretely, the truth-finding algorithm takes v 1 , ..., v n as input with v i ∈ {-1, 0, 1} k , and outputs estimated truth values in [-1, 1] k ⊂ R k or [0, 1] k ⊂ R k depending on the truth-finding algorithm.</p><p>Truth-finding (or truth discovery) algorithms <ref type="bibr" target="#b5">[6]</ref> are usually run by the client in order to know the truth value of a given query when the sources give disagreeing answers. That is, for each of the client's queries, each source in V delivers an answer v i such that an output of 1 corresponds to a positive answer, -1 to a negative one, and 0 if the source does not wish to classify the data point. 3-Estimates <ref type="bibr" target="#b3">[4]</ref> is a truth-finding algorithms that given a number of queries k, output a truth value in the range [-1, 1] k ⊂ R and a trust coefficient in each of the sources, or sources. In addition, 3-Estimates computes an estimate of the difficulty of each query.</p><p>The goal of this work is to execute truth-finding algorithms that protect sources' data using secure multi-party computation (MPC) <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b2">3]</ref>. More generally, given a function F and a set of private inputs x 1 , ..., x m respectively owned by P 1 , ..., P m , MPC is a cryptographic approach that makes it possible to compute the output of the function F (x 1 , .., x m ) without resorting to a third party that would compute the function F and would send the result back. MPC will be used to implement the 3-Estimates algorithm without having any source disclose their answer.</p><p>Because of lack of space, details are ommitted. An extended version is available as <ref type="bibr" target="#b7">[8]</ref>, which also covers another truth finding algorithm, Cosine, from <ref type="bibr" target="#b3">[4]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Proposed Approach</head><p>The first task we wish to achieve is private voting, i.e., the client sends queries to each source, and the source classifies the query. In the case where the query is a vector of features and the models are logistic regressions, existing MPC works <ref type="bibr" target="#b6">[7]</ref> can keep the query private. We suppose that the answers are already computed and secret-shared on two servers P 1 and P 2 using a two-party additive secret sharing. In other words, P 1 holds v ij 1 and</p><formula xml:id="formula_0">P 2 holds v ij 2 such that v ij = v ij 1 + v ij 2</formula><p>is the ith source's answer for the query f j and is equal to -1, 0, or 1.</p><p>The second step which is the aggregation of the data (the answers) is computed on the two servers P 1 and P 2 . The problem is now constructing a secure two-party computation algorithm with additively shared data that implements the truth-finding algorithms using their arithmetic circuits. Once the circuits are evaluated, the two servers (P 1 and P 2 ) send their share of the output to the client who reconstructs it by adding the received shares together.</p><p>Other than additions and multiplications, the truth-finding algorithm we implement -3-Estimates -uses existing real-number operations like division, and square root, which are dealt with in standard ways <ref type="bibr" target="#b7">[8]</ref>. We focus on computing conditioned sums by replacing equality tests with degree-two polynomial evaluations.</p><p>The truth-finding algorithms we use require conditioned additions. Given two vectors of same size t = (t 1 , ..., t k ) ∈ R k , z = (z 1 , ..., z k ) ∈ {-1, 0, 1} k , and an element κ ∈ {-1, 0, 1}, we define the following operation: S := i:z i =κ t i . In other words, the ith element of t, t i , is added to the sum only if the ith element of z, z i , is equal to κ. The difficulty is that even though κ is public, z i is private. To achieve this in MPC we start by defining the following function, for i ∈ {1, ..., r}:</p><formula xml:id="formula_1">E(z i , κ) = 1 if z i = κ 0 if not.</formula><p>A naive way to compute the sum S is as follows: S = i E(z i , κ) • t i . This way to compute S requires an equality test which is costly in MPC. To this end, we propose an alternative that makes good use of the fact that z i , κ ∈ {-1, 0, 1}. The goal is to express the function E as a polynomial so that it can be computed using the smallest number of additions and multiplications possible. We define and use the following expressions of E(z i , κ).</p><p>If κ = -1, we compute S as follows:</p><formula xml:id="formula_2">S = i 1 2 ((z i ) 2 -z i ) • t i . We have: 1 2 ((z i ) 2 -z i ) =    1 if z i = -1 0 if z i = 0 0 if z i = 1</formula><p>Hence, by multiplying 1 2 ((z i ) 2 -z i ) by t i , the only elements considered in the sum are the ones such that z i = -1. The function 1  2 ((z i ) 2 -z i ) is equal to E(z i , -1). If κ = 0 we similarly compute S as:</p><formula xml:id="formula_3">S = i (1 -(z i ) 2 ) • t i .</formula><p>It is also straightforward that the function 1 -(z i ) 2 is equal to E(z i , 0) because it outputs 1 if z i = 0 and 0 otherwise. If z = 1, in the same way, S is computed as:</p><formula xml:id="formula_4">S = i 1 2 ((z i ) 2 + z i ) • t i .</formula><p>Lemma 1 (Conditioned additions). Denote by Π E the MPC protocol implementing the function E using the three previously defined degree-2 polynomials. Π E does not reveal information about the other's player's share.</p><p>Proof. The three conditioned sums defined in this section do not need comparisons and they are expressed using only additions and multiplications, so their security level is the same as Π add and Π mul .</p><p>⊓ ⊔</p><p>See <ref type="bibr" target="#b7">[8]</ref> for how this allows us to reformulate the truth finding algorithm for 3-Estimates with MPC.</p><p>Normalization in 3-Estimates. In the 3-Estimates algorithm, the truth value, trust factor, and difficulty score need to be normalized at each step. This could be done using a secure comparison protocol to securely compute the minimum and the maximum of each value, and then normalize them as it is done in <ref type="bibr" target="#b3">[4]</ref>. Secure comparisons however are very costly in MPC. To reduce the amount of communication we replace the normalization based on finding the maximum and minimum by a pre-computed linear transformation which forces the values to stay between 0 and 1. Concretely we apply the function h(x) = 0.5x + 0.25 to all the values after each update. We evaluate the impact of this change in the experiments. The chosen function, h, is not perfect. Indeed, if we have information about the distribution of the parameters, we can pre-compute a linear normalization for every iteration. Using any public pre-computed or predefined normalizing function improves the efficiency of the algorithm because it would translate to using multiplication and addition by public constants, which is communication-free.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Experimental Results</head><p>We evaluate our protocol on two computing servers. We suppose that the sources have already answered and secret-shared their answers. We use the ring Z 2 60 with 20 bits of fixed precision. The two servers communicate via a local socket network implemented in Python on an Intel Core i5-9400H CPU (2.50 GHz × 8) and a RAM of 15.4 GiB. For the sake of the experiment, these communications are not encrypted or authenticated.</p><p>We implement our solution using the dataset Hubdub from <ref type="bibr" target="#b3">[4]</ref>. <ref type="foot" target="#foot_0">8</ref> This dataset is constructed from 457 questions from a Web site where users had to bet on future events. As the questions had multiple answers, they have been increased to 830 questions to obtain binary questions with answers -1, 0 or 1. The client sends the 830 queries to be classified by each source, and after the classification, the sources secret-share them on two servers to evaluate using MPC the 3-Estimates truth-finding algorithm. At the end of the evaluation, the results are reconstructed by the client. The results include the truth value for each query (the label), a difficulty score for each query, and a trustworthiness factor for each of the 471 sources. In Fig. <ref type="figure" target="#fig_0">1</ref> we show the difference between the predictions from the base model and the predictions from the MPC evaluation. The base model corresponds to the 3-Estimates algorithm implemented without MPC on the plain data. The MPC evaluation contains errors compared to the base model, and these errors are mostly below 10 -4 . To evaluate the impact of the errors induced by MPC, we look at label prediction. The MPC method labels all the questions exactly the same way as the baseline method, so both methods made the same number of errors, i.e., 269 (as shown in <ref type="bibr" target="#b3">[4]</ref>, this is less than majority voting and some other methods). On average, the execution of each iteration took 52.85s wall-clock time, or 39.58s CPU time. The MPC model is 2 000 times slower than the base model, this is due to the high number of comparisons that should be made to normalize the three factors.</p><p>If we use the pre-computed linear function h presented at the end of Sec. 2 the outputs will be very different of course because of the aforementioned reasons, but wall-clock time of each iteration is reduced to 0.58s and the CPU time to 0.48s making it almost 100 times faster. This normalization alternative increases the number of queries labeled differently by the MPC to 5, however, it yields 266 errors in total. For this specific dataset, the pre-computed normalization used happens to gives better results than the original baseline.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. Prediction errors between secure multi-party computation and the base model results with 3-Estimates on Hubdub dataset.</figDesc></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="8" xml:id="foot_0"><p>Datasets used, as well as the source code of our implementation, are available at https://github.com/angelos25/tf-mpc/.</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div><p>Acknowledgments This research is part of the program DesCartes and is supported by the <rs type="funder">National Research Foundation, Prime Minister's Office, Singapore</rs> under its <rs type="funder">Campus for Research Excellence and Technological Enterprise (CREATE)</rs> <rs type="programName">program</rs>.</p></div>
			</div>
			<listOrg type="funding">
				<org type="funding" xml:id="_fjyerD8">
					<orgName type="program" subtype="full">program</orgName>
				</org>
			</listOrg>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Completeness theorems for noncryptographic fault-tolerant distributed computation</title>
		<author>
			<persName><forename type="first">M</forename><surname>Ben-Or</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Goldwasser</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Wigderson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">STOC</title>
		<imprint>
			<date type="published" when="1988">1988</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<author>
			<persName><forename type="first">L</forename><surname>Berti-Équille</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Data veracity estimation with ensembling truth discovery methods</title>
		<imprint>
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<author>
			<persName><forename type="first">R</forename><surname>Cramer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Damgård</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">B</forename><surname>Nielsen</surname></persName>
		</author>
		<title level="m">Secure Multiparty Computation and Secret Sharing</title>
		<imprint>
			<publisher>Cambridge University Press</publisher>
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Corroborating information from disagreeing views</title>
		<author>
			<persName><forename type="first">A</forename><surname>Galland</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Abiteboul</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Marian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Senellart</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2010">2010</date>
			<publisher>WSDM</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Truth finding on the deep Web: Is the problem solved?</title>
		<author>
			<persName><forename type="first">X</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">X</forename><forename type="middle">L</forename><surname>Dong</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Lyons</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Meng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Srivastava</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">PVLDB</title>
		<imprint>
			<biblScope unit="volume">6</biblScope>
			<biblScope unit="issue">2</biblScope>
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">A survey on truth discovery</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Gao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Meng</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Q</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Su</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Zhao</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Fan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Han</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGKDD Explorations</title>
		<imprint>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Aby 3 : A mixed protocol framework for machine learning</title>
		<author>
			<persName><forename type="first">P</forename><surname>Mohassel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Rindal</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2018">2018</date>
			<publisher>CCS</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Confidential truth finding with multi-party computation (extended version)</title>
		<author>
			<persName><forename type="first">A</forename><surname>Saadeh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Senellart</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Bressan</surname></persName>
		</author>
		<idno>CoRR abs/2305.14727</idno>
		<imprint>
			<date type="published" when="2023">2023</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
