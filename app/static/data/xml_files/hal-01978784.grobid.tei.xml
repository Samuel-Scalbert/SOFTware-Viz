<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Incremental structural summarization of RDF graphs</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">François</forename><surname>Goasdoué</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">Univ Rennes</orgName>
								<orgName type="institution" key="instit2">Inria</orgName>
								<orgName type="institution" key="instit3">CNRS</orgName>
								<orgName type="institution" key="instit4">IRISA France</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Paweł</forename><surname>Guzewicz</surname></persName>
							<email>pawel.guzewicz@inria.fr</email>
							<affiliation key="aff1">
								<orgName type="institution" key="instit1">École polytechnique</orgName>
								<orgName type="institution" key="instit2">Inria</orgName>
								<address>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Ioana</forename><surname>Manolescu</surname></persName>
							<email>ioana.manolescu@inria.fr</email>
							<affiliation key="aff2">
								<orgName type="institution" key="instit1">Inria</orgName>
								<orgName type="institution" key="instit2">École polytechnique</orgName>
								<address>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Incremental structural summarization of RDF graphs</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">FBBFDD09EDDC5F8D76C5B0B062BF7F57</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.8.0" ident="GROBID" when="2024-04-12T14:45+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Realizing the full potential of Linked Open Data sharing and reuse is currently limited by the difficulty users have when trying to understand the data modeled within an RDF graph, in order to determine whether or not it may be useful for their need.</p><p>We demonstrate our RDFQuotient tool, which builds compact summaries of heterogeneous RDF graphs for the purpose of first-sight visualizations. An RDFQuotient summary provides an overview of the complete structure of an RDF graph, while being typically many orders of magnitude smaller, thus can be easily grasped by new users. Our summarization algorithms are time linear in the size of the input graph and incremental: they incrementally update a summary upon addition of new data.</p><p>For the demo, we plan to show the visualizations of our summaries obtained from well-known synthetic and real data sets. Further, attendees will be able to add data to the summarized RDF graphs and visually witness the incurred changes.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>Semantic Web graphs are nowadays being published and shared at a massive scale, e.g., Linked Open Data (LOD) Cloud (https: //lod-cloud.net) lists 1.200 graphs, while the LOD Atlas portal (http://lodatlas.lri.fr) references more than 20.000 graphs. Some of these graphs are domain-oriented, that is, they reflect a certain application domain, e.g., education, medical etc. On the contrary, a few RDF graphs are encyclopedic, e.g., DBpedia (https://wiki. dbpedia.org) and YAGO <ref type="bibr" target="#b6">[7]</ref>, covering many different topics; often, these are unions of many domain-specific ones, e.g., DBpedia is available for download as a set of domain-oriented "datasets". An overwhelming majority of the RDF graphs found in portals such as LOD Cloud or LODAtlas, https://data.gov.uk, https://data.gov etc. are domain-oriented.</p><p>Currently, a large obstacle toward exploiting this wealth of data is the difficulty for human users to make sense of a newly encountered RDF graph. The motivation for our work is to help users learn at first sight, without any prior knowledge about the graph and without having to set any parameter, the (ideally complete) structure of a domain-specific RDF graph. Given that RDF graphs can be very large, while the human information absorption capacity is relatively limited, RDF graph summaries have been used as intermediaries: from a given graph G a summary is extracted, then the summary is shown to the users in order to convey information about the structure and/or content of G.</p><p>We demonstrate RDFQuotient, a tool for constructing a complete summary of the structure of an RDF graph which does not require any user input. The particular advantage of RDFQuotient is its tolerance to heterogeneity, which enables it to build compact, easy-to-visualize summaries even from very large graphs, while preserving many of the important structural features of the graph. RDFQuotient summaries can be built efficiently, in linear time in the size of the graph. Further, they can be incrementally updated: upon addition of a triple t to a graph G, the summary of G ∪ {t } can be efficiently computed out of the current summary of G and t, without re-traversing the G triples.</p><p>Motivating example Figure <ref type="figure" target="#fig_1">1</ref> illustrates a possible visualization of an RDFQuotient summary of a BSBM <ref type="bibr" target="#b0">[1]</ref> benchmark graph of 10 8 triples. This visualization reflects the complete structure of the graph, using only 5 nodes and 11 edges, comparable to a simple small Entity-Relationship diagram. This summary reads as follows: (i) Non-leaf graph nodes belong to one of five disjoint classes, each represented by a summary node (boxes labeled N 1 to N 5 in Figure <ref type="figure" target="#fig_1">1</ref>). The number of graph nodes in each class appears in parenthesis after the label Ni of their representative; (ii) Graph nodes from a class may have types. Each such type appears under the summary node label, together with its number of occurrences among graph nodes of that class, e.g., 5919 nodes represented by N 3 are of type Producer, while 3050 are of type Vendor; (iii) Graph nodes from a class may have outgoing properties whose values are leaf nodes in the graph; the set of all such properties appears in the corresponding summary node, one property per line. For each property, e.g. country for N 3, the summary node specifies how many graph nodes represented by this summary node have it (8969 in this case), and how many distinct leaf nodes are target of these edges (10 in this case); (iv) Graph nodes from a class may have outgoing properties whose values are non-leaf nodes in the graph. For each graph edge n 1 a -→ n 2 , where n 1 , n 2 are non-leaf graph nodes and a is the property (edge label), an a-labeled edge in the summary goes from the representative of n 1 to that of n 2 . Next to a, this summary edge is also labeled with the number of graph edges to which it corresponds; (v) Properties from a small, fixed vocabulary are considered metadata (as opposed to data) and therefore they are not used to group nodes in classes, e.g., rdf-schema#-comment and rdf-schema#-label in Figure <ref type="figure" target="#fig_1">1</ref>. More such visualizations can be found online <ref type="foot" target="#foot_0">1</ref> ; below, we also work out an example leading from an RDF graph to its summary and then such a visualization.</p><p>We propose to demonstrate the incremental construction of four related (but different) summaries, i.e., show how summaries quickly adjust when triples are added to the summarized RDF graphs. Our summaries can be built from graphs where none, some or all nodes have one or more types; this is important because in many synthetic and real-life RDF graphs we studied, a large share of nodes is untyped <ref type="bibr" target="#b2">[3]</ref>. Two of our summaries give preeminence to types (when available) to build the summary; nodes are first grouped by types and then by the relationships to other nodes. By contrast, the two other (including the one in Figure <ref type="figure" target="#fig_1">1</ref>) give preeminence to node relationships; nodes are first grouped according to their relationships with others, then, each group is typed with the types of the graph nodes it represents within the summary (this is how each type has been attached to a summary node in our figure). In the total absence of types, each  Below, we define our summaries (Section 2) and summarization algorithms (Section 3). Then, we present the demonstration scenario based on summary visualizations (Section 5). Finally, we compare them with related work and we conclude (Section 6).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">RDFQUOTIENT SUMMARIES</head><p>Let U be a set of URIs, L be a set of literals and B be a set of blank nodes as per the RDF specification. An RDF graph G is a set of triples of the form (s, p, o) where s ∈ U ∪ B ∪ L, p ∈ U and o ∈ U ∪ B ∪ L. The special URI type, part of the RDF standard, is used to attach types to nodes. An RDF graph may contain ontology (schema) triples; while there are interesting interactions between summarization and ontologies <ref type="bibr" target="#b2">[3]</ref>, below we only focus on summarizing the non-schema triples, which make up the vast majority of all RDF graphs we encountered. Thus, we consider G consists exclusively of type triples and/or data triples (all those whose property is not type; we call these data properties).</p><p>An RDF equivalence relation denoted ≡ is a binary relation over the nodes of an RDF graph that is reflexive, symmetric and transitive. Given an equivalence relation ≡, an RDF graph quotient is an RDF graph having (i) one node for each equivalence class of nodes; (ii) for each edge n 1 a -→ n 2 , a summary edge n ≡ It is easy to see that the set of non-empty source (or target) cliques is a partition over the data properties of an RDF graph G. Further, if a G node n is source of some data properties, they are all in the same source clique; similarly, all the properties of which n is a target are in the same target clique. Based on these cliques, for any nodes n 1 , n 2 of G, we define:  • n 1 is strongly equivalent to n 2 , denoted n 1 ≡ S n 2 , iff n 1 , n 2 have the same source clique and the same target clique. Further, we decide that in any RDF equivalence relation, any class node, i.e., a URI c appearing in a triple of the form (n, type, c), is (i) only equivalent to itself and (ii) represented by itself in any RDFQuotient summary. This ensures that RDF types (classes), which (when present) denote an important information that data producers added to help understand their RDF graphs, are preserved in the summary.</p><formula xml:id="formula_0">• n 1 is weakly equivalent to n 2 , denoted n 1 ≡ W n 2 , iff<label>n</label></formula><p>The equivalence relations ≡ W and ≡ S lead to the weak, respectively strong summaries, defined as quotients of G through ≡ W , denoted G /≡ W , respectively, through ≡ S , denoted G /≡ S . Figure <ref type="figure" target="#fig_5">3</ref> illustrates these on the sample graph in Figure <ref type="figure" target="#fig_2">2</ref>. For brevity, in Figure <ref type="figure" target="#fig_5">3</ref> and from now on, we use a, w, te, ta, cd to denote respectively the properties advises, writes, teaches, takes, and coursedescr.</p><p>In G /≡ W , N 1 represents all the people (p 1 to p 5 ), N 2 represents the courses, N 3 the articles and N 4 the course descriptions. Note the self-loop from N 1 to itself; it denotes that some nodes represented by N 1 advise some nodes represented by N 1 . This summary has only 4 nodes and 5 edges. It conveys the essential information that some nodes advise, write, also they teach and take something that has course descriptions. The Professor and Grad-Student types of nodes p 1 , respectively p 2 , are attached to their common representative N 1 .</p><p>G /≡ S differs from G /≡ W by representing the person nodes in two separate groups: those represented by N 1 advise those represented by N 2 . This is because the target clique of p 1 , p 3 and p 4 is empty, while the target clique of p 2 and p 5 is {advises}. This example illustrates the fact (visible from the summary definitions) that G /≡ S summarizes at finer granularity than G /≡ W (or, equivalently, ≡ S entails ≡ W , but the opposite does not hold).</p><p>Clique-based structural summarization leads to compact summaries even in graphs with heterogeneous structure. This is because of the transitive aspect of the property cliques. For example, p 1 and p 3 have the same source clique, even though their property sets are disjoint: {a, w } for p 1 , {te} for p 3 ; they are in the same source clique e.g. due to p 4 , which has both a and te. In contrast, previously studied quotient summaries, in particular those aimed for indexing and query optimization, would not accept p 1 and p 3 as equivalent; in general, such summaries lead to more equivalence classes (summary nodes), thus also summary edges, making summaries hard to understand visually. Type-first summarization The weak and strong summary group nodes according to their incoming/outgoing data triples and then just "carry" their types to the summary. A different choice is to group nodes first by their set of types (if any) <ref type="foot" target="#foot_1">2</ref> , and use the data triples to group the nodes without types. We define:</p><p>• n 1 is typed-weak equivalent to n 2 , noted n 1 ≡ TW n 2 , iff (i) n 1 , n 2 have the same non-empty set of types or (ii) both n 1 , n 2 are untyped, and n 1 ≡ W n 2 ;</p><p>Figure <ref type="figure">4</ref>: Typed weak graph summary.</p><p>• n 1 is typed-strong equivalent to n 2 , noted n 1 ≡ TS n 2 , iff (i) n 1 , n 2 have the same non-empty set of types or (ii) both n 1 , n 2 are untyped, and n 1 ≡ S n 2 .</p><p>These relations lead to the typed weak (G /≡ TW ), respectively, to the typed strong (G /≡ TS ) RDFQuotient summaries. Figure <ref type="figure">4</ref> illustrates typed weak summarization on our sample graph; on this simple example, G /≡ TS is identical (in general, it may differ).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">BUILDING RDFQUOTIENT SUMMARIES</head><p>We have devised algorithms which build G /≡ W , G /≡ S , G /≡ TW and G /≡ TS through a single traversal of an RDF graph G, in two flavors: (i) global: traverse G, compute all the cliques, then traverse it again and represent nodes according to their cliques and/or types; (ii) incremental: in a single traversal of G, gradually build each source and target clique based on the triples traversed up to that point and simultaneously represent G nodes in a summary that is continuously updated; after traversing the last triple of G, each incremental summarization algorithm ends up with the respective summary of the full G. The algorithms are detailed and their correctness is proved in <ref type="bibr" target="#b2">[3]</ref>; below, we illustrate their interesting points on minimal examples. First, let us see on an example how ≡ W can grow during incremental weak summarization. Suppose the graph G in Figure <ref type="figure" target="#fig_2">2</ref> is traversed and summarized starting with: (p 1 advises p 2 ), then (p 1 wrote a 1 ), then (p 4 teaches c 2 ) (see the figure above). When we summarize this third triple, we do not know yet that p 1 is equivalent to p 4 , because no common source of teaches and advises (e.g., p 3 or p 4 ) has been seen so far. Thus, p 4 is so far not equivalent to any other node, and represented separately from p 1 . Now, assume the fourth triple traversed is (p 4 advises p 5 ): at this point, we know that advises, wrote and teaches are in the same source clique, thus p 1 ≡ W p 4 , and their representatives (highlighted in yellow) must be fused in the summary. More generally, it can be shown that ≡ W only grows as more triples are visited (i.e., is monotonic), in other words: if in a subset G ′ of G's triples, two nodes n 1 , n 2 are weakly equivalent, then this holds in any</p><formula xml:id="formula_1">G ′′ with G ′ ⊆ G ′′ ⊆ G.</formula><p>Incremental strong summarization is even more complex because unlike ≡ W , ≡ S may grow and shrink during summarization (i.e., is non-monotonic). For instance, assume the summarization of the graph in Figure <ref type="figure" target="#fig_2">2</ref> starts with (p 1 wrote a 1 ), (p 2 wrote a 2 ), (p 2 takes c 2 ) (see the figure below). After these, we know p 1 ≡ S p 2 ; their source clique is {wrote, takes} and their target clique is ∅. Assume the next triple traversed is (p 3 advises p 2 ): at this point, p 1 is not ≡ S to p 2 any more, because p 2 's target clique is now {advises} instead of ∅. Thus, p 2 splits from p 1 , that is, it needs to be represented by a new summary node (shown in yellow below), distinct from the representative of p 1 . Further, note that the representative of p 1 and p 2 (at left above) had one takes edge (highlighted in red) which was solely due to p 2 's outgoing takes edge. By definition of a quotient summary, that edge moves from the old to the new representative of p 2 (the yellow node). If, above at left, p 1 had also had an outgoing edge labeled takes, at right, both nodes in the top row would have had an outgoing takes edge. It can be shown that splits only occur in such cases, i.e., a node whose target clique becomes non-empty (respectively whose source clique becomes non-empty) and the node was previously represented together with other nodes; if it was represented alone, the respective clique of its representative is just updated. The amortized complexity of our summarization algorithms is linear in the number of triples of G. Figure <ref type="figure" target="#fig_8">5</ref> illustrate this empirically on a variety of benchmark (LUBM and BSBM) and real-life (DBLP, Springer conference etc.) datasets ranging from a few hundred thousands to more than 100 million triples; note that both axes are in log-scale. The implementation is made in Java 1.8; RDF graphs are stored in Postgres 9.6 and traversed from there. Increm-W is the fastest overall; it traverses G only once, thus it is faster than global-W which performs one extra pass to compute the cliques. S, TW and TS, in this order, are more expensive, and finally incremental S, which pays an extra performance overhead for growing and shrinking the equivalence relation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">FROM SUMMARIES TO VIZUALIZATIONS</head><p>The core of our work is on defining and efficiently building summaries; here we present one possible way of rendering them through a vizualization like the one illustrated in Figure <ref type="figure" target="#fig_1">1</ref>.</p><p>On our four summaries we apply leaf and type inlining, as follows. We remove type edges; instead, each type attached to a node in the summary is shown in the box corresponding to the node, after the node ID. Similarly, for each edge n a -→ m where m is a leaf, we include a as an "attribute" of n, and do not render m (we say it has been "inlined" within n). A sizable part of an RDF graph's nodes are leaves; as we will show, inlining them into their parent nodes greatly simplifies the visualization.   <ref type="figure" target="#fig_9">6</ref> illustrates inlining for the S summary of our sample graph. This summary is extremely compact, yet rich with information; professors, students, and courses are visible at a glance. Articles have been inlined within their authors as they were leaves in G /≡ TS (Figure <ref type="figure" target="#fig_5">3</ref>). This simplification can also be seen as a small loss of information: Figure <ref type="figure" target="#fig_9">6</ref> does not immediately suggest that Professors may have written articles together with GradStudents. However, (i) only leaf nodes are folded and (ii) after a first glance, users may pursue exploration by other means (e.g., queries to check for such joint articles).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">DEMONSTRATION SCENARIO</head><p>Demonstration attendees will be able to pick an RDF graph from a list of well-known synthetic and real data sets, visualize their summaries, and compare with other close competitor summaries, such as those mentioned in Section 6; some of these vizualizations can be seen online (https://team.inria.fr/cedar/projects/ rdfquotient/). Attendees will also be able to add new triples to an RDF graph, to figure out through our summary visualization how changes in the original data are rapidly reflected into the summary thanks to incremental summarization. To make it entertaining, we plan to use RDF data on the conference attendees, from DBLP, other public sources, and made-up triples to get interesting summary changes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">RELATED WORK &amp; CONCLUSION</head><p>The literature comprises many RDF summarization techniques, more than a hundred of which we covered in a recent co-authored survey <ref type="bibr" target="#b3">[4]</ref>. RDFQuotient summarizes the structure of the data triples, which form a vast majority of RDF graphs; complementary proposals summarize the ontology, the values, find the most frequent property groups etc. Closest to us are quotient summaries which group nodes by the set of their outgoing data properties ("characteristic sets" <ref type="bibr" target="#b5">[6]</ref>) and possibly also by by the set of their incoming data properties (forward and backward bisimulation <ref type="bibr" target="#b4">[5]</ref>). Our clique-based summarization differs from these by the transitive aspect of the cliques which leads to heterogeneitytolerant summarization. Indeed, as we plan to show during our demonstrations, more strict summaries such as <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b5">6]</ref> support query optimization and indexing well, but have too many nodes and edges, even after inlining, for a comfortable vizualization. In exchange, our summaries are not generally appropriate for indexing, as they do not give e.g. access to "all the resources having properties a and b": the graph nodes whose source clique is {a, b} may have one or another or both.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>©</head><label></label><figDesc>2019 Copyright held by the owner/author(s). Published in Proceedings of the 22nd International Conference on Extending Database Technology (EDBT), March 26-29, 2019, ISBN 978-3-89318-081-3 on OpenProceedings.org. Distribution of this paper is permitted under the terms of the Creative Commons license CC-by-nc-nd 4.0.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: Visualization built from an RDFQuotient summary.</figDesc><graphic coords="3,53.80,83.68,487.70,255.09" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Sample RDF graph. type-first summary coincides with a type-ignorant one (thus, our four summaries collapse into two).Below, we define our summaries (Section 2) and summarization algorithms (Section 3). Then, we present the demonstration scenario based on summary visualizations (Section 5). Finally, we compare them with related work and we conclude (Section 6).</figDesc><graphic coords="3,53.80,370.58,231.88,87.06" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>2 ,</head><label>2</label><figDesc>where n ≡ i , i ∈ {1, 2}, is the summary node corresponding to the equivalence class of n i , also called representative of n i . The literature comprises many quotient graph summaries (seeSection 6), which differ by their equivalence relations.The equivalence relations we use are based on the concept of property cliques, which encodes a transitive relation of edge co-occurrence on graph nodes. Given an RDF graph G, two data properties p 1 , p 2 are in the same source clique iff: (i) there exists a G node n which is the source of p 1 and p 2 (i.e., (n, p 1 , x) ∈ G and (n, p 2 , y) ∈ G for some x and y), or (ii) there exists a data property p 3 such that p 3 is in the same source clique as p 1 , and p 3 is in the same source clique as p 2 . Symetrically, p 1 and p 2 are in the same target clique if there exists a G node which is the target of p 1 and p 2 , or a data property p 3 which is in the same target clique as p 1 and p 2 . In Figure2, the properties advises and teaches are in the same source clique due to p 4 . The same holds for advises and wrote due to p 1 ; consequently, advises and wrote are also in the same source clique. Further, the graduate student p 2 teaches a course and takes another, thus teaches, advises, wrote and takes are all part of the same source clique. In this example, p 1 , p 2 , p 3 , p 4 , p 5 have the source clique SC 1 = {advises, takes, teaches, wrote}, c 1 , c 2 , c 3 have the source clique SC 2 = {coursedescr} and a 1 , a 2 have the empty source clique SC 3 = ∅. Similarly, the target cliques are, respectively; TC 1 = {advises} for p 2 , p 5 , TC 2 = {teaches, takes} for c 1 , c 2 , c 3 , TC 3 = {coursedescr} for d 1 , d 2 , TC 4 = {wrote} for a 1 , a 2 and TC 5 = ∅ for p 1 , p 3 , p 4 .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head></head><label></label><figDesc><ref type="bibr" target="#b0">1</ref> , n 2 have the same source clique or the same target clique;</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3: Weak (left) and strong (right) graph summary.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 5 :</head><label>5</label><figDesc>Figure 5: Summarization time (s) vs. graph sizes |G|.</figDesc><graphic coords="5,53.80,270.92,231.86,118.94" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Figure 6 :</head><label>6</label><figDesc>Figure 6: Leaf and type inlining on the sample strong summary from Figure 3 (right).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_10"><head>Figure</head><label></label><figDesc>Figure6illustrates inlining for the S summary of our sample graph. This summary is extremely compact, yet rich with information; professors, students, and courses are visible at a glance. Articles have been inlined within their authors as they were leaves in G /≡ TS (Figure3). This simplification can also be seen as a small loss of information: Figure6does not immediately suggest that Professors may have written articles together with GradStudents. However, (i) only leaf nodes are folded and (ii) after a first glance, users may pursue exploration by other means (e.g., queries to check for such joint articles).</figDesc></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>https://team.inria.fr/cedar/projects/rdfquotient/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_1"><p>We use set of types and not just "type" on purpose, because an RDF node may have more than one type. If we classified a node according to each of its types, as in e.g.<ref type="bibr" target="#b1">[2]</ref>, a node with many types would have more than one representative, which is incompatible with quotient summarization.</p></note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">The Berlin SPARQL Benchmark</title>
		<author>
			<persName><forename type="first">Christian</forename><surname>Bizer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Andreas</forename><surname>Schultz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Int. J. Semantic Web Inf. Syst</title>
		<imprint>
			<biblScope unit="volume">5</biblScope>
			<biblScope unit="page">2</biblScope>
			<date type="published" when="2009">2009. 2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Efficiency and precision trade-offs in graph summary algorithms</title>
		<author>
			<persName><forename type="first">Stéphane</forename><surname>Campinas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Renaud</forename><surname>Delbru</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Giovanni</forename><surname>Tummarello</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IDEAS</title>
		<imprint>
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Compact Summaries of Rich Heterogeneous Graphs</title>
		<author>
			<persName><forename type="first">Šejla</forename><surname>Čebirić</surname></persName>
		</author>
		<author>
			<persName><forename type="first">François</forename><surname>Goasdoué</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Paweł</forename><surname>Guzewicz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ioana</forename><surname>Manolescu</surname></persName>
		</author>
		<idno>RR-8920</idno>
		<ptr target="https://hal.inria.fr/hal-01325900" />
		<imprint>
			<date type="published" when="2017-01">2017. 1</date>
		</imprint>
		<respStmt>
			<orgName>INRIA Saclay ; Université Rennes</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Research Report</note>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Summarizing Semantic Graphs: A Survey</title>
		<author>
			<persName><forename type="first">Sejla</forename><surname>Cebiric</surname></persName>
		</author>
		<author>
			<persName><forename type="first">François</forename><surname>Goasdoué</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Haridimos</forename><surname>Kondylakis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Dimitris</forename><surname>Kotzinos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ioana</forename><surname>Manolescu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Georgia</forename><surname>Troullinou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mussab</forename><surname>Zneika</surname></persName>
		</author>
		<ptr target="https://hal.inria.fr/hal-01925496" />
	</analytic>
	<monogr>
		<title level="j">The VLDB Journal</title>
		<imprint>
			<date type="published" when="2018">2018. 2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Covering indexes for branching path queries</title>
		<author>
			<persName><forename type="first">Raghav</forename><surname>Kaushik</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Philip</forename><surname>Bohannon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jeffrey</forename><forename type="middle">F</forename><surname>Naughton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Henry</forename><forename type="middle">F</forename><surname>Korth</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIGMOD</title>
		<imprint>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Characteristic sets: Accurate cardinality estimation for RDF queries with multiple joins</title>
		<author>
			<persName><forename type="first">Thomas</forename><surname>Neumann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Guido</forename><surname>Moerkotte</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ICDE</title>
		<imprint>
			<date type="published" when="2011">2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">YAGO: A Multilingual Knowledge Base from Wikipedia, Wordnet, and Geonames</title>
		<author>
			<persName><forename type="first">Thomas</forename><surname>Rebele</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Fabian</forename><forename type="middle">M</forename><surname>Suchanek</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Johannes</forename><surname>Hoffart</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Joanna</forename><surname>Biega</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Erdal</forename><surname>Kuzey</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Gerhard</forename><surname>Weikum</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ISWC</title>
		<imprint>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
