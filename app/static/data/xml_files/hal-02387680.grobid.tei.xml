<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Toward a Model for Verification of Business Logic Layer in 3-Layer Architecture: CPN-ECA Model</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Thanh</forename><surname>Nguyen</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">University of Science</orgName>
								<orgName type="institution" key="instit2">Education The University of Danang</orgName>
								<address>
									<country key="VN">Vietnam</country>
								</address>
							</affiliation>
						</author>
						<author role="corresp">
							<persName><surname>Tuan</surname></persName>
							<email>nttuan@ued.udn.vn</email>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">University of Science</orgName>
								<orgName type="institution" key="instit2">Education The University of Danang</orgName>
								<address>
									<country key="VN">Vietnam</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Thanh</forename><surname>Le</surname></persName>
							<affiliation key="aff1">
								<orgName type="institution">WIMMICS-INRIA</orgName>
								<address>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><surname>Nhan</surname></persName>
							<affiliation key="aff1">
								<orgName type="institution">WIMMICS-INRIA</orgName>
								<address>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Hoanh</forename><surname>Thi</surname></persName>
							<affiliation key="aff2">
								<orgName type="institution">University of Economic The University of Danang</orgName>
								<address>
									<country key="VN">Vietnam</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Thanh</forename><surname>Ha</surname></persName>
							<affiliation key="aff2">
								<orgName type="institution">University of Economic The University of Danang</orgName>
								<address>
									<country key="VN">Vietnam</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Toward a Model for Verification of Business Logic Layer in 3-Layer Architecture: CPN-ECA Model</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">5D002EBA409BA82599716A9B4A9DCD9B</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.8.0" ident="GROBID" when="2024-04-12T14:44+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>This paper proposes a model for building a flexible system, which accepts and verifies the change on business logic, including both business processes and business rules, while the system has to cover the properties as reliability and reuse. In this model, the business process will be designed with Colour Petri Net and translated into a set of Event-Condition-Action rules, this set will be combined with business rules for checking the respect of a business process to the business rules in design and modifying the process. Hierarchical Colour Petri Net is also used to guarantee the reliability and to reuse properties of the system.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION</head><p>Software engineering presents several problems that can be resolved with many different techniques and methodologies. The challenge for system design is not only how to build a system, which accepts the change on business logic, consisting of business processes and business rules, but also the correctness of the system. The combination between Petri Nets and rule-based language in description and modeling business logic of software system is one solution for this challenge.</p><p>Our approach takes advantage of both the capacities in modeling and verification of Coloured Petri Nets (CPN) and Event-Condition-Action (ECA) rules. It allows designing a business process by CPN and translating the model to a set of ECA rules. The combination of business rules and business process as a set of rules, will be checked the conflict of them. Hierarchical CPN is also used to design a reusable system. The main contributions of this paper are:</p><p>• Formalization a business logic layer using CPN and Hierarchical CPN. • Verification of business logic with ECA rules. The rest of the paper is organized as follows: Section II identifies current works and solutions related to the CPN application and the use of ECA and ECAE languages to describe workflow for business process. In section III, a brief introduction of Coloured Petri Net and ECA rule and 3-layer architecture are given. Section IV introduces, through a case study, our solution on modeling and verification Business Logic layer. Then, we conclude on the outcomes of this experimentation and the ongoing works. V.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>II. RELATED WORKS</head><p>The positive aspect of CPN has been recognized as a modeling and verification tool for software engineering <ref type="bibr" target="#b0">[1]</ref>. In <ref type="bibr" target="#b1">[2]</ref>,</p><p>Denaro and Pezze presented some useful application of Petri Nets in Software engineering, as modeling and analysis of safety critical systems, distributed systems, real time systems, multimedia systems or software performance evaluation. Some papers describe CPN as aN effective tool for modeling and verification of SOA-based system <ref type="bibr" target="#b2">[3]</ref>, <ref type="bibr" target="#b3">[4]</ref>.</p><p>By the way, many authors have proposed using ECA rules as a tool for business process modeling and execution, e.g. <ref type="bibr" target="#b4">[5]</ref>- <ref type="bibr" target="#b8">[8]</ref>. In <ref type="bibr" target="#b8">[8]</ref> ECAE (Event-Condition-Action-Event), an ECA-like language, were introduced as a method to easily represent the business rules found in a workflow, while the workflow, modeled by CPN, is translated to ECAE rules. The set of ECAE rules is used for verification of the respect of a business process to the business rules automatically when user upgrades the workflow. In <ref type="bibr" target="#b9">[9]</ref>, the authors propose a scheme to generate the functions for a CPN model from the business rules. It's mean, business rules will be added to CPN model as the functions and CPN tools is used to verify the model. But this solution does not cover the checking for conflict between business rule and business process on the system. By contrast, our solution uses ECA rule for presenting and checking semantic aspect of business logic, at the same time, CPN is used for verification and validation of the constructed model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. BACKGROUNDS</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. Coloured Petri Net</head><p>Coloured Petri Net (CPN) is an established concept for formal modeling of concurrent and distributed systems. It is based on a functional language called Standard ML (SML) Milner1997 CPN has the capacities of both Petri Nets and programming language. Jensen and Kristiansen <ref type="bibr" target="#b10">[10]</ref> have defined CPN formally as follows: Definition 1. A Coloured Petri Net is a nine-tuple <ref type="bibr" target="#b10">[10]</ref>, CP N = (P ; T ; A; Σ; C; N ; E; G; I), where:  </p><formula xml:id="formula_0">1) P is a finite set of places. 2) T is a finite set of transitions such that P ∩ T = φ. 3) A ⊆ P × T ∪ T × P is set of directed arcs. 4) Σ is a finite of non-empty color sets. 5) V is a finite set of typed variables such that T ype[v] ∈ Σ for all variables v ∈ V .</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Event-Condition-Action Rule</head><p>Event-Condition-Action (ECA) rule is a language that has been usually used for specification and implementation of business processes <ref type="bibr" target="#b11">[11]</ref>, <ref type="bibr" target="#b12">[12]</ref>. ECA is also used to describe rules in setting system for active databases <ref type="bibr" target="#b13">[13]</ref> or personalizing, and publish/subscribe technology <ref type="bibr" target="#b14">[14]</ref>- <ref type="bibr" target="#b17">[17]</ref>. The general syntax of an ECA rule is:</p><formula xml:id="formula_1">On event If condition Do actions</formula><p>The event specifies a condition for triggering the rule. The condition is a query, which determines if the information system is in a particular state, in which case the rule fires. The action states the actions to be performed if the rule is fired. These actions may in turn cause further events to occur, which may lead them to create more ECA rules to fire.</p><p>In <ref type="bibr" target="#b8">[8]</ref>, authors defined a language exhibiting both the advantages of ECA and of Logic Programming, called ECAE (Event-Condition-Action-Event) and the algorithm to translate CPN to ECA rules, which has 4 steps as follows:</p><formula xml:id="formula_2">Algorithm 1.</formula><p>Step 1: The Condition part of ECA rule is a collection of places, color sets, guard function, input arc expression related to a transition. The Event part of ECA rule are transitions, the Action is a group of the output arc expression and color sets.</p><p>Step 2: Translate each transition to an ECA rule.</p><p>Step 3: Add starting condition and ending condition.</p><p>Step 4: Connect all ECA rule transition as their triggered sequence.</p><p>According to the algorithm 1, the BP which is modeled by CPN, and BR are both translated to ECA rules and merged together into a set (set of ECA rule). The rule set will be verified to carry out conflicts between BP against BR by a Reasoner tool.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Business logic layer in 3-layer model</head><p>At the highest and most abstract level, the logical architecture view of any system can be considered as a set of cooperating components grouped into layers <ref type="bibr" target="#b18">[18]</ref>. An application can consist of a number of basic layers. The common three-layer design consists of the following layers:</p><p>• Presentation layer: The presentation layer provides the user interface (UI) of the application. Typically, this is an application form or an interface, as well as the HTML document created from the web server to the client. • Business Logic (BL) layer: The business logic layer applies the logic of the application using the Business Processes (BP) and the Business Rules (BR) of the request.</p><p>• Data layer: The data layer provides ability to access databases. In this paper, we only focus on modeling and verification of the BL layer.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. MODELING AND VERIFICATION BL LAYER</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A. CPN-ECA Model</head><p>In this section, we describe the CPN-ECA model, a solution for modeling and verification BL layer. It consists of two parts:</p><p>• Business Logic Part: In this part, BP are modeled by a CPN (Sub-part 1.1). Besides that, BR are described by ECA rules (Sub-part 1.2). After that, the BP, modeled by CPN, can be translated to a set of ECA rules with algorithm 1, in II. In order to ensure the correctness of BP, users need to provide rules (called business rule -BR ) to control the correctness. The BR is also written by ECA. the BR rules and the BP rules are in integrated into a set (Sub-part 1.3). • Verification Part: Here, BP, modeled by CPN, will be verified as: deadlock, infinity cycle or missing synchronization (Sub-part 2.1). In addition, BR and BP were described by ECA rules, they can be verified by a Reasoner tool <ref type="bibr" target="#b19">[19]</ref> to detect the conflict (Sub-part 2.2). The CPN-ECA model is presented in Figure <ref type="figure" target="#fig_2">2</ref>. CPN Tools <ref type="bibr" target="#b20">[20]</ref>, <ref type="bibr" target="#b21">[21]</ref>) is used for editing CPN models. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>B. Experimentation of the model</head><p>The Online Shopping System is a typical e-commerce system, designed to help customers can find and buy items faster and more convenient. The Order Business process is the core business of this system. To demonstrate the CPN-ECA model, we take the Order Business process as an example of this paper, the flowchart of Order Business is shown in figure <ref type="figure">3</ref>. The goal of this process is to take orders from customers and confirm orders after payment is done. This module is modeled by CPN and presented in example 1.</p><p>Example 1. In figure <ref type="figure" target="#fig_3">4</ref>, we design a CPN graph to represent the Order Business process of an Online Shopping System. This provides a simple example, there are three main transitions in this CPN graph. The first transition, SelectProduct, allows users to choose the product they want to buy, while the second transition, Payment, allows the user to pay for his order, and the last transition, ConfirmOrder, allows the user  The CPN graph in figure <ref type="figure" target="#fig_3">4</ref>   Do CompleteOrder When a business process is executed, it must respect a set of business rules. We add a set of business rules, for example 1: BR1-R1: If (n ≤ 0) do not SelectProduct &amp;PNO(n)&amp;PNAME(name)&amp;PPRICE(price) BR1-R2: If (name = "") do not ConfirmOrder&amp;confirmOrder(success) We merge two sets of ECA rules into a single knowledge base. Therefore, we can easily check the compliance of BP with a set of BR by detecting the conflict between the rules in one knowledge base using a reasoner.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>C. Using Hierarchical CPN for reusing of model</head><p>Hierarchy is a powerful concept in CPN, with that, a CPN can be organized as a set of sub-model, in a way similar to that in which programs are organized into modules. In this way, a model can be defined one and used repeatedly.</p><p>In example 2 we extend example 1 to build the new Order Business model by adding Payment Business sub-model. The communication between the model and the sub-model takes place at input port, output port or input/output port that must to be defined and labelled at some places in sub-model. In Payment Business sub-model (see figure <ref type="figure">8</ref>), the input port (labelled In) and output port (labelled Out) are defined at PriceOfProduct place and ConfirmPayment. In this example, two transitions valideCODInfo and valideCardInfo in the sub-model get control from the transition SelectProduct (in the main model) through the input port PriceOfProduct and send the control to transition ConfirmOrder (in the main model) through the output port at ConfirmPayment.</p><p>About BP modeled by a Hierarchy CPN, each sub-model will have a set of BP rules by ECA. Each set can be verified in-dependency with others.</p><p>The CPN graph of Payment Business sub-model in example 2 will be translated to a set of ECA rules: </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>6 )</head><label>6</label><figDesc>C : P → Σ is a colour set function that assigns a colour set to each place. 7) G : T → EXP R V is a guard function that assigns a guard to each transition t such that T ype[G(t)] = Bool. 8) E : A → EXP R V is an arc expression function that assigns an arc expression to each arc a such that T ype[E(a)] = C(p) M S , where p is the place connected to the arc a. 9) I : P → EXP R φ is an initialization function that assigns an initialization expression to each place p such that T ype[I(p)] = C(p) M S .The graph of CPN is a bipartite directed graph. It consists of vertices of two types: places drawn as circles or ovals and transitions drawn as bars. An example of CPN is described in figure1.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. An example of CPN Though there are many ways to represent a color, colors and their associated operations are frequently expressed as SML data types and functions.</figDesc><graphic coords="2,63.74,251.93,221.50,140.50" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. CPN-ECA model</figDesc><graphic coords="3,48.96,50.54,263.00,177.50" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Fig. 4 .</head><label>4</label><figDesc>Fig. 4. CPN model of Order Business in an Online Shopping System</figDesc><graphic coords="3,311.98,50.53,251.05,281.81" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Fig. 5 .</head><label>5</label><figDesc>Fig. 5. Declarations of CPN model of Order Business</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 6 .</head><label>6</label><figDesc>Fig. 6. Declarations of Payment Business sub-model</figDesc><graphic coords="4,311.98,73.00,251.02,281.85" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Example 2 .</head><label>2</label><figDesc>Using Hierarchical CPN, Order Business model is added an sub-model Payment Business. Declarations of the sub-model are presented in figure 6.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Fig. 7 .</head><label>7</label><figDesc>Fig. 7. Hierarchical CPN model of Order Business</figDesc><graphic coords="4,311.98,431.95,251.02,242.39" type="bitmap" /></figure>
		</body>
		<back>
			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>CPN and ECA rule play an important role in designing and modeling a software system. Coloured Petri Net, inherited from the traditional Petri Net, have a better ability on expressiveness because of their color sets and guard functions. In this paper, we proposed the CPN-ECA model that exhibits the advantages of both ECA and CPN, for the problem of modeling and verification the business logic in the Business Logic layer of a software system. Our CPN-ECA model contains two parts: <ref type="bibr" target="#b0">(1)</ref> The BL part lets user define the BP by CPN, the BP are converted to ECA rules. User defines also the BR by ECA rules. (2) The verification part takes care of checking the consistency of the rules written by ECA that are produced in the BL part. We experimented the model on Shoping Online case study.</p><p>In future work, we will focus on enhancing the integration between CPN and ECA rule, which will make our method more suitable for designing and developing software. We will also consider the problem, how to implement and verify automatically the software based on CPN and ECA rule.</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Petri nets in software engineering</title>
		<author>
			<persName><forename type="first">R</forename><surname>Gold</surname></persName>
		</author>
		<ptr target="http://www.springerlink.com/index/P50746R643246142.pdf" />
	</analytic>
	<monogr>
		<title level="m">Petri Nets: Applications and Relationships to Other Models of Concurrency</title>
		<imprint>
			<date type="published" when="2004">2004</date>
			<biblScope unit="page" from="62" to="96" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Petri Nets and Software Engineering</title>
		<author>
			<persName><forename type="first">Giovanni</forename><surname>Denaro</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mauro</forename><surname>Pezze</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-3-540-27755-212</idno>
		<imprint>
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">RESTful petri net execution</title>
		<author>
			<persName><forename type="first">Gero</forename><surname>Decker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Alexander</forename><surname>Lüders</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Hagen</forename><surname>Overdick</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-3-642-01364-510</idno>
		<imprint>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Dependency Modeling of a SOA Based System Through Colored Petri Nets</title>
		<author>
			<persName><forename type="first">Pawan</forename><surname>Kumar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ratneshwer</forename><surname>Gupta</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">CIT</title>
		<imprint>
			<biblScope unit="volume">24</biblScope>
			<biblScope unit="page" from="253" to="269" />
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Automatic control of workflow processes using ECA rules</title>
		<author>
			<persName><forename type="first">Joonsoo</forename><surname>Bae</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Hyerim</forename><surname>Bae</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Suk</forename><forename type="middle">Ho</forename><surname>Kang</surname></persName>
		</author>
		<idno type="DOI">10.1109/TKDE.2004.20</idno>
	</analytic>
	<monogr>
		<title level="j">IEEE Transactions on Knowledge and Data Engineering</title>
		<idno type="ISSN">10414347</idno>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">8</biblScope>
			<biblScope unit="page" from="1010" to="1023" />
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">An Event-Condition-Action Logic Programming Language</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">J</forename><surname>Alferes</surname></persName>
		</author>
		<author>
			<persName><surname>Banti</surname></persName>
		</author>
		<author>
			<persName><surname>Brogi</surname></persName>
		</author>
		<idno type="DOI">10.1007/118538865</idno>
	</analytic>
	<monogr>
		<title level="m">Logics in Artificial Intelligence</title>
		<imprint>
			<date type="published" when="2006">2006</date>
			<biblScope unit="page" from="29" to="42" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title/>
		<idno type="DOI">10.1007/11853886%7B%5C%7D5</idno>
		<ptr target="http://www.springerlink.com/index/b27213007lg32723.pdf%7B%5C%%7D5Cnhttp://link.springer.com/10.1007/11853886%7B%5C%7D5" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">ECA Rule and Colored Petri Nets Based Workflow Modeling Research</title>
		<author>
			<persName><forename type="first">Gao</forename><surname>Zhou Guo-Xiang Zhou Guo-Xiang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Gao</forename><surname>De-Ping</surname></persName>
		</author>
		<author>
			<persName><surname>De-Ping</surname></persName>
		</author>
		<idno type="DOI">10.1109/ICMSS.2010.5575732</idno>
	</analytic>
	<monogr>
		<title level="m">Management and Service Science (MASS)</title>
		<imprint>
			<date type="published" when="2010">2010. 2010</date>
			<biblScope unit="volume">60633060</biblScope>
			<biblScope unit="page" from="1" to="4" />
		</imprint>
	</monogr>
	<note>International Conference</note>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">A Rule-Based Language for Integrating Business Processes and Business Rules</title>
		<author>
			<persName><forename type="first">Anh</forename><surname>Tuan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Nhan</forename><surname>Pham</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Thanh</forename><surname>Le</surname></persName>
		</author>
		<idno>14178.1</idno>
		<ptr target="https://hal.inria.fr/hal-01184256" />
		<imprint>
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Generating of business rules for Coloured Petri Nets</title>
		<author>
			<persName><forename type="first">Jatuporn</forename><surname>Deesukying</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Wiwat</forename><surname>Vatanawood</surname></persName>
		</author>
		<idno type="DOI">10.1109/ICIS.2016.7550824</idno>
	</analytic>
	<monogr>
		<title level="m">IEEE/ACIS 15th International Conference on Computer and Information Science (ICIS)</title>
		<imprint>
			<date type="published" when="2016">2016. 2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Coloured Petri Nets Modelling and Validation of Concurrent Systems</title>
		<author>
			<persName><forename type="first">Kurt</forename><surname>Jensen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Lars</forename><forename type="middle">M</forename><surname>Kristensen</surname></persName>
		</author>
		<idno type="DOI">10.1007/b95112</idno>
		<imprint>
			<date type="published" when="2009">2009</date>
			<publisher>Springer</publisher>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page" from="3" to="4" />
			<pubPlace>Berlin, Heidelberg; Berlin Heidelberg</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<monogr>
		<title level="m" type="main">Relational transducers for electronic commerce</title>
		<author>
			<persName><forename type="first">Serge</forename><surname>Abiteboul</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Victor</forename><surname>Vianu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Brad</forename><surname>Fordham</surname></persName>
		</author>
		<idno type="DOI">10.1145/275487.275507</idno>
		<imprint>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="179" to="187" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">Designing database applications with objects and rules: the IDEA Methodology</title>
		<author>
			<persName><forename type="first">Stefano</forename><surname>Ceri</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<title level="m" type="main">Active database systems</title>
		<author>
			<persName><forename type="first">Norman</forename><forename type="middle">W</forename><surname>Paton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Oscar</forename><surname>Díaz</surname></persName>
		</author>
		<idno type="DOI">10.1145/311531.311623</idno>
		<imprint>
			<date type="published" when="1999">1999</date>
			<publisher>Morgan-Kaufmann</publisher>
			<biblScope unit="volume">31</biblScope>
			<biblScope unit="page" from="63" to="103" />
			<pubPlace>San Mateo, California</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">Push technology personalization through event correlation</title>
		<author>
			<persName><forename type="first">Asaf</forename><surname>Adi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">David</forename><surname>Botzer</surname></persName>
		</author>
		<author>
			<persName><surname>Opher Etzion</surname></persName>
		</author>
		<ptr target="ftp://ftp10.us.freebsd.org/users/azhang/disc/disc01/cd1/out/papers/vldb/pushtechnologypasdao.pdf%7B%5C%%7D5Cnpapers2://publication/uuid/AAA5F251-CB50-4F68-875C-3AA590735810" />
		<imprint>
			<date type="published" when="2000">2000</date>
			<biblScope unit="page" from="643" to="645" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Active rules for {XML}: {A} new paradigm for {E}services</title>
		<author>
			<persName><forename type="first">Angela</forename><surname>Bonifati</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Stefano</forename><surname>Ceri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Stefano</forename><surname>Paraboschi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The {VLDB} {J}ournal</title>
		<idno type="ISSN">1066-8888</idno>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="39" to="47" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Pushing reactive services to XML repositories using active rules</title>
		<author>
			<persName><forename type="first">Angela</forename><surname>Bonifati</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Stefano</forename><surname>Ceri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Stefano</forename><surname>Paraboschi</surname></persName>
		</author>
		<idno type="DOI">10.1016/S1389-1286(02)00226-8</idno>
	</analytic>
	<monogr>
		<title level="j">Computer Networks</title>
		<idno type="ISSN">13891286</idno>
		<imprint>
			<biblScope unit="volume">39</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="645" to="660" />
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title level="m" type="main">Efficient Matching for Web-Based Publish/Subscribe Systems</title>
		<author>
			<persName><forename type="first">João</forename><surname>Pereira</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Franc</forename><surname>Franc ¸oise Fabret</surname></persName>
		</author>
		<author>
			<persName><surname>¸ois Llirbat</surname></persName>
		</author>
		<idno type="DOI">10.1007/1072262017</idno>
		<imprint>
			<date type="published" when="2006">2006</date>
			<biblScope unit="page" from="162" to="173" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Microsoft Patterns Practices Team</title>
	</analytic>
	<monogr>
		<title level="m">Microsoftfffdfffd Application Architecture Guide, 2nd Edition (Patterns Practices)</title>
		<imprint>
			<publisher>Microsoft Press</publisher>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page">9780735627109</biblScope>
		</imprint>
	</monogr>
	<note>2nd ed</note>
</biblStruct>

<biblStruct xml:id="b19">
	<monogr>
		<title level="m" type="main">An ECA Engine for Deploying Heterogeneous Component Languages in the Semantic Web</title>
		<author>
			<persName><forename type="first">Erik</forename><surname>Behrends</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Oliver</forename><surname>Fritzen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Wolfgang</forename><surname>May</surname></persName>
		</author>
		<idno type="DOI">10.1007/1189654867</idno>
		<imprint>
			<date type="published" when="2006">2006</date>
			<biblScope unit="page" from="887" to="898" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">CPN Tools A tool for editing, simulating, and analyzing Colored Petri nets</title>
		<author>
			<persName><surname>Cpntools</surname></persName>
		</author>
		<ptr target="http://cpntools.org/" />
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<monogr>
		<title level="m" type="main">CPN Tools for Editing, Simulating, and Analysing Coloured Petri Nets</title>
		<author>
			<persName><forename type="first">Anne</forename><surname>Vinter Ratzer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Lisa</forename><surname>Wells</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Henry</forename><surname>Michael Lassen</surname></persName>
		</author>
		<idno type="DOI">10.1007/3-540-44919-128</idno>
		<ptr target="http://cpntools.org/" />
		<imprint>
			<date type="published" when="2003">2003</date>
			<biblScope unit="page" from="450" to="462" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
