<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="fr">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Towards a Linked Open Code</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Ahmed</forename><surname>El</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Amine</forename><surname>Djebri</surname></persName>
							<email>ahmed-elamine.djebri@univ-cotedazur.fr</email>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">Université Côte d&apos;Azur</orgName>
								<orgName type="institution" key="instit2">Inria</orgName>
								<orgName type="institution" key="instit3">CNRS</orgName>
								<address>
									<region>I3S</region>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Antonia</forename><surname>Ettorre</surname></persName>
							<email>antonia.ettorre@univ-cotedazur.fr</email>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">Université Côte d&apos;Azur</orgName>
								<orgName type="institution" key="instit2">Inria</orgName>
								<orgName type="institution" key="instit3">CNRS</orgName>
								<address>
									<region>I3S</region>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Johann</forename><surname>Mortara</surname></persName>
							<email>johann.mortara@univ-cotedazur.fr</email>
							<affiliation key="aff1">
								<orgName type="institution" key="instit1">Université Côte d&apos;Azur</orgName>
								<orgName type="institution" key="instit2">CNRS</orgName>
								<address>
									<region>I3S</region>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Towards a Linked Open Code</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">C10A75C20BA86F7092694E58C6B5B380</idno>
					<idno type="DOI">10.1007/978-</idno>
					<note type="submission">Submitted on 8 Apr 2021</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.8.0" ident="GROBID" when="2024-04-12T14:52+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Semantic Web</term>
					<term>Ontologies</term>
					<term>Feature Identification</term>
					<term>Linked Data</term>
					<term>Linked Open Code</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>teaching and research institutions in France or abroad, or from public or private research centers. L'archive ouverte pluridisciplinaire HAL, est destinée au dépôt et à la diffusion de documents scientifiques de niveau recherche, publiés ou non, émanant des établissements d'enseignement et de recherche français ou étrangers, des laboratoires publics ou privés.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="fr">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>The Web is growing stronger semantically. More ready-to-consume data, services, and AI-based systems relying on Semantic Web are regularly published. We witness the emergence of the Semantic Web in different unrelated fields such as AI, IoT, networking, medicine, or biology. Within each, papers are being published, wikis are being created, and code is made available. All these different fields share their data through a unique structure, reaching the vision of Tim Berners-Lee who mentioned: "Semantic Web promotes this synergy: even agents that were not expressly designed to work together can transfer data among themselves when the data come with semantics." <ref type="bibr" target="#b0">[1]</ref>.</p><p>While Semantic Web offers ways to store metadata to reuse them semantically, code is not used on the Semantic Web to its full potential. Hence, the problem we seek to tackle is: how to take advantage of code as a pre-existing, structured, and functional type of data in Semantic Web?</p><p>Code for data manipulation is actually either (i ) not needed for simple operations as existing standards offer sufficient functionalities (e.g. functions in SPARQL <ref type="bibr" target="#b1">[2]</ref>) or (ii ) used at a higher level in the Semantic Web stack, where users download and build code from open repositories provided to them by the data provider. However, these two approaches exhibit some limitations: in (i ), the capacities of SPARQL functions are limited and in (ii ), despite the availability of the code on the Web, the possibility to have a link between the semantics of data and the semantics of code is not fully harnessed. We believe that code should be treated as a special type of data. The use of functions or methods on Semantic Web is usually studied for limited use-cases, such as schema validation (i.e. sh:JSFunction representing JavaScript functions to be used in SHACL engines). We think that the link between code and Semantic Web remains superficial. Functions are not semantically shared as and with data.</p><p>We argue that functions, as parts of code, are easily referenceable and can be identified by a defined set of metadata. However, defining their semantics is challenging as functions can be seen from different levels of granularity. Finally, although source code can already be browsed and referenced online at multiple levels of granularity by platforms such as Software Heritage <ref type="bibr" target="#b2">[3]</ref> or GitHub's permalinks, they do not provide any description of the functionality implemented by the code, thus limiting the code reusability.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Code on Semantic Web</head><p>Data published on the Semantic Web are often followed by instructions on how to access, read, manipulate, and query them. Ontologies are documented in scientific literature and wikis, offering insights on their semantics, and tools for data manipulation are being provided. An increasing number of developers give open access to public source code repositories hosted on data providers such as GitHub. Academics can publish code directly alongside their paper<ref type="foot" target="#foot_0">3</ref> for frameworks they developed, encouraged by new policies from editors to foster reproduction and reuse of research results <ref type="foot" target="#foot_1">4</ref> .</p><p>In contrast with Linked Data, code files are often seen as single documents on the Web as the transition between the document-based view and the data-based one has not affected them on a fine-grained level. Hence, the link between data and the code artifacts directly involved with it remains limited. We believe that since both resources (data and code artifacts related to them) are available on the Web, an effort should be made to provide code in the same format as and alongside data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Adapting Code to Semantic Web</head><p>According to the Web Service Modeling Ontology Primer (WSMO) <ref type="bibr" target="#b3">[4]</ref>, a function is not only a syntactical entity but also has defined semantics that allows evaluating the function if concrete input values for the parameters are given. However, the structure of functions defined in most programming languages is more complex than in the definition provided by the WSMO as their computation may rely on data other than the values specified as its parameters such as (i ) results of other functions defined in the same project or an external library, or (ii ) attributes of an object for object-oriented methods. These values are provided to the functions by their execution environment, as the Java Virtual Machine (JVM) for Java-based systems.</p><p>For a function to be compliant with our case, it should (i ) depend on the standard libraries of a language-version, either directly or transitively through other referenceable functions, and (ii ) not rely on out-of-scope variables. Property (i ) applies recursively to any function call inside the function itself. If a code is to be written in an inline mode, any other function call within the same function must be replaced by a set of instructions depending only on the standard libraries of a defined language-version. Achieving (ii ) requires binding out-of-scope variables to their values.</p><p>Many challenges arise from this new definition, starting with the fact that the existing code repositories do not provide a "function-based" view. As a consequence, we should figure out how to turn those into referenceable, reusable resources. The following challenges, presented in fig. <ref type="figure">1</ref>, are to be addressed.</p><p>Referencing functions Function structure and signature in code make it easily recognizable. The signatures usually contain information such as the function's name and its typed arguments (cf. fig. <ref type="figure">2</ref>). Such information can be represented as linked data while attributing a unique identifier for function definitions.</p><p>The idea is to allow Linked Data providers to publish, following the Semantic Web principles, the code of functions, and their metadata. Furthermore, one may include an additional level of granularity to existing IRIs referencing code entities (repositories, folders, files, fragment), helping to reference functions and keep track of their provenance. For example, a code file archived on Software Heritage with the IRI swh:codeFile helps addressing the function fn using the IRI swh:codeFile fn 1 (instead of referencing fragments of code with no defined semantics). 1. Versioning: the version of the function, programming language, provenance. 2. Relational: relations between functions (inclusion, dependencies, etc.). 3. Technical: code, arguments, typing, etc. 4. Licensing: although all open source licenses imply free-use and sharing of code <ref type="foot" target="#foot_2">5</ref> , some may impose restrictions on the reuse (e.g. crediting the original author), hence this information needs to be provided to the user.</p><p>Annotating functions semantically During this step, the defined functions are mapped each with their signature and feature metadata. An Abstract Syntax Tree (AST) analysis is applied on each to identify the components constituting the signature of the function (name, parameters, ...) that will then be used as values for the properties defined in the ontology. As a result, the user will be able to query the knowledge base to retrieve the function matching the given constraints. In parallel, a feature identification process is executed to identify the functionalities implemented by each function and annotate them accordingly.</p><p>The whole process is depicted as in fig. <ref type="figure" target="#fig_1">3</ref>. Multiple techniques for the identification of features have already been proposed <ref type="bibr" target="#b4">[5]</ref> and need to be adapted to our context.</p><p>Linking functions After having identified the features provided by the functions, we can use this information to semantically link functions fulfilling similar goals. Indeed, two functions being annotated with the same feature can be considered as different implementations for the same functionality as perceived by the user. Therefore, we can link them with standard predicates such as owl:sameAs, skos:exactMatch, skos:closeMatch or custom predicates offered by other existing ontologies. Alongside semantics, the dependency must be taken into account to link related functions together. Based on this criterion, functions relying on the results provided by other functions (including the function itself in the case of recursive calls) will be semantically connected. Ranking functions The same functionality can be implemented in different ways and using different programming languages. To provide the most efficient implementation, there is a need to rank functions according to several parameters. One example can be the feedback of the community, as a repository where usage statistics for functions are being kept for ranking purposes, alongside other information such as the number of times a function was starred, forked, or upvoted by users. It is also possible to signal issues related to security flaws. Performance evaluation can also be used as a ranking criterion. A Semantic Web Engine like Corese<ref type="foot" target="#foot_3">6</ref> , coded in Java, would use functionality implemented in Java. However, the same functionality, implemented in Python, can deliver better performance for the same tool if used with a Python wrapper. This aspect is meant to link code with experience. We can imagine users sharing their execution log, which may contain elements about hardware specification, operating system, language version, etc.</p><p>Negotiating functions Users may take advantage of the implemented content negotiation to get suitable function definitions for their use-cases. This is done by using HTTP headers, or non-HTTP methods like Query String Arguments (QSA). Users negotiate functions that suit their current environment to access and manipulate Linked Data. For instance, a user working with Corese may send a request to the function catalog, asking for the Java implementation of functions alongside their query for data. Negotiation can rely on the previous step, by proposing the best function to the users according to their specifications.</p><p>The realization of this vision would be a framework through which the user would use SPARQL to query a catalog of functions (section 2.1) for the implementations of needed functionalities meeting architectural and user-defined requirements. The fetched code artifacts can then be composed to build a tailored software system. However, the automatic composition of software artifacts is a whole challenge in itself <ref type="bibr" target="#b5">[6]</ref> and is out of the scope of this vision. Concretizing the vision raises other challenges (e.g. scalability) that will need to be addressed when designing the actual solution.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">First approaches towards Linked Open Code</head><p>The scientific community started taking promising steps to tackle the aforementioned points and make code semantically and uniformly accessible on the Web.</p><p>Initial works such as <ref type="bibr" target="#b6">[7,</ref><ref type="bibr" target="#b7">8,</ref><ref type="bibr" target="#b8">9]</ref> focused on remote execution, through SPARQL queries, of code explicitly written for the Semantic Web. While <ref type="bibr" target="#b6">[7]</ref> and <ref type="bibr" target="#b7">[8]</ref> deal with SPARQL functions, <ref type="bibr" target="#b8">[9]</ref> defines a new scripting language, LDScript, but its expressiveness is limited when compared to conventional programming languages. However, none of these approaches enables users to discover, download, and locally execute the best implementation of a given functionality in a required programming language.</p><p>More recent works aim to make code written in any language uniformly accessible through semantic queries. Ontologies are defined to describe code either for a specific language, like the R ontology <ref type="bibr" target="#b9">[10]</ref>; a specific paradigm, such as object-oriented languages with CodeOntology <ref type="bibr" target="#b10">[11]</ref>; or independently of the used technology as done by <ref type="bibr" target="#b11">[12]</ref>. While <ref type="bibr" target="#b9">[10]</ref> does not discuss the link between functions and data and lacks a way to capture the semantics of the functions, <ref type="bibr" target="#b10">[11]</ref> and <ref type="bibr" target="#b11">[12]</ref> have been extended respectively in <ref type="bibr" target="#b12">[13]</ref> and <ref type="bibr" target="#b13">[14,</ref><ref type="bibr" target="#b14">15,</ref><ref type="bibr" target="#b15">16,</ref><ref type="bibr" target="#b16">17]</ref> to tackle these limitations.</p><p>The work presented in <ref type="bibr" target="#b12">[13]</ref> relies on CodeOntology for the implementation of a query answering system. The user's queries are translated into SPARQL queries and evaluated against a repository containing the RDF definitions of functions. Those functions are discovered and annotated using CodeOntology to describe their structure and DBpedia for semantics. Though this approach is similar to our vision for what concerns the discovery and semantic annotations of the functions, it differs as it remotely executes functions to answer the user's query while our goal is to find and return the best implementation of the requested functionality. Moreover, we aim to be able to deal with every kind of function despite the paradigm of the language in which they are implemented.</p><p>In <ref type="bibr" target="#b13">[14,</ref><ref type="bibr" target="#b14">15,</ref><ref type="bibr" target="#b15">16,</ref><ref type="bibr" target="#b16">17]</ref>, De Meester et al. broaden the vision presented in <ref type="bibr" target="#b11">[12]</ref> by introducing new concepts, e.g. content negotiation. These approaches are very similar to our vision, with the main difference (which is also one of the main challenges of our approach) that we aim to automatically discover, identify and annotate the source code, while these previous works foresee the manual publication of description and implementations by developers. The works discuss briefly ranking the functions, but do not mention what metrics are to be used.</p><p>The last very recent initiative is Wikilambda <ref type="bibr" target="#b17">[18]</ref> by the Wikimedia foundation. Its aim is to abstract Wikipedia by offering several implementations of functions allowing, firstly, to render the content of Wikidata in natural language using predefined templates and, as a final goal, to make the referenceable functions available on the Web. The main limitation of such an initiative is that the repository needs to be manually populated with functions written by the community, meaning that the success of the approach depends on the expertise and the will of the community, and code already present on the Web cannot be exploited.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Long-term perspectives</head><p>Transitioning from open code to Linked Open Code is challenging, yet it represents tremendous opportunities for diverse communities.</p><p>Linking data and code in a standard way would open perspectives to fully open and link libraries of programming languages and tools. This promising step enables to auto-construct, from scratch, small utilities computing data. Initiatives like DeepCode<ref type="foot" target="#foot_4">7</ref> for code completion can use this work to improve their models. Later on, frameworks such as GPT-3 can be trained on such data. One can also imagine shareable Deep Learning models in the same way, alongside their data, and in a ready-to-use negotiable format. Another important aspect granted by this transition is datasets of cross-language linked functions, ready to use as a base for code translation projects. We believe that syntactical code translation of code artifacts is not enough to achieve the same performance level obtained by experts of each language. Visual Programming Languages (VPLs) started emerging in the last decades and allow users to create programs and algorithms by assembling visual blocks instead of writing actual code. By providing a consistent organization of the information, they allow better performance in design and problem-solving <ref type="bibr" target="#b18">[19]</ref> and bring programming to non-specialists. Visual programming environments are not only developed for teaching purposes<ref type="foot" target="#foot_5">8</ref> but also to support the design of real-world applications <ref type="bibr" target="#b19">[20]</ref> and workflows such as the Node-RED<ref type="foot" target="#foot_6">9</ref> language, widely use in the context of the Internet of Things. Providing a structure allowing to reuse code assets as black-boxes would allow the emergence of a global VPL to build software relying on functions available on the Linked Open Code.</p><p>We think that the FAIR code vision is not FAIR enough when applied to the Semantic Web. Multiple resources openly available on the Web are not used to their full potential.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .Fig. 2 .</head><label>12</label><figDesc>Fig. 1. Challenges to achieve a first working prototype of Linked Open Code</figDesc><graphic coords="4,134.77,559.03,345.82,81.23" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. Overview of the process for semantic annotation of functions</figDesc></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_0"><p>https://blog.arxiv.org/2020/10/08/new-arxivlabs-feature-provides-instant-access-to-code/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4" xml:id="foot_1"><p>https://www.acm.org/publications/policies/artifact-review-and-badging-current</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="5" xml:id="foot_2"><p>https://opensource.org/licenses</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="6" xml:id="foot_3"><p>https://github.com/Wimmics/corese</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="7" xml:id="foot_4"><p>https://www.deepcode.ai/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="8" xml:id="foot_5"><p>https://scratch.mit.edu/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="9" xml:id="foot_6"><p>https://nodered.org/</p></note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">The Semantic Web</title>
		<author>
			<persName><forename type="first">Tim</forename><surname>Berners-Lee</surname></persName>
		</author>
		<author>
			<persName><forename type="first">James</forename><surname>Hendler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ora</forename><surname>Lassila</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Scientific American</title>
		<imprint>
			<biblScope unit="volume">284</biblScope>
			<biblScope unit="issue">5</biblScope>
			<biblScope unit="page" from="34" to="43" />
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">The W3C SPARQL Working Group</title>
	</analytic>
	<monogr>
		<title level="m">Sparql 1.1 overview</title>
		<imprint>
			<publisher>World Wide Web Consortium</publisher>
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
	<note type="report_type">Technical report</note>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Identifiers for Digital Objects: the Case of Software Source Code Preservation</title>
		<author>
			<persName><forename type="first">Roberto</forename><surname>Di</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Cosmo</forename></persName>
		</author>
		<author>
			<persName><forename type="first">Morane</forename><surname>Gruenpeter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Stefano</forename><surname>Zacchiroli</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">iPRES 2018 -15th International Conference on Digital Preservation</title>
		<meeting><address><addrLine>Boston, United States</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2018-09">September 2018</date>
			<biblScope unit="page" from="1" to="9" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Web service modeling ontology primer</title>
		<author>
			<persName><forename type="first">Sinuhe</forename><surname>Arroyo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Emilia</forename><surname>Cimpian</surname></persName>
		</author>
		<author>
			<persName><forename type="first">John</forename><surname>Domingue</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Cristina</forename><surname>Feier</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Dieter</forename><surname>Fensel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Knig-Ries</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Holger</forename><surname>Lausen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Axel</forename><surname>Polleres</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Michael</forename><surname>Stollberg</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">W3C Member Submission</title>
		<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Feature location in source code: a taxonomy and survey</title>
		<author>
			<persName><forename type="first">Bogdan</forename><surname>Dit</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Meghan</forename><surname>Revelle</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Malcom</forename><surname>Gethers</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Denys</forename><surname>Poshyvanyk</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of software: Evolution and Process</title>
		<imprint>
			<biblScope unit="volume">25</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="53" to="95" />
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Characterizing Black-box Composition Operators via Generated Tailored Benchmarks</title>
		<author>
			<persName><forename type="first">Benjamin</forename><surname>Benni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Sébastien</forename><surname>Mosser</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mathieu</forename><surname>Acher</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mathieu</forename><surname>Paillart</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Object Technology</title>
		<imprint>
			<biblScope unit="volume">19</biblScope>
			<biblScope unit="issue">2</biblScope>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">call: A Nucleus for a Web of Open Functions</title>
		<author>
			<persName><forename type="first">Maurizio</forename><surname>Atzori</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Semantic Web Conference (Posters &amp; Demos)</title>
		<imprint>
			<date type="published" when="2014">2014</date>
			<biblScope unit="page" from="17" to="20" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Toward the web of functions: Interoperable higher-order functions in SPARQL</title>
		<author>
			<persName><forename type="first">Maurizio</forename><surname>Atzori</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Semantic Web Conference</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2014">2014</date>
			<biblScope unit="page" from="406" to="421" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">LDScript: a linked data script language</title>
		<author>
			<persName><forename type="first">Olivier</forename><surname>Corby</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Catherine</forename><surname>Faron-Zucker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Fabien</forename><surname>Gandon</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Semantic Web Conference</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page" from="208" to="224" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Using ontologies of software: example of R functions management</title>
		<author>
			<persName><forename type="first">Pascal</forename><surname>Neveu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Caroline</forename><surname>Domerg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Juliette</forename><surname>Fabre</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Vincent</forename><surname>Nègre</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Emilie</forename><surname>Gennari</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Anne</forename><surname>Tireau</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Olivier</forename><surname>Corby</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Catherine</forename><surname>Faron-Zucker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Isabelle</forename><surname>Mirbel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Workshop on Resource Discovery</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="43" to="56" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">CodeOntology: RDF-ization of source code</title>
		<author>
			<persName><forename type="first">Mattia</forename><surname>Atzeni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Maurizio</forename><surname>Atzori</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Semantic Web Conference</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page" from="20" to="28" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">An ontology to semantically declare and describe functions</title>
		<author>
			<persName><forename type="first">Ben</forename><surname>De Meester</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Anastasia</forename><surname>Dimou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ruben</forename><surname>Verborgh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Erik</forename><surname>Mannens</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">European Semantic Web Conference</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2016">2016</date>
			<biblScope unit="page" from="46" to="49" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">What is the cube root of 27? question answering over codeontology</title>
		<author>
			<persName><forename type="first">Mattia</forename><surname>Atzeni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Maurizio</forename><surname>Atzori</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Semantic Web Conference</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2018">2018</date>
			<biblScope unit="page" from="285" to="300" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Discovering and using functions via content negotiation</title>
		<author>
			<persName><forename type="first">Ben</forename><surname>De Meester</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Anastasia</forename><surname>Dimou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ruben</forename><surname>Verborgh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Erik</forename><surname>Mannens</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Rik</forename><surname>Van De Walle</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 15th International Semantic Web Conference: Posters and Demos</title>
		<meeting>the 15th International Semantic Web Conference: Posters and Demos</meeting>
		<imprint>
			<publisher>CEUR-WS</publisher>
			<date type="published" when="2016">2016</date>
			<biblScope unit="page" from="1" to="4" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">Discovering and Using Functions via Semantic Querying</title>
		<author>
			<persName><surname>Lander Noterman</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
		<respStmt>
			<orgName>Ghent University</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Master&apos;s thesis</note>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">The function hub: an implementation-independent read/write function description repository</title>
		<author>
			<persName><forename type="first">Ben</forename><surname>De Meester</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Lander</forename><surname>Noterman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ruben</forename><surname>Verborgh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Anastasia</forename><surname>Dimou</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">European Semantic Web Conference</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2019">2019</date>
			<biblScope unit="page" from="33" to="37" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Implementation-independent function reuse</title>
		<author>
			<persName><forename type="first">Ben</forename><surname>De Meester</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tom</forename><surname>Seymoens</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Anastasia</forename><surname>Dimou</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ruben</forename><surname>Verborgh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Future Generation Computer Systems</title>
		<imprint>
			<biblScope unit="volume">110</biblScope>
			<biblScope unit="page" from="946" to="959" />
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title level="m" type="main">Architecture for a multilingual wikipedia</title>
		<author>
			<persName><forename type="first">Denny</forename><surname>Vrandečić</surname></persName>
		</author>
		<idno type="arXiv">arXiv:2004.04733</idno>
		<imprint>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Visual programming languages and the empirical evidence for and against</title>
		<author>
			<persName><forename type="first">Kirsten</forename><forename type="middle">N</forename><surname>Whitley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Visual Languages &amp; Computing</title>
		<imprint>
			<biblScope unit="volume">8</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="109" to="142" />
			<date type="published" when="1997">1997</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">Graphical programming environments for educational robots: Open roberta-yet another one?</title>
		<author>
			<persName><forename type="first">Beate</forename><surname>Jost</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Markus</forename><surname>Ketterl</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Reinhard</forename><surname>Budde</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Thorsten</forename><surname>Leimbach</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE International Symposium on Multimedia</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2014">2014. 2014</date>
			<biblScope unit="page" from="381" to="386" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
