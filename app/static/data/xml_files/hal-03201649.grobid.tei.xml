<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Passive Learning of Timed Automata from Logs (Student Abstract)</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName><forename type="first">Lénaïg</forename><surname>Cornanguer</surname></persName>
							<email>lenaig.cornanguer@irisa.fr</email>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">Inria</orgName>
								<orgName type="institution" key="instit2">Univ Rennes</orgName>
								<orgName type="institution" key="instit3">CNRS</orgName>
								<orgName type="institution" key="instit4">IRISA</orgName>
								<address>
									<postCode>F-35000</postCode>
									<settlement>Rennes</settlement>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Passive Learning of Timed Automata from Logs (Student Abstract)</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">984313230C05ED46CD0BB25607D620AE</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.8.0" ident="GROBID" when="2024-04-12T14:48+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>We propose a novel algorithm to passively learn deterministic Timed Automata from events sequences associated with the delay occurring between them. This algorithm produces models that are more specific than State-of-the-Art algorithms and that has a better identification of the temporal constraints applying on the systems.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Introduction</head><p>Many systems save a history of the events occurring within it or linked to it. These timestamped events sequences are named logs and the main purposes of logging are to track the evolution of a process or to identify the cause when a problem is occurring. If each logging sequence informs us about one specific execution of the system, looking at the whole set of logs can give us an insight of the global functioning of the system. When the behavior of a system is time-dependant, this functioning can be complex, and obtaining its behavior model helps to understand it. One behavior model is the Timed Automaton (TA). Traditionally used to model electronic circuits and ensure their safety, TA are now used to model biological ecosystems, software, or industrial systems. The first strength of this modeling is its expressiveness: in addition to the classical automata expressiveness, TA support temporal constraints which can be verified with temporal logics such as TCTL <ref type="bibr" target="#b0">(Alur, Courcoubetis, and Dill 1990)</ref>. This expressiveness has lead to the development of numerous tools based on TA. Some of these tools were created to verify properties (e.g. safety specifications) of the represented system thanks to timed logical expressions. Other ones allow the generation of test case scenarios with the controller synthesis. Finally, TA's formalism can be translated into a state-transition diagram, which makes it easily interpretable.</p><p>Given timestamped event sequences, learning a TA modelling the sytem's behavior is a recent issue. We can distinguish two learning approaches, the active and the passive one. While active approaches require to query the system, passive approaches can learn TA only with labeled sequences. The existing algorithms that passively learn TA tend to lack precision due to their management of the time constraints or to produce too complex models, which reduce the interpretability.</p><p>We propose a novel algorithm named TAG that passively learns deterministic TA from timestamped event sequences and use a new strategy to obtain a good trade-off between the size of the models and their precision.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Background and State-of-the-Art Timed Automata</head><p>A Timed Automaton is a data structure to model the functioning of dynamic systems whose state is conditioned by the occurrence of discrete events at specific moments. The notion of time is supported by temporal variables named clocks that can be reset during the transition from one state to another (e.g., the clock "c0" on the transition from S1 to S0 in Figure <ref type="figure" target="#fig_0">1</ref>) and whose value conditions the transition from a state to another (e.g., "c0 &lt; 5" on the same transition as before). Formally, a Timed Automaton A is a 6-uple A = (Q, Σ, C, E, q 0 , F ) where Q is a finite set of states, Σ is a finite set of events or symbols, C is a finite set of clocks, E is a finite set of transitions, q 0 ∈ Q is the initial state and F ⊆ Q is a finite set of final states. A transition e ∈ E of A is a 5-uple e = (q, a, g, r, q ) where q and q are respectively the source state and the destination state of e, g is a guard i.e. a constraint on the value of a clock, and r is the set of clocks being reset on the transition.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Timed Automata Passive Learning Algorithms</head><p>Learning a TA is a NP-hard problem <ref type="bibr" target="#b3">(Verwer, de Weerdt, and Witteveen 2010)</ref>. To reduce the complexity of the task, the existing approaches use approximations or learn a subclass of Timed Automata.</p><p>GenProgTA <ref type="bibr" target="#b2">(Tappler et al. 2018</ref>) is an algorithm that learns TA from positive timestamped event sequences based on genetic programming. This algorithm requires the user to give a lot of parameters such as the number of clocks or the relevant guards.</p><p>Timed k-Tail (Pastore, Micucci, and Mariani 2017) is an algorithm that learns TA from a positive set of operations and their duration. For each state of the initialized automaton, it compares the set of possible trajectories of k transitions starting from this state. This set is called the k-future of the state and the states with the same k-future are merged. One of the drawbacks of Timed k-Tail is that it learns an automaton that isn't deterministic in contrast to the algorithm we propose.</p><p>RTI+ (Verwer, de Weerdt, and Witteveen 2010) is an algorithm that learns Probabilistic Deterministic Real-Time Automata (PDRTA) from only positive timestamped event sequences. A PDRTA is a TA where the notions of clock and guards are reduced to intervals of acceptable delays between two successive events. It is also deterministic. RTI+ introduces the notion of transition division which permits to model the influence of time on the target state for the same event. However, its management of the temporal constraints leads to models not sensitive enough.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Contribution</head><p>We propose a novel algorithm named TAG for Timed Automata Generator, its strategy is in two phases.</p><p>After having initialized an automaton with an input sample of positive timestamped event sequences, it reduces its size by merging the states having the same k-future, like Timed k-Tail. However, if the merge induces a determinism issue, it also merges the problematic transitions and states until a deterministic solution.</p><p>The second phase attempts to capture the temporal dynamic of the system by realizing transition divisions. If the event occurring after a transition differs in function to the time value of passage, the transition and its target state are split into two paths. During this second phase, it also realizes state merging if needed, but always by favoring the transition divisions.</p><p>It finally returns a PDRTA consistent with the input sample, concise in terms of state number but capturing the temporal constraints of the system.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Experimentation Experimental Setup</head><p>In order to compare our new algorithm with algorithms of the State-of-the-Art, we choose to use an example of Gen-ProgTA (Figure <ref type="figure" target="#fig_0">1</ref>). We generated a set of 1000 event sequences with the delay occurring between two events consistent with the model TA. 70% of this set was used to learn a TA with each algorithm. The 30% remaining were used to test the models by checking if they were accepted by it and compute the True Positive Rate (TPR). We also generated 300 sequences inconsistent with the model automaton to compute the False Positive Rate (FPR).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Algorithm</head><p>TPR FPR State number GenProgTA 0.94 0.00 5 RTI+ 1.00 0.22 6 TAG 1.00 0.00 5</p><p>Table <ref type="table">1</ref>: Validation scores of the learned models.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Results</head><p>We did not compute the TPR and the FPR of the TA learned by Timed k-Tail because it is not deterministic. This TA has 11 states. The TPR, FPR, and the state number of the TA learned by the other algorithms are presented in Table <ref type="table">1</ref>. The model learned by GenProgTA did not recognize all the sequences of the positive set of validation due to an error on a guard. However, it rejected all the sequences of the negative one on the contrary to RTI+'s model which accepted 66 negative sequences. The cause is a bad management of the temporal constraints leading to a model with guards too large. Finally, our algorithm TAG produced the exact same automaton as the target and therefore correctly accepts or rejects the sequences of the validation set.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Conclusion and Future Work</head><p>Learning passively TA from logs can be really interesting to model systems without having to know its functioning or having to interact with it.</p><p>We propose a novel algorithm that passively learns TA and achieves a trade-off between a model that would be too sensitive to the input data and a model that wouldn't be specific enough and accept wrong behaviors.</p><p>The next step of our work is to improve the validation of the resultant TA. A study about the distances between TA has to be done to consolidate the validation. An other step is the formal verification of the algorithm. Then, we would like to delete progressively the constraints on the learned automaton to obtain models fully exploitable by the model checking or controller synthesis tools.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: The model TA from GenProgTA used to generate the timestamped sequences of events.</figDesc><graphic coords="3,59.85,54.00,226.78,53.08" type="bitmap" /></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Modelchecking for real-time systems</title>
		<author>
			<persName><forename type="first">R</forename><surname>Alur</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Courcoubetis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Dill</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings. Fifth Annual IEEE Symposium on Logic in Computer Science</title>
		<meeting>Fifth Annual IEEE Symposium on Logic in Computer Science</meeting>
		<imprint>
			<date type="published" when="1990">1990. 1990</date>
			<biblScope unit="page" from="414" to="425" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Timed k-tail: Automatic inference of timed automata</title>
		<author>
			<persName><forename type="first">F</forename><surname>Pastore</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Micucci</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Mariani</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE International conference on software testing, verification and validation (ICST)</title>
		<imprint>
			<date type="published" when="2017">2017. 2017</date>
			<biblScope unit="page" from="401" to="411" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<monogr>
		<title level="m" type="main">Learning Timed Automata via Genetic Programming</title>
		<author>
			<persName><forename type="first">M</forename><surname>Tappler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><forename type="middle">K</forename><surname>Aichernig</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">G</forename><surname>Larsen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Lorber</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1808.07744[cs</idno>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">A likelihood-ratio test for identifying probabilistic deterministic real-time automata from positive data</title>
		<author>
			<persName><forename type="first">S</forename><surname>Verwer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>De Weerdt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Witteveen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Colloquium on Grammatical Inference</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="203" to="216" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
