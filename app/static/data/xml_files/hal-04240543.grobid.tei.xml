<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Extensive and Secure Personal Data Management Systems</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Nicolas</forename><surname>Anciaux</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Inria</orgName>
								<orgName type="institution">UVSQ and Univ. Paris-Saclay)</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Luc</forename><surname>Bouganim</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Inria</orgName>
								<orgName type="institution">UVSQ and Univ. Paris-Saclay)</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Extensive and Secure Personal Data Management Systems</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">D4D57A8D39BE00AC7802858418BAC25D</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.8.0" ident="GROBID" when="2024-04-12T14:52+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract/>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>The PDMS is a database system that manages the personal data of a user under their control, based on a paradigm inversion for the management of personal data: instead of externalizing the personal data of the user to the services performing the processing, it is the processing code that comes to execute on the side of the PDMS close to the data in a controlled execution environment. To exemplify this trend, let's consider a scenario where companies incentivize their employees for environmentally friendly behavior by offering a green bonus based on the number of commutes made by bike. GPS traces are collected from a reliable service and processed locally by the user's PDMS. The result is then delivered to the employer with proof of compliance. Several similar scenarios are realistic, e.g., patients providing statistics to hospitals, power meters, etc. This scenario is challenging since it calls for extensiveness to develop and deploy ad hoc code, and security to assure PDMS users that their detailed personal data is not disclosed to third parties outside the sphere of control of their PDMS.</p><p>To solve this tension between extensiveness and security, we proposed in <ref type="bibr" target="#b0">[1]</ref> a three-layer logical architecture where a minimal Secure Core implementing basic operations on personal data is extended with Isolated Data Tasks themselves accessed by Applications on which no security assumption is made (see Figure <ref type="figure" target="#fig_2">1</ref>, left). The objective is to control the flow of raw personal data from the Core to the outside, such that only expected results are declassified to untrusted applications or third parties.</p><p>The right part of Figure <ref type="figure" target="#fig_2">1</ref> gives details on the concrete implementation of an ES-PDMS, with some examples of data tasks to answer the above scenario. Properties 1 to 5 are generic security properties that must be properly orchestrated to strengthen the security of our architecture. Security properties 6 to 8 were designed for the specific ES-PDMS context and were introduced in <ref type="bibr" target="#b1">[2]</ref> and demonstrated in  This is a first step, and many challenges remain, depending on the type of processing and the manipulated data that must be properly protected:</p><p>• Personal data of a single PDMS user. To properly address this use case, presented above, it is necessary to consider processing functions that handle large volumes of personal data, such as aggregation functions. These functions are defined by a third-party application called App, and their code is evaluated in the PDMS environment. However, the PDMS user cannot fully trust the App. Therefore, it is essential to focus on execution mechanisms that mitigate information leakage through the successive processing of these functions. As preliminary results, we introduce in <ref type="bibr" target="#b1">[2]</ref> new execution strategies based on partitioning and replay of processing in different stateless Intel SGX enclaves, in order to guarantee an upper bound on data leakage through legitimate results, for certain categories of aggregation functions typical of PDMS use cases, and with a reasonable performance overhead.</p><p>• Personal data of a community of PDMS users. Individuals can cross data within large communities of users, e.g., to compute statistics for epidemiological studies or to train a machine learning model for recommendation systems or automatic classification of user data.</p><p>While, in the previous case, we can reasonably assume that the user will not attempt to attack the confidentiality of their own data, this is no longer the case as soon as we assume decentralized computations on PDMSs that will manipulate the data of other users. It is therefore necessary to consider implementation strategies that limit data leakage in case of a breach of the (hardware) security of the PDMS. As a first possible scenario, we consider in <ref type="bibr" target="#b2">[3]</ref> a threat model that we call the "Wolf in the sheepfold", in which (a small number of) PDMSs have been instrumented by their owner and thus operate in the so-called "sealed glass proof" mode, without confidentiality (but still as expected, with integrity guarantees). Other more difficult models are to be considered, where the communications between PDMS can be analyzed and where the nodes could be corrupted also in integrity or in greater number.</p><p>• Personal data of third parties. Some cases of computation on PDMS require the exploitation of potentially sensitive third-party data (e.g., a machine learning model derived from a personal dataset or an IP-protected dataset). Integrating or storing third-party data in the application during deployment would, compared to the two cases above, raise additional security issues (the same set of sensitive data must be protected in all PDMSs running the application) with update and performance difficulties after deployment. Therefore, it is necessary to allow for the application to dynamically retrieve third-party data when running on the PDMS side, which represents a new potential leakage channel for PDMS data and requires new solutions to regulate PDMS data flows at runtime. Since the initial paper <ref type="bibr" target="#b0">[1]</ref> on the extensive and secure PDMS architecture, the PETRUS project has obtained interesting research results and realized some demonstrators [L2, L3] which underscores the potential of the PDMS approach, fostered by the development of TEEs. </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Personal</head><label></label><figDesc>Data Management Systems (PDMS) are emerging to provide individuals with appropriate tools to collect, manage and make accessible their personal data to applications. At the same time, the deployment of Trusted Execution Environments (TEE) both on the cloud (Intel SGX processors) and on smartphones (ARM TrustZone) opens new architectural perspectives for these PDMS. The PETRUS project [L1] proposes new solutions for PDMS, allowing third-party applications to exploit the individual's personal data while guaranteeing individuals the legitimacy of uses and privacy. A first proof of concept implementation of this new architecture has just been developed on Intel SGX processor.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>[</head><label></label><figDesc>L2].</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: ES-PDMS logical architecture and a concrete implementation [L2].</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>Core / Isolated Data Tasks P2: Secure communications (TLS) P3: Core as proxy P4: End-to-end access control P5: End-to-end attestations P6: Limited result size P7: Stateless Data Tasks P8</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head></head><label></label><figDesc>PETRUS, PErsonal &amp; TRUSted cloud: https://team.inria.fr/petrus/ [L2] PDMS demonstration: https://project.inria.fr/espdms/ [L3] Edgelet Computing demonstration: https://project.inria.fr/edgeletdemo/</figDesc></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Personal Data Management Systems: The security and functionality standpoint</title>
		<author>
			<persName><forename type="first">N</forename><surname>Anciaux</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Systems</title>
		<imprint>
			<biblScope unit="page">80</biblScope>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Data Leakage Mitigation of User-Defined Functions on Secure Personal Data Management Systems</title>
		<author>
			<persName><forename type="first">R</forename><surname>Carpentier</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Sandu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Popa</surname></persName>
		</author>
		<author>
			<persName><surname>Anciaux</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SSDBM</title>
		<imprint>
			<date type="published" when="2022">2022</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Edgelet Computing: Pushing Query Processing and Liability at the Extreme Edge of the Network</title>
		<author>
			<persName><forename type="first">L</forename><surname>Javet</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CCGrid, 2022. Please contact</title>
		<editor>
			<persName><forename type="first">Nicolas</forename><surname>Anciaux</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">Inria</forename></persName>
		</editor>
		<meeting><address><addrLine>Paris-Saclay, France Nicolas</addrLine></address></meeting>
		<imprint/>
		<respStmt>
			<orgName>UVSQ and Univ</orgName>
		</respStmt>
	</monogr>
	<note>Anciaux@inria.fr</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
