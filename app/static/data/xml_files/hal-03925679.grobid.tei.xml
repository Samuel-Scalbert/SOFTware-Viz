<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Secure Computations in Opportunistic Networks: An Edgelet Demonstration with a Medical Use-Case</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Ludovic</forename><surname>Javet</surname></persName>
							<email>ludovic.javet@inria.fr</email>
							<affiliation key="aff0">
								<orgName type="department">Inria Saclay Centre</orgName>
								<orgName type="institution">Université Paris-Saclay U. Versailles St-Quentin</orgName>
								<address>
									<settlement>-en-Yvelines Versailles</settlement>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Nicolas</forename><surname>Anciaux</surname></persName>
							<email>nicolas.anciaux@inria.fr</email>
							<affiliation key="aff1">
								<orgName type="department">Inria Saclay Centre</orgName>
								<orgName type="institution">Université Paris-Saclay U. Versailles St-Quentin</orgName>
								<address>
									<settlement>-en-Yvelines Versailles</settlement>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Luc</forename><surname>Bouganim</surname></persName>
							<email>luc.bouganim@inria.fr</email>
							<affiliation key="aff2">
								<orgName type="department">Inria Saclay Centre</orgName>
								<orgName type="institution">Université Paris-Saclay U. Versailles St-Quentin</orgName>
								<address>
									<settlement>-en-Yvelines Versailles</settlement>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Léo</forename><surname>Lamoureux</surname></persName>
							<affiliation key="aff3">
								<orgName type="department">Inria Saclay Centre</orgName>
								<orgName type="institution">Université Paris-Saclay U. Versailles St-Quentin</orgName>
								<address>
									<settlement>-en-Yvelines Versailles</settlement>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Philippe</forename><surname>Pucheral</surname></persName>
							<email>philippe.pucheral@inria.fr</email>
							<affiliation key="aff4">
								<orgName type="department">Inria Saclay Centre</orgName>
								<orgName type="institution">Université Paris-Saclay U. Versailles St-Quentin</orgName>
								<address>
									<settlement>-en-Yvelines Versailles</settlement>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">Secure Computations in Opportunistic Networks: An Edgelet Demonstration with a Medical Use-Case</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">1A5C187CD25ED29E9403A748AB504341</idno>
					<idno type="DOI">10.1109/PerComWorkshops56833.2023.10150321</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.8.0" ident="GROBID" when="2024-04-12T14:50+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>In this demonstration paper, we leverage the current convergence between Trusted Execution Environments and Opportunistic Networks to perform secure and privacypreserving computations on personal devices. We call this convergence Edgelet computing and show that it can drastically change the way distributed processing over personal data is conceived. We demonstrate the pertinence of the approach through a real medical use-case being deployed in the field.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I. INTRODUCTION</head><p>With the explosion in the number of connected devices -29.3 billion by 2023 <ref type="bibr" target="#b0">[1]</ref> -, the usual reliable, server-based and infrastructure-centric data management approach exhibits its limits in terms of efficiency, privacy, and energy consumption. In <ref type="bibr" target="#b2">[2]</ref>, we show that the recent convergence between Trusted Execution Environment (TEE) and Opportunistic Network (OppNet) can be leveraged to perform fully decentralized and secure computations among data scattered on multiple personal devices, without resorting to any central authority or infrastructure. Hence, powerful large-scale privacy preserving computations are within reach in a different -and more flexible -way than with homomorphic encryption <ref type="bibr" target="#b3">[3]</ref>, secure multiparty computation <ref type="bibr" target="#b4">[4]</ref> or differential privacy techniques <ref type="bibr" target="#b5">[5]</ref>. We call this approach Edgelet computing.</p><p>Edgelet computing paves the way for disruptive applications by <ref type="bibr" target="#b0">(1)</ref> encouraging data sharing with strong privacy guarantees, (2) distributing liability for the processing among multiple devices/individuals rather than centralizing it on a single data processor (in the GDPR sense), and (3) leveraging the mobility of individuals and opportunistic communications among them to perform ad-hoc spatio-temporal queries. As a concrete example, we are today developing a medical use-case, on top of the DomYcile project <ref type="bibr" target="#b6">[6]</ref>. DomYcile is a data management solution for elderly people receiving home care in the French Yvelines district. 8,000 patients are each being equipped with a secure home box (TEE-enabled device acting as an edgelet) where their medical and social records are stored. These boxes are not connected to the Internet for subscription cost, security, and acceptability reasons and are only accessible at the patient's home by healthcare workers. The DomYcile platform, set up by the Yvelines district, is open by design, so that third parties (e.g., patient associations, statistical agency, medical workers) can push new services of interest for the patients (e.g., querying ephemeral cohorts of consenting patients and delivering them afterwards valuable healthcare advices). In such context however, no one would be ready to endorse the responsibility of the global processing in case of compromise. Fig. <ref type="figure" target="#fig_0">1</ref> illustrates how the Edgelet computing paradigm can tackle this issue: the query is first approved by an authority (e.g., the CNIL -French regulatory agency), then broadcast by healthcare workers who implement the OppNet with encrypted messages between edgelets. Finally, a subset of secure boxes materializing the cohort act as Data Contributors while others are randomly selected to act as Data Processors that perform the computation. The main challenge is to design a scalable decentralized execution strategy that provides accurate results and limits the exposure of individual data in case of compromise, all within the OppNet context, prone to failures and message delays. In <ref type="bibr" target="#b2">[2]</ref>, we have proposed technical solutions to tackle this challenge and have discussed their impacts in terms of result consistency, performance and privacy. The objective of this demonstration is to present their practical interest through the use-case above. A video is available online (https://project.inria.fr/edgelet/). II. EDGELET COMPUTING FRAMEWORK Basic assumptions. On the technical side, Edgelet computing capitalizes on one hand on the security properties provided by TEEs <ref type="bibr" target="#b7">[7]</ref> (integrity of the code executed on the devices and confidentiality of the manipulated data) and on the presence of TEEs in a fast-growing population of devices (from smartphones to lightweight devices up to sensors). On the other hand, Edgelet computing exploits the asynchronous short-range communications (e.g., Wi-Fi or Bluetooth) and store-carry-andforward message passing among devices provided by OppNets <ref type="bibr" target="#b8">[8]</ref>, eliminating the need to rely on a reliable infrastructure. Note that for simplicity, we consider epidemic message transmission and let optimized routing protocols exploiting user movement patterns for future work. On the functional side, Edgelet computing aims at performing complex processing tasks (e.g., machine learning, data mining, statistical queries) over rich data (e.g., healthcare folders, spending habits) hosted by edgelets seen as a horizontal partitioning of a globally shared database (i.e., each edgelet stores a partition of a database conforming to a common schema). Threat model. Edgelet computing requires the introduction of an unusual threat model to capture the shift of responsibility from the Querier to the crowd (i.e., the participating edgelets). The Querier (e.g., the service provider) is said "Ingenuous" in the sense that it lacks the ability or willingness to set up a secure infrastructure. The edgelets owners (e.g., the patients) run on their side under the so-called "wolf in sheepfold" model: while each edgelet is equipped with a TEE, side-channel attacks compromising data confidentiality cannot be totally precluded, placing it in a "sealed glass" mode <ref type="bibr" target="#b9">[9]</ref> (the integrity guarantee is preserved but not the confidentiality); these attacks being highly difficult to conduct -they require instrumenting the edgelet hardware -, we assume a large majority of honest participants (the lambs) and a few corrupted ones (the wolfs). Finally, a Trusted Regulatory Agent (e.g., the CNIL) certifies the query by reviewing and approving its code. The rest of the infrastructure is assumed to be untrusted, including the devices' operating system and the network. Under this threat model, the goal is to achieve a form of crowd liability where the liability of data processing is equally distributed among the participating edgelets. For each edgelet owner, the counterpart of its contribution to the crowd liability is to personally benefit from a processing that would not be rolled out otherwise (e.g., share common practices/knowledges among patients). Moreover, for a lamb user, the TEE and its embedded code actually endorse this liability on her behalf.</p><p>Execution plans. We represent computations by a Query Execution Plan (QEP), that is a directed graph where vertices materialize the operators to be computed and edges represent the dataflow among them, with messages sent through the OppNet. The simplest form of a QEP is a tree with Data Contributors at the leaves (one per edgelet contributing to the query with its data) sending the requested data to a Snapshot Builder operator, the role of which is to collect a representative snapshot of cardinality C (e.g., select tuples from C=2000 patients over 65 years old, as considered on Fig. <ref type="figure" target="#fig_0">1</ref>). The Snapshot Builder then sends the representative snapshot to a Computer operator which, in turn, computes the final result and delivers it to the Querier. The Data Processors (here, the Snapshot Builder and the Computer) can be decomposed into sub-operators assigned to different edgelets for privacy or performance concerns. This can help minimizing the amount of data exposed at each edgelet by horizontally partitioning the dataset. This can also preclude the concomitant exposure, in the same edgelet, of data items that become sensitive when combined (e.g., a quasi-identifier) by vertically partitioning the dataset. This can finally help minimizing the workload (e.g., when energy consumption matters) or exploit the inherent Edgelet computing parallelism. A Computing Combiner operator must then be added at the root of the QEP to combine the outputs of all sub-operators.</p><p>Resiliency strategies. During a QEP execution, each edgelet acting as a Data Processor is a potential Single Point of Failure, with presumed failures encompassing temporary disconnection and excessive message delay caused by the OppNet. Fault tolerance is essential to make the approach applicable. We then explored in <ref type="bibr" target="#b2">[2]</ref> two resiliency strategies, namely Backup and Overcollection, which differ on complexity and performance, on the accuracy of the final result and on the way privacy is enforced, making each strategy best adapted to different contexts. In this demonstration, we focus on the Overcollection strategy which is best adapted to our use-case where simplicity and performance take precedence and approximate results are acceptable (e.g., statistics, machine learning processes).</p><p>Overcollection sketched. Broadly speaking, the Overcollection principle works as follows. Let us consider a Computer operator that executes a distributive operator (e.g., a Sum) over a sample dataset. Instead of executing this Computer on a single edgelet, we distribute its execution over n+m edgelets where each one processes a partition of the original dataset, with n the minimum number of partitions to be collected and m the overcollection parameter. The validity of the query is trivially preserved as long as less than m partitions are lost. This strategy requires that the commutativity rules between operators of a same QEP allow all distributive operators to be pushed down to the sub-QEPs and all non-distributive operators to be pushed up to the root. In practice, many data-intensive queries of interest satisfy this requirement. We show in <ref type="bibr" target="#b2">[2]</ref> that general interest Machine Learning and Data Mining algorithms can also accommodate Overcollection despite their iterative nature and the fact that messages can be lost along the iterations. We also demonstrate that an appropriate implementation guarantees their convergence toward an accurate approximate result (with a principle similar to Mini-batch K-Means <ref type="bibr" target="#b10">[10]</ref>), and this demonstration confirms its validity in practice.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>III. DEMONSTRATION</head><p>Demonstration hardware platform. It includes a set of personal secure boxes, as deployed and delivered to each patient in the DomYcile project (see Fig. <ref type="figure" target="#fig_1">2</ref>). Medical and social workers interact with the patient folder hosted in the box through a smartphone App. Secure boxes incorporate two STM32F417 microcontrollers (MCUs). The first MCU is dedicated to communications with the outside while the second manages the recorded data. This second MCU is connected to a μ-SD card hosting the patient's raw data, and to a tamper-proof TPM (Trusted Platform Module). This TPM secures the cryptographic keys and guarantees, during the secure boot, that the embedded code has not been tampered with. Hence, these secure boxes act as TEE enabled devices and play the role of edgelets.</p><p>Demonstration software platform. As shown in Fig <ref type="figure" target="#fig_2">3</ref>, it consists of: (1) a GUI implemented in Dash Python that allows interactive configuration and visualization of Edgelet queries;</p><p>(2) an Edgelet manager that orchestrates executions and communications between edgelets; (3) an OppNet modeler that models the massive distribution of edgelets over the city of Versailles (chief town of the Yvelines district). The OppNet modeler itself relies on the ONE simulator <ref type="bibr" target="#b11">[11]</ref> and uses the generated message traces for the Edgelet manager to coordinate the executions in a similar way. Note that the Edgelet manager and OppNet modeler are only necessary for the demonstration and are not part of the platform deployed in the field.</p><p>Demonstration scenario. The attendees are first invited to select a query among two representative ones: (i) a Grouping Sets query <ref type="bibr" target="#b12">[12]</ref> which allows multiple Group-By clauses to be evaluated within a single SQL query (to cross multiple statistics over a same cohort of patients); or (ii) a K-Means <ref type="bibr" target="#b10">[10]</ref> followed by a Group By on the resulting clusters (to identify which characteristics most influence the dependency level of an elderly person). Then, following their intuition, the attendees can try to improve the privacy of the QEP of the selected query to reduce data exposure in case of TEEs compromise by adjusting the horizontal and vertical partitioning parameters presented in Section II. Next, we proceed to the real-time execution of the resulting QEP on the boxes available for the demonstration (concrete edgelets), the rest of the operators being associated to a configurable number of simulated edgelets to attest scalability. Finally, the attendees can change the ONE scenario (e.g., number of healthcare workers), impacting the failure presumption for each edgelet, and observe automatic changes in the QEP (overcollection ratio) to keep it resilient. The demo allows attendees to visualize, step by step, the query execution. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IV. LESSONS LEARNED AND DISCUSSION</head><p>The convergence between Trusted Execution Environments and Opportunistic networks, that we named Edgelet computing, has not been deeply studied yet. First, this demonstration illustrates a potential usage of this new paradigm on top of a real medical use-case being deployed in the field. It demonstrates that large-scale general-purpose computations can be performed over a set of weakly connected devices while providing high security guarantees. Edgelet computing leverages the TEE security to perform computations on clear-text data (once decrypted locally). It can then combine computation generality and scalability contrary to homomorphic encryption, secure multiparty computation or local differential privacy solutions. Second, the demonstration shows critical parts of the Edgelet computing internals related to (i) privacy preservation, thanks to the support of horizontal and vertical partitioning, and (ii) resiliency, thanks to the Overcollection strategy, well adapted to sampling queries. While Overcollection applies if the processing is distributive, backup strategy can be used in all other situations, though at the price of a higher complexity and lower performance. Hence, we firmly believe that Edgelet computing opens up important opportunities in terms of personal data management.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. Edgelet query in the DomYcile project</figDesc><graphic coords="2,387.27,474.56,78.29,51.43" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 2 .</head><label>2</label><figDesc>Fig. 2. Hardware of DomYcile secure boxes</figDesc><graphic coords="4,70.36,64.45,155.76,89.20" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 3 .</head><label>3</label><figDesc>Fig. 3. Architecture of the demonstration platform</figDesc><graphic coords="4,46.25,508.50,256.34,114.70" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Regulatory Agent Query Querier Results Social/medical worker Query operator Encrypted OppNet packet Compromized edgelet Edgelet: Secure personal box Medical folder Query: computes statistics on age, BMI, etc. from 2000 patients over 65 years old</head><label></label><figDesc></figDesc><table /></figure>
		</body>
		<back>
			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>U n t r u s t e d T r u s t e d</head></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m">Cisco Annual Internet Report</title>
		<imprint>
			<date type="published" when="2018">2018-2023</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Cisco</title>
		<author>
			<orgName type="collaboration">White Paper</orgName>
		</author>
		<ptr target="https://tinyurl.com/cisco-internet-report" />
		<imprint>
			<date type="published" when="2020-03">Mar. 2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Edgelet Computing: Pushing Query Processing and Liability at the Extreme Edge of the Network</title>
		<author>
			<persName><forename type="first">L</forename><surname>Javet</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Anciaux</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Bouganim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Pucheral</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">CCGrid 2022</title>
		<meeting><address><addrLine>Taormina, Italy</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2022">2022</date>
			<biblScope unit="page" from="160" to="169" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Private Database Queries Using Somewhat Homomorphic Encryption</title>
		<author>
			<persName><forename type="first">D</forename><surname>Boneh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Gentry</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Halevi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">J</forename><surname>Wu</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2013">2013. 2013</date>
			<publisher>ACNS</publisher>
			<biblScope unit="volume">7954</biblScope>
			<biblScope unit="page" from="102" to="118" />
			<pubPlace>Banff, AB, Canada</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">SMCQL: Secure Query Processing for Private Data Networks</title>
		<author>
			<persName><forename type="first">J</forename><surname>Bater</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Elliott</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Eggen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Goel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">N</forename><surname>Kho</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Rogers</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proc. VLDB Endow</title>
		<meeting>VLDB Endow</meeting>
		<imprint>
			<date type="published" when="2017">2017</date>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page" from="673" to="684" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Differential Privacy</title>
		<author>
			<persName><forename type="first">C</forename><surname>Dwork</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Automata, Languages and Programming, 33rd International Colloquium, ICALP 2006</title>
		<meeting><address><addrLine>Venice, Italy</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2006">July 10-14, 2006. 2006</date>
			<biblScope unit="volume">4052</biblScope>
			<biblScope unit="page" from="1" to="12" />
		</imprint>
	</monogr>
	<note>Part II</note>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<ptr target="https://tinyurl.com/e-tonomy" />
		<title level="m">DomYcile Project</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Trusted Execution Environment: What It is, and What It is Not</title>
		<author>
			<persName><forename type="first">M</forename><surname>Sabt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Achemlal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Bouabdallah</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Trustcom/BigDataSE/ISPA</title>
		<imprint>
			<date type="published" when="2015-08">2015. Aug. 2015</date>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="57" to="64" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Opportunistic networking: data forwarding in disconnected mobile ad hoc networks</title>
		<author>
			<persName><forename type="first">L</forename><surname>Pelusi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Passarella</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Conti</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">IEEE Commun. Mag</title>
		<imprint>
			<biblScope unit="volume">44</biblScope>
			<biblScope unit="issue">11</biblScope>
			<biblScope unit="page" from="134" to="141" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Sealed-Glass Proofs: Using Transparent Enclaves to Prove and Sell Knowledge</title>
		<author>
			<persName><forename type="first">F</forename><surname>Tramer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Lin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J.-P</forename><surname>Hubaux</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Juels</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Shi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">EuroS&amp;P</title>
		<imprint>
			<biblScope unit="page" from="19" to="34" />
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Web-scale k-means clustering</title>
		<author>
			<persName><forename type="first">D</forename><surname>Sculley</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 19th international conference on World wide web -WWW &apos;10</title>
		<meeting>the 19th international conference on World wide web -WWW &apos;10</meeting>
		<imprint>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page">1177</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">The ONE Simulator for DTN Protocol Evaluation</title>
		<author>
			<persName><forename type="first">A</forename><surname>Keränen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Ott</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Kärkkäinen</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">SIMUTools &apos;09</title>
		<meeting><address><addrLine>New York, NY, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<monogr>
		<title level="m" type="main">Group By Grouping Sets, Snowflake</title>
		<ptr target="https://tinyurl.com/grouping-sets" />
		<imprint/>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
