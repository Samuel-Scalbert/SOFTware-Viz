<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">On Polynomial Recursive Sequences</title>
				<funder ref="#_EfGCzYX">
					<orgName type="full">European Union</orgName>
				</funder>
				<funder>
					<orgName type="full">European Research Council</orgName>
					<orgName type="abbreviated">ERC</orgName>
				</funder>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Michaël</forename><surname>Cadilhac</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Filip</forename><surname>Mazowiecki</surname></persName>
							<email>filipm@mpi-sws.org</email>
						</author>
						<author>
							<persName><forename type="first">Charles</forename><surname>Paperman</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Michał</forename><surname>Pilipczuk</surname></persName>
							<email>michal.pilipczuk@mimuw.edu.pl</email>
						</author>
						<author>
							<persName><forename type="first">Géraud</forename><surname>Sénizergues</surname></persName>
							<email>geraud.senizergues@u-bordeaux.fr</email>
						</author>
						<author>
							<persName><forename type="first">James</forename><surname>Worrell</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="institution">DePaul University</orgName>
								<address>
									<settlement>Chicago</settlement>
									<region>IL</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="department">Max Planck Institute for Software Systems</orgName>
								<orgName type="institution">Saarland Informatics Campus</orgName>
								<address>
									<settlement>Saarbücken</settlement>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="institution">Université de Lille</orgName>
								<address>
									<settlement>Villeneuve d&apos;Ascq</settlement>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff3">
								<orgName type="institution">University of Warsaw</orgName>
								<address>
									<country key="PL">Poland</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff4">
								<orgName type="institution">Université de Bordeaux</orgName>
								<address>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff5">
								<orgName type="department">Leibniz</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff6">
								<orgName type="department" key="dep1">für Informatik</orgName>
								<orgName type="department" key="dep2">Dagstuhl Publishing</orgName>
								<address>
									<country key="DE">Germany</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">On Polynomial Recursive Sequences</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">D8B76EC9BC959C49B3D6640C1FC0BECD</idno>
					<idno type="DOI">10.4230/LIPIcs.ICALP.2020.117</idno>
					<note type="submission">the Autobóz Research Camp in 2019 in Firbush, Scotland.</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.8.0" ident="GROBID" when="2024-04-12T14:44+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>2012 ACM Subject Classification Theory of computation → Models of computation recursive sequences</term>
					<term>expressive power</term>
					<term>weighted automata</term>
					<term>higher-order pushdown automata Digital Object Identifier 10.4230/LIPIcs.ICALP.2020.117 Category Track B: Automata</term>
					<term>Logic</term>
					<term>Semantics</term>
					<term>and Theory of Programming</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>We study the expressive power of polynomial recursive sequences, a nonlinear extension of the well-known class of linear recursive sequences. These sequences arise naturally in the study of nonlinear extensions of weighted automata, where (non)expressiveness results translate to class separations. A typical example of a polynomial recursive sequence is bn = n!. Our main result is that the sequence un = n n is not polynomial recursive.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Sequences defined recursively arise naturally in many areas, particularly in mathematics and computer science. One of the most studied classes is that of linear recursive sequences. Such sequences are defined by fixing the values of the first k elements, while every subsequent 117:2 On Polynomial Recursive Sequences element can be obtained as a linear combination of the k elements preceding it. The most famous example is the Fibonacci sequence, defined by setting f 0 = 0, f 1 = 1, and the recurrence relation</p><formula xml:id="formula_0">f n+2 = f n+1 + f n .</formula><p>It is well known that every linear recursive sequence can be defined by a system of k jointly recursive sequences, where for every sequence we fix the initial value and provide a recurrence relation expressing the (n + 1)st element as a linear combination of the nth elements of all the sequences <ref type="bibr" target="#b14">[15]</ref>. For example, to define the Fibonacci sequence f n in this way, one needs one auxiliary sequence: we set f 0 = 0, g 0 = 1, and postulate</p><formula xml:id="formula_1">f n+1 = g n , g n+1 = f n + g n .</formula><p>(</p><formula xml:id="formula_2">)<label>1</label></formula><p>In this paper we study polynomial recursive sequences over rational numbers that generalise linear recursive sequences. They are defined by systems of sequences like <ref type="bibr" target="#b0">(1)</ref>, but on the right hand side we allow arbitrary polynomial expressions, rather than just linear combinations. For example, the sequence b n = n! can be defined in this way using one auxiliary sequence: we may set b 0 = c 0 = 1 and write</p><formula xml:id="formula_3">b n+1 = b n • c n , c n+1 = c n + 1.</formula><p>(2)</p><p>Thus, the recurrence relation uses two polynomials: P 1 (x 1 , x 2 ) = x 1 x 2 and P 2 (x 1 , x 2 ) = x 2 +1. The two classes of linear and polynomial recursive sequences appear naturally in automata theory, and in particular in connection with weighted automata and higher-order pushdown automata. Weighted automata over the rational semiring are a quantitative variant of finite automata that assign rational numbers to words <ref type="bibr" target="#b9">[10]</ref>. In the special case of a 1-letter alphabet, each word can be identified with its length. Then a weighted automaton defines a mapping from natural numbers (possible lengths) to rationals, and this can be seen as a sequence. It is known that sequences definable in this way by weighted automata are exactly the linear recursive sequences <ref type="bibr" target="#b5">[6]</ref>. Pushdown automata of order k can be used for defining mappings from words to words <ref type="bibr" target="#b20">[21]</ref>; in particular, for k = 2 and 1-letter alphabets, such automata compute exactly the linear recursive sequences of natural integers <ref type="bibr" target="#b10">[11]</ref>.</p><p>Thus, nonlinear extensions of linear recursive sequences may correspond to nonlinear extensions of weighted automata. For the latter, consider three examples: polynomial recurrent relations that generalise pushdown automata of order 3 <ref type="bibr" target="#b11">[12,</ref><ref type="bibr" target="#b20">21]</ref>; cost-register automata which arose as a variant of streaming transducers <ref type="bibr" target="#b2">[3,</ref><ref type="bibr" target="#b3">4]</ref>; polynomial automata, connected to reachability problems for vector addition systems <ref type="bibr" target="#b6">[7]</ref>.</p><p>Surprisingly, these three models, although introduced in different contexts, are all equivalent. 1  Moreover, over unary alphabets they define exactly polynomial recursive sequences, in the same fashion as weighted automata (respectively order 2 pushdown automata) over unary alphabets define linear recursive sequences. The goal of this paper is to study the expressive power of polynomial recursive sequences. Clearly, this expressive power extends that of linear recursive sequences: it is easy to see that every linear recursive sequence has growth bounded by 2 O(n) , while already the sequence b n = n! grows faster. In fact, already the recurrence relation a 0 = 2, a n+1 = (a n ) 2 defines the sequence 2 2 n , whose growth is doubly-exponential. However, there are well-known integer sequences related to these examples for which definability as a polynomial recursive sequence seems much less clear. The first example is the sequence u n = n n . The second example is the sequence of Catalan numbers C n = 1 n+1 2n n . Note that by Stirling's approximation, n n is asymptotically very close to n!, while C n is, up to factors polynomial in n, roughly equal to 4 n . For these reasons, simple asymptotic considerations cannot prove the sequences u n = n n and C n to be not polynomial recursive. Recall that the Catalan numbers admit multiple combinatorial interpretations, which can be used to derive the recurrence formulas</p><formula xml:id="formula_4">C n+1 = n i=0 C i C n-i and (n + 2)C n+1 = (4n + 2)C n .</formula><p>Note that these formulas are not of the form of recurrence formulas considered in this work. Additionally, it is known that Catalan numbers C n are not linear recursive (see e.g. <ref type="bibr" target="#b7">[8]</ref>), despite having growth 2 O(n) .</p><p>Our results. We show that both the sequence of Catalan numbers C n and the sequence u n = n n are not polynomial recursive. For this, we present two techniques for proving that a sequence is not polynomial recursive. The first technique for Catalan numbers is number-theoretical: we show that a polynomial recursive sequence of integers is ultimately periodic modulo any large enough prime. The second technique for n n is more algebraic in nature: we show that for every polynomial recursive sequence there exists k ∈ N such that every k consecutive elements of the sequence satisfy a nontrivial polynomial equation. The fact that u n = n n is not polynomial recursive is our main result. These inexpressibility results were announced without proofs by the fifth coauthor in an invited talk in 2007 <ref type="bibr" target="#b20">[21]</ref>. The present paper contains proofs and extensions of these results.</p><p>Applications. The discussed models of cost-register automata <ref type="bibr" target="#b11">[12,</ref><ref type="bibr" target="#b3">4,</ref><ref type="bibr" target="#b6">7]</ref> are not the only nonlinear extensions of weighted automata that appear in the literature. We are aware of at least two more extensions: weighted context-free grammars <ref type="bibr" target="#b4">[5,</ref><ref type="bibr" target="#b7">8]</ref> and weighted MSO logic <ref type="bibr" target="#b8">[9,</ref><ref type="bibr" target="#b16">17]</ref>. As it happens, over the 1-letter alphabet, weighted context-free grammars can define Catalan numbers, and weighted MSO logic can define n n . Therefore, as a corollary of our results we show that functions expressible in pushdown-automata of level 4, weighted context-free grammars and weighted MSO logic are not always expressible in the class of cost-register automata.</p><p>The class of holonomic sequences is another extension of linear recursive sequences <ref type="bibr" target="#b15">[16]</ref>. These sequences are defined recursively with one sequence, but the coefficients in the recursion are polynomials of the element's index. For example, b n = 1 and b n+1 = (n + 1)b n defines b n = n!. The expressiveness of this class has also been studied and in particular the sequence n n is known to be not in the class of holonomic sequences <ref type="bibr" target="#b13">[14]</ref>. As a corollary of our results one can show that there are no inclusions between the classes of holonomic sequences and polynomial recursive sequences. On the one hand every holonomic sequence is asymptotically bounded by 2 p(n) for some polynomial p <ref type="bibr" target="#b15">[16]</ref>, and the sequence a n = 2 2 n is polynomial recursive. On the other hand, Catalan numbers admit a definition as a holonomic sequence: C 0 = 1 and (n + 2)C n+1 = (4n + 2)C n . In Section 7 we discuss the class of rational recurrence sequences that generalises both holonomic and polynomial recursive sequences.</p><p>Organisation. In Section 2 we give basic definitions and examples of linear and polynomial recursive sequences. In Section 3 we show that the definition of polynomial recursive sequences requires a system of sequences and, unlike linear recursive sequences, cannot be equivalently defined using only one sequence. Then in Sections 4 and 5 we show that the sequence of Catalan numbers C n and the sequence u n = n n are not polynomial recursive. In Section 6 we explain in details our corollaries for weighted automata. We conclude in Section 7. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Preliminaries</head><p>By N we denote the set of nonnegative integers. A sequence over a set D is a function u : N → D; all the sequences considered in this work are over the field of rationals Q. We use the notation u n n∈N for elements of sequences, where u n = u(n). Also, we use bold-face letters as a short-hand for sequences, e.g., u = u n n∈N . We now introduce the two main formalisms for describing sequences: linear recursive sequences and polynomial recursive sequences.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Linear recursive sequences. A k-variate linear form (or</head><formula xml:id="formula_5">linear form if k is irrelevant) over Q is a function L : Q k → Q of the form L(x 1 , . . . , x k ) = a 1 x 1 + . . . + a k x k</formula><p>for some a 1 , . . . , a k ∈ Q. A sequence of rationals u is a linear recursive sequence if there exist k ∈ N and a k-variate linear form L such that u satisfies the recurrence relation</p><formula xml:id="formula_6">u n+k = L(u n , . . . , u n+k-1 )</formula><p>for all n ∈ N.</p><p>Observe that such a sequence is uniquely determined by the form L and its first k elements: u 0 , . . . , u k-1 ∈ Q. The minimal k for which a description of u as in (3) can be given is called the order of u. For example, Fibonacci numbers are uniquely defined by the recurrence relation f n+2 = f n+1 + f n and starting elements f 0 = 0, f 1 = 1. Note that this recurrence relation corresponds to the linear form</p><formula xml:id="formula_8">L(x 1 , x 2 ) = x 1 + x 2 .</formula><p>We now present a second definition of linear recursive sequences which, as we will explain, is equivalent to the first definition. Suppose u 1 , u 2 , . . . , u k are sequences of rationals. We say that these sequences satisfy a system of linear recurrence equations if there are k-variate linear forms L 1 , . . . , L k such that:</p><formula xml:id="formula_9">       u 1 n+1 = L 1 (u 1 n , . . . , u k n ), . . . u k n+1 = L k (u 1 n , . . . , u k n ). (<label>4</label></formula><formula xml:id="formula_10">)</formula><p>for all n ∈ N. Note that such a system can be equivalently rewritten in the matrix form</p><formula xml:id="formula_11">u n+1 = M u n where u n = (u 1 n , . . . , u k n ) T and M is the k × k matrix over Q such that M x = (L 1 ( x), . . . , L k ( x)) T for all x ∈ Q k . Note that then u n = M n u 0 for all n ∈ N.</formula><p>It is well known that systems of linear recurrence equations can be equivalently used to define linear recursive sequences, as explained in the following result.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Proposition 1 ([15]</head><p>). A sequence u is a linear recursive sequence if and only if there exists k ∈ N and sequences u 1 , . . . , u k that satisfy a system of linear recurrence equations, where u 1 = u. Moreover, the smallest k for which this holds is the order of u.</p><p>To get more accustomed with this equivalent definition, let us consider the sequence a n = n 2 . Since (n + 1) 2 = n 2 + 2n + 1, we consider two auxiliary sequences b n = n and c n = 1. The initial values of these sequences are a 0 = b 0 = 0 and c 0 = 1. Thus, a n can be defined by providing these initial values together with a system of linear equations</p><formula xml:id="formula_12">       a n+1 = a n + 2b n + c n , b n+1 = b n + c n , c n+1 = c n .</formula><p>(5)</p><p>In the matrix form, we could equivalently write that (a n , b n , c n ) T = M n e, where</p><formula xml:id="formula_13">M =   1 2 1 0 1 1 0 0 1   , e =   0 0 1   .</formula><p>It can be readily verified that a n is also defined by the recurrence a n+3 = 3a n+2 -3a n+1 + a n .</p><p>The difference between the two definitions is that in (3) we have only one sequence, but the depth of the recursion can be any k. Conversely, in (4) we are allowed to have k sequences, but the depth of recursion is 1. The equivalence provided by Proposition 1 is quite convenient and is often used in the literature, see e.g. <ref type="bibr" target="#b19">[20]</ref>.</p><p>We give a short proof of Proposition 1, different from the proof in <ref type="bibr" target="#b14">[15]</ref>. The reason is that this proof provides us with intuition that will turn out to be useful later on.</p><p>Proof of Proposition 1. For the left-to-right implication, suppose u is a linear recursive sequence of order k; say it is defined by the recursive formula u n+k = L(u n , . . . , u n+k-1 ), where L is a k-variate linear form. Define the sequences u 1 , . . . , u k by setting</p><formula xml:id="formula_14">u i n := u n+i-1</formula><p>for all i ∈ {1, . . . , k} and n ∈ N.</p><p>Then u 1 = u and the sequences u 1 , . . . , u k satisfy the system of equations as in ( <ref type="formula" target="#formula_9">4</ref>), where</p><formula xml:id="formula_15">L k = L and L i (x 1 , . . . , x k ) = x i+1 for i ∈ {1, . . . , k -1}.</formula><p>For the right-to-left implication, suppose that there exist k ∈ N and sequences u 1 , . . . , u k that satisfy the system of equations ( <ref type="formula" target="#formula_9">4</ref>) for some linear forms</p><formula xml:id="formula_16">L 1 , . . . , L k , such that u = u 1 . Let M be a k ×k matrix over Q that encodes the linear forms L 1 , . . . , L k ; that is, u n = M n u 0 , where u n = (u 1 n , . . . , u k n ) T ∈ Q k . Consider the linear map R : Q k → Q k+1 defined as R( x) = ( eM 0 x , eM 1 x , . . . , eM k x ) T , where e = (1, 0, . . . , 0) ∈ Q k . Note that R( u n ) = (u 1 n , u 1 n+1 , . . . , u 1 n+k ) = (u n , u n+1 , . . . , u n+k ) for all n ∈ N.<label>(6)</label></formula><p>Observe that R is a linear map from Q k to Q k+1 , hence the image of R is a linear subspace of Q k+1 of co-dimension at least 1. Hence, there exists a nonzero linear form K :</p><formula xml:id="formula_17">Q k+1 → Q such that im R ⊆ ker K, or equivalently K(R( x)) = 0 for all x ∈ Q k . By (6), we have K(u n , u n+1 , . . . , u n+k ) = 0 for all n ∈ N.<label>(7)</label></formula><p>Let a 0 , a 1 , . . . , a k ∈ Q be such that</p><formula xml:id="formula_18">K(x 0 , . . . , x k ) = a 0 x 0 + . . . + a k x k .</formula><p>Since K is nonzero there exists the largest index t such that a t = 0. From <ref type="bibr" target="#b6">(7)</ref> we infer that</p><formula xml:id="formula_19">u n+t = - a t-1 a t • u n+t-1 - a t-2 a t • u n+t-2 -. . . - a 0 a t • u n for all n ∈ N,</formula><p>so u is a linear recursive sequence of order at most t.</p><p>Remark 2. One could imagine setting up all the definitions presented above using affine forms instead of linear forms, that is, functions</p><formula xml:id="formula_20">A : Q k → Q of the form A(x 1 , . . . , x k ) = a 1 x 1 + . . . + a k x 2 + c,</formula><p>where a 1 , . . . , a k , c ∈ Q. However, as we may always add constant sequences to the system of recurrence equations defining a sequence, considering affine forms does not increase the expressive power. In fact, from Proposition 1 it can be easily derived that we obtain exactly the same class of linear recursive sequences, regardless of whether we use linear or affine forms in both definitions.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>I C A L P 2 0 2 0 117:6 On Polynomial Recursive Sequences</head><p>Poly-recursive sequences. We now generalise the concept of linear recursive sequences by allowing polynomial functions instead of only linear forms. The starting point of the generalisation is the definition via a system of recurrence equations, as in (4). Definition 3. A sequence of rationals u is polynomial recursive (or poly-recursive for short) if there exist k ∈ N, sequences of rationals u 1 , . . . , u k satisfying u = u 1 , and polynomials P 1 , . . . , P k ∈ Q[x 1 , . . . , x k ] such that for all n ∈ N, we have</p><formula xml:id="formula_21">       u 1 n+1 = P 1 (u 1 n , . . . , u k n ), . . . u k n+1 = P k (u 1 n , . . . , u k n ).<label>(8)</label></formula><p>Again, notice that polynomials P 1 , . . . , P k and the initial values u 1 0 , . . . u k 0 uniquely determine the sequences u 1 , . . . , u k , hence in particular the sequence u = u 1 .</p><p>Let us examine a few examples. First, recall the sequences a n = 2 2 n and b n = n! defined in Section 1. Another example is the sequence d n = 2 n 2 . Since 2 (n+1) 2 = 2 n 2 +2n+1 , we define d 0 = e 0 = 1 and let</p><formula xml:id="formula_22">d n+1 = d n • (e n ) 2 • 2, e n+1 = e n • 2.</formula><p>The polynomials used in the last definition are</p><formula xml:id="formula_23">P 1 (x 1 , x 2 ) = 2x 1 (x 2 ) 2 and P 2 (x 1 , x 2 ) = 2x 2 .</formula><p>Notice that this idea can be easily generalised to define any sequence of the form r Q(n) , where r is a rational number and Q is a polynomial with rational coefficients. We remark that all three sequences a n = 2 2 n , b n = n!, d n = 2 n 2 are not linear recursive for simple asymptotic reasons (from the discussion in Section 1).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Simple poly-recursive sequences</head><p>The following notion is a natural generalisation of the definition (3) of linear recursive sequences to the setting of recurrences defined using polynomials.</p><p>Definition 4. A sequence of rationals u is simple poly-recursive if there exists k ∈ N and a polynomial</p><formula xml:id="formula_24">P ∈ Q[x 1 , x 2 , . . . , x k ] such that u n+k = P (u n , u n+1 , . . . , u n+k-1 )</formula><p>for all n ∈ N.</p><p>Again, note that if u is simple poly-recursive as above, then the polynomial P and the first k values u 0 , . . . , u k-1 uniquely determine the sequence u.</p><p>Clearly, every linear recursive sequence is a simple poly-recursive sequence. In fact, by Proposition 1 and Remark 2, the two notions would coincide if we required that the polynomial P in the definition above has degree at most 1. On the other hand, observe that the same construction as in the first paragraph of the proof of Proposition 1 shows that every simple poly-recursive sequence is poly-recursive. We now prove that this inclusion is strict. Proof. Towards a contradiction, suppose there is k ∈ N and a polynomial</p><formula xml:id="formula_26">P ∈ Q[x 1 , . . . , x k ] such that b n+k = P (b n , b n+1 , . . . , b n+k-1 )</formula><p>for all n ∈ N.</p><p>Let us write</p><formula xml:id="formula_28">P = Q + A, where Q, A ∈ Q[x 1 , . . . , x k ]</formula><p>are such that A is the sum of all the monomials in the expansion of P that have degree at most 1, while Q is the sum of all the remaining monomials in the expansion of P . Thus, A is an affine form, while every monomial in the expansion of Q has total degree at least 2.</p><p>Since A is an affine form, there exists a number c ∈ N such that</p><formula xml:id="formula_29">|A(q 1 , . . . , q k )| &lt; c + c • max 1 i k |q i | for all q 1 , . . . , q k ∈ Q.</formula><p>Thus, for all n &gt; 2c we have</p><formula xml:id="formula_30">|A(b n , b n+1 , . . . , b n+k-1 )| c + c • (n + k -1)! &lt; (n + k)! = b n+k . (<label>11</label></formula><formula xml:id="formula_31">)</formula><p>Since by <ref type="bibr" target="#b9">(10)</ref> it follows that</p><formula xml:id="formula_32">Q(b n , b n+1 , . . . , b n+k-1 ) = b n+k -A(b n , b n+1 , . . . , b n+k-1 ),</formula><p>using <ref type="bibr" target="#b10">(11)</ref> we may conclude that for all n &gt; 2c the following inequality holds:</p><formula xml:id="formula_33">0 &lt; Q(b n , b n+1 , . . . , b n+k-1 ) &lt; 2b n+k . (<label>12</label></formula><formula xml:id="formula_34">)</formula><p>Let m be the product of all denominators of all the coefficients appearing in the expansion of P into a sum of monomials. Note that for all n &gt; m, the number bn := bn m = n! m is an integer. Furthermore, we have that bn divides bn for all n n. Since every monomial in the expansion of Q has total degree at least 2, we infer that for all n &gt; m, we have</p><formula xml:id="formula_35">bn 2 | Q(b n , b n+1 , . . . , b n+k-1 ).<label>(13)</label></formula><p>By combining <ref type="bibr" target="#b12">(13)</ref> with the left inequality of ( <ref type="formula" target="#formula_33">12</ref>), we conclude that for all n &gt; max(2c, m),</p><formula xml:id="formula_36">Q(b n , b n+1 , . . . , b n+k-1 ) bn 2 .</formula><p>This bound together with the right inequality of <ref type="bibr" target="#b11">(12)</ref> implies that</p><formula xml:id="formula_37">n! m 2 = bn 2 &lt; 2b n+k = 2 • (n + k)!.</formula><p>This inequality, however, is not true for every sufficiently large n, a contradiction.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Modular periodicity</head><p>Recall that a sequence of numbers r is ultimately periodic if there exist N, k ∈ N such that for all n N , we have r n = r n+k . In this section we prove the following periodicity property of poly-recursive sequences, which, by means of contradiction, provides a basic technique for proving that a given sequence is not poly-recursive.</p><p>Theorem 6. Suppose u is a poly-recursive sequence of integers. Then there exists a ∈ N such that for every prime p &gt; a, the sequence r n := u n mod p is ultimately periodic.</p><p>Proof. Let u be defined by the system of recursive equations</p><formula xml:id="formula_38">       u 1 n+1 = P 1 (u 1 n , . . . , u k n ), . . . u k n+1 = P k (u 1 n , . . . , u k n ),<label>(14)</label></formula><p>where u 1 , . . . , u k are sequences such that u 1 = u and P 1 , . . . ,</p><formula xml:id="formula_39">P k ∈ Q[x 1 , . . . , x k ].</formula><p>I C A L P 2 0 2 0</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>117:8 On Polynomial Recursive Sequences</head><p>Without loss of generality we may assume that the initial values u 1 0 , . . . , u k 0 are integers. Indeed, this is certainly the case for u 1 0 = u 0 , while for every i &gt; 1, we may rewrite the system so that it uses the sequence u i = q i • u i instead of u i , where q i is the denominator of u i 0 . For this, the starting condition for u i can be set as u i 0 = q i • u i 0 , which is an integer, in all polynomials P 1 , . . . , P k we may substitute x i with x i /q i , and the polynomial P i can be replaced with q i • P i .</p><p>Further, without loss of generality we may assume that all the monomials present in the expansions of all the polynomials P 1 , . . . , P k have the same total degree d &gt; 1. Such polynomials are called homogeneous of degree d and they have the property that P i (ax 1 , . . . , ax k ) = a d P i (x 1 , . . . , x k ) for all a ∈ Q. Indeed, let d &gt; 1 be any integer that is not smaller than the degrees of all the polynomials P 1 , . . . , P k . To the system <ref type="bibr" target="#b13">(14)</ref> we add a new sequence u k+1 , defined by setting</p><formula xml:id="formula_40">u k+1 0 = 1 and u k+1 n+1 = u k+1 n d for n ∈ N.</formula><p>Thus u k+1 is constantly equal to 1. Then each monomial M (x 1 , . . . , x k ) appearing in the expansion of any of the polynomials P i (x 1 , . . . , x k ) can be replaced by the monomial</p><formula xml:id="formula_41">M (x 1 , . . . , x k ) • x d-t k+1 ∈ Q[x 1 , . . . , x k , x k+1 ],</formula><p>where t is the total degree of M . It is straightforward to see that the modified system of recursive equations still defines u = u 1 , while all monomials appearing in all the polynomials used in it have the same degree d.</p><p>After establishing these two assumptions, we proceed to the main proof. Let a ∈ N be a positive integer such that the polynomials Pi := a • P i all belong to Z[x 1 , . . . , x k ], that is, have integer coefficients. For instance, one can take a to be product of all the denominators of all the rational coefficients appearing in the polynomials P 1 , . . . , P k . For all i ∈ {1, . . . , k} and n ∈ N, let us define</p><formula xml:id="formula_42">ũi n := a d n -1 d-1 • u i n .</formula><p>By a straightforward induction we show that the sequences ũ1 , . . . , ũk satisfy the system of recursive equations</p><formula xml:id="formula_43">       ũ1 n+1 = P1 (ũ 1 n , . . . , ũk n ), . . . ũk n+1 = Pk (ũ 1 n , . . . , ũk n ).<label>(15)</label></formula><p>Indeed, the induction base is trivial and for the induction step recall that all monomials have the same degree d, hence</p><formula xml:id="formula_44">Pi (ũ 1 n , . . . , ũk n ) = a•P i (a d n -1 d-1 •u 1 n , . . . , a d n -1 d-1 •u k n ) = a•a d n+1 -d d-1 •u i n+1 = a d n+1 -1 d-1 •u i n+1 = ũi n+1 .</formula><p>Observe that since the initial values ũi 0 = u i 0 are integers, and the polynomials Pi have integer coefficients, we can infer that all entries of the sequences ũ1 , . . . , ũk are integers.</p><p>We now show that for every prime p &gt; a, the sequence r defined as r n = u n mod p is ultimately periodic; this will conclude the proof. For every i ∈ {1, . . . , k} and n ∈ N, let ri n := ũi n mod p.</p><p>By <ref type="bibr" target="#b14">(15)</ref> and the fact that the polynomials Pi have integer coefficients, for every n ∈ N the vector of entries (r 1 n+1 , . . . , rk n+1 ) is uniquely determined by the vector (r 1 n , . . . , rk n ). Since this vector may take only at most p k different values, it follows that the sequences r1 , . . . , rk are ultimately periodic. Now note that for every n ∈ N, we have</p><formula xml:id="formula_45">a d n -1 d-1 • r n ≡ a d n -1 d-1 • u n = ũ1 n ≡ r1 n mod p.</formula><p>Since p &gt; a and p is a prime, we have that a and p are coprime. Therefore, there exists an integer b such that ab ≡ 1 mod p. By multiplying the above congruence by b</p><formula xml:id="formula_46">d n -1 d-1 , we have r n ≡ b d n -1 d-1 • r1 n mod p. (<label>16</label></formula><formula xml:id="formula_47">)</formula><p>Observe that the sequence b n = b</p><formula xml:id="formula_48">d n -1 d-1 satisfies the recursive equation b n+1 = b • (b n ) d ,</formula><p>hence the sequence (b n mod p) is ultimately periodic. Since r1 is ultimately periodic as well, from ( <ref type="formula" target="#formula_46">16</ref>) we conclude that the sequence r is ultimately periodic.</p><p>We use Theorem 6 to prove that the Catalan numbers are not poly-recursive. Recall that the nth Catalan number C n is given by the formula</p><formula xml:id="formula_49">C n = 1 n+1 2n n .</formula><p>Alter and Kubota <ref type="bibr" target="#b1">[2]</ref> studied the behaviour of the Catalan numbers modulo primes. It is easy to see (and proved in <ref type="bibr" target="#b1">[2]</ref>) that for every prime p, the sequence C n contains infinitely many numbers divisible by p, and infinitely many numbers not divisible by p. Let a p-block be a maximal contiguous subsequence of the sequence C n consisting of entries divisible by p. The p-blocks can be naturally ordered along the sequence C n , so let L p k be the length of the kth p-block. Then Alter and Kubota proved the following.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Theorem 7 ([2]</head><p>). For every prime p &gt; 3 and k 1, we have</p><formula xml:id="formula_50">L p k = p m+1 -3 2 ,</formula><p>where m is the largest integer such that p+1 2 m divides k.</p><p>Note that Theorem 7 in particular implies that for every prime p &gt; 3, the sequence C n contains arbitrary long p-blocks. This means that C n taken modulo p cannot be ultimately periodic. By combining this with Theorem 6, we conclude the following. Corollary 8. Catalan numbers are not poly-recursive.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Cancelling polynomials</head><p>Consider the following definition, which can be seen as a variation of the definition of simple poly-recursive sequences, which we discussed in Section 3.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Definition 9.</head><p>A sequence of rationals u admits a cancelling polynomial if there exist k ∈ N and a nonzero polynomial P ∈ Q[x 0 , . . . , x k ] such that P (u n , u n+1 , . . . , u n+k ) = 0 for all n ∈ N.</p><p>Remark 10. A cancelling polynomial P can be always assumed to have integer coefficients, i.e. to belong to Z[x 0 , . . . , x k ], because one may multiply P by the product of all denominators that occur in its coefficients.</p><p>Observe that the notion of a cancelling polynomial extends the definition of simple poly-recursive sequences (Definition 4) in the following sense: a sequence is simple polyrecursive if and only if it admits a cancelling polynomial P (x 0 , . . . , x k ) whose expansion into a sum of monomials involves only one term containing x k , namely the monomial x k itself. This particular form of the considered algebraic constraint was vitally used in the proof of Proposition 5, where we showed that the sequence b n = n! is not simple poly-recursive. In fact, if one drops this restriction, then it is easy to see that the sequence b n = n! actually admits a cancelling polynomial: for instance</p><formula xml:id="formula_51">P (x 0 , x 1 , x 2 ) = x 0 x 2 -(x 1 ) 2 -x 0 x 1 .</formula><p>We now prove that the above example is not a coincidence.</p><p>Theorem 11. Every poly-recursive sequence admits a cancelling polynomial.</p><p>Proof. The proof follows the same basic idea as the proof of Proposition 1 that we gave in Section 2. The difference is that instead of linear maps we work with maps defined by polynomial functions, hence instead of linear independence we shall work with the notion of algebraic independence.</p><p>Recall that if K ⊆ L is a field extension, then elements a 1 , . . . , a k ∈ L are algebraically dependent over K if there is a nonzero polynomial P ∈ K[x 1 , . . . , x k ] such that P (a 1 , . . . , a k ) = 0 in L. We will use the following well-known fact; see e.g. [18, Chapter VIII, Theorem 1.1]. Claim 12. If K is a field and k ∈ N, then in the field of rational expressions K(x 1 , . . . , x k ) every k + 1 elements are algebraically dependent over K.</p><p>We proceed to the proof of the theorem. Let u be the poly-recursive sequence in question. By definition, for some k ∈ N there are sequences u 1 , . . . , u k and polynomials</p><formula xml:id="formula_52">P 1 , . . . , P k ∈ Q[x 1 , . . . , x k ] such that for all n ∈ N,        u 1 n+1 = P 1 (u 1 n , . . . , u k n ), . . . u k n+1 = P k (u 1 n , . . . , u k n ).</formula><p>We inductively define polynomials</p><formula xml:id="formula_53">P (t) 1 , . . . , P (t) k ∈ Q[x 1 , . . . ,</formula><p>x k ] as follows. For t = 0, set</p><formula xml:id="formula_54">P (0) i (x 1 , . . . , x k ) = x i</formula><p>for all i ∈ {1, . . . , k}, and for t 1, set</p><formula xml:id="formula_55">P (t) i (x 1 , . . . , x k ) = P i (P (t-1) 1 (x 1 , . . . , x k ), . . . , P (t-1) k (x 1 , . . . , x k )) for all i ∈ {1, . . . , k}.</formula><p>The following claim follows from the construction by a straightforward induction.</p><p>Claim 13. For all n, t ∈ N and i ∈ {1, . . . , k}, we have</p><formula xml:id="formula_56">P (t) i (u 1 n , . . . , u k n ) = u i n+t .</formula><p>Consider the polynomials</p><formula xml:id="formula_57">P (0) 1 , P<label>(1)</label></formula><p>1 , . . . , P</p><formula xml:id="formula_58">(k) 1 ∈ Q[x 1 , . . . , x k ].</formula><p>By Claim 12, these polynomials (treated as elements of Q(x 1 , . . . , x k )) are algebraically dependent over Q, so there exists a nonzero polynomial Q ∈ Q[y 0 , y 1 , . . . , y k ] such that the polynomial</p><formula xml:id="formula_59">R(x 1 , . . . , x k ) = Q(P (0) 1 (x 1 , . . . , x k ), P<label>(1)</label></formula><p>1 (x 1 , . . . , x k ), . . . , P</p><formula xml:id="formula_60">(k) 1 (x 1 , . . . , x k ))</formula><p>is identically zero. It now remains to observe that by Claim 13, for every n ∈ N we have</p><formula xml:id="formula_61">0 = R(u 1 n , . . . , u k n ) = Q(u 1 n , u 1 n+1 , . . . , u 1 n+k ) = Q(u n , u n+1 , . . . , u n+k ),</formula><p>hence Q is a cancelling polynomial for u.</p><p>Remark 14. Notice that a given polynomial can be the cancelling polynomial of many different sequences. For example, the polynomial (x 0 ) 2 -1 is a cancelling polynomial of any sequence over {-1, 1}. In particular, some of those sequences are not ultimately periodic modulo p, for any prime numbers p, and thus are not poly-recursive by Theorem 6. Hence, the converse direction of Theorem 11 does not hold.</p><p>We now present an application of Theorem 11 by showing that the sequence u n = n n is not poly-recursive. By Theorem 11, it suffices to show that there is no cancelling polynomial for this sequence. Contrary to the reasoning presented in Section 4, where we used off-the-shelf results about modular (non)periodicity of Catalan numbers, proving the nonexistence of a cancelling polynomial for the n n sequence turns out to be a somewhat challenging task.</p><p>We first observe that when we apply a multivariate polynomial to consecutive entries of u n , we can rewrite the result in another form:</p><formula xml:id="formula_62">Lemma 15. Let Z ∈ Z[x 0 , x 1 , . . . , x k ] be a nonzero polynomial. Then there exist nonzero polynomials P 1 , . . . , P m , Q 1 , . . . , Q m ∈ Z[x]</formula><p>such that the polynomials P 1 , . . . , P m are pairwise different and for every n ∈ N,</p><formula xml:id="formula_63">Z n n , (n + 1) n+1 , . . . , (n + k) n+k = m i=1 P i (n) n • Q i (n).</formula><p>Proof. By expanding Z as a sum of monomials, we may write</p><formula xml:id="formula_64">Z(x 0 , . . . , x k ) = m i=1 c i • M i (x 0 , . . . , x j ),<label>(17)</label></formula><p>where for all i ∈ {1, . . . , m}, c i = 0 and</p><formula xml:id="formula_65">M i (x 0 , . . . , x k ) = k j=0</formula><p>x di,j j are pairwise different monomials. Now observe that for every n ∈ N, we have</p><formula xml:id="formula_66">M i n n , (n + 1) n+1 , . . . , (n + k) n+k = k j=0 (n + j) di,j •(n+j) =   k j=0 (n + j) di,j   n • k j=0 (n + j) di,j •j . (<label>18</label></formula><formula xml:id="formula_67">)</formula><p>Hence, if we define  <ref type="formula" target="#formula_64">17</ref>) and ( <ref type="formula" target="#formula_66">18</ref>), we conclude that</p><formula xml:id="formula_68">P i (x) = k j=0 (x + j) di,j and Q i (x) = c i • k j=0 (x + j)</formula><formula xml:id="formula_69">Z n n , (n + 1) n+1 , . . . , (n + k) n+k = m i=1 P i (n) n • Q i (n) for all n ∈ N,</formula><p>as required. It now suffices to observe that (1) all polynomials P i and Q i are nonzero, because c i = 0 and the monomial M i is nonzero, and (2) the polynomials P i are pairwise different, because they have pairwise different multisets of roots.</p><p>With Lemma 15 established, we move to the main result of this section.</p><p>Theorem 16. The sequence u n = n n is not poly-recursive.</p><p>Proof. Suppose, for the sake of contradiction, that the sequence u n = n n is poly-recursive. By Theorem 11 and Remark 10, there exists a nonzero polynomial </p><formula xml:id="formula_70">Z ∈ Z[x 0 , x 1 , . . . ,</formula><formula xml:id="formula_71">P i (n) n • Q i (n) = 0 for all n ∈ N. (<label>19</label></formula><formula xml:id="formula_72">)</formula><p>This system of equations seems somewhat unwieldy due to the presence of the term P i (n) n , where n is involved both in the base and in the exponent. The following claim formulates the key idea of the proof: if we consider the equations ( <ref type="formula" target="#formula_71">19</ref>) modulo any prime, then the bases and the exponents of these terms can be made independent.  Let a ∈ N and let D a = [d ij ] 1 i,j m be the m × m matrix defined by d ij = P j (a) i . Since this is essentially a Vandermonde matrix, its determinant has a simple expression, as expressed in the following claim.</p><formula xml:id="formula_73">Q i (n) ≡ Q i (a)</formula><p>Claim 18. Let S ∈ Z[x] be defined as</p><formula xml:id="formula_74">S(x) = m i=1 P i (x) • 1 i&lt;j m (P i (x) -P j (x)) .</formula><p>Then S is nonzero and det(D a ) = S(a).</p><p>Proof. That S is nonzero follows from the fact that the polynomials P i are all nonzero and pairwise different. Now observe that D a is a Vandermonde matrix with columns consisting of consecutive powers of P j (a), for 1 j m with columns consisting of consecutive powers of P j (a), starting with P j (a) 1 (whereas the Vandermonde matrix starts with P j (a) 0 ). It is well known that the determinant of the Vandermonde matrix [P j (a) i-1 ] 1 i,j m is 1 i&lt;j m (P i (a) -P j (a)) .</p><p>Further, multiplying the jth column by P j (a), for all j, results in the determinant being multiplied by m i=1 P i (a). This proves the claim.</p><p>We will need the following classical definition. It is well known that the adjugate matrix always exists. Now let u a = (Q 1 (a), . . . , Q m (a)) T . Claim 17 implies that for every prime p, D a u a ≡ 0 mod p, where 0 is the m-dimensional zero vector. By multiplying both sides of this equation by the adjugate matrix of D a taken over Z p , we conclude that for every prime p, we have det(D a ) • u a ≡ 0 mod p for all a ∈ N.</p><p>This is equivalent to S(a) • Q i (a) ≡ 0 mod p for all a ∈ N and 1 i m. <ref type="bibr" target="#b19">(20)</ref> This means that for every prime p and every 1 i m, the following assertion holds: every a ∈ F p is a zero of the polynomial S • Q i considered as a polynomial over F p .</p><p>Recall that the polynomials S, Q 1 , . . . , Q m ∈ Z[x] are nonzero. Consider a prime p that is larger than every coefficient occurring in the expansion of the polynomials S, Q 1 , . . . , Q m into sums of monomials, and that is further larger than deg(S) + max j∈{1,...,m} deg(Q j ). Then the polynomials S, Q 1 , . . . , Q m are nonzero even when regarded as polynomials over F p , hence the same can be said also about the polynomials S • Q i , for all 1 i m. However, by <ref type="bibr" target="#b19">(20)</ref>, for every 1 i m the polynomial S • Q i has at least p &gt; deg(S) + deg(Q i ) roots over F p . This is a contradiction.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">Applications in weighted automata</head><p>In this section we discuss the implications of the results we presented in the previous sections for various questions regarding the expressive power of extensions of weighted automata. We will briefly describe the model of weighted automata and focus only on its expressive power.</p><p>We refer an interested reader to e.g. <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b9">10]</ref> for an introduction to the area. </p><formula xml:id="formula_75">A (w) = I T • M a1 M a2 . . . M an • F. (<label>21</label></formula><formula xml:id="formula_76">)</formula><p>Note that when |Σ| = 1, this definition coincides with (the matrix form of) the definition (4) of linear recursive sequences. Assuming |Σ| = 1, one can identify each word with its length, which means that a weighted automaton defines a sequence A : N → S. Therefore, weighted automata recognise exactly linear recursive sequences. See <ref type="bibr" target="#b5">[6]</ref> for a broader discussion of the connection between linear recursive sequences and weighted automata. We now discuss three nonlinear extensions of weighted automata that can be found in the literature. These extensions are studied in different areas and, as far as we are aware, they have never been compared in terms of expressive power before. We show that the results we presented in Sections 4 and 5 can be used to prove separation results, in terms of the expressive power, for some of these classes.</p><p>Like in the case of weighted automata, any automaton within the considered classes defines a function f : Σ * → Q, where Σ is the working alphabet. For our purposes, we restrict attention to the case of unary alphabets, that is, |Σ| = 1. Thus, the three considered classes of extended weighted automata correspond to three separate classes of sequences f : N → Q, similarly as standard weighted automata correspond to the class of linear recursive sequences.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Cost-register automata (CRA).</head><p>Cost-register automata (CRA) were introduced in at least three contexts <ref type="bibr" target="#b20">[21,</ref><ref type="bibr" target="#b3">4,</ref><ref type="bibr" target="#b6">7]</ref>. To avoid technical details, we simply observe that CRAs over unary alphabets recognize exactly poly-recursive sequences, as defined in Definition 3. Since <ref type="bibr" target="#b20">[21,</ref><ref type="bibr" target="#b3">4,</ref><ref type="bibr" target="#b6">7]</ref> discuss several variants of CRAs, to avoid ambiguity we refer to the definition of a CRA that can be found in <ref type="bibr" target="#b18">[19]</ref> <ref type="foot" target="#foot_0">2</ref> .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Weighted context-free grammars (WCFG).</head><p>Weighted automata can be equivalently defined as an extension of finite automata, where each translation is labelled by an element of the semiring S (see e.g. <ref type="bibr" target="#b0">[1]</ref>). In short, each run is assigned a value: the semiring product of the labels of all the transitions used in the run. Given a word w, the automaton outputs the semiring sum of the values assigned to all runs accepting w.</p><p>Weighted context-free grammars are an extension of context-free grammars in the same way weighted automata are an extension of finite automata. Every grammar rule is assigned a label from S. Then every derivation tree is assigned the semiring product of the labels of all the rules used in the tree. The output for a word w is defined as the semiring sum of all values assigned to derivation trees of w. See e.g. <ref type="bibr" target="#b12">[13]</ref> for more details. Here we present only one example from <ref type="bibr" target="#b12">[13]</ref> over the semiring Q.</p><p>Consider the grammar with one nonterminal X (which is also the starting nonterminal) and one terminal a with the following rules: X → a, X → XX. Both rules are assigned weight 1. Therefore, for every word a n the output is the number of derivation trees. It is easy to see that if we denote the output on the word a n by D n , then D n is the number of full binary trees with n leaves, which is the sequence of Catalan numbers shifted by one, i.e. D 0 = 0 and D n+1 = C n . By Corollary 8 and since it is easy to see that poly-recursive sequences are closed under shifts, we conclude the following.</p><p>Corollary 20. The class of sequences definable by unary-alphabet WCFGs over Q is not contained in the class of sequences recognizable by unary-alphabet CRAs over Q.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>117:15</head><p>Weighted MSO (WMSO). Weighted MSO logic <ref type="bibr" target="#b8">[9,</ref><ref type="bibr" target="#b16">17]</ref> was introduced as a logic involving weights that intended to capture the expressive power of weighted automata, similarly as finite automata are characterized by MSO. In general, WMSO turns out to be strictly more expressive than weighted automata. We will not define the whole syntax of WMSO, only a simple fragment that does not even use variables. See <ref type="bibr" target="#b8">[9,</ref><ref type="bibr" target="#b16">17]</ref> for the full definition.</p><p>Fix the semiring S = Q. Similarly as for weighted automata, every WMSO formula ϕ over Q defines a function ϕ : Σ * → Q. As for atomic formulas, every c ∈ Q is an atomic formula that defines the constant function c (w) = c. Instead of the boolean connectives ∨ and ∧, WMSO formulas can be added using + and multiplied using •, with the obvious semantics. Instead of having the existential quantifier ∃ x and the universal quantifier ∀ x , we have the sum quantifier x and the product quantifier x . Then This proves that the sequence n n can be defined in unary-alphabet WMSO over Q, so by Theorem 16 we may conclude the following.</p><p>Corollary 21. The class of sequences definable in unary-alphabet WMSO over Q is not contained in the class of sequences recognizable by unary-alphabet CRAs over Q.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">Conclusion</head><p>We proved that two sequences, the Catalan numbers C n and u n = n n , are not polynomial recursive. For this, we exhibited two properties that poly-recursive sequences always satisfy: ultimate periodicity modulo large prime numbers and admitting a cancelling polynomial.</p><p>Going further than poly-recursive sequences, one can consider the class of rational recursive sequences. These are specified like polynomial recursive sequences (Definition 3) but on the right hand side of the system of equations (8) we allow the P i 's to be taken from the field of fractions of the polynomial ring. That is, each P i is of the form P i (x 1 , . . . , x k ) = Qi(x1,...,x k ) Ri(x1,...,x k ) , where Q i , R i ∈ Q[x 1 , . . . , x k ] and R i = 0. This class extends both poly-recursive sequences and holonomic sequences (see Section 1). For example one can express the sequence of Catalan numbers, since C n+1 = 4n+2 n+2 • C n and an ancillary sequence can hold the value n. On the other hand, the proof of the existence of cancelling polynomials for poly-recursive sequences (Theorem 11) carries over to rational recursive sequences. In particular, u n = n n is not even rational recursive. This discussion points to the notion of rational recursive sequences as a natural object for future research.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Theorem 5 .</head><label>5</label><figDesc>The sequence b n = n! is not simple poly-recursive.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Claim 17 .</head><label>17</label><figDesc>For every prime p and all a, b ∈ Z where b &gt; 0, it holds that m i=1 P i (a) b • Q i (a) ≡ 0 mod p . Proof. Since p and p -1 are coprime, there is an n ∈ N such that n &gt; b, n ≡ a mod p and n ≡ b mod p -1. Thus for any 1 i m:</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Definition 19 .</head><label>19</label><figDesc>Let R be a ring and M be a m × m matrix over R. The adjugate matrix M of M is an m × m matrix over R that satisfies M M = det(M ) • I, where I is the m × m identity matrix.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head></head><label></label><figDesc>Given a semiring S, a weighted automaton A is a tuple (d, Σ, {M a } a∈Σ , I, F ), where: d ∈ N is the dimension; Σ is a finite alphabet; every M a is a d × d matrix over S; and I and F are the initial and the final vector in S d , respectively.In this paper we only consider the semiring S = Q. A weighted automaton defines a function A : Σ * → S as follows: if w = a 1 . . . a n ∈ Σ * , then</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>→ a i ] (w) for all w = a 1 . . . a n ∈ Σ * , and similarly forx ϕ (w). For example,x 1 (a n ) = n. It follows that x y 1 (a n ) = n n .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>0 2 0 117:12 On Polynomial Recursive Sequences</head><label></label><figDesc></figDesc><table /><note><p>di,j •j , I C A L P 2 then, by (</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>x k ] that is cancelling for u n . By Lemma 15, we can find nonzero polynomials P 1 , . . . , P m , Q 1 , . . . , Q m ∈ Z[x], where P 1 , . . . , P m are pairwise different, such that</figDesc><table><row><cell>m</cell></row><row><cell>i=1</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head></head><label></label><figDesc>mod p and P i (n) n ≡ P i (a) n ≡ P i (a) b mod p ,</figDesc><table><row><cell>the second part holding by Fermat's Little Theorem. The claim now follows by considering</cell></row><row><cell>equality (19) modulo p.</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_0"><p>The equivalence of CRAs and poly-recursive sequences over a unary alphabet is basically a syntactic translation, if one assumes that CRAs have only one state. Proving that every CRA can be defined by a one state CRA is a simple encoding of states into the registers.</p></note>
		</body>
		<back>

			<div type="funding">
<div><p>Funding <rs type="person">Michał Pilipczuk</rs>: This work is a part of project TOTAL that has received funding from the <rs type="funder">European Research Council (ERC)</rs> under the <rs type="funder">European Union</rs>'s <rs type="programName">Horizon 2020 research and innovation programme</rs>, grant agreement No. <rs type="grantNumber">677651</rs>. , <rs type="person">David Purser</rs> and <rs type="person">Markus Whiteland</rs> for helpful comments. The research for this work was carried out in part at</p></div>
			</div>
			<listOrg type="funding">
				<org type="funding" xml:id="_EfGCzYX">
					<idno type="grant-number">677651</idno>
					<orgName type="program" subtype="full">Horizon 2020 research and innovation programme</orgName>
				</org>
			</listOrg>

			<div type="availability">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>https://arxiv.org/abs/2002.08630</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">What&apos;s decidable about weighted automata? In Automated Technology for Verification and Analysis</title>
		<author>
			<persName><forename type="first">Shaull</forename><surname>Almagor</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Udi</forename><surname>Boker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Orna</forename><surname>Kupferman</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-3-642-24372-1_37</idno>
	</analytic>
	<monogr>
		<title level="m">9th International Symposium, ATVA 2011</title>
		<meeting><address><addrLine>Taipei, Taiwan</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2011">October 11-14, 2011. 2011</date>
			<biblScope unit="page" from="482" to="491" />
		</imprint>
	</monogr>
	<note>Proceedings</note>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Prime and prime power divisibility of Catalan numbers</title>
		<author>
			<persName><forename type="first">Ronald</forename><surname>Alter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">K</forename><surname>Kubota</surname></persName>
		</author>
		<idno type="DOI">10.1016/0097-3165(73)90072-1</idno>
	</analytic>
	<monogr>
		<title level="j">Journal of Combinatorial Theory, Series A</title>
		<imprint>
			<biblScope unit="volume">15</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="243" to="256" />
			<date type="published" when="1973">1973</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Expressiveness of streaming string transducers</title>
		<author>
			<persName><forename type="first">Rajeev</forename><surname>Alur</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Pavol</forename><surname>Cerný</surname></persName>
		</author>
		<idno type="DOI">10.4230/LIPIcs.FSTTCS.2010.1</idno>
	</analytic>
	<monogr>
		<title level="m">IARCS Annual Conference on Foundations of Software Technology and Theoretical Computer Science, FSTTCS 2010</title>
		<meeting><address><addrLine>Chennai, India</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2010">December 15-18, 2010. 2010</date>
			<biblScope unit="page" from="1" to="12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Regular functions and cost register automata</title>
		<author>
			<persName><forename type="first">Rajeev</forename><surname>Alur</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D'</forename><surname>Loris</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Jyotirmoy</forename><forename type="middle">V</forename><surname>Antoni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mukund</forename><surname>Deshmukh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yifei</forename><surname>Raghothaman</surname></persName>
		</author>
		<author>
			<persName><surname>Yuan</surname></persName>
		</author>
		<idno type="DOI">10.1109/LICS.2013.65</idno>
	</analytic>
	<monogr>
		<title level="m">28th Annual ACM/IEEE Symposium on Logic in Computer Science, LICS 2013</title>
		<meeting><address><addrLine>New Orleans, LA, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2013">June 25-28, 2013. 2013</date>
			<biblScope unit="page" from="13" to="22" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Trainable grammars for speech recognition</title>
		<author>
			<persName><forename type="first">K</forename><surname>James</surname></persName>
		</author>
		<author>
			<persName><surname>Baker</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The Journal of the Acoustical Society of America</title>
		<imprint>
			<biblScope unit="volume">65</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="132" to="S132" />
			<date type="published" when="1979">1979</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">A robust class of linear recurrence sequences</title>
		<author>
			<persName><forename type="first">Corentin</forename><surname>Barloy</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Nathanaël</forename><surname>Fijalkow</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Nathan</forename><surname>Lhote</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Filip</forename><surname>Mazowiecki</surname></persName>
		</author>
		<idno type="DOI">10.4230/LIPIcs.CSL.2020.9</idno>
	</analytic>
	<monogr>
		<title level="m">28th EACSL Annual Conference on Computer Science Logic, CSL 2020</title>
		<meeting><address><addrLine>Barcelona, Spain</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2020">January 13-16, 2020. 2020</date>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page" from="1" to="9" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Polynomial automata: Zeroness and applications</title>
		<author>
			<persName><forename type="first">Michael</forename><surname>Benedikt</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Timothy</forename><surname>Duff</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Aditya</forename><surname>Sharad</surname></persName>
		</author>
		<author>
			<persName><forename type="first">James</forename><surname>Worrell</surname></persName>
		</author>
		<idno type="DOI">10.1109/LICS.2017.8005101</idno>
	</analytic>
	<monogr>
		<title level="m">32nd Annual ACM/IEEE Symposium on Logic in Computer Science, LICS 2017</title>
		<meeting><address><addrLine>Reykjavik, Iceland</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2017">June 20-23, 2017. 2017</date>
			<biblScope unit="page" from="1" to="12" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Extending Parikh&apos;s theorem to weighted and probabilistic context-free grammars</title>
		<author>
			<persName><forename type="first">Vijay</forename><surname>Bhattiprolu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Spencer</forename><surname>Gordon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mahesh</forename><surname>Viswanathan</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-3-319-66335-7_1</idno>
	</analytic>
	<monogr>
		<title level="m">Quantitative Evaluation of Systems -14th International Conference, QEST 2017</title>
		<meeting><address><addrLine>Berlin, Germany</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2017">September 5-7, 2017. 2017</date>
			<biblScope unit="page" from="3" to="19" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Weighted automata and weighted logics</title>
		<author>
			<persName><forename type="first">Manfred</forename><surname>Droste</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Paul</forename><surname>Gastin</surname></persName>
		</author>
		<idno type="DOI">10.1016/j.tcs.2007.02.055</idno>
	</analytic>
	<monogr>
		<title level="j">Theor. Comput. Sci</title>
		<imprint>
			<biblScope unit="volume">380</biblScope>
			<biblScope unit="issue">1-2</biblScope>
			<biblScope unit="page" from="69" to="86" />
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Handbook of Weighted Automata</title>
		<author>
			<persName><forename type="first">Manfred</forename><surname>Droste</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Werner</forename><surname>Kuich</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Heiko</forename><surname>Vogler</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2009">2009</date>
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
	<note>1st edition</note>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Word-mappings of level 2</title>
		<author>
			<persName><forename type="first">Julien</forename><surname>Ferté</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Nathalie</forename><surname>Marin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Géraud</forename><surname>Sénizergues</surname></persName>
		</author>
		<idno type="DOI">10.1007/s00224-013-9489-5</idno>
	</analytic>
	<monogr>
		<title level="j">Theory Comput. Syst</title>
		<imprint>
			<biblScope unit="volume">54</biblScope>
			<biblScope unit="issue">1</biblScope>
			<biblScope unit="page" from="111" to="148" />
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Iterated pushdown automata and sequences of rational numbers</title>
		<author>
			<persName><forename type="first">S</forename><surname>Fratani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Géraud</forename><surname>Sénizergues</surname></persName>
		</author>
		<idno type="DOI">10.1016/j.apal.2005.12.004</idno>
	</analytic>
	<monogr>
		<title level="j">Ann. Pure Appl. Logic</title>
		<imprint>
			<biblScope unit="volume">141</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="363" to="411" />
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">The Parikh property for weighted context-free grammars</title>
		<author>
			<persName><forename type="first">Pierre</forename><surname>Ganty</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Elena</forename><surname>Gutiérrez</surname></persName>
		</author>
		<idno type="DOI">10.4230/LIPIcs.FSTTCS.2018.32</idno>
	</analytic>
	<monogr>
		<title level="m">38th IARCS Annual Conference on Foundations of Software Technology and Theoretical Computer Science, FSTTCS 2018</title>
		<meeting><address><addrLine>Ahmedabad, India</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2018">December 11-13, 2018. 2018</date>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="page" from="1" to="32" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">On some non-holonomic sequences</title>
		<author>
			<persName><forename type="first">Stefan</forename><surname>Gerhold</surname></persName>
		</author>
		<ptr target="http://www.combinatorics.org/Volume_11/Abstracts/v11i1r87.html" />
	</analytic>
	<monogr>
		<title level="j">Electr. J. Comb</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="issue">1</biblScope>
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
		<title level="m" type="main">Skolem&apos;s problem-on the border between decidability and undecidability</title>
		<author>
			<persName><forename type="first">Vesa</forename><surname>Halava</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Tero</forename><surname>Harju</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Mika</forename><surname>Hirvensalo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Juhani</forename><surname>Karhumäki</surname></persName>
		</author>
		<idno>683</idno>
		<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
		<respStmt>
			<orgName>Turku Centre for Computer Science</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical Report</note>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">The Concrete Tetrahedron -Symbolic Sums, Recurrence Equations, Generating Functions, Asymptotic Estimates</title>
		<author>
			<persName><forename type="first">Manuel</forename><surname>Kauers</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Peter</forename><surname>Paule</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-3-7091-0445-3</idno>
	</analytic>
	<monogr>
		<title level="j">Texts &amp; Monographs in Symbolic Computation</title>
		<imprint>
			<date type="published" when="2011">2011</date>
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Quantitative monadic second-order logic</title>
		<author>
			<persName><forename type="first">Stephan</forename><surname>Kreutzer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Cristian</forename><surname>Riveros</surname></persName>
		</author>
		<idno type="DOI">10.1109/LICS.2013.16</idno>
	</analytic>
	<monogr>
		<title level="m">28th Annual ACM/IEEE Symposium on Logic in Computer Science, LICS 2013</title>
		<meeting><address><addrLine>New Orleans, LA, USA</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2013">June 25-28, 2013. 2013</date>
			<biblScope unit="page" from="113" to="122" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<author>
			<persName><forename type="first">Serge</forename><surname>Lang</surname></persName>
		</author>
		<title level="m">Algebra. Graduate Texts in Mathematics</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title level="a" type="main">Copyless cost-register automata: Structure, expressiveness, and closure properties</title>
		<author>
			<persName><forename type="first">Filip</forename><surname>Mazowiecki</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Cristian</forename><surname>Riveros</surname></persName>
		</author>
		<idno type="DOI">10.1016/j.jcss.2018.07.002</idno>
	</analytic>
	<monogr>
		<title level="j">J. Comput. Syst. Sci</title>
		<imprint>
			<biblScope unit="volume">100</biblScope>
			<biblScope unit="page" from="1" to="29" />
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title level="a" type="main">On linear recurrence sequences and loop termination</title>
		<author>
			<persName><forename type="first">Joël</forename><surname>Ouaknine</surname></persName>
		</author>
		<author>
			<persName><forename type="first">James</forename><surname>Worrell</surname></persName>
		</author>
		<ptr target="https://dl.acm.org/citation.cfm?id=2766191" />
	</analytic>
	<monogr>
		<title level="j">SIGLOG News</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">2</biblScope>
			<biblScope unit="page" from="4" to="13" />
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<analytic>
		<title level="a" type="main">Sequences of level 1</title>
		<author>
			<persName><forename type="first">Géraud</forename><surname>Sénizergues</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-3-540-74510-5_6</idno>
	</analytic>
	<monogr>
		<title level="m">Computer Science -Theory and Applications, Second International Symposium on Computer Science in Russia, CSR 2007</title>
		<meeting><address><addrLine>Ekaterinburg, Russia</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2007">September 3-7, 2007. 2007</date>
			<biblScope unit="page" from="24" to="32" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
