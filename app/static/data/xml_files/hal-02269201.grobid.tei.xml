<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">DISPERS: Securing Highly Distributed Queries on Personal Data Management Systems</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author role="corresp">
							<persName><forename type="first">Julien</forename><surname>Loudet</surname></persName>
							<email>julien@cozycloud.cc</email>
							<affiliation key="aff0">
								<address>
									<settlement>Cozy Cloud</settlement>
									<country key="FR">France</country>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="institution">INRIA Saclay</orgName>
								<address>
									<country key="FR">France</country>
								</address>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="institution">University of Versailles</orgName>
								<address>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Iulian</forename><surname>Sandu-Popa</surname></persName>
							<affiliation key="aff1">
								<orgName type="institution">INRIA Saclay</orgName>
								<address>
									<country key="FR">France</country>
								</address>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="institution">University of Versailles</orgName>
								<address>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Luc</forename><surname>Bouganim</surname></persName>
							<affiliation key="aff1">
								<orgName type="institution">INRIA Saclay</orgName>
								<address>
									<country key="FR">France</country>
								</address>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="institution">University of Versailles</orgName>
								<address>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">DISPERS: Securing Highly Distributed Queries on Personal Data Management Systems</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">5F9EFA3323B5E9E7EC369DD33042A1E6</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.8.0" ident="GROBID" when="2024-04-12T14:48+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Personal Data Management Systems (PDMS) advance at a rapid pace allowing us to integrate all our personal data in a single place and use it for our benefit and for the benefit of the community. This leads to a significant paradigm shift since personal data become massively distributed and opens an important question: how to query this massively distributed data in an efficient, pertinent and privacy-preserving way? This demonstration proposes a fully-distributed PDMS called DISPERS, built on top of SEP2P <ref type="bibr" target="#b10">[11]</ref>, allowing users to securely and efficiently share and query their personal data. The demonstration platform graphically illustrates the query execution in details, showing that DISPERS leads to maximal system security with low and scalable overhead. Attendees are welcome to challenge the security provided by DISPERS using the proposed hacking tools.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">INTRODUCTION</head><p>Thanks to smart disclosure initiatives <ref type="bibr" target="#b4">[5]</ref> and new regulations <ref type="bibr" target="#b7">[8]</ref>, we can access our personal data from the companies or government agencies that collected them. Concurrently, Personal Data Management System (PDMS) solutions arise both in academia <ref type="bibr" target="#b0">[1]</ref> and industry <ref type="bibr" target="#b5">[6]</ref>. The goal is to offer a data platform allowing users to easily store into a single place any personal data: (i) directly generated by user devices (e.g., quantified-self data, smart home data, photos, etc.) and (ii) user interactions (e.g., user preferences, social interaction data, health, bank, etc.). Users can then leverage the power of their PDMS to use the data for their own good and in the benefit of the community. Thus, the PDMS paradigm holds the promise of unlocking new innovative usages developed around personal data. A prominent example of novel usages is related to the computations between a large number of PDMSs (e.g., recommendations, participative studies, collective decisions).</p><p>Yet, these exciting perspectives should not eclipse the security issues raised by this novel paradigm. Indeed, each PDMS potentially stores its owner's entire digital life, proportionally increasing the impact of a leak. Hence, it is risky to centralize all user data on powerful servers as these servers become highly desirable targets. Huge amounts of personal data belonging to millions of individuals could be leaked as illustrated by recent massive attacks <ref type="bibr" target="#b8">[9]</ref>. Besides, such a centralized solution makes little sense in the PDMS context where data is naturally distributed at the users' side.</p><p>Fortunately, Trusted Execution Environments (TEE) (i.e., secure hardware <ref type="bibr" target="#b1">[2]</ref> such as secure micro-controllers, ARM TrustZone, or Intel SGX <ref type="bibr" target="#b11">[12]</ref>) are also rising and their use in the PDMS context leads to trustworthy computational data platforms. However, since no security measure (be it software or hardware-based) can be considered as unbreakable, we cannot exclude having some corrupted nodes in the system and, even worse, those corrupted PDMS can collude and be undistinguishable from honest nodes (covert adversaries <ref type="bibr" target="#b2">[3]</ref>). In this work, we assume that a PDMS is secured thanks to a TEE, but might act as a covert adversary; it offers high connectivity and availability and can establish peer-to-peer (P2P) connections with other PDMSs. Hence, we envision a fully distributed architecture of PDMSs in which participants can create large communities, contribute with their personal data and issue queries over the globally contributed data. In this context, an important issue needs to be addressed: how to query this massively distributed data in a pertinent, efficient and privacy-preserving way?</p><p>DISPERS leverages three design principles to securely query the users' data; namely knowledge dispersion to protect data-at-rest, task compartmentalization to protect datain-use, and imposed randomness to assign data processing tasks to PDMS nodes in a verifiable random way, based on SEP2P <ref type="bibr" target="#b10">[11]</ref>. This previous work focuses on the imposed randomness principle proposing a generic solution, analyzing its security and showing its efficiency and scalability even with a large number of colluding nodes.</p><p>To the best of our knowledge, DISPERS is the first protocol dealing with pertinent, efficient and secure query processing over personal data in a fully-distributed system. DIS-PERS goes beyond classical solutions (see <ref type="bibr" target="#b10">[11]</ref>) that have been proposed in areas such as secure DHT <ref type="bibr" target="#b16">[17]</ref> (which mainly focus on routing attacks), secure multi-party computation <ref type="bibr" target="#b12">[13]</ref> (which lack genericity and scalability) or distributed data aggregation using secure hardware <ref type="bibr" target="#b15">[16]</ref> (which do not consider a large number of corrupted nodes). Note also that consensus protocols and Byzantine fault tolerant systems address a different problem and generally improve availability and integrity using replication which hurts data confidentiality <ref type="bibr" target="#b17">[18]</ref>.</p><p>Sections 2 and 3 give an overview of the of the data, query and threat models, and of the proposed solution respectively (see <ref type="bibr" target="#b10">[11]</ref> for additional details). Section 4 present the demonstration platform and scenario, also explained in a video <ref type="bibr" target="#b9">[10]</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">QUERY AND THREAT MODELS</head><p>User Profile. To achieve a high degree of pertinence in our system, each query only targets the subset of PDMSs exposing a given user profile: a structured description indicating the user's attributes (e.g. location, age, interests).</p><p>1 Besides pertinence, a second benefit of user profiles is to increase query processing efficiency by avoiding flooding the entire network with each query. A profile pi extracted by PDMSi is a set of concepts pi = {co 1 i , co 2 i , • • • , co k i }. Each concept co is the concatenation of one or more metadata terms describing its semantics and a value, e.g., location -Versailles, age -37, occupation -researcher. Query Model. In this demonstration, we consider classical aggregate queries (e.g., average, top-k, group-by, etc.) over the data supplied by the subset of nodes targeted by the query. Such queries allow users to compute generic statistics (e.g., recommendations of films). In DISPERS, a query is a triplet: (i) target profile -a logical expression of concepts indicating which nodes, called targets, qualify to answer; (ii) local query -the expression of the query to be computed locally by each target; and (iii) aggregate query -an aggregative expression applied over the local query results.</p><p>Let us consider three examples of DISPERS query types: (i) closed item list: given a set of movies find their average grade as given by researchers living in Lisbon; (ii) open item list: get the top-10 ranked movies by researchers living in New York; (iii) statistics: what is the average number of sick leave days in 2017 of researchers living in Paris.</p><p>While the data and query model definitions and expressivity are significant issues, the system security is paramount for gaining users' trust and encouraging them to contribute with their data, justifying our focus on privacy preservation. Threat Model. We make the following assumptions:</p><p>(1) Each PDMS device is supplied with a trustworthy certificate attesting that it is genuine. Otherwise, an attacker can easily emulate nodes (Sybil attack) and master a large proportion of nodes, thus defeating any countermeasure. With the TEE protection, we already offer a certain level of security at the node and system levels. Yet, no hardware security can be described as unbreakable.</p><p>(2) Some nodes may be corrupted by a lab attack. A lab attack is the most advanced, comprehensive and invasive hardware attack for which the attacker has access to laboratory equipment and performs reverse engineering of a device.</p><p>(3)Corrupted nodes are covert adversaries. They only derive from the protocol if they cannot be detected <ref type="bibr" target="#b2">[3]</ref>, as detected malicious behavior leads to exclusion.</p><p>The main objective of DISPERS it to offer protection beyond the TEE security. Therefore, our threat model considers colluding attackers, conducting lab attacks on their PDMS, thus mastering a set of corrupted nodes, called colluding nodes. We assume that the maximum number of colluding nodes mastered by a single or colluding attackers can be (over)estimated and will be used to calibrate DISPERS.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">PROPOSED SOLUTION</head><p>Relying on a fully-distributed system requires a communication overlay allowing for efficient node discovery, data indexing and search. A distributed hash table (DHT) <ref type="bibr" target="#b14">[15]</ref> offers an optimized means to locate the node(s) storing a specific data item. The DHT provides an interface allowing any node to store or to search for an item. Hence, DIS-PERS leverages the classical DHT techniques as a basis for communication efficiency and scalability.</p><p>To query our system in a secure and efficient manner, we build a distributed protocol on top of this P2P overlay relying exclusively on PDMS nodes. This implies some unavoid-able data disclosure risk whenever a colluding node (covert adversary) is selected as a query actor. Therefore, to maximize the system security, we need to minimize the benefit of corrupting a node. This translates into two requirements: R1: Minimize the private information any node could have access to whenever it is assigned with a data related task. R2: Ensure that an attacker controlling several colluding nodes cannot influence the selection of the processing nodes.</p><p>Our query protocol relies on three design principles described below, which, combined, answer both requirements. Knowledge dispersion. No single (or few) node(s) should store a significant amount of sensitive data, unless it owns that data.</p><p>To efficiently evaluate a query in DISPERS, we first need to obtain the list of node addresses that match the target profile. This requires the maintenance of a profile index that associates profile concepts to node addresses. The knowledge dispersion design principle aims at protecting the data-atrest which is thus composed of: (i) the profile index; and (ii) the personal data of each PDMS owner, which is de facto protected (locally secure). We distributively store the index in the DHT: each node is responsible for a set of concepts and indexes all the node addresses matching one of them. A node that stores a concept index is called a Concept Indexer (CI). Even though the DHT uniformly distributes the knowledge among the nodes, if one node were to be corrupted, it could access the entire list of IP addresses corresponding to the set of concepts it indexes. We reinforce the knowledge dispersion by splitting each IP address into s shares using Shamir's Secret Sharing scheme <ref type="bibr" target="#b13">[14]</ref>. Then, at least p (p ≤ s) shares are required to reconstruct the secret. Disclosing a single concept index (i.e., the list of IP addresses sharing this concept) now requires p colluding nodes which are randomly selected (using the DHT). Based on this distributed profile indexing, a naive query protocol can be easily designed: Naive protocol (see Figure <ref type="figure" target="#fig_0">1</ref>):</p><formula xml:id="formula_0">T CI Q<label>5</label></formula><p>1. The querier (Q) searches the CIs using the DHT; 2. The CIs reply with the shares of IP address lists; 3. Q selects the final Targets (Ts) using the target profile; 4. Q sends the local query to the Ts; 5. The Ts answer with their local results; 6. Q computes the aggregate query result.</p><p>However, this protocol exposes two major shortcomings both resulting from the central position of the querier. First, a corrupted querier may have access to the list of targets, their local query results and the association between targets and local results, i.e., all the sensitive data! Second, this protocol is not efficient as the querier acts as a bottleneck. Thus, thanks to the first design principle, the data-at-rest is protected, but the data-in-use -used to compute the query result -is still open to attacks. Task compartmentalization. The execution must be split into atomic tasks assigned to distinct actors who must have access to the minimum information to perform their task.</p><p>Analyzing the naive protocol leads to identifying three different roles cumulated by the querier: (1) contacting the DISPERS Demonstration Platform QUERY PARAMETERS Closed item list: "given a set of 10 movies, find their average grade as given by researchers or professors living in Lisbon" Compartmentalized protocol (see Figure <ref type="figure">2</ref>, top-left corner)</p><p>1. Q selects the actors and searches (DHT) for the CIs; 2. The CIs distribute their shares of IP addresses to the TFs; 3. The TFs apply the target profile and contact the targets (Ts) using anonymous communications (e.g., TOR like <ref type="bibr" target="#b6">[7]</ref>) 1 ; 4. The Ts send their local results to a randomly chosen DA, still using anonymous communications; 5. The DAs compute and send partial aggregates to the MDA; 6. The MDA computes the final result.</p><p>Distributing the query processing on several distinct actors increases parallelism and thus query processing efficiency. More importantly, it offers a maximum degree of task compartmentalization, i.e., inter-task, involving distinct dedicated actors for both target computation and data aggregation tasks; and intra-task, since several actors are chosen for each query task. Moreover, the metadata is also compartmentalized as only the required information is given to the query actors and, when possible, even pseudonymized. Nevertheless, an attacker controlling several nodes may influence the choice of query actors in order to control some 1 The goal of the anonymous communications (steps 2 and 3) is to prevent an attacker spying the communications of the TFs or DAs from learning the targets' IP addresses w.r.t. a given query.</p><p>TFs and DAs to obtain a large set of confidential data. We thus need to enforce a random selection of actors. Imposed randomness. The query actors must be randomly selected and that selection cannot be influenced by an attacker <ref type="bibr" target="#b10">[11]</ref>.</p><p>In practice, this principle is applied by (1) imposing the location of any node in the DHT (based on its public key);</p><p>(2) selecting k nodes in a small region "around" the querier (Region 1 in Figure <ref type="figure">2</ref>); k and the region size are computed based on the maximum number of colluding nodes in the system such that the region "never" includes k or more colluding nodes (probabilistic guarantees), i.e., at least, one of the k nodes is not corrupted -these nodes are called legitimate nodes; (3) using these nodes to generate a verifiable random number in a distributed fashion following an algorithm based on CSAR <ref type="bibr" target="#b3">[4]</ref>; (4) using this random number to designate a location in the DHT overlay, around which the actors will be selected randomly, by k legitimate actors list builders located in Region 2 of Figure <ref type="figure">2</ref>. Actors must be located in a region (Region 3 in Figure <ref type="figure">2</ref>) which size is computed based on the number of needed actors, still using probabilistic guarantees.</p><p>Thus, our protocol answers the requirement R1 by applying the knowledge dispersion and task compartmentalization principles to protect, respectively, the data-at-rest and the data-in-use during the query evaluation process. Requirement R2 is addressed by applying the imposed randomness principle in the selection of the nodes processing a query.</p><p>This guarantees that an attacker cannot obtain more private information than she can passively get by observing the data randomly reaching her corrupted nodes. Thus, the impact of an attack remains proportional to the number of colluding nodes, which is the best situation in our context. While, in theory, our protocol is agnostic to the proportion of colluding nodes, a large proportion of colluding nodes mastered by a single individual would inexorably lead to large disclosure. Given the covert adversaries assumption, this is true whatever the protocol with a reasonable overhead, but unrealistic as TEEs provide strong defenses against attackers, preventing large-scale corruption.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">DEMONSTRATION</head><p>The purpose of this demonstration is to illustrate the DIS-PERS system thanks to a simulator and a graphical frontend; and, more precisely, to demonstrate the rationale of our three design principles. Attendees may optionally hack the system, their goal being to disclose some confidential data supposed to be protected.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">Demonstration Platform and Scenario</head><p>We first introduce our approach using the graphical interface as depicted in Figure <ref type="figure">2</ref>. Attendees can select or configure a query (top) and use the command panel (middle-right) to execute one of the query protocol, change the system parameters (e.g., number of colluding nodes), or run the protocol step by step. The last button allows exhibiting figures on the security and scalability of the DISPERS protocol.</p><p>After explaining the demonstration platform, we focus on a given query and run protocols of increasing complexity and resistance to attacks, thus explaining the rationale of each design principle. We can consider different queries such as: "given a set of movies find their average grade as given by researchers or professors living in Lisbon", which can be decomposed in: (1) a target profile: (city = Lisbon) ∧ ((job = researcher) ∨ (job = professor)); (2) a local query: select grades for movies in {item list}; and (3) an aggregate query computing the grades average. Then, we present the query execution with the three protocols detailing the DISPERS protocol, which is executed in two steps -the query setup phase and the query processing phase. The video in <ref type="bibr" target="#b9">[10]</ref> explains the demonstration platform and scenario in detail.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">Hacking Game</head><p>The goal of this game is to achieve a deeper understanding of DISPERS by trying to defeat its security, e.g., exhibiting some confidential information such as the salary of a given node (let's call it Bob). Players will use a laptop, equipped with the same simulator and same graphical front-end and will be assisted by one of the demonstration authors. We expect them to defeat easily the naive protocol. Playing with the queries, the parameters and inspecting the content of colluding nodes, the attendee may obtain Bob's salary with the compartmentalized protocol but, based on <ref type="bibr" target="#b10">[11]</ref>, we are confident that this will be unfeasible with DISPERS. Attendees proposing some interesting means to try defeating DISPERS will win some goodies.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Lessons Learned</head><p>Privacy protection. The main expected outcome is to convince the audience that building a secure fully-distributed PDMS system is within reach. DISPERS protects the private data of its participants even in the presence of colluding nodes. DISPERS pushes the security level offered by TEEs much further thanks to (1) imposed randomness ensured by the SEP2P protocol <ref type="bibr" target="#b10">[11]</ref> -which guarantees that an attacker cannot influence the choice of processing nodes and get more private information than what would be obtained by passively observing the data manipulated by corrupted nodes; and (2) knowledge dispersion and task compartmentalization which reduce the data leakage to a minimum when covert adversaries are (randomly) involved in the query processing.</p><p>Efficiency and scalability. The cost of the security mechanisms remains very low even with a large number of colluding nodes. To this end, our platform provides the detailed query execution cost (i.e., both cryptographic and communication latency) with different system parameter settings.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: Naive protocol</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>3 Figure 2 :</head><label>32</label><figDesc>Figure 2: Demonstration platform screenshot</figDesc><graphic coords="4,87.82,169.06,221.60,128.44" type="bitmap" /></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Managing your digital life</title>
		<author>
			<persName><forename type="first">S</forename><surname>Abiteboul</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>André</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Kaplan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Comm. of the ACM</title>
		<imprint>
			<biblScope unit="volume">58</biblScope>
			<biblScope unit="issue">5</biblScope>
			<date type="published" when="2015">2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Personal data management systems: The security and functionality standpoint</title>
		<author>
			<persName><forename type="first">N</forename><surname>Anciaux</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Bonnet</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Bouganim</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Nguyen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Pucheral</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><forename type="middle">S</forename><surname>Popa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Scerri</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Information Systems</title>
		<imprint>
			<biblScope unit="volume">80</biblScope>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Security against covert adversaries: Efficient protocols for realistic adversaries</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Aumann</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Lindell</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Theory of Cryptography</title>
		<imprint>
			<date type="published" when="2007">2007</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Csar: A practical and provable technique to make randomized systems accountable</title>
		<author>
			<persName><forename type="first">M</forename><surname>Backes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Druschel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Haeberlen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Unruh</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Network and Distributed System Security Symp</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<author>
			<persName><forename type="first">Blue</forename><surname>Button</surname></persName>
		</author>
		<ptr target="https://www.healthit.gov/topic/health-it-initiatives/blue-button" />
		<title level="m">Find your health data</title>
		<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<ptr target="https://cozy.io/en" />
		<title level="m">Your digital home</title>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
	<note>Cozy Cloud</note>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Tor: The second-generation onion router</title>
		<author>
			<persName><forename type="first">R</forename><surname>Dingledine</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Mathewson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">F</forename><surname>Syverson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">USENIX Security Symposium</title>
		<imprint>
			<date type="published" when="2004">2004</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">General data protection regulation</title>
		<imprint>
			<date type="published" when="2016">2016</date>
			<publisher>Law</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<author>
			<persName><forename type="first">T</forename><surname>Hunt</surname></persName>
		</author>
		<ptr target="https://haveibeenpwned.com/" />
		<title level="m">-have i been pwned? largest and recent breaches</title>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<author>
			<persName><forename type="first">J</forename><surname>Loudet</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Sandu-Popa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Bouganim</surname></persName>
		</author>
		<ptr target="http://petrus.inria.fr/~bouganim/DISPERS.mp4" />
		<title level="m">DISPERS demonstration video</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">SEP2P: Secure and efficient P2P personal data processing</title>
		<author>
			<persName><forename type="first">J</forename><surname>Loudet</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Sandu-Popa</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Bouganim</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EDBT</title>
		<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Enclavedb: A secure database using SGX</title>
		<author>
			<persName><forename type="first">C</forename><surname>Priebe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Vaswani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Costa</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">IEEE Symposium on Security and Privacy</title>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Processing over encrypted data: between theory and practice</title>
		<author>
			<persName><forename type="first">E</forename><surname>Saleh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Alsa'deh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Kayed</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Meinel</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM SIGMOD Record</title>
		<imprint>
			<biblScope unit="volume">45</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="5" to="16" />
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">How to share a secret</title>
		<author>
			<persName><forename type="first">A</forename><surname>Shamir</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Communications of the ACM</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="issue">11</biblScope>
			<date type="published" when="1979">1979</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Chord: A scalable peer-to-peer lookup service for internet applications</title>
		<author>
			<persName><forename type="first">I</forename><surname>Stoica</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Morris</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Karger</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">F</forename><surname>Kaashoek</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Balakrishnan</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM SIGCOMM Computer Comm. Review</title>
		<imprint>
			<biblScope unit="volume">31</biblScope>
			<biblScope unit="issue">4</biblScope>
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Private and scalable execution of sql aggregates on a secure decentralized architecture</title>
		<author>
			<persName><forename type="first">Q.-C</forename><surname>To</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Nguyen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Pucheral</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">ACM Transactions on Database Systems (TODS)</title>
		<imprint>
			<biblScope unit="volume">41</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page">16</biblScope>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">Octopus: A secure and anonymous dht lookup</title>
		<author>
			<persName><forename type="first">Q</forename><surname>Wang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Borisov</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Distributed Computing Systems (ICDCS)</title>
		<imprint>
			<date type="published" when="2012">2012</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title level="a" type="main">Separating agreement from execution for byzantine fault tolerant services</title>
		<author>
			<persName><forename type="first">J</forename><surname>Yin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J.-P</forename><surname>Martin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Venkataramani</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Alvisi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Dahlin</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">ACM Symposium on Operating Systems Principles (SOSP)</title>
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
