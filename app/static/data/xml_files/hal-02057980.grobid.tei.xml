<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">A Linked Data Model for Facts, Statements and Beliefs</title>
				<funder ref="#_k4CuUrj">
					<orgName type="full">Agence Nationale de la Recherche</orgName>
					<orgName type="abbreviated">ANR</orgName>
				</funder>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Ludivine</forename><surname>Duroyon</surname></persName>
							<email>ludivine.duroyon@irisa.fr</email>
						</author>
						<author>
							<persName><forename type="first">François</forename><surname>Goasdoué</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Ioana</forename><surname>Manolescu</surname></persName>
							<email>ioana.manolescu@inria.fr</email>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">Univ Rennes</orgName>
								<orgName type="institution" key="instit2">Inria</orgName>
								<orgName type="institution" key="instit3">CNRS</orgName>
								<orgName type="institution" key="instit4">IRISA Lannion</orgName>
								<address>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="institution" key="instit1">Univ Rennes</orgName>
								<orgName type="institution" key="instit2">Inria</orgName>
								<orgName type="institution" key="instit3">CNRS</orgName>
								<orgName type="institution" key="instit4">IRISA Lannion</orgName>
								<address>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="laboratory" key="lab1">Inria and LIX (</orgName>
								<orgName type="laboratory" key="lab2">UMR 7161</orgName>
								<orgName type="institution">CNRS</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff3">
								<orgName type="institution">Ecole Polytechnique)</orgName>
								<address>
									<settlement>Palaiseau</settlement>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">A Linked Data Model for Facts, Statements and Beliefs</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">5018C582C4DFFECD59A59B6F88BB8AAA</idno>
					<idno type="DOI">10.1145/3308560.3316737</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.8.0" ident="GROBID" when="2024-04-12T14:54+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Data journalism</term>
					<term>linked data</term>
					<term>fact-checking</term>
					<term>tweet analysis</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>A frequent journalistic fact-checking scenario is concerned with the analysis of statements made by individuals, whether in public or in private contexts, and the propagation of information and hearsay ("who said/knew what when"). Inspired by our collaboration with fact-checking journalists from Le Monde, France's leading newspaper, we describe here a Linked Data (RDF) model, endowed with formal foundations and semantics, for describing facts, statements, and beliefs. Our model combines temporal and belief dimensions to trace propagation of knowledge between agents along time, and can answer a large variety of interesting questions through RDF query evaluation. A preliminary feasibility study of our model incarnated in a corpus of tweets demonstrates its practical interest.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>data in this way, an endless spectrum of fine-granularity analyses can be applied by leveraging a database management system. Time plays an important role in our setting, since we must capture when events occur (or when facts hold), and when different statements are made about them; this serves, for instance, to track position reversals in time, or to keep track of promises <ref type="foot" target="#foot_2">3</ref> . Therefore, we incorporate and extend temporal database elements into our model. Further, we take inspiration from classical AI techniques for modeling agents' beliefs in order to correctly reflect the connections between actors and their statements. Finally, we adopt the W3C's Resource Description Framework (RDF) concrete graph data model to make databases described in our model easy to share and combine (link) with any other RDF dataset, e.g., one that classifies actors according to their political opinions, connections to companies etc., to enable even more analyses.</p><p>Beyond being "white-box" (as opposed to models not publicly shared, used by existing media analysis tools), the biggest advantage of our proposed model is to be comprehensive (modeling all the above aspects: facts, agents, beliefs, and information propagation), interoperable (being RDF), extensible (other data sources can be turned into instances of our model) and endowed with formal semantics. Our second contribution, beside the model, is to show how we can exploit it through queries, both interesting and feasible with off-the-shelf tools.</p><p>The remainder of this paper is organized as follows. We recall some preliminaries, present our model, and illustrate interesting queries on its instances. We describe preliminary experiments in a concrete use case, briefly discuss related works, then conclude.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">PRELIMINARIES</head><p>We present next the notions of RDF graphs <ref type="bibr" target="#b15">[16]</ref> and how they can be queried with the popular conjunctive fragment of SPARQL <ref type="bibr" target="#b16">[17]</ref>.</p><p>RDF graphs. An RDF graph is a set of triples (s, p, o) where s is termed the subject, p the property, and o the object; such a triple states that s is described with the property p that has value o. Wellformed triples, as per the RDF specification, belong to (I ∪ B) × I × (I ∪ L ∪ B), where I is a set of Internationalized Resource Identifiers (IRIs in short), L is a set of literals (constants), and B is a set of blank nodes that, similarly to labeled nulls <ref type="bibr" target="#b0">[1,</ref><ref type="bibr" target="#b8">9]</ref>, representing unknown IRI or literal values.</p><p>Notation. Blank node names start with the letter b and literals are written as string between quotes, e.g., "string".</p><p>An RDF graph models a set of assertions, each of which expresses either an instance of class (unary relation) or an instance of property (binary relation). The syntax of these assertions is shown in Table 1; we introduce the shorthand notation τ to denote the standard rdf:type property, recommended by the W3C for specifying the class(es) to which a resource belongs. Querying RDF. SPARQL is the W3C's standard to query RDF graphs. We consider the popular SPARQL conjunctive queries, a.k.a. Basic Graph Pattern Queries (or BGPQs, in short), a core subset of SPARQL 1.1. In particular, we consider BGPQs extended with property paths.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>RDF statement</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Triple</head><p>A BGPQ q is of the form q( x) ← t 1 , . . . , t n where t 1 , • • • , t n are generalized triples called triple patterns, in which variables may be used as subject, property or object; x is the set of q's answer variables, which is a subset of the variables used in</p><formula xml:id="formula_0">t 1 , • • • , t n .</formula><p>Example 2.2 (BGPQ). The query below asks for the presidential candidates and their collaborators: q(x, y) ← (x, candidateFor, president), (y, worksFor, x)</p><p>Its answer on the triples in Example 2.1 is: (D.Trump, M.D.Cohen).</p><p>Further, in our BGPQs, we allow the use of a property paths in the property position of triple patterns. A property path is recursively defined as either a URI, a variable, or a regular expression on property paths among: p 1 |p 2 for alternative property paths, p 1 /p 2 for a sequence of property paths, p 1 ? for a property path that occur at most once, p + for a property path that occur at least once, and p * for a property path that may not occur or may occur at least once.</p><p>Example 2.3 (BGPQ with property path). The query below asks for those who work for sombody visiting Moscow: q(x) ← (x, worksFor/visits, Moscow)</p><p>Its answer on the triples in Example 2.1 is: M.D.Cohen.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">DATA MODEL</head><p>We now describe our data model capable of modeling (timed) beliefs, facts and statements.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Agents, Time, Facts and Beliefs</head><p>Agents can be individuals, organizations (e.g., companies, media etc.), or other "party" which make statements or learn about them.</p><p>In </p><formula xml:id="formula_1">∪ . . . ∪ ι k = ι ′ 1 ∪ . . . ∪ ι ′ l .</formula><p>It is easy to see that I ′ is well-defined, that is: for any I , I ′ exists and it is unique. Clearly, I ′ has at most as many intervals as <ref type="bibr">[2002, now]</ref>. We call temporal normalization the procedure which given a set of intervals {ι 1 , ι 2 , . . . , ι k } computes the disjoint set of intervals {ι ′ 1 , ι ′ 2 , . . . , ι ′ l } described above. From now on, we consider that time is normalized set of intervals; we use ι, possibly with indices, to denote them.</p><formula xml:id="formula_2">I , i.e., l ≤ k. For instance, if k = 3, ι 1 = [1998, 1999], ι 2 = [2002, 2005] and ι 3 = [2003, now], we have l = 2, ι ′ 1 = [1998, 1999] and ι ′ 2 =</formula><p>We model intervals as RDF ressources having the type Interval. Each interval has a begin and an end property specifying the interval bounds, whose values are either of type dateTime, or a special constant called now. To represent time as a set of intervals, we use an RDF ressource of type Time and a property hasInterval taking values of type Interval.</p><p>Example 3.2. The time t 0 is the union of the two intervals ι 0 = [2018-04-07T16:00;2018-04-07T19:30], i.e., that starts on April 7, 2018 at 4:00 PM and ends on April 7, 2018 at 7:30 PM, and ι 1 = [2018-04-07T21:00;2018-04-07T22:30]. This is stated in RDF as:</p><formula xml:id="formula_3">(t 0 , τ , Time), (t 0 , hasInterval, ι 1 ), (t 0 , hasInterval, ι 2 ) (ι 1 , τ , Interval), (i 2 , τ , Interval), (ι 1 , begin, 2018-04-07T16:00), (ι 1 , end, 2018-04-07T19:30), (ι 2 , begin, 2018-04-07T21:00)(ι 2 , end, 2018-04-07T22:30).</formula><p>For simplicity, if a time is a single interval, we directly associate a begin and an end to a time. For instance if t 0 is only ι 1 then we write : (t 0 , begin, 2018-04-07T16:00), (t 0 , end, 2018-04-07T19:30). Fact is used to designate in a generic way any real-life event recorded in the database. In the following, we denote facts by their IDs F 1 , F 2 etc. and model each fact as an RDF resource of type Fact. Each fact has a time property specifying when the fact is supposed to occur. Further information about the fact itself is the value of the property description; this can be e.g., a text, or an RDF resource having more properties etc. We assume that time and sign information are always attached to facts, e.g., an interval [-∞, +∞] for facts that are always true etc. If the database features (F, time, t 1 ) and (F, time, t 2 ) with t 1 t 2 , we represent this as a single fact F with time t 1 ∪ t 2 .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Example 3.3 (Fact). The fact "Trump conducted business in</head><p>Moscow on July 2-3, 2016" is represented as: This small RDF graph together with those corresponding to the next two examples are sketched in Figure <ref type="figure" target="#fig_3">1</ref>; oval nodes denote URIs, while text nodes correspond to literals. Some information such as edge labels, triples stating the time of t 1 , t 2 etc. are ommitted to avoid clutter; URIs representing agents are signaled by a "user" pictogram. The reason why some nodes have a yellow background will be discussed shortly.</p><formula xml:id="formula_4">(F 1 , τ , Fact), (F 1 , time,</formula><p>Beliefs relate agents with the things they believe; we model them as resources of the dedicated RDF type Belief. In this work, we use "believe" to model any among: having knowledge (being informed) of, thinking or believing something etc. A belief can be a positive belief (the agent believes something) or a negative one (the agent doesn't believe it). A belief is characterized by: (i) the agent holding the belief, which is the value of a from property whose subject is the belief; (ii) the time when the agent holds the belief, represented by a time property; (iii) the belief subject, which is the value of a believes property, can be a fact (either one we consider to hold, or one of which we only know that it is stated or believed by some agent), a communication, or another belief; (iv) finally, a sign property whose values can be + or -, indicating whether the agent actually believes the subject of the belief, or not. For simplicity, we assume the sign property is present only when its value is -; when it is not present, we assume its value is +, i.e., the agent does hold the belief.</p><p>Example 3.4 (Beliefs). J. Mueller believes since January 5, 2017, and up to now that D. Trump conducted business Moscow in July 2016. Building on the fact F 1 from Example 3.3, we denote this by: (B 1 , τ , Belief), (B 1 , sign, +), (B 1 , from, J.Mueller), (B 1 , time, t 2 ), (t 2 , begin, 2017-01-05), (t 2 , end, now), (B 1 , believes, F 1 ).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Belief sharing: communications</head><p>Information (beliefs) spread through time through communications. Each communication is characterized by: (i) an agent who is the transmitter, indicated by its from property; (ii) optionally, one or more agents who are the receivers, indicated by the to property; (iii) a subject, which is the value of the communicates property, which can be a fact, a belief or another communication; (iv) a sign, whose value is given by a sign property + or -, indicates whether the agent actually agrees or disagrees with the subject of the communication; (v) a time encoded by the time property. If the receiver is not specified, we assume it is a public communications. These are considered available to anyone, e.g., anyone can have access to the newspaper, TV, Web source where the communication was made. Communications with one or more specific receivers are considered private; only the transmitter and the receiver are assumed aware of this communication.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.3">Records and databases</head><p>The above examples show that some facts are considered stated as such in the database, e.g., F 1 in Example 3.3, whereas others are not, hence not declared true in the database, but merely believed or communicated by some agents whether they are actually true or not. For instance, the database may state M. D. Cohen believes that D. Trump was on holidays in Moscow in July 2016, in which case the fact that D. Trump was on holidays in Moscow in July 2016 just holds according to M. D. Cohen within the database. Similarly, the database may state that an agent A holds a belief, or makes a communication, but this is different from the database stating that according to agent B, agent A believes, respectively communicates it. In the former case, something holds according to the database, i.e., is considered an undisputed assertion; in the latter, the database merely states that something just holds according to B. Records We introduce a special type Record which we attach to any fact, belief or communication that holds according to the database, i.e., that the database declares to be true. Note that each record may be the root of a potentially long chain of beliefs and communications; each such chain ends in a Fact <ref type="foot" target="#foot_5">6</ref> . We illustrate this below by revisiting the examples above.</p><p>Example 3.6 (Records). In Example 3.3, F 1 holds according to the database. Thus, the triple (F 1 , τ , Record) is also part of the encoding of the fact F in our data model; in Figure <ref type="figure" target="#fig_3">1</ref>, nodes of type Record are shown on a yellow background.</p><p>In Example 3.4, the belief B 1 holds according to the database. Thus, the triples (B 1 , τ , Record) is also part of it.</p><p>Similarly, in Example 3.5, the communications C 1 , C 2 took place according to the database, hence the triples (C 1 , τ , Record) and (C 2 , τ , Record) are part of it. However, the belief B 2 is not a database record, because it only holds according to J. Mueller, who communicates on it.</p><p>Database Based on the elements introduced above, a database can be seen as a set of fact, belief and communication records, encoded by a set of RDF triples as discussed above. Figure <ref type="figure" target="#fig_3">1</ref> displays such a database, in which F 1 , B 1 , C 1 , C 2 are the database records.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.4">Use case: political Twitter scenario</head><p>As a particular instantiation of this data model, we have built a database for a French political tweet analysis scenario, as follows. We have subscribed to, and archived, tweets from elected officials, ministries, politicians etc.; over Sept-Dec 2018, we obtained a total of 900.000 tweets (4.57GB in JSON format). Out of these, we produced an instance of our RDF data model of size 4.5GB, as follows. Each tweet is a public Communication, by an agent who is the twitter account. Since each tweet has certainly occurred, it is also a Record. The time of the tweet is a point interval (with the beginning equal to its end). What the tweet communicates depends on the nature of the tweet. (i) The content of a simple tweet is a text message and possibly photos, links,hashtags and/or agents mentioned; all these can be easily extracted from the corresponding fields within the JSON tweet format. We represent such a tweet content by a Fact which is also a Record. Each such Fact has an ID described by the above mentioned features extracted from the JSON tweet, using the following properties: text for the tweet text message, urlPhoto for the photos, urlMedia for the links and hashtag for the hashtags. Further, if the tweet t, by agent @a, whose content is modeled by the fact f , mentions another agent (Twitter user) @b, we create a communication from @a to @b, with the same time moment as t, whose content is the same fact f . (ii) The other tweets are either retweets, answers to a tweet, or tweets that quote another tweet; each of this is a tweet t 1 based on another tweet t 0 . From t 1 , we build a Communication with time and author as above; however, it will be based on the communication corresponding to the content of t 0 . Further, answers and quotes (but not retweets) may also have some content of their own; we model that by a new Comment subclass of Fact, and an addsComment property which goes from the Communication which models t 1 , to the actual text of the answer (or quote) t 1 .</p><p>Example 3.7 (Tweets). Tweet t 0 from the PublicSénat TV station reads: "#Benalla affair : @CCastaner accuses senators of threatening the republic" with a link to his webpage. A communication c 0 from @publicsenat is created, associated to the fact f 0 of the text, the link, and the hashtag. Another communication c 0bis from @publicsenat to @CCastaner on f 0 is created. Twitter user @PadrePio quotes t 0 in his tweet t 1 , adding "The new Minister of the Interior, also!" This leads to a communication c 1 from @PadrePio, on c 0 (the declaration of @publicsenat). c 1 has also a comment co 1 with his text.</p><p>Further, we used an open dataset about the French National Assembly<ref type="foot" target="#foot_6">7</ref> , which we also converted in RDF; this includes the Twitter account information, enabling to connect the tweets to more information about their authors. We added a database of French politician Twitter accounts that journalists from Le Monde shared with us, leading to a total of 48.877 triples describing French political Twitter users.</p><p>Our complete corpus (dominated by the triples describing tweets) has 20.697.338 RDF triples. All its Facts and Communications are Records, i.e., there is no "hearsay" (nothing is hypothetical). However, this scenario is sufficient to enable studying the performance of queries that go along chains of Communications: these are materialized by retweets, answers, and/or quotes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">QUERYING OUR DATA MODEL</head><p>Many interesting queries can be written on an instance of our data model. A few examples include: (i) What did M. X. state on date D in his interview with journal J? (ii) What is the fact on which members of the political party PA communicate most often, that members of the political party PB do not mention at all? (iii) What are the facts on which M. X and Mrs. Y disagree (he believes it whereas she does not)? (iv) Which are the facts from a given knowledge base KB that Mrs. Y does not believe (belief with asign)? (v) Who changed her/his mind, or made incoherent statements, on some fact within a time period (beliefs, or communications, with opposite signs but on a same fact)? (vi) What are the informations (beliefs, communications) shared with M. X about fact F before the time moment T? Such queries can be written directly by someone who knows SPARQL, or formulated with the help of a GUI which allows specifying how many facts (beliefs, communications) the query is about, how they connect, fill in the known values (e.g., X, D, J, Y etc. in the above examples), then the GUI generates the corresponding SPARQL statement.</p><p>Below, we highlight a family of queries that are interested in tracing the propagation of information across chains of beliefs and communications. These queries are theoretically interesting as they translate to property paths, a relatively relatively recent SPARQL feature, yet, as we will show, they are feasible for RDF engines freely available today.</p><p>We start with a set of generic queries, which can be written on any instance of the data model previously described. Q 0 captures who has heard of what, when, and how. We consider an agent hears about something when either the agents believes it, or the agent is the recipient of a communication about it. Q 0 returns: the agent a, the communication c, its time (as an interval spanning from b to e), and its subject s. Note the regular path expression (of potentially unbounded length) going from c to the subject s: it captures the propagation of hearsay, i.e., if c is about a belief b (or another communication c ′ ) which is about topic t, then Q 0 returns t together with a and c, since it is through c that a heard of t: Q 0 (?a, ?c, ?b, ?e, ?s) ←(?c, τ , Record), (?c, (from|to), ?a), (?c, (believes|communicates)+, ?s) (?c, time, ?t), (?t, begin, ?b), (?t, end, ?e) Building on Q 0 , Q 1 finds out who has heard of a specific fact f, and when. It returns the agents, the communications which propagated f to them, and the communication time:</p><p>Q 1 (?a, ?c, ?b, ?e) ←Q 0 (?a, ?c, ?b, ?e, f ), (f , τ , Fact)</p><formula xml:id="formula_5">Q 2 is a selection on Q 0 .</formula><p>It finds what a given agent a has heard of, how, and when: Q 2 (?c, ?b, ?e, ?s) ←Q 0 (a, ?c, ?b, ?e, ?s) Q 3 finds who has heard of what, through which communication, during a given time interval t0=[b0, e0]:</p><p>Q 3 (?a, ?c, ?s) ← Q 0 (?a, ?c, ?b, ?e, ?s), OV ERLAP([b, e], [b0, e0]) F ILT ER(?b2 &gt; b), F ILT ER(?e2 &lt; e) Next, we present a few queries specific to our political Twitter scenario. To find out how a given hashtag h disseminated on Twitter, query Q 4 returns all the agents reached by the hashtag and the communication which brought the hashtag to them: Q 4 (?a, ?c, ?b, ?s) ←Q 0 (?a, ?c, ?b, ?s), (?s, hashtag, h) Because a tweet has a zero-length temporal interval (b=e), in Q 4 we only use the interval beginning. A restriction of Q 4 , query Q 5 ensures that c has taken place in a given time interval:</p><p>Q 5 (?a, ?c, ?f ) ←Q 0 (?a, ?c, ?b, ?s), (?s, hashtag, h) F ILT ER(?b2 &gt; b), F ILT ER(?b2 &lt; b) Finally, query Q 6 uses the political party affiliations of agents to aggregate the hashtag targets (agents) by their political party: Q 6 (?pa, count( * ) as ?n) ←Q 0 (?a, ?c, ?b, ?s), (?s, hashtag, h) F ILT ER(?b2 &gt; b), F ILT ER(?b2 &lt; b) (?a, name, ?name), (?a, party, ?pa), GROU P BY ?pa</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">EXPERIMENTS</head><p>We describe experiments we carried out with instances of our data model built as we explained in Section 3.4.</p><p>Platform and settings We aimed to check the feasibility of loading and querying instances of our data model using an off-the-shelf RDF data management system (RDB, in short). We had a particular interest in the capacity of the RDB to handle property path queries. Following a recent benchmark of property path support <ref type="bibr" target="#b12">[13]</ref>, we have chosen RDF4J (formerly known as Sesame) v2.4.2. RDF4J provides B+-tree indexes over the stored triple; an index is defined by an order over four attributes s, p, o (for the standard RDF subject, property, object) and c (for context, i.e., the RDF graph from which a triple comes). By default, the spoc and posc indexes are built; the application can modify the index set. We added three more indexes psoc, cosp, and opsc to speed up query evaluation. We ran our tests on a Linux computer with an Intel Xeon CPU @ 2.67GHz, 4 Cores and 40GB RAM.</p><p>Loading We loaded our corpus of 2 × 10 7 triples and built the six indexes on it (two default and four we added) in 976 seconds.</p><p>Queries We timed the execution of a set of queries on increasingly larger subsets of our dataset, from 1/6th of the it (150.000 tweets) to the entire dataset obtained from 900.000 tweets; the query evaluation times (in ms) appear in Figure <ref type="figure" target="#fig_4">2</ref>. As a first baseline, we ran Q 0 (from Section 4); this query traverses all the chains of information propagation in our dataset, and returns a very large answer (from 1 million to tens of millions of answers); it is not very interesting per se, but it is one of the most expensive we could think of (taking 318 seconds when run over the whole dataset), yet RDF4J is capable of handling it. A close inspection of the times shows that Q 0 scale-up is super-linear in the number of tweets (database size), but it is linear in the number of results, which is overall good news (the query engine can hardly escape the cost of enumerating results).</p><p>Next, we ran instantiations of the query templates introduced in the previous section, as follows. First, we manually identified the fact f max which is at the origin of the longest chain of Communications (retweets, comments etc.). Then, we ran Q 1 setting f to f max : find everyone who heard of this fact directly or indirectly; this query has 374 results. Thanks to our indexes, Q 1 with f=f max ran extremely fast (from 50 ms to 99 ms, the lowest curve in the figure). This is very good news, as it shows that RDF4J is capable of restricting the exploration of "has heard of" chains to just those ending in f max ; the query is three orders of magnitude faster than Q 0 . However, using just the default indexes, Q 1 performed no better than Q 0 ! This is because with our modeling (recall Q 0 from Section 4, and also Figure <ref type="figure" target="#fig_3">1</ref>), information propagation chains go "backward" (a fact is the object of a triple connecting it to a belief or communication about it, which in turn are objects (property values) of higher-order beliefs or communications etc). This is why the indexes we added to RDF4J made an important difference here.</p><p>Subsequently, we picked an agent a max who authored the most tweets in the smallest (scale 1/6) fragment of our database, then ran Q 2 setting a to a max . Q 2 takes more time than Q 1 , since it needs to look for that agent at many levels in the information propagation chains; however, it is much faster than Q 0 , (also) because it returns less results. Next, we ran Q 3 for the time interval t 241018 from 9 to 10 am on Oct 24, 2018; it is quite expensive, showing that the time selection was not very efficiently exploited by RDF4J to prune the search. The tweet dates are triple objects, thus we hoped that indexes starting with the o attribute would be exploited by RDF4J to speed up significantly these queries, or, this does not appear to be the case. RDF4J does not provide an "explain" functionality, thus for now we can only guess at an imperfect optimization strategy.</p><p>We picked the hashtag #Benalla (a name involved in a political scandal in France ), which we denote hb in the sequel, and ran Q 4 setting h to hb; Q 4 is moderately expensive, as it also had to traverse all "has heard of" chains starting in a relevant Communication We ran Q 5 using t 241018 and a popular hashtag h PLF of the moment, PLF19 <ref type="foot" target="#foot_7">8</ref> ; combining the selections on the hashtag and on the time significantly reduced the amount of data manipulated by the engine, thus Q 5 performed almost as well as Q 1 .</p><p>Finally, we ran Q 6 with h set to #PLF2019 and the time interval t 241018 . This query becomes more expensive than Q 0 for large datasets; it combines the disadvantage of (not-so-efficient) temporal selection and the extra cost of joining the communications with the agent political party affilations, and of computing the group-by.</p><p>From the experiments, we conclude that RDF4J handles reasonably well complex queries, featuring complex path expressions (which lead to exploring potentially long information dissemination chains). Our study focused on such queries since information propagation is both interesting for data journalism scenarios and a recent, challenging SPARQL feature. While we used publicly shared Tweets, such queries can be great tools in investigative journalism scenarios based (also) on information accessible only to journalists. Modeling data in RDF aims (also) at facilitating the integration of all the data sources journalists can acquire.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">RELATED WORK AND CONCLUSION</head><p>Modelling facts, statements and beliefs to further search and analyze them has recently gained interest in the setting of computational journalism <ref type="bibr" target="#b3">[4]</ref>, especially for fact-checking purposes, like monitoring sources, extracting claims, checking them w.r.t. reference sources and publishing obtained results (see <ref type="bibr" target="#b1">[2]</ref> for a survey).</p><p>In this setting, we follow a database-oriented approach for representing timed facts, statements and beliefs using the RDF data model, and then exploiting them through SPARQL queries.</p><p>Belief databases <ref type="bibr" target="#b5">[6]</ref>, representing (i) facts and (ii) positive or negative beliefs of agents on facts or on agent beliefs, have been investigated in the setting of the relational data model and conjunctive queries. Such databases build on multi-agent epistemic logic, in particular to infer and query (a possibly infinite set of) implicit agent beliefs. We do not consider belief inference; we focus on storing information and how it propagates between agents.</p><p>Temporal databases, long known for relational data <ref type="bibr" target="#b13">[14]</ref>, have been revisited for RDF. <ref type="bibr" target="#b9">[10]</ref> attach time points or time intervals to triples; <ref type="bibr" target="#b11">[12]</ref> allows intervals with unknown bounds on which constraints can be set or derived using Allen's algebra. Finally, <ref type="bibr" target="#b14">[15]</ref> models a timed RDF graph as a set of its snapshots over time. We build on the time modelling approach of <ref type="bibr" target="#b11">[12]</ref> to attach a normalized union of time intervals to facts, beliefs and communications.</p><p>RDF has also been used in fact-checking. In <ref type="bibr" target="#b2">[3]</ref>, claims are RDF triples to be checked against a knowledge base such as DBPedia. Claim accuracy is assessed based on the (shortest and most specific) paths that connect the claim subject to its object within the knowledge base. FactMinder <ref type="bibr" target="#b6">[7]</ref> uses an XML-RDF hybrid data model <ref type="bibr" target="#b7">[8]</ref> to link the entities found in documents (web pages, etc.), hence in the claims made there, to these entity descriptions in a knowledge graph, in order to guide manual fact-checks. Finally, <ref type="bibr" target="#b10">[11]</ref> proposes a complete fact-checking systems, from claim extraction to analysis and publication of the results, which notably check claims against</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Example 2 . 1 (</head><label>21</label><figDesc>RDF triples). The facts comprised in the phrase "Presidential candidate Trump visits Moscow; Michael D. Cohen works for him" 4 can be modeled with the three triples: (D.Trump, candidateFor, president), (D.Trump, visits, Moscow) and (M.D.Cohen, worksFor, D.Trump).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>t 1 ), (t 1 , begin, 2016-07-02), (t 1 , end, 2016-07-03), (F 1 , description, u 1 ), (u 1 , who, D.Trump), (u 1 , what, conductsBusiness), (u 1 , where, Moscow).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>Example 3.5 (Communications). On Dec 1st, 2018, M. D. Cohen states that D. Trump did not conduct business in Moscow in July</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: Illustration of the Examples 3.3, 3.4 and 3.5.</figDesc><graphic coords="4,340.86,83.69,192.20,192.20" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Query time for increasing numbers of tweets.</figDesc><graphic coords="6,317.96,83.69,240.25,143.15" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1 :</head><label>1</label><figDesc>Property assertion (s, p, o) with p rdf:type (s, p, o) RDF assertions.</figDesc><table><row><cell></cell><cell></cell><cell>Short notation</cell></row><row><cell>Class assertion</cell><cell>(s, rdf:type, o)</cell><cell>(s, τ , o)</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>the following, we model agents as RDF resources; for simplicity of the examples, we may simply use people names to denote them, e.g. Alice, Bob etc. In general, agents are those resources having the type Agent. Time We consider a set T of time intervals, each of which has a start time and an end time. Further, we distinguish three special constants -∞, now, +∞ that are used to model time bounds (-∞, +∞),</figDesc><table><row><cell>as well</cell></row><row><cell>as the current time. A finite union of time intervals can always be</cell></row><row><cell>equivalently written as a disjoint union of time intervals. By a slight</cell></row><row><cell>abuse of notation, in the sequel, we will write t ∈ T to denote any</cell></row><row><cell>such finite union of disjoint time intervals. Each start time and end</cell></row><row><cell>time can be represented e.g. following the W3C's XML Schema</cell></row><row><cell>dateTime type 5 , under the form YYYY-MM-DD[THH:MM].</cell></row><row><cell>Temporal normalization To simplify working with unions of</cell></row><row><cell>time intervals, we use their normalized forms, which are equivalent</cell></row><row><cell>smallest unions of non overlapping intervals [5]:</cell></row><row><cell>Definition 3.1 (Time normalization). Let I = {ι 1 , . . . , ι k } be a</cell></row><row><cell>set of temporal intervals. The time normalization of I is the set of</cell></row><row><cell>intervals I ′ = {ι ′ 1 , . . . , ι ′ l }, where l the smallest integer such that: • ι ′ 1 , . . . , ι ′ l are pairwise disjoint and • ι 1</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>https://www.factcheck.org/2013/09/kerry-spins-his-record-on-iraq/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_1"><p>https://www.politifact.com/truth-o-meter/statements/2019/jan/09/donald-trump/ trump-democrats-reverse-border-wall-position/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_2"><p>https://www.lemonde.fr/les-decodeurs/visuel/2018/05/07/ un-an-apres-son-election-emmanuel-macron-tient-il-ses-promesses-de-campagne_ 5295281_4355770.html</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4" xml:id="foot_3"><p>This and the next examples are inspired from https://www.nytimes.com/interactive/ 2019/01/26/us/politics/trump-contacts-russians-wikileaks.html.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="5" xml:id="foot_4"><p>See https://www.w3.org/TR/xmlschema11-2/#dateTime</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="6" xml:id="foot_5"><p>This follows the natural interpretation that any belief or communication carries over something, thus the chain must end in a Fact.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="7" xml:id="foot_6"><p>https://github.com/regardscitoyens/nosdeputes.fr/blob/master/doc/api.md# liste-des-parlementaires</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="8" xml:id="foot_7"><p>Projet de la loi de finance 2019, or the French state budget for 2019. several knowledge bases. However, it does not use a fine-grained temporal model for facts, beliefs, and their propagation.As the next step of this work, we are currently devising a formbased GUI to help journalists writing meaningful but complex queries for their investigations.</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div><head>ACKNOWLEDGMENTS</head><p>This work is funded by the <rs type="funder">ANR ContentCheck</rs> project (contract <rs type="grantNumber">ANR-15-CE23-0025</rs>).</p></div>
			</div>
			<listOrg type="funding">
				<org type="funding" xml:id="_k4CuUrj">
					<idno type="grant-number">ANR-15-CE23-0025</idno>
				</org>
			</listOrg>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Foundations of Databases</title>
		<author>
			<persName><forename type="first">Serge</forename><surname>Abiteboul</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Richard</forename><surname>Hull</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Victor</forename><surname>Vianu</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1995">1995</date>
			<publisher>Addison-Wesley</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">A Content Management Perspective on Fact-Checking</title>
		<author>
			<persName><forename type="first">Sylvie</forename><surname>Cazalens</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Philippe</forename><surname>Lamarre</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Julien</forename><surname>Leblay</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ioana</forename><surname>Manolescu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Xavier</forename><surname>Tannier</surname></persName>
		</author>
		<idno type="DOI">10.1145/3184558.3188727</idno>
		<ptr target="https://doi.org/10.1145/3184558.3188727" />
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Computational fact checking from knowledge networks</title>
		<author>
			<persName><forename type="first">Giovanni</forename><surname>Luca Ciampaglia</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Prashant</forename><surname>Shiralkar</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Luis</forename><forename type="middle">M</forename><surname>Rocha</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Johan</forename><surname>Bollen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Filippo</forename><surname>Menczer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Alessandro</forename><surname>Flammini</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">PloS one</title>
		<imprint>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page">6</biblScope>
			<date type="published" when="2015">2015. 2015</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Computational Journalism</title>
		<author>
			<persName><forename type="first">Sarah</forename><surname>Cohen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">James</forename><forename type="middle">T</forename><surname>Hamilton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Fred</forename><surname>Turner</surname></persName>
		</author>
		<idno type="DOI">10.1145/2001269.2001288</idno>
		<ptr target="https://doi.org/10.1145/2001269.2001288" />
	</analytic>
	<monogr>
		<title level="j">Commun. ACM</title>
		<imprint>
			<biblScope unit="volume">54</biblScope>
			<biblScope unit="page">10</biblScope>
			<date type="published" when="2011">2011. 2011</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Algebraic Operators for Processing Sets of Temporal Intervals in Relational Databases</title>
		<author>
			<persName><forename type="first">Andreas</forename><surname>Dohr</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Christiane</forename><surname>Engels</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Andreas</forename><surname>Behrend</surname></persName>
		</author>
		<idno type="DOI">10.4230/LIPIcs.TIME.2018.11</idno>
		<ptr target="https://doi.org/10.4230/LIPIcs.TIME.2018.11" />
	</analytic>
	<monogr>
		<title level="m">TIME</title>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Believe It or Not: Adding Belief Annotations to Databases</title>
		<author>
			<persName><forename type="first">Wolfgang</forename><surname>Gatterbauer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Magdalena</forename><surname>Balazinska</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Nodira</forename><surname>Khoussainova</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Dan</forename><surname>Suciu</surname></persName>
		</author>
		<ptr target="http://www.vldb.org/pvldb/2/vldb09-115.pdf" />
	</analytic>
	<monogr>
		<title level="j">PVLDB</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page">1</biblScope>
			<date type="published" when="2009">2009. 2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Fact checking and analyzing the web</title>
		<author>
			<persName><forename type="first">François</forename><surname>Goasdoué</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Konstantinos</forename><surname>Karanasos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yannis</forename><surname>Katsis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Julien</forename><surname>Leblay</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ioana</forename><surname>Manolescu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Stamatis</forename><surname>Zampetakis</surname></persName>
		</author>
		<idno type="DOI">10.1145/2463676.2463692</idno>
		<ptr target="https://doi.org/10.1145/2463676.2463692" />
	</analytic>
	<monogr>
		<title level="m">SIGMOD</title>
		<imprint>
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Growing triples on trees: an XML-RDF hybrid model for annotated documents</title>
		<author>
			<persName><forename type="first">François</forename><surname>Goasdoué</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Konstantinos</forename><surname>Karanasos</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Yannis</forename><surname>Katsis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Julien</forename><surname>Leblay</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ioana</forename><surname>Manolescu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Stamatis</forename><surname>Zampetakis</surname></persName>
		</author>
		<idno type="DOI">10.1007/s00778-013-0321-2</idno>
		<ptr target="https://doi.org/10.1007/s00778-013-0321-2" />
	</analytic>
	<monogr>
		<title level="j">VLDB J</title>
		<imprint>
			<biblScope unit="volume">22</biblScope>
			<biblScope unit="page">5</biblScope>
			<date type="published" when="2013">2013. 2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">Efficient query answering against dynamic RDF databases</title>
		<author>
			<persName><forename type="first">François</forename><surname>Goasdoué</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ioana</forename><surname>Manolescu</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Alexandra</forename><surname>Roatis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">EDBT</title>
		<imprint>
			<date type="published" when="2013">2013</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Temporal RDF</title>
		<author>
			<persName><forename type="first">Claudio</forename><surname>Gutiérrez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Carlos</forename><forename type="middle">A</forename><surname>Hurtado</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Alejandro</forename><forename type="middle">A</forename><surname>Vaisman</surname></persName>
		</author>
		<idno type="DOI">10.1007/11431053_7</idno>
		<ptr target="https://doi.org/10.1007/11431053_7" />
	</analytic>
	<monogr>
		<title level="m">ESWC</title>
		<imprint>
			<date type="published" when="2005">2005</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">ClaimBuster: The First-ever End-to-end Factchecking System</title>
		<author>
			<persName><forename type="first">Naeemul</forename><surname>Hassan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Gensheng</forename><surname>Zhang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Fatma</forename><surname>Arslan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Josue</forename><surname>Caraballo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Damian</forename><surname>Jimenez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Siddhant</forename><surname>Gawsane</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Shohedul</forename><surname>Hasan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Minumol</forename><surname>Joseph</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Aaditya</forename><surname>Kulkarni</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Anil</forename><surname>Kumar Nayak</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the VLDB Endowment</title>
		<meeting>the VLDB Endowment</meeting>
		<imprint>
			<date type="published" when="2017">2017. 2017</date>
			<biblScope unit="volume">10</biblScope>
			<biblScope unit="page">7</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Reasoning with Temporal Constraints in RDF</title>
		<author>
			<persName><forename type="first">Carlos</forename><forename type="middle">A</forename><surname>Hurtado</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Alejandro</forename><forename type="middle">A</forename><surname>Vaisman</surname></persName>
		</author>
		<idno type="DOI">10.1007/11853107_12</idno>
		<ptr target="https://doi.org/10.1007/11853107_12" />
	</analytic>
	<monogr>
		<title level="m">Principles and Practice of Semantic Web Reasoning (PPSWR)</title>
		<imprint>
			<date type="published" when="2006">2006</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Evaluating SPARQL 1.1 Property Path Support</title>
		<author>
			<persName><forename type="first">Daniel</forename><surname>Janke</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Adrian</forename><surname>Skubella</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Steffen</forename><surname>Staab</surname></persName>
		</author>
		<ptr target="http://ceur-ws.org/Vol-1932/paper-04.pdf" />
	</analytic>
	<monogr>
		<title level="m">2nd Int&apos;l Workshop on Benchmarking Linked Data, next to ISWC</title>
		<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Temporal Data Management</title>
		<author>
			<persName><forename type="first">Christian</forename><forename type="middle">S</forename><surname>Jensen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Richard</forename><forename type="middle">T</forename><surname>Snodgrass</surname></persName>
		</author>
		<idno type="DOI">10.1109/69.755613</idno>
		<ptr target="https://doi.org/10.1109/69.755613" />
	</analytic>
	<monogr>
		<title level="j">IEEE Trans. Knowl. Data Eng</title>
		<imprint>
			<biblScope unit="volume">11</biblScope>
			<biblScope unit="page">1</biblScope>
			<date type="published" when="1999">1999. 1999</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Applied Temporal RDF: Efficient Temporal Querying of RDF Data with SPARQL</title>
		<author>
			<persName><forename type="first">Jonas</forename><surname>Tappolet</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Abraham</forename><surname>Bernstein</surname></persName>
		</author>
		<idno type="DOI">10.1007/978-3-642-02121-3_25</idno>
		<ptr target="https://doi.org/10.1007/978-3-642-02121-3_25" />
	</analytic>
	<monogr>
		<title level="m">ESWC</title>
		<imprint>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<ptr target="https://www.w3.org/TR/rdf11-concepts.(????" />
		<title level="m">w3c-rdf</title>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title level="a" type="main">w3c-sparql</title>
		<ptr target="https://www.w3.org/TR/sparql11-query.(????" />
	</analytic>
	<monogr>
		<title level="m">SPARQL 1.1 Query Language</title>
		<imprint/>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
