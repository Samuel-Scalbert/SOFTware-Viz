<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">When owl:sameAs is the Same: Experimenting Online Resolution of Identity with SPARQL queries to Linked Open Data Sources</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Raphaël</forename><surname>Gazzotti</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">Université Côte d&apos;Azur</orgName>
								<orgName type="institution" key="instit2">Inria</orgName>
								<orgName type="institution" key="instit3">CNRS</orgName>
								<orgName type="institution" key="instit4">I3S</orgName>
								<address>
									<settlement>Sophia-Antipolis</settlement>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Fabien</forename><surname>Gandon</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution" key="instit1">Université Côte d&apos;Azur</orgName>
								<orgName type="institution" key="instit2">Inria</orgName>
								<orgName type="institution" key="instit3">CNRS</orgName>
								<orgName type="institution" key="instit4">I3S</orgName>
								<address>
									<settlement>Sophia-Antipolis</settlement>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">When owl:sameAs is the Same: Experimenting Online Resolution of Identity with SPARQL queries to Linked Open Data Sources</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">52D4EC6D83C7427503FBCE79647CCF07</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.8.0" ident="GROBID" when="2024-04-12T14:46+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Equivalence links</term>
					<term>Coreference resolution</term>
					<term>SPARQL</term>
					<term>Linked Data</term>
					<term>Data curation</term>
					<term>sameAs</term>
				</keywords>
			</textClass>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Equivalence links are the cornerstone of Linked Data and their integration. However, it is not easy to establish and manipulate them, since the Web is always evolving with datasets emerging and disappearing. Inconsistencies may also be present on the Web, leading to erroneous assertions and inferences. We propose a method to identify owl:sameAs relationships of a resource relying on online SPARQL querying of distributed datasets and to correct results using declarative curation rules. We also exploit and inspect the quality of owl:InverseFunctionalProperty and owl:FunctionalProperty relationships, using the definitions given by their schemata, endpoints and a voting approach. We evaluate our method on an existing benchmark and compare to state of the art baselines. We show that a heuristic approach can retrieve high quality equivalence links without requiring the extraction of all the alleged existing equivalence relations.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">INTRODUCTION</head><p>The ability to establish links is key to weaving the Web in general and the semantic Web in particular (Gandon, 2018). But the Web is in constant evolution with resources added and deleted all the time. Linked data, in particular, rely on our ability to establish links between the different datasets on the Web and as such, the detection of equivalence links is a central task. And as the Web evolves, this linking has to evolve with it. Establishing equivalences between resources is also key to data integration use cases to join knowledge graphs with different provenances. More recently this ability to combine such graphs also proved important in machine learning approaches relying on embeddings based on a set of linked graphs to capture the semantics surrounding a concept more accurately and more richly.</p><p>Approaches discovering equivalence links that rely on a snapshot of the Web run the risk of capturing relationships that already belong to the past. Equivalence links can also be retrieved by exploiting OWL semantics, e.g., properties of type (inverse) functional can indicate the uniqueness of a resource, leading to the inference of owl:sameAs relationships when different URIs are used as their subject or object (Alle-• Where to find and how to retrieve SPARQL endpoint information to be explored for equivalence detection?</p><p>• How to identify and correct misinformation about owl:sameAs statements? • How to detect wrong type for assserted owl:InverseFunctionalProperty and owl:FunctionalProperty properties? The paper is structured as follows. We survey the related work in Section 2 and position our contribution. In Section 3 we introduce the definition of the equivalence detection task and the vocabulary we used to solve it. Then, in Section 4 we describe how we proceed to obtain information on datasets and their SPARQL endpoints. Section 5 details how we proceed to collect and curate equivalence links. We evaluate the quality of the retrieved equivalent links on a public benchmark, comparing to state of the art baselines, and discuss our results in Section 6. We conclude with some perspectives in Section 7. Surprisingly, there are not so many available services to establish owl:sameAs relationships for a given URI.</p><p>The sameAs.org (Jaffri et al., 2008) is one of the pioneers to propose a service of URIs coresolution. The equivalences are collected through different RDF files and SPARQL endpoints chosen by the authors.</p><p>Equivalent URIs are stored with different identifiers depending on the context. Different coreference contexts are captured by different coreference resolution services, because depending on the usage and context, an equivalence either holds or not. A context is represented as a bundle attached to a URI. However the approach mixes different predicates which can be far from a owl:sameAs, e.g., ov:similarTo<ref type="foot" target="#foot_0">1</ref> is a property for things that are not linked by owl:sameAs, but that are similar to a certain extent. The system also does not ensure that resources are actually equivalent and proposes only one concept of equivalence. Therefore, it does not allow to distinguish different notions of equivalence as indicated by (Halpin et al., 2010) and defined in the Similarity Ontology. <ref type="bibr">2</ref> In addition, with the online portal, it is unfortunately not possible to distinguish the different contexts considered for a given resource. Unlike the other works, sameAs.org does not use a curation algorithm for owl:sameAs relationships.</p><p>The LODsyndesis<ref type="foot" target="#foot_2">3</ref>  (Mountantonakis and Tzitzikas, 2018) platform, in addition to providing various services and metrics related to many datasets, also performs coreference resolution. The algorithm introduced by the authors incrementally uses the same identifier for pairs of URIs (linked by the owl:sameAs property) defining the same resource. The authors show that by leveraging content or graph metrics, erroneous equivalence links can be detected. Their approach relies on the data provided by (Schmachtenberg et al., 2014) that are crawled from the LOD Cloud with LDSpider,<ref type="foot" target="#foot_3">4</ref> on various datasets: Yago, datahub.io, DBpedia v3.9, Wikidata, Freebase and LinkLion. Unfortunately, the number of coreferences that this service can offer is sometimes limited.</p><p>The sameAs.cc dataset accessible through the SPARQL endpoint<ref type="foot" target="#foot_4">5</ref>  (Raad et al., 2020) exploits the LOD-a-Lot dataset (Fernández et al., 2017) and the Louvain algorithm (Blondel et al., 2008) for detect-ing communities, an approach that leads them to identify errors between owl:sameAs relations. This approach succeeds in extracting more equivalence links than in the previous work, LODsyndesis (Mountantonakis and Tzitzikas, 2018). Different human annotators evaluated a subset of 200 owl:sameAs relations based on their descriptions to assess the relevance of these relations based on different thresholds of degrees of error. They apply their findings on these thresholds to cluster equivalence links that relate to the former U.S. president Barack Obama.<ref type="foot" target="#foot_5">6</ref> providing a valuable benchmark. One of the disadvantages of using the Louvain algorithm is that it must be run several times on the complete set of alleged equivalences to get the "best clusters" with no ensurance of reaching the global maximum of modularity, as it is a greedy and non-deterministic method.</p><p>Our approach differs from previous work in that it is not performed on a locally stored dataset but dynamically and online, on the SPARQL endpoints of many datasets. The list of considered endpoints is open and can be extended at will with new public and private endpoints as well as their description relevant to the application. Moreover, it uses other relations than owl:sameAs to define equivalence relations between different resources since we also rely on the properties owl:InverseFunctionalProperty and owl:FunctionalProperty.</p><p>We also propose several techniques to curate the equivalences found on the fly and the properties declared as owl:InverseFunctionalProperty and owl:FunctionalProperty. We did this after noticing their definitions on datasets may differ from what was intended by the creators of the ontologies (see Section 5). Our algorithm also relies almost exclusively on SPARQL queries, ensuring a high compatibility with different engines and a declarativity that brings flexibility and extensibility in the sources and rules considered. The idea is to provide and evaluate a mechanism that could be implemented on top of any SPARQL engine and customized to any application.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">SAMELIVE APPROACH: ALGORITHM AND TASK DEFINITION</head><p>Let S = s 1 , ..., s k be the set of k seed URIs s i for which we want to obtain equivalent URIs. Some of these seed URIs may be equivalent, i.e., they share a owl:sameAs relationship, which will result in faster convergence of the algorithm. We show this in the case study described in sub-section 6.3. First we need to identify a set of endpoints N = E 1 , ..., E m that we will query to discover equivalent URIs. The process to calculate the closure of the equivalent relations is a greedy incremental algorithm that iterates on a growing collection of URIs linked by equivalence statements until no more new statement can be obtained from the set of endpoints N. At each iteration we also test an extensible set of declarative heuristics to detect if an equivalence is an error and avoid its transitive propagation.</p><p>Moreover, to ensure portability, distributability, and federability, the algorithm we have written is primarily in SPARQL 1.1, with calls in SPARQL 1.0 7 when we contact online SPARQL endpoints. Many endpoints on the Linked Open Data still do not support SPARQL 1.1, but the functionalities of this language allow us on a local endpoint to process properties of type (inverse) functional as well as to perform curation of owl:sameAs relationships and to provide statistics on the extracted data. We also trace all the steps of the algorithm by the generation of several named graphs and with the help of a small dedicated vocabulary introduced in this section and summarized in Table <ref type="table" target="#tab_2">1</ref>. We use a set of classes and properties to represent the input and output of each iteration. Together with the named graphs they capture the state of each iteration and the provenance of our results.</p><p>In the rest of this section, anchors in footnotes refer to labelled functions in the source code. The initialization of the algorithm consists of:</p><p>1. identifying datasets and their corresponding SPARQL endpoints and populating the named graph same:N with their description and checking their availability (see Section 4, done with 8 SPARQL queries, 3 of them being used for data cleaning); 8 2. populating the named graph Q 0 with the set S of seed URIs for which we want to obtain equivalent URIs. These seeds URI are typed as same:Target (done with 1 SPARQL query); 9</p><p>3. identifying and storing the definitions of owl:InverseFunctionalProperty and owl:FunctionalProperty in the named graph kg:default: in a preselection step the (inverse) functional properties identified from N are placed in the named graph same:Properties alongside with their namespaces to deference them. If they cannot be dereferenced they are stored in the 7 https://www.w3.org/TR/rdf-sparql-query/ 8 Functions N1 to N3 load information about datasets, CN1 is responsible for data cleaning, A1 is responsible for checking endpoint availability. 9 Function P1 populates Q 0 with seed URIs.</p><p>named graph same:NotDeferencedProperties to be put to a vote (see the sub-section 5.1, done with 12 SPARQL queries, 2 of them being run in a loop). 10 This step refers to the block corresponding to the first "if" in algorithm 1.</p><p>The core of the algorithm (mainly inside the "while" loop of algorithm 1) consists of iterating on a growing collection of named graphs Q i for which at each iteration i: 4. the obtained owl:sameAs are added in a specific named graph with a name based on the endpoint and the iteration in which the owl:sameAs relationship was identified;</p><formula xml:id="formula_0">1. we query Q i-</formula><p>5. we check that the owl:sameAs relationships conform to some rules (described in the sub-section 5.2.1) and if it is not the case, identified instances of same:Target become of type same:Rotten and are placed in the named graph Q -1 before their relationships are removed: incoming and outgoing owl:sameAs relationships from a same:Rotten are deleted. This also applies to its owl:InverseFunctionalProperty and owl:FunctionalProperty, and the outgoing same:Target from a same:Rotten are deleted if it has no other same:Target incoming relationship (done with 5 SPARQL queries, 3 of them being used to remove relationships); 14 6. the new resources are added to named graph Q i .</p><p>10 Function G -(I)FP1 retrieves the properties known as (inverse) functional, LDD -(I)FP1 attempts to deference and load the RDF document of properties from their namespaces, LDS -(I)FP1 stores as information that an endpoint has the schema of a property, V -(I)FP1 performs the voting on the type of the property.</p><p>11 Function T 1 gets the same:Target resources in Q i-1 .</p><p>12 Function S1 retrieves owl:sameAs relationships.</p><p>13 Function (I)FP1 retrieves the actual instances of (inverse) functional properties and (I)FP2 infers owl:sameAs relationships from them. 14 Function R1 refers to the rule #1 used to detect same:Rotten, respectively R2 refers to the rule #2, RC1 is used to remove relationships ; details in Section 5.2.</p><p>The stop condition is that the resources to be explored are exhausted, i.e., there are no more resources to explore for the current iteration i and Q i is empty. A last check with (c.f., the rule #2, sub-section 5.2.1) is necessary to ensure that there is no relationship between two resources sharing the same authority (resources obtained at i). The pseudo-code of SameLive is represented by the algorithm 1.</p><p>Algorithm 1: Online resolution of identity with the SameLive algorithm.</p><p>Initialize Vocabulary // Also initialize </p><formula xml:id="formula_1">Q -1 Initialize N // Availability is checked Initialize Q 0 //</formula><formula xml:id="formula_2">i = 1 L = length(Q 0 ) while L != 0 do Initialize Q i Q i += Retrieve owl:sameAs relations of Q i-1 over N if properties condition then</formula><p>Retrieve triples comporting Q i-1 who have a property typed typed as (inverse) functional over N Q i += Infer owl:sameAs relations with the triples previously extracted over N // Curation rules have an impact on all</p><formula xml:id="formula_3">Q i Q -1 += Apply curation rules i += 1 L = length(Q i-1 ) Q -1 += Apply curation rule #2</formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">EXTRACTION AND INTEGRATION OF ENDPOINTS' INFORMATION</head><p>The first step is to identify the datasets that can contribute to solving this problem. Various strategies exist for this purpose such as relying on search engines, using previously crawled RDF data (i.e., using the RFC 8615,<ref type="foot" target="#foot_6">15</ref> etc.) or even catalogs referencing these datasets. To achieve our means, we rely on famous catalogs listing datasets, using their metadata as well as the URLs for their SPARQL endpoints. These catalogs are regularly updated so we can keep up with the latest updates of the Web of Data. Moreover this approach supports the addition of new catalogs at any time, including private endpoints. However, just because a dataset is referenced in a catalog does not mean it is available. To define if a SPARQL endpoint is available or not, we rely on the EndS ontology (Endpoint Status Ontology) <ref type="bibr">16</ref> which is an extension of VoiD. <ref type="bibr">17</ref> We use in particular the property ends:statusIsAvailable. This ontology is involved in the description of the different datasets retrieved from the catalogs detailed in the following sub-sections. For each source we create a distinct named graph and then combine all unduplicated results (i.e., different SPARQL endpoint URL) into one initial named graph same:N containing all our sources. From the different catalogs we present, we only rely on the asserted availability of endpoints from YummyData. The other catalogs listed here do not have regular updates on this property and we perform the availability ourselves.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">voiD store</head><p>We rely on the voiD store<ref type="foot" target="#foot_9">18</ref> and query it for instances of void:Dataset with their void:sparqlEndpoint to access them. To avoid duplicating entries for a same dataset -as datasets can be referred with several types in the voiD store-or incomplete results we limit ourselves to the extraction of resources of type void:Dataset and we ensure to not retrieve blank nodes. We also check that these resources have a title (property dcterms:title) <ref type="bibr">19</ref> and, of course, a SPARQL endpoint (property void:sparqlEndpoint). Any doubloon is eliminated (i.e., datasets using the same SPARQL endpoint), datasets can be represented several times in the voiD store. The retrieval of the information about endpoints and the removal of the doubloons is carried out in two steps to overcome the limitations of the voiD store SPARQL endpoint. <ref type="bibr">20</ref> . The endpoint of the voiD store has recently been closed due to the decision of the service maintainers, however our approach still works with the other catalogs and we pro-  vide code to integrate its data if someone decides to continue maintaining this service. Our results were obtained while this service was still in operation. A large majority of the core datasets of the Linked Open Data are also referenced by the LODCloud.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">LODCloud</head><p>The main purpose of the LODCloud 21 website is to provide a diagram of the LOD cloud. The JSON data used to build it are available 22 and we translate selected parts of them in RDF as different data are represented within this JSON document. We first check if a dataset has an entry related to a SPARQL endpoint ("sparql" field) in which case we include it. If we find information about a voiD page, we store this data as well. However, some of the information contained in the lod-cloud is not always up to date: an endpoint 21 https://lod-cloud.net/ 22 https://lod-cloud.net/lod-data.json marked as unavailable may be in fact available at the time of our query and vice-versa. Therefore, before executing our approach we check the availability of the endpoints to avoid waiting unnecessarily for a response from an unavailable endpoint.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">YummyData</head><p>YummyData<ref type="foot" target="#foot_12">23</ref>  (Yamamoto et al., 2018) is a site referencing and monitoring various SPARQL endpoints in the biomedical domain. We first get the URL leading to the SPARQL endpoint of the datasets from the JSON data obtained from their API. Then we check if the datasets have a VoiD annotation ('void' field equal to True) and in such case we remove the suffixes "virtuoso/sparql" or "sparql" from the URLs of the SPARQL endpoints and we add as a new suffix ".well-known/void" to refer to the VoiD page describ-ing the datasets. <ref type="bibr">24</ref> For instance, to obtain the VoiD page of the Protein Ontology the URL https://sparql. proconsortium.org/virtuoso/sparql becomes https:// sparql.proconsortium.org/.well-known/void). Now that we have described how we retrieve information about SPARQL endpoints, we will get to the heart of the matter by describing the resources needed by the algorithm and some of its key steps.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">EQUIVALENCE LINKS RETRIEVAL AND DATA CURATION</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1">Collecting true instances of (inverse) functional properties</head><p>To establish identity, we collect relevant owl:InverseFuntionalProperty and owl:FunctionalProperty that we store in the named graph same:Properties.</p><p>According to OWL specifications: if a, b, c are three resources, (i) <ref type="bibr">25</ref> if there exist inverse functional property relations ip(a, b) and ip(c, b) there also exists an equivalence relation owl : sameAs(a, c) and (ii) 26 similarly, if there exist functional property relations f p(a, b) and f p(a, c) there exists an owl : sameAs(b, c) equivalence relation.</p><p>However, depending on the SPARQL endpoints, the properties' definitions may vary and contain abusive usage of these types or at least usage that should be limited to a local closed world.</p><p>For instance, rdfs:label is defined as an owl:InverseFunctionalProperty in the National Digital Data Archive of Hungary 27 or agront:isPartOfSubvocabulary 28 is defined as a owl:FunctionalProperty by the LusTRE endpoint. <ref type="bibr">29</ref> Table <ref type="table">2</ref> provides some statistics we computed about this problem. The following steps (sections 5.1.1 to 5.1.3) refer to the block corresponding to the first "if" in algorithm 1 and the item 3 in the <ref type="bibr">24</ref>  first list in Section 3.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.1">Initialization</head><p>We first query all available endpoints (property ends:statusIsAvailable set to true) in the named graph same:N to return their properties of type owl:InverseFunctionalProperty and owl:FunctionalProperty. A filter is performed on the properties defined as blank nodes. Then, these data are stored as RDF* triples (Hartig and Thompson, 2014) in the named graph same:Properties and we keep as information the dataset from which they come with the same:statementInDataset property. These triples are stored in RDF* to record the statements typing properties together with the provenance dataset in which they were found, i.e.:</p><p>&lt;&lt;foaf:firstName a owl:FunctionalProperty&gt;&gt; same:statementInDataset &lt;http://uriburner.com/&gt;</p><p>We then perform two types of curation: curation by schema and curation by voting. Properties for which the definition could not be deferenced or found in the SPARQL endpoints are excluded.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.2">Curation by schema</head><p>We ensure that the use of these properties corresponds to what was intended by the creators of the ontologies is to extract the schemas of these properties by deferencing them. To do so, we use the namespaces of these properties which we have inserted into our local triplestore in the named graph same:Properties using the property same:hasNamespace and perform the SPARQL clause: LOAD SILENT &lt;namespace&gt; INTO GRAPH kg:default;</p><p>Using namespaces to retrieve RDF documents is more efficient since it avoids downloading multiple times the same document where multiple properties of type owl:InverseFunctionalProperty and owl:FunctionalProperty are defined. These documents are then loaded into the named graph kg:default. This first step already corrects some assertions about properties (see Table <ref type="table">2</ref>).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.3">Curation by voting</head><p>In a second step, we handle properties for which no schema could be deferenced.</p><p>We have placed these properties in the graph named same:NotDeferencedProperties to distinguish them from the others. We perform queries on the available endpoints in the set N.</p><p>After identifying whether the endpoints have the schemas of a property, we count the number of endpoints including the schemas against the property types so that we can perform a vote on the most accepted definition of a property. The condition for assigning the type (property same:votingType) owl:InverseFunctionalProperty and/or owl:FunctionalProperty is that a property must be defined as such, by at least half of the SPARQL endpoints that store a schema for the given property. The statistics to compute the type of these properties are stored in the named graph same:PropertiesNotDeferencedStatistics. For this purpose we declared several properties such as same:nbOfTimesDefinedAsFunctionalProperty and same:inNbOfDatasetWithSchema.</p><p>By this means, we are able to identify for example the property sparql:endpoint 30 as an owl:InverseFunctionalProperty and the property semsci:CHEMINF 000009 31 as a owl:FunctionalProperty.</p><p>From the set of curated properties, we can infer owl:sameAs relationships of the same:Target of the current Qi with the available endpoints of same:N.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2">Extraction of owl:sameAs properties</head><p>Now that we have inspected and corrected the type of the owl:InverseFunctionalProperty and owl:FunctionalProperty properties, it is possible to infer owl:sameAs relationships. To do this, we extract the owl:sameAs relationships for the same:Target resources and curate them by following an iterative mechanism. The goal being not to question the endpoints twice about the same resource same:Target for its owl:sameAs relationships. For this purpose, these resources are stored in different named graphs same:Qi at each iteration i. We query the available endpoints in N with the same:Target of the current iteration (in same:Qi) and we store the resulting equivalent URIs in the next named graph same:Qi+1. A filter clause ensures that we do not store an already existing same:Target in the named graph same:Qi+1. The stop condition of the algorithm is to exhaust all instances of same:Target. This step refers to the block corresponding to the "while" loop of algorithm 1.</p><p>Working with live endpoints of the World Wild Web, we pay attention to technical details such as the fact that we have to query some endpoints with only URIs that include ASCII characters since we have identified some SPARQL endpoints that do not support non-ASCII char-30 http://www.w3.org/ns/sparql-service-description#endpoint 31 https://semanticscience.org/resource/CHEMINF 000009 acters. <ref type="bibr">32</ref> We actually extract and store URIs containing non-ASCII characters but we perform a transformation using the following SPARQL clause:</p><p>FILTER(!REGEX(str(?URITarget), "[ˆ\x00-\x7F]", "i")). This point can be improved later in a future work with a more detailed description of SPARQL access points. We also extract the authority component of the URIs<ref type="foot" target="#foot_14">33</ref> and store them with the same:hasAuthority property. This will be used to curate owl:sameAs relationships.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.1">Curation of the owl:sameAs links</head><p>We carry out the curation of owl:sameAs relationships assuming that equivalent resources with URIs defined within the same authority must explicitly be asserted as equivalent by that authority. These links were obtained through a direct owl:sameAs relationship or from a owl:InverseFunctionalProperty and a owl:FunctionalProperty. Thus, we will ensure that the resources linked by owl:sameAs relationships comply with the rules defined below.</p><p>We identified two different patterns for erroneous relationships linked through resources that we call same:Rotten. More patterns may be added to further extend the constraints that equivalent resources must meet.</p><p>For complexity reasons we split the curation between two rules: one operating on the results from the same authority obtained at distinct iterations (rule #1) and one operating on the results of the same authority at the same iteration (rule #2):</p><p>• Rule #1 : Let a: be the prefix of an authority and b: the prefix of another authority, if there is a sameAs(a:1,b:1) relationship and a sameAs(b:1,a:2) relationship and no sameAs(a:1,a:2) relationship, this rule states that b:1 is of type same:Rotten. This rule is applied regardless of the length of the path of owl:sameAs between a:1 and a:2.</p><p>• Rule #2 : Let a: be the prefix of an authority and b: the prefix of another authority, if there is a sameAs The Figure <ref type="figure" target="#fig_2">2</ref> displays two examples on which these rules are applied. Once identified as such we delete the owl:sameAs relations including a same:Rotten and the same:Target resulting from these resources. Before the application of the two rules above, all resources (a:1, a:2, b:1, b:2) are of type same:Target. Contrarily to other methods, this approach does not require the extraction of all the alleged existing equivalence relations for processing their quality and it also trims as soon as possible the exploration of bad quality equivalences and their transitive closure.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6">EXPERIMENTAL PROTOCOL AND EVALUATION</head><p>6.1 Quantitative Evaluation on Linked Open Data</p><p>Table <ref type="table">2</ref> shows statistics about the properties of type owl:InverseFunctionalProperty and owl:FunctionalProperty found online and on which we applied the process described in section 5.1 to collect true instances of these types. Only 22% of the RDF documents queried that a priori contained properties of type owl:InverseFunctionalProperty or owl:InverseFunctionalProperty could be loaded. Approximately 17% of the properties claimed of type owl:FunctionalProperty were verified as such by voting or dereferencing, while for the properties of type owl:InverseFunctionalProperty, they have been verified as such in 60% of the cases. The large majority of properties of type owl:InverseFunctionalProperty have been deferenced, while about half of the properties of type owl:FunctionalProperty were identified by voting.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1.1">Protocol, Dataset and Baselines</head><p>The different experiments were conducted on an HP EliteBook 840 G2, 2.6 hHz, 16 GB RAM with a virtual environment under Python 3.8.5 and the software Corese Semantic Web Factory 34 (Corby and Zucker, 2010) version 4.1.6d deployed locally. Corese is used as a local triplestore on which we mainly use SPARQL 1.1 Query and Update features. We evaluated our approach on the Barack Obama identity links knowledge graph developed by (Raad et al.,  2020). <ref type="bibr">35</ref> Regarding the initialization, we declared for our algorithm the target URI dbr:Barack Obama 36 (a same:Target) in the named graph same:Q0. The 34 https://project.inria.fr/corese/ 35 https://github.com/raadjoe/obama-lod-identity-analysis 36 PREFIX dbr: &lt;http://dbpedia.org/resource/&gt; different closures on the Barack Obama entity with which we compare ourselves (with sameAs.cc (Raad  et al., 2020), LODsyndesis (Mountantonakis and Tzitzikas, 2018) and sameas.org (Jaffri et al., 2008)) and our approach, SameLive, are the following:</p><p>• Ground truth: The manual annotation of the closure of the owl:sameAs extracted from the LOD-a-lot dataset distributed into 8 identity sets (Barack Obama, Obama's Presidency, Obama's Presidential Transition, Obama's Senate Career, Obama's Presidential Centre, Obama's Biography, Obama's Photos, Black President). The undetermined URIs included in the identity cluster about Barack Obama are essentially URIs for which we do not have enough semantics to confidently annotate them.</p><p>• sameAs 0.99: Results after removing the relations with an error degree greater than 0.99 with the method used by sameAs.cc where the error degree is based on the communities resulting from the Louvain algorithm. This approach leads to two identities sets B 1 and B 2 , and enabled the separation of URIs referring to the Obama's presidency and his presidential transition from the other identity sets. However, these two sets are still inconsistent since they do not allow to perform a closure on a single real world entity.</p><p>• sameAs 0.4: Results after removing the relations with an error degree greater than 0.4 in the method of sameAs.cc. This approach leads to 219 identity sets (C 1 to C 219 ) with only one identity set C 1 with non-singleton URIs.</p><p>• sameAs.org: Results were obtained through the API of sameAs.org,<ref type="foot" target="#foot_15">37</ref> and we corrected URI encoding issues to avoid counting them as new ones.</p><p>• LODsyndesis: To detect errors, both clustering with similarity function (content based detection) and shortest path between a pair of instances (graph based detection) are used. Results were obtained through the API of LODsyndesis,<ref type="foot" target="#foot_16">38</ref> and we corrected their encoding issues too.</p><p>• SameLive: Our closure performed on the data extracted from the SPARQL endpoints indexed by the voiD Store, the LODCloud and the Yummy-Data websites. O 1 only includes resources of type same:Target, O 2 contains both resources of types same:Target and same:Rotten Table <ref type="table" target="#tab_4">3</ref>, based on the work of (Raad et al., 2020), reports the results of our approach compared to sameAs.cc, LODsyndesis and sameAs.org on the Barack Obama identity links knowledge graph.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.1.3">Discussion</head><p>After three iterations of the algorithm, we reached the closure of our solution.</p><p>The closure on dbr:Barack Obama by considering only owl:sameAs relationships takes 40 minutes, and considering the owl:InverseFunctionalProperty and owl:FunctionalProperty properties takes 21 hours and a half with a regular laptop setup described in section 6.1.1. The execution time comes mainly from the endpoint querying. We intend to look at approaches to improve this with timeouts and further parallel querying. We are currently working on a cluster version of SameLive for this purpose. In terms of statistics that represent 1 starting URI same:Target (in Q0), 130 in Q1, 9 in Q2, 1 in Q3 and 53 same:Rotten in Q -1 .</p><p>Assessing our results on this graph presents a clear disadvantage for our approach because it involves a snapshot of the 2015 Linked Open Data (LOD). As a result, links that have disappeared are not included in our approach. However these are the best baselines as far as we know and our crawling-free online approach still obtains slightly lower results but comparable to the best approach, the sameAs 0.4 proposed by (Raad et al., 2020). Moreover, if we focus on the advantages of SameLive, the online na- The SPARQL query we use to detect potential errors eliminates redirect links in a dataset if they are not declared as owl:sameAs in it (or by extension if there is no owl:InverseFunctionProperty or owl:FunctionalProperty relationship in the same dataset).</p><p>To increase this coverage with our approach, we would have to include specific properties to redirects such as the property dbo:wikiPageRedirects 40 with DBpedia).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.2">Qualitative Evaluation on Specific Examples</head><p>From the Barack Obama identity links knowledge graph, one can notice that: some of the resources evaluated as being of the same nature as dbr:Barack Obama are no longer valid, 41 URLs redirecting to valid resources are considered valid, 42 while other more questionable resources are also considered valid. <ref type="bibr">43</ref> Depending on the application, it may be unnec- essary to obtain such a degree of confidence for obtaining equivalence links as proposed by sameAs 0.99, but in the case where one really wants to obtain owl:sameAs relations, only sameAs 0.4, LODsyndesis and our approach provide an answer. With the graph of identity links about Barack Obama only entities more or less related to Obama exist. However this is not the case for all the graphs obtained by extracting owl:sameAs relationships (i.e., previous extractions present on the English DBpedia endpoint linked dbr:Berlin to dbr:Tirana, dbr:Gaspé Peninsula, dbr:Jersey City, New Jersey, dbr:Point Reyes National Seashore, dbr:Flint, Michigan, and this is still the case on sameAs.org). Thus, even if we lower our similarity expectations, the sameAs 0.99 approach does not necessarily guarantee that on such graphs its results do not keep wrong relationships.</p><p>Our system, unlike sameAs.cc, discriminates redirects to a resource if it does not have a direct owl:sameAs relationship with that resource. This point may have its advantage in error detection. However the public benchmark on which we are evaluating discriminates against this position.</p><p>Another important point is that two resources belonging to the same identity cluster may result in the generation of different equivalence links depending on the starting resources. The reason for this is that we do not process the whole graph of equivalences, the greedy algorithm starts from the set S of seeds and stops as soon as possible to avoid propagating errors or querying the endpoints more than necessary.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.3">Application Evaluation on Specific Use Case</head><p>The source code of the project and its instructions are available at https://github.com/Wimmics/SameLive and the algorithm vocabulary at https: //ns.inria.fr/same/same.owl. Two modes of the algorithm are available to consider or not the owl:InverseFunctionalProperty and owl:FunctionalProperty. We also performed an evaluation on a real application: the integration of the knowledge graphs obtained from different named entity recognition and linking methods applied to the same corpus. In this type of usecase, to consolidate the knowledge graph and support further processing and visualization, it is important to detect that two URIs extracted by two different annotators are in fact identifying the same resource. We tested our approach on the public dataset CovidOnTheWeb (Michel et al., 2020), where the authors extract named entities but do not propose equivalence links between the URIs produced by different annotators.</p><p>As an example we report here on the result obtained on the article "COVID-19: what has been learned and to be learned about the novel coronavirus disease" 44 (Yi et al., 2020) and more precisely on the 312 distinct entities from DBpedia and Wikidata extracted from it with semantic annotators.</p><p>By exploring only the owl:sameAs relationships on these 312 starting URIs (in Q0), the algorithm ends after 6 iterations with: 1526 same:Target in Q1, 3762 in Q2, 1797 in Q3, 78 in Q4, 71 in Q5 and 2 in Q6. We computed a total of 6001 same:Rotten in Q -1 , correcting errors such as, for instance, the confusion between URIs coming from the French chapter of DBpedia identifying the kidney vs. a specific portion of it called the "distal convoluted tubule". 45 Among the 312 seeds URIs, 32 are determined as equivalent. Some of these 32 resources considered as equivalent are not available in sameAs.cc, sameAs.org and LODsyndesis. This is the case for example for: the respiratory syndrom caused by SARS coronavirus 2 in DBpedia and Wikidata, <ref type="bibr">46</ref> and the strain of the COVID-19 itself in these two sources. <ref type="bibr">47</ref> An interesting fact is that so far these resources speaking about the COVID-19 do not have any owl:sameAs relationship in the English chapter of DBpedia.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7">CONCLUSION</head><p>We proposed a method to identify owl:sameAs relationships relying on the online SPARQL querying of distributed datasets and using heuristic rules to correct results. We also exploit and inspect the quality of owl:InverseFunctionalProperty and owl:FunctionalProperty relationships, using the 44 http://ns.inria.fr/covid19/0eadf5a901c0d89fad2c202990056556be103e12 45 e.g., http://fr.dbpedia.org/resource/Tubule distal and http://fr. dbpedia.org/resource/Rein 46 e.g., http://dbpedia.org/resource/Coronavirus disease 2019 and http://www.wikidata.org/entity/Q84263196 47 e.g., http://dbpedia.org/resource/Severe acute respiratory syndrome coronavirus 2 and http://www.wikidata.org/entity/Q82069695 definitions given by endpoints and a voting approach. We show that a heuristic approach can retrieve high quality equivalence links without requiring the extraction of all the alleged existing equivalence relations. In addition, it is possible to use other algorithms (community detection, similarity function, graph-based metric, etc.) in addition to/instead of the curation rules we have implemented.</p><p>Because our algorithm works online this also exposes it to return different results for the same input, for example, if a SPARQL endpoint does not answer. Inversely, our method has the advantage of giving the user the possibility to include or exclude endpoints (public or private) on the fly, and thus to include locally stored datasets as long as a SPARQL endpoint is deployed.</p><p>It may be interesting to include other dataset catalogs, such as the ones using the CKAN API. <ref type="bibr">48</ref> Related to this, integrating SPARQL Micro-Services (Michel  et al., 2018) or other mapping approaches on top of these catalogs would allow us to query them directly with SPARQL instead of manipulating beforehand their data with another language. The use of such techniques could also help us extend our method to include non-RDF datasets.</p><p>Extracting owl:InverseFunctionalProperty, owl:FunctionalProperty and owl:sameAs relationships is not enough for some datasets. For instance Wikidata formalizes equivalence relationships with identifiers (typed as external identifier wikibase:ExternalId using wikibase:propertyType<ref type="foot" target="#foot_18">49</ref> ) leveraging URI patterns. Also, although they seem to be rarely used, we intend to study the inclusion of owl:hasKey to have a modular and extensive set in the analysis of equivalence links. In addition we plan to consider redirects -including different scheme component of the URIs such as HTTP/S. All these extensions could be addressed by adding additional rules, some of which could be the result of mining and learning approaches.</p><p>Deferencing resources deemed as same:Rotten and comparing them to same:Target with a similarity metric is also a direction to obtain more results. Exploiting the underlying semantics (e.g., owl:differentFrom, owl:AllDifferent...) of the resources is also worth exploring.</p><p>Finally, we intend to follow different leads to improve the performance of our approach in terms of speed, from query optimization (in particular for the owl:InverseFunctionalProperty and owl:FunctionalProperty properties) and further parallel querying. We will also study the software and hardware architecture needed to provide a web service with a caching system. We plan also to further exploit the monitoring capabilities of SPARQL, by using for example the PROV-O ontology 50 to better track the provenance of results, this could be used in particular for owl:sameAs relationships stored in specific named graphs (see Section 3, item 4 in the second list). We also want to exploit timestamps to, among other things, timely re-run queries executed a long time ago or to query an endpoint that was previously unavailable.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 :</head><label>1</label><figDesc>Figure 1: Workflow diagram of the steps followed to retrieve equivalent links from the starting resources in Q 0 with the available endpoints in same:N.</figDesc><graphic coords="6,73.70,94.68,447.92,122.94" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>(a:1,b:1) relationship and a sameAs(a:1,b:2) relationship and no sameAs(b:1,b:2) relationship, this query states that b:1 and b:2 are both of type same:Rotten.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2: Examples of resources identified as same:Rotten (green dots) in a path of owl:sameAs relations with the rules mentioned in the sub-section 5.2.1. The red pause icon indicates that there is no owl:sameAs relationship between two resources.Table 2: Statistics linked to the properties of type owl:InverseFunctionalProperty and owl:FunctionalProperty. The incorrect properties are stated as such after loading the RDF document defining them. Category Number of elements Properties asserted as owl:InverseFunctionalProperty 3784 Properties asserted as owl:FunctionalProperty 13298 Not deferenced properties among those extracted 14192 Incorrect owl:InverseFunctionalProperty properties 10 Incorrect owl:FunctionalProperty properties 35 Properties participating in the voting process 1220 Properties voted as owl:InverseFunctionalProperty 123 Properties voted as owl:FunctionalProperty 1111 Properties voted as not owl:InverseFunctionalProperty 1097 Properties voted as not owl:FunctionalProperty 109 Final number of owl:InverseFunctionalProperty 2288 Final number of owl:FunctionalProperty 2261 Number of loaded RDF documents 168 Number of missing RDF documents 781</figDesc><graphic coords="10,140.89,94.68,313.54,187.88" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2"><head>Table 1 :</head><label>1</label><figDesc>Main vocabulary introduced for the equivalence discovering algorithm.</figDesc><table><row><cell>Element</cell><cell>Main type</cell><cell>Role</cell></row><row><cell>same:Rotten</cell><cell>owl:Class</cell><cell>Resource that is source of potentially erroneous relationships.</cell></row><row><cell>same:N</cell><cell>rdfg:Graph</cell><cell>Named graph that contains information about the void:Dataset resources.</cell></row><row><cell>same:Properties</cell><cell>rdfg:Graph</cell><cell>Named graph that contains asserted owl:InverseFunctionalProperty and owl:FunctionalProperty.</cell></row><row><cell cols="2">same:PropertiesNotDeferenced rdfg:Graph</cell><cell>Named graph that contains not deferenced properties after the LOAD clause.</cell></row><row><cell>same:Q-1</cell><cell>rdfg:Graph</cell><cell>Named graph that contains the same:Rotten resources.</cell></row><row><cell>same:Q0</cell><cell>rdfg:Graph</cell><cell>Named graph that contains the starting same:Target.</cell></row><row><cell>same:Qi</cell><cell>rdfg:Graph</cell><cell>Named graph that contains the same:Target retrieved at the i iteration of the equivalence relationships algorithm.</cell></row></table><note><p>same:Target owl:Class Targeted resource for discovering equivalence relationships. same:hasAuthority owl:DatatypeProperty Authority of the resource. same:hasIteration owl:DatatypeProperty Iteration of the equivalence relationships algorithm during which the named graph was generated. same:hasNamespace owl:DatatypeProperty Namespace of the resource. same:statementInDataset rdf:ObjectProperty Points to the void:Dataset that a statement is a part of. same:votingType owl:ObjectProperty rdf:type of the resource determined after voting.</p></note></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3"><head></head><label></label><figDesc>see VoiD documentation on "discovering": https://www.</figDesc><table><row><cell>w3.org/TR/void/#well-known.</cell></row><row><cell>25 https://www.w3.org/TR/2012/REC-owl2-syntax-20121211/#Inverse-</cell></row><row><cell>Functional Object Properties</cell></row><row><cell>26 https://www.w3.org/TR/2012/REC-owl2-syntax-20121211/</cell></row><row><cell>#Functional Object Properties</cell></row><row><cell>27 http://lod.sztaki.hu/sparql</cell></row><row><cell>28 http://aims.fao.org/aos/agrontology#isPartOfSubvocabulary</cell></row><row><cell>29 the endpoint http://linkeddata.ge.imati.cnr.it:8890/sparql in-</cell></row><row><cell>cludes the EARTh -Enviromental Applications Refer-</cell></row><row><cell>ence THesaurus-and ThIST -Italian Thesaurus of Earth</cell></row><row><cell>Sciences-datasets)</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4"><head>Table 3 :</head><label>3</label><figDesc>Comparison of the owl:sameAs closures on dbr:Barack Obama. Rotten (subtraction of sets O 2 and O 1 on the total of URIs), and 67 new URIs about Barack Obama compared to the LOD-a-Lot dataset. As an example, we identified as same:Rotten URIs coming from URIBurner that include resources of dubious quality such as "The Irishman" on Netflix. 39 11 resources of type same:Rotten are considered as belonging to the identity set of Barack Obama (subtraction of sets O 2 and O 1 on the entity set about Barack Obama).</figDesc><table><row><cell></cell><cell>Ground truth</cell><cell cols="2">sameAs 0.99</cell><cell cols="3">sameAs 0.4 sameAs.org LODsyndesis</cell><cell cols="2">SameLive</cell></row><row><cell>Real World Entity</cell><cell>A 1</cell><cell>B 1</cell><cell>B 2</cell><cell>C 1</cell><cell>S 1</cell><cell>L 1</cell><cell>O 1</cell><cell>O 2</cell></row><row><cell>Barack Obama</cell><cell>260</cell><cell>260</cell><cell>0</cell><cell>120</cell><cell>240</cell><cell>19</cell><cell>105</cell><cell>116</cell></row><row><cell>Other Real World Entity</cell><cell>78</cell><cell>10</cell><cell>68</cell><cell>0</cell><cell>22</cell><cell>0</cell><cell>0</cell><cell>0</cell></row><row><cell>New URIs outside A 1</cell><cell>0</cell><cell>0</cell><cell>0</cell><cell>0</cell><cell>413</cell><cell>14</cell><cell>27</cell><cell>67</cell></row><row><cell>Undetermined URIs</cell><cell>102</cell><cell>92</cell><cell>10</cell><cell>1</cell><cell>32</cell><cell>4</cell><cell>9</cell><cell>11</cell></row><row><cell>Identity Sets</cell><cell>1</cell><cell>2</cell><cell></cell><cell>219</cell><cell>1</cell><cell>1</cell><cell>1</cell><cell>1</cell></row><row><cell>Total URIs in Identity Set</cell><cell>440</cell><cell>362</cell><cell>78</cell><cell>121</cell><cell>707</cell><cell>37</cell><cell>141</cell><cell>194</cell></row><row><cell cols="4">ture of it, we are able to identify a total of 141</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell cols="4">equivalent resources of type same:Target and 53</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row><row><cell>same:</cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell><cell></cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>PREFIX ov:&lt;http://open.vocab.org/terms/&gt;</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_1"><p>https://web.archive.org/web/20170510073633/http: //kakapo.dcs.qmul.ac.uk/ontology/musim/0.2/musim.html</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_2"><p>https://demos.isl.ics.forth.gr/lodsyndesis/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4" xml:id="foot_3"><p>https://github.com/ldspider/ldspider</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="5" xml:id="foot_4"><p>http://sage.univ-nantes.fr/see/sameAs</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="6" xml:id="foot_5"><p>https://github.com/raadjoe/obama-lod-identity-analysis</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="15" xml:id="foot_6"><p>https://tools.ietf.org/html/rfc8615</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="16" xml:id="foot_7"><p>PREFIX ends: &lt;https://labs.mondeca.com/vocab/endpointStatus/&gt;, archive link: https://web.archive.org/web/20210302021149/https://labs. mondeca.com/vocab/endpointStatus/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="17" xml:id="foot_8"><p>https://www.w3.org/TR/void/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="18" xml:id="foot_9"><p>http://void.rkbexplorer.com</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="19" xml:id="foot_10"><p>PREFIX dcterms: &lt;http://purl.org/dc/terms/&gt;</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="20" xml:id="foot_11"><p>http://void.rkbexplorer.com/sparql</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="23" xml:id="foot_12"><p>https://yummydata.org/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="32" xml:id="foot_13"><p>e.g. http://linkedlifedata.com/sparql</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="33" xml:id="foot_14"><p>URI = scheme:[//authority]path[?query] [#fragment] in RFC 3986</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="37" xml:id="foot_15"><p>http://sameas.org/rdf?uri=http://dbpedia.org/resource/Barack Obama</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="38" xml:id="foot_16"><p>https://demos.isl.ics.forth.gr/lodsyndesis/rest-api/objectCoreference? uri=http://dbpedia.org/resource/Barack Obama</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="48" xml:id="foot_17"><p>https://docs.ckan.org/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="49" xml:id="foot_18"><p>PREFIX wikibase: &lt;http://wikiba.se/ontology#&gt;</p></note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">Semantic Web for the Working Ontologist</title>
		<author>
			<persName><forename type="first">D</forename><surname>Allemang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Hendler</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Gandon</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2020">2020</date>
			<publisher>ACM</publisher>
			<biblScope unit="volume">3</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Fast unfolding of communities in large networks</title>
		<author>
			<persName><forename type="first">V</forename><forename type="middle">D</forename><surname>Blondel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J.-L</forename><surname>Guillaume</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Lambiotte</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Lefebvre</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of statistical mechanics: theory and experiment</title>
		<imprint>
			<biblScope unit="issue">10</biblScope>
			<biblScope unit="page">10008</biblScope>
			<date type="published" when="2008">2008. 2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">The kgram abstract machine for knowledge graph querying</title>
		<author>
			<persName><forename type="first">Corby</forename></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Zucker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">F</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Web Intelligence and Intelligent Agent Technology (WI-IAT)</title>
		<imprint>
			<publisher>IEEE</publisher>
			<date type="published" when="2010">2010</date>
			<biblScope unit="volume">1</biblScope>
			<biblScope unit="page" from="338" to="341" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Lod-a-lot</title>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">D</forename><surname>Fernández</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Beek</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">A</forename><surname>Martínez-Prieto</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Arias</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International semantic web conference</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2017">2017</date>
			<biblScope unit="page" from="75" to="83" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">A Survey of the First 20 Years of Research on Semantic Web and Linked Data</title>
		<author>
			<persName><forename type="first">F</forename><surname>Gandon</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Revue des Sciences et Technologies de l&apos;Information -Série ISI</title>
		<imprint>
			<date type="published" when="2018">2018</date>
			<publisher>Ingénierie des Systèmes d&apos;Information</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">When owl: sameas isn&apos;t the same: An analysis of identity in linked data</title>
		<author>
			<persName><forename type="first">H</forename><surname>Halpin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">J</forename><surname>Hayes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">P</forename><surname>Mccusker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">L</forename><surname>Mcguinness</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><forename type="middle">S</forename><surname>Thompson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International semantic web conference</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2010">2010</date>
			<biblScope unit="page" from="305" to="320" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<author>
			<persName><forename type="first">O</forename><surname>Hartig</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Thompson</surname></persName>
		</author>
		<idno type="arXiv">arXiv:1406.3399</idno>
		<title level="m">Foundations of an alternative approach to reification in rdf</title>
		<imprint>
			<date type="published" when="2014">2014</date>
		</imprint>
	</monogr>
	<note type="report_type">arXiv preprint</note>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title level="a" type="main">Managing URI synonymity to enable consistent reference on the semantic web</title>
		<author>
			<persName><forename type="first">A</forename><surname>Jaffri</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Glaser</surname></persName>
		</author>
		<author>
			<persName><forename type="first">I</forename><surname>Millard</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 1st IRSW2008 International Workshop on Identity and Reference on the Semantic Web</title>
		<meeting>the 1st IRSW2008 International Workshop on Identity and Reference on the Semantic Web</meeting>
		<imprint>
			<date type="published" when="2008">2008</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">SPARQL micro-services: Lightweight integration of web apis and linked data</title>
		<author>
			<persName><forename type="first">F</forename><surname>Michel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Faron-Zucker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Gandon</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Workshop on Linked Data on the Web co-located with The Web Conference 2018</title>
		<imprint>
			<publisher>LDOW@WWW</publisher>
			<date type="published" when="2018">2018. 2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Covid-on-the-web: Knowledge graph and services to advance covid-19 research</title>
		<author>
			<persName><forename type="first">F</forename><surname>Michel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Gandon</surname></persName>
		</author>
		<author>
			<persName><forename type="first">V</forename><surname>Ah-Kane</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Bobasheva</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Cabrio</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Corby</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Gazzotti</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Giboin</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Marro</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Mayer</surname></persName>
		</author>
		<ptr target="https://www.w3.org/TR/prov-o/" />
	</analytic>
	<monogr>
		<title level="m">International Semantic Web Conference</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2020">2020</date>
			<biblScope unit="volume">50</biblScope>
			<biblScope unit="page" from="294" to="310" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title level="a" type="main">Scalable methods for measuring the connectivity and quality of large numbers of linked datasets</title>
		<author>
			<persName><forename type="first">M</forename><surname>Mountantonakis</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Y</forename><surname>Tzitzikas</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Data and Information Quality (JDIQ)</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="1" to="49" />
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Constructing and cleaning identity graphs in the lod cloud</title>
		<author>
			<persName><forename type="first">J</forename><surname>Raad</surname></persName>
		</author>
		<author>
			<persName><forename type="first">W</forename><surname>Beek</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Van Harmelen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Wielemaker</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Pernelle</surname></persName>
		</author>
		<author>
			<persName><forename type="first">F</forename><surname>Saïs</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Data Intelligence</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="issue">3</biblScope>
			<biblScope unit="page" from="323" to="352" />
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Adoption of the linked data best practices in different topical domains</title>
		<author>
			<persName><forename type="first">M</forename><surname>Schmachtenberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Bizer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Paulheim</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">International Semantic Web Conference</title>
		<imprint>
			<publisher>Springer</publisher>
			<date type="published" when="2014">2014</date>
			<biblScope unit="page" from="245" to="260" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">YummyData: providing high-quality open life science data</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Yamamoto</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Yamaguchi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Splendiani</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Database</title>
		<imprint>
			<date type="published" when="2018">2018. 2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Covid-19: what has been learned and to be learned about the novel coronavirus disease</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Yi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><forename type="middle">N</forename><surname>Lagniton</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Ye</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Li</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R.-H</forename><surname>Xu</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International journal of biological sciences</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="issue">10</biblScope>
			<biblScope unit="page">1753</biblScope>
			<date type="published" when="2020">2020</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
