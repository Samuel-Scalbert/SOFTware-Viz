{"application": "software-mentions", "version": "0.8.0", "date": "2024-04-15T07:27+0000", "md5": "52567C6D9A66D10AAF1A76643DA1A792", "mentions": [{"type": "software", "software-type": "software", "software-name": {"rawForm": "HADAD", "normalizedForm": "HADAD", "offsetStart": 0, "offsetEnd": 5}, "context": "HADAD capitalizes on a framework Paper Organization. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.000652015209197998}, "created": {"value": false, "score": 0.0075495243072509766}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.49534332752227783}, "created": {"value": true, "score": 0.9999298453330994}, "shared": {"value": false, "score": 2.086162567138672e-06}}, "references": [{"label": "[14]", "normalizedForm": "[14]", "refKey": 13}]}, {"type": "software", "software-type": "software", "wikidataId": "Q197520", "wikipediaExternalRef": 381782, "lang": "en", "confidence": 0.439, "software-name": {"rawForm": "Numpy", "normalizedForm": "Numpy", "wikidataId": "Q197520", "wikipediaExternalRef": 381782, "lang": "en", "confidence": 0.439, "offsetStart": 0, "offsetEnd": 5}, "version": {"rawForm": "1.16.6", "normalizedForm": "1.16.6", "offsetStart": 6, "offsetEnd": 12}, "context": "Numpy 1.16.6 (python 2.7), Ten-sorFlow 1.4.1, ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9991868138313293}, "created": {"value": false, "score": 5.662441253662109e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9991868138313293}, "created": {"value": false, "score": 5.662441253662109e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.5539, "software-name": {"rawForm": "Spark", "normalizedForm": "Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.5539, "offsetStart": 0, "offsetEnd": 5}, "version": {"rawForm": "2.4.5", "normalizedForm": "2.4.5", "offsetStart": 6, "offsetEnd": 11}, "context": "Spark 2.4.5 (MLlib), and SystemML 1.2.0; hybrid scenarios were evaluated in the SparkSQL [16] polystore.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999902844429016}, "created": {"value": false, "score": 3.7550926208496094e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999902844429016}, "created": {"value": false, "score": 0.010217428207397461}, "shared": {"value": false, "score": 2.980232238769531e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "HADAD", "normalizedForm": "HADAD", "offsetStart": 0, "offsetEnd": 5}, "context": "HADAD is an extensible lightweight approach for optimizing hybrid complex analytics queries, based on the powerful intermediate abstraction of a a relational model with integrity constraints. ", "mentionContextAttributes": {"used": {"value": false, "score": 2.866983413696289e-05}, "created": {"value": false, "score": 0.2559530735015869}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.49534332752227783}, "created": {"value": true, "score": 0.9999298453330994}, "shared": {"value": false, "score": 2.086162567138672e-06}}, "references": [{"label": "[14]", "normalizedForm": "[14]", "refKey": 13}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "HADAD", "normalizedForm": "HADAD", "offsetStart": 0, "offsetEnd": 5}, "context": "HADAD extends [14] with a reduction from LA view-based rewriting to relational rewriting under constraints. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0005001425743103027}, "created": {"value": false, "score": 4.112720489501953e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.49534332752227783}, "created": {"value": true, "score": 0.9999298453330994}, "shared": {"value": false, "score": 2.086162567138672e-06}}, "references": [{"label": "[14]", "normalizedForm": "[14]", "refKey": 13, "offsetStart": 59810, "offsetEnd": 59814}]}, {"type": "software", "software-type": "software", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "software-name": {"rawForm": "SystemML", "normalizedForm": "SystemML", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "offsetStart": 0, "offsetEnd": 8}, "version": {"rawForm": "1.2.0", "normalizedForm": "1.2.0"}, "context": "SystemML timed-out (>1000 secs) for both original pipeline and its rewriting.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999731183052063}, "created": {"value": false, "score": 1.055002212524414e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999902844429016}, "created": {"value": true, "score": 0.8823952674865723}, "shared": {"value": false, "score": 1.2516975402832031e-06}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 18}, {"label": "[19]", "normalizedForm": "[19]", "refKey": 18}]}, {"type": "software", "software-type": "software", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "software-name": {"rawForm": "SystemML", "normalizedForm": "SystemML", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "offsetStart": 0, "offsetEnd": 8}, "version": {"rawForm": "1.2.0", "normalizedForm": "1.2.0"}, "context": "SystemML does optimize the multiplication order if the user does not enforce it.", "mentionContextAttributes": {"used": {"value": false, "score": 5.036592483520508e-05}, "created": {"value": false, "score": 2.7239322662353516e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999902844429016}, "created": {"value": true, "score": 0.8823952674865723}, "shared": {"value": false, "score": 1.2516975402832031e-06}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 18}, {"label": "[19]", "normalizedForm": "[19]", "refKey": 18}]}, {"type": "software", "software-type": "software", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "software-name": {"rawForm": "SystemML", "normalizedForm": "SystemML", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "offsetStart": 0, "offsetEnd": 8}, "version": {"rawForm": "1.2.0", "normalizedForm": "1.2.0"}, "context": "SystemML is efficient here, due to its dedicated operator tsmm for transpose-self matrix multiplication and mmchain for matrix multiply chains.", "mentionContextAttributes": {"used": {"value": false, "score": 4.297494888305664e-05}, "created": {"value": false, "score": 0.0008155703544616699}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999902844429016}, "created": {"value": true, "score": 0.8823952674865723}, "shared": {"value": false, "score": 1.2516975402832031e-06}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 18}, {"label": "[19]", "normalizedForm": "[19]", "refKey": 18}]}, {"type": "software", "software-type": "software", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "software-name": {"rawForm": "SystemML", "normalizedForm": "SystemML", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "offsetStart": 0, "offsetEnd": 8}, "version": {"rawForm": "1.2.0", "normalizedForm": "1.2.0"}, "context": "SystemML captures (ii), (iii), and (iv) as static rewrite rules, however, it is unable to exploit these performance-saving opportunities since it is unaware of (i).", "mentionContextAttributes": {"used": {"value": false, "score": 7.909536361694336e-05}, "created": {"value": false, "score": 3.987550735473633e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999902844429016}, "created": {"value": true, "score": 0.8823952674865723}, "shared": {"value": false, "score": 1.2516975402832031e-06}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 18}, {"label": "[19]", "normalizedForm": "[19]", "refKey": 18}]}, {"type": "software", "software-type": "software", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "software-name": {"rawForm": "SystemML", "normalizedForm": "SystemML", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "offsetStart": 0, "offsetEnd": 8}, "version": {"rawForm": "1.2.0", "normalizedForm": "1.2.0"}, "context": "SystemML [19] offers high-level R-like linear algebra abstractions, using a declarative language called Declarative Machine Learning (DML).", "mentionContextAttributes": {"used": {"value": false, "score": 2.1517276763916016e-05}, "created": {"value": false, "score": 9.936094284057617e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999902844429016}, "created": {"value": true, "score": 0.8823952674865723}, "shared": {"value": false, "score": 1.2516975402832031e-06}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 18, "offsetStart": 56789, "offsetEnd": 56793}]}, {"type": "software", "software-type": "software", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "software-name": {"rawForm": "SystemML", "normalizedForm": "SystemML", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "offsetStart": 0, "offsetEnd": 8}, "version": {"rawForm": "1.2.0", "normalizedForm": "1.2.0"}, "context": "SystemML Algebraic Simplification Rule Integrity Constraints MMC St at A\u0434\u0434 simplifyRowWiseAgg rowSums(M)->M if x is col vector", "mentionContextAttributes": {"used": {"value": false, "score": 0.048934757709503174}, "created": {"value": false, "score": 1.6093254089355469e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999902844429016}, "created": {"value": true, "score": 0.8823952674865723}, "shared": {"value": false, "score": 1.2516975402832031e-06}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 18}, {"label": "[19]", "normalizedForm": "[19]", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Prune pr ov", "normalizedForm": "Prune pr ov", "offsetStart": 0, "offsetEnd": 11}, "context": "Prune pr ov Minimum-Cost Rewriting.", "mentionContextAttributes": {"used": {"value": false, "score": 0.007136523723602295}, "created": {"value": false, "score": 8.52346420288086e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9989869594573975}, "created": {"value": true, "score": 0.6551459431648254}, "shared": {"value": false, "score": 1.1324882507324219e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SparkMLlib", "normalizedForm": "SparkMLlib", "offsetStart": 0, "offsetEnd": 15}, "context": "SparkMLlib [39] provides LA operations and built-in function implementations of popular ML algorithms, such as linear regression, etc. on Spark RDDs. ", "mentionContextAttributes": {"used": {"value": false, "score": 4.45246696472168e-05}, "created": {"value": false, "score": 0.0002664327621459961}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.22652077674865723}, "created": {"value": false, "score": 0.0002664327621459961}, "shared": {"value": false, "score": 2.980232238769531e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "software-name": {"rawForm": "SystemML", "normalizedForm": "SystemML", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "offsetStart": 3, "offsetEnd": 11}, "version": {"rawForm": "1.2.0", "normalizedForm": "1.2.0"}, "context": "On SystemML, the original pipeline timed out (> 1000 seconds).", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999427199363708}, "created": {"value": false, "score": 8.195638656616211e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999902844429016}, "created": {"value": true, "score": 0.8823952674865723}, "shared": {"value": false, "score": 1.2516975402832031e-06}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 18}, {"label": "[19]", "normalizedForm": "[19]", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PACB", "normalizedForm": "PACB", "offsetStart": 4, "offsetEnd": 8}, "context": "Our PACB rewriting engine (PACB ++ hereafter) has been extended to utilize the Pruned pr ov algorithm sketched and discussed in [30,31], which prunes inefficient rewritings during the rewritings search phase, based on a simple cost model using two different matrix sparsity estimators. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00035822391510009766}, "created": {"value": false, "score": 0.36450809240341187}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9973574876785278}, "created": {"value": true, "score": 0.6551459431648254}, "shared": {"value": false, "score": 1.1324882507324219e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q21447895", "wikipediaExternalRef": 48508507, "lang": "en", "confidence": 0.9154, "software-name": {"rawForm": "TensorFlow", "normalizedForm": "TensorFlow", "wikidataId": "Q21447895", "wikipediaExternalRef": 48508507, "lang": "en", "confidence": 0.9154, "offsetStart": 4, "offsetEnd": 14}, "context": "For TensorFlow and NumPy, we present the results only for dense matrices, due to limited support for sparse matrices. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9751015901565552}, "created": {"value": true, "score": 0.9945457577705383}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9751015901565552}, "created": {"value": true, "score": 0.9945457577705383}, "shared": {"value": false, "score": 7.748603820800781e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.5537, "software-name": {"rawForm": "Spark", "normalizedForm": "Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.5537, "offsetStart": 7, "offsetEnd": 12}, "version": {"rawForm": "2.4.5", "normalizedForm": "2.4.5"}, "context": "We run Spark using the standalone cluster manager, and using OpenBLAS (built from the sources as detailed in [10]) to take advantage of its accelerations [44]. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.5260589718818665}, "created": {"value": false, "score": 0.010217428207397461}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999902844429016}, "created": {"value": false, "score": 0.010217428207397461}, "shared": {"value": false, "score": 2.980232238769531e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "software-name": {"rawForm": "SystemML", "normalizedForm": "SystemML", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "offsetStart": 7, "offsetEnd": 15}, "version": {"rawForm": "1.2.0", "normalizedForm": "1.2.0"}, "context": "Alone, SystemML is unable to exploit its own efficient operations for lack of awareness the LA property Av + Bv = (A + B)v.", "mentionContextAttributes": {"used": {"value": false, "score": 0.000920414924621582}, "created": {"value": false, "score": 7.12275505065918e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999902844429016}, "created": {"value": true, "score": 0.8823952674865723}, "shared": {"value": false, "score": 1.2516975402832031e-06}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 18}, {"label": "[19]", "normalizedForm": "[19]", "refKey": 18}]}, {"type": "software", "software-type": "software", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "software-name": {"rawForm": "SystemML", "normalizedForm": "SystemML", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "offsetStart": 8, "offsetEnd": 16}, "version": {"rawForm": "1.2.0", "normalizedForm": "1.2.0"}, "context": "Second, SystemML evaluates u 1 v T 2 v 2 efficiently in one go without intermediates, taking advantage of tsmm operator (discussed earlier) and mmchain for matrix multiply chains, where the best way to evaluate it computes v T 2 v 2 first, which results in a scalar, instead of computing u 1 v T 2 , which results in a dense matrix of size 100K \u00d750K.", "mentionContextAttributes": {"used": {"value": false, "score": 0.059733033180236816}, "created": {"value": false, "score": 3.993511199951172e-06}, "shared": {"value": false, "score": 6.556510925292969e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999902844429016}, "created": {"value": true, "score": 0.8823952674865723}, "shared": {"value": false, "score": 1.2516975402832031e-06}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 18}, {"label": "[19]", "normalizedForm": "[19]", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PACB", "normalizedForm": "PACB", "offsetStart": 10, "offsetEnd": 14}, "context": "The na\u00efve PACB algorithm generates all minimal (by join count) rewritings before choosing a minimum-cost one.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0005723237991333008}, "created": {"value": false, "score": 4.297494888305664e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9973574876785278}, "created": {"value": true, "score": 0.6551459431648254}, "shared": {"value": false, "score": 1.1324882507324219e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PACB", "normalizedForm": "PACB", "offsetStart": 10, "offsetEnd": 14}, "context": "The naive PACB would find both rewritings, cost them, and drop the former in favor of the latter.", "mentionContextAttributes": {"used": {"value": true, "score": 0.6872032284736633}, "created": {"value": false, "score": 1.8656253814697266e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9973574876785278}, "created": {"value": true, "score": 0.6551459431648254}, "shared": {"value": false, "score": 1.1324882507324219e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q1461054", "wikipediaExternalRef": 8232236, "lang": "en", "confidence": 0.7837, "software-name": {"rawForm": "OpenJDK", "normalizedForm": "OpenJDK", "wikidataId": "Q1461054", "wikipediaExternalRef": 8232236, "lang": "en", "confidence": 0.7837, "offsetStart": 10, "offsetEnd": 17}, "version": {"rawForm": "8", "normalizedForm": "8", "offsetStart": 23, "offsetEnd": 24}, "context": "We run on OpenJDK Java 8 VM . ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9705647826194763}, "created": {"value": false, "score": 0.03907734155654907}, "shared": {"value": false, "score": 3.7550926208496094e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9705647826194763}, "created": {"value": false, "score": 0.03907734155654907}, "shared": {"value": false, "score": 3.7550926208496094e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q197520", "wikipediaExternalRef": 381782, "lang": "en", "confidence": 0.9088, "software-name": {"rawForm": "NumPy", "normalizedForm": "NumPy", "wikidataId": "Q197520", "wikipediaExternalRef": 381782, "lang": "en", "confidence": 0.9088, "offsetStart": 10, "offsetEnd": 19}, "context": "R [3] and NumPy [2] are two of the most popular computing environments for statistical data analysis, widely used in academia and industry. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00011163949966430664}, "created": {"value": false, "score": 1.1026859283447266e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9947383403778076}, "created": {"value": true, "score": 0.9945457577705383}, "shared": {"value": false, "score": 1.2516975402832031e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "HADAD", "normalizedForm": "HADAD", "offsetStart": 11, "offsetEnd": 16}, "context": "We propose HADAD, an extensible, lightweight, holistic optimizer for analytical queries, based on reasoning on a common abstraction: relational model with integrity constraints. ", "mentionContextAttributes": {"used": {"value": false, "score": 6.490945816040039e-05}, "created": {"value": true, "score": 0.9999298453330994}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.49534332752227783}, "created": {"value": true, "score": 0.9999298453330994}, "shared": {"value": false, "score": 2.086162567138672e-06}}, "references": [{"label": "[14]", "normalizedForm": "[14]", "refKey": 13}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "HADAD", "normalizedForm": "HADAD", "offsetStart": 12, "offsetEnd": 17}, "context": "We describe HADAD, an extensible lightweight approach for optimizing hybrid complex analytics queries, based on a common abstraction that facilitates unified reasoning: a relational model endowed with integrity constraints, which can be used to express the properties of the two computation formalisms.", "mentionContextAttributes": {"used": {"value": false, "score": 6.598234176635742e-05}, "created": {"value": true, "score": 0.9998431205749512}, "shared": {"value": false, "score": 6.556510925292969e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.49534332752227783}, "created": {"value": true, "score": 0.9999298453330994}, "shared": {"value": false, "score": 2.086162567138672e-06}}, "references": [{"label": "[14]", "normalizedForm": "[14]", "refKey": 13}]}, {"type": "software", "software-type": "software", "wikidataId": "Q21447895", "wikipediaExternalRef": 48508507, "lang": "en", "confidence": 0.9154, "software-name": {"rawForm": "TensorFlow", "normalizedForm": "TensorFlow", "wikidataId": "Q21447895", "wikipediaExternalRef": 48508507, "lang": "en", "confidence": 0.9154, "offsetStart": 12, "offsetEnd": 22}, "context": "To maximize TensorFlow performance, we compile it from sources.", "mentionContextAttributes": {"used": {"value": true, "score": 0.8877356648445129}, "created": {"value": false, "score": 3.987550735473633e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9751015901565552}, "created": {"value": true, "score": 0.9945457577705383}, "shared": {"value": false, "score": 7.748603820800781e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "HADAD\u27e8LA", "normalizedForm": "HADAD\u27e8LA", "offsetStart": 13, "offsetEnd": 21}, "context": "Given E \u2208 L, HADAD\u27e8LA pr op , V, \u03b3 \u27e9(E) denotes all expressions returned by HADAD\u27e8LA pr op , V, \u03b3 \u27e9 on input E. Theorem 7.1 (Soundness). ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9978634119033813}, "created": {"value": false, "score": 7.450580596923828e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9978634119033813}, "created": {"value": false, "score": 7.450580596923828e-06}, "shared": {"value": false, "score": 7.748603820800781e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "software-name": {"rawForm": "SystemML", "normalizedForm": "SystemML", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "offsetStart": 13, "offsetEnd": 21}, "version": {"rawForm": "1.2.0", "normalizedForm": "1.2.0"}, "context": "For example, SystemML uses rule:", "mentionContextAttributes": {"used": {"value": false, "score": 0.0003154277801513672}, "created": {"value": false, "score": 1.1742115020751953e-05}, "shared": {"value": false, "score": 1.2516975402832031e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999902844429016}, "created": {"value": true, "score": 0.8823952674865723}, "shared": {"value": false, "score": 1.2516975402832031e-06}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 18}, {"label": "[19]", "normalizedForm": "[19]", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Prune pr ov", "normalizedForm": "Prune pr ov", "offsetStart": 14, "offsetEnd": 25}, "context": "We illustrate Prune pr ov and our improvements next.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9989869594573975}, "created": {"value": false, "score": 0.003937423229217529}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9989869594573975}, "created": {"value": true, "score": 0.6551459431648254}, "shared": {"value": false, "score": 1.1324882507324219e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "HADAD\u27e8LA", "normalizedForm": "HADAD\u27e8LA", "offsetStart": 15, "offsetEnd": 23}, "context": "We denote with HADAD\u27e8LA pr op , V, \u03b3 \u27e9 our parameterized solution based on relational encoding followed by PACB++ rewriting and next by decoding all the relational rewritings generated by the cost-based pruning PACB++ (recall Figure 1).", "mentionContextAttributes": {"used": {"value": true, "score": 0.9973574876785278}, "created": {"value": false, "score": 1.6093254089355469e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9978634119033813}, "created": {"value": false, "score": 7.450580596923828e-06}, "shared": {"value": false, "score": 7.748603820800781e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q21447895", "wikipediaExternalRef": 48508507, "lang": "en", "confidence": 0.9154, "software-name": {"rawForm": "TensorFlow", "normalizedForm": "TensorFlow", "wikidataId": "Q21447895", "wikipediaExternalRef": 48508507, "lang": "en", "confidence": 0.9154, "offsetStart": 15, "offsetEnd": 25}, "context": "Interestingly, TensorFlow is the only system that applies this optimization by itself. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00010532140731811523}, "created": {"value": false, "score": 5.882978439331055e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9751015901565552}, "created": {"value": true, "score": 0.9945457577705383}, "shared": {"value": false, "score": 7.748603820800781e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PACB", "normalizedForm": "PACB", "offsetStart": 16, "offsetEnd": 20}, "context": "We extended the PACB rewriting engine with the Prune pr ov algorithm sketched and discussed in [30,31], to eliminate inefficient rewritings during the rewriting search phase.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9938421249389648}, "created": {"value": false, "score": 0.009098529815673828}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9973574876785278}, "created": {"value": true, "score": 0.6551459431648254}, "shared": {"value": false, "score": 1.1324882507324219e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q197520", "wikipediaExternalRef": 381782, "lang": "en", "confidence": 0.9088, "software-name": {"rawForm": "NumPy", "normalizedForm": "NumPy", "wikidataId": "Q197520", "wikipediaExternalRef": 381782, "lang": "en", "confidence": 0.9088, "offsetStart": 19, "offsetEnd": 24}, "context": "For TensorFlow and NumPy, we present the results only for dense matrices, due to limited support for sparse matrices. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9751015901565552}, "created": {"value": true, "score": 0.9945457577705383}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9947383403778076}, "created": {"value": true, "score": 0.9945457577705383}, "shared": {"value": false, "score": 1.2516975402832031e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "HADAD", "normalizedForm": "HADAD", "offsetStart": 19, "offsetEnd": 24}, "context": "We have shown that HADAD brings significant performance-saving across LA-oriented and potentially polystore engines/systems without the need to modify their internals.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0002859830856323242}, "created": {"value": true, "score": 0.9024306535720825}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.49534332752227783}, "created": {"value": true, "score": 0.9999298453330994}, "shared": {"value": false, "score": 2.086162567138672e-06}}, "references": [{"label": "[14]", "normalizedForm": "[14]", "refKey": 13}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Prune pr ov", "normalizedForm": "Prune pr ov", "offsetStart": 20, "offsetEnd": 31}, "context": "Our improvements on Prune pr ov . ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0016680359840393066}, "created": {"value": false, "score": 0.035407960414886475}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9989869594573975}, "created": {"value": true, "score": 0.6551459431648254}, "shared": {"value": false, "score": 1.1324882507324219e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "HADAD", "normalizedForm": "HADAD", "offsetStart": 24, "offsetEnd": 29}, "context": "On these subsets, where HADAD's optimization is redundant, using dense matrices, the overhead is very low: with the MNC model, 0.48% to 1.12% on P \u00acOpt S M (0.64% on average), and 0.0051% to 3.51% on P \u00acOpt T F", "mentionContextAttributes": {"used": {"value": false, "score": 0.49534332752227783}, "created": {"value": false, "score": 2.3245811462402344e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.49534332752227783}, "created": {"value": true, "score": 0.9999298453330994}, "shared": {"value": false, "score": 2.086162567138672e-06}}, "references": [{"label": "[14]", "normalizedForm": "[14]", "refKey": 13}]}, {"type": "software", "software-type": "software", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "software-name": {"rawForm": "SystemML", "normalizedForm": "SystemML", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "offsetStart": 25, "offsetEnd": 33}, "version": {"rawForm": "1.2.0", "normalizedForm": "1.2.0", "offsetStart": 34, "offsetEnd": 39}, "context": "Spark 2.4.5 (MLlib), and SystemML 1.2.0; hybrid scenarios were evaluated in the SparkSQL [16] polystore.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999902844429016}, "created": {"value": false, "score": 3.7550926208496094e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999902844429016}, "created": {"value": true, "score": 0.8823952674865723}, "shared": {"value": false, "score": 1.2516975402832031e-06}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 18}, {"label": "[19]", "normalizedForm": "[19]", "refKey": 18}]}, {"type": "software", "software-type": "software", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "software-name": {"rawForm": "SystemML", "normalizedForm": "SystemML", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "offsetStart": 25, "offsetEnd": 33}, "version": {"rawForm": "1.2.0", "normalizedForm": "1.2.0"}, "context": "This matrix is loaded in SystemML, where we filter rows with rating less than 2. Next, an analysis is run, through the computation:", "mentionContextAttributes": {"used": {"value": true, "score": 0.9986531138420105}, "created": {"value": false, "score": 2.485513687133789e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999902844429016}, "created": {"value": true, "score": 0.8823952674865723}, "shared": {"value": false, "score": 1.2516975402832031e-06}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 18}, {"label": "[19]", "normalizedForm": "[19]", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PACB ++", "normalizedForm": "PACB ++", "offsetStart": 27, "offsetEnd": 34}, "context": "Our PACB rewriting engine (PACB ++ hereafter) has been extended to utilize the Pruned pr ov algorithm sketched and discussed in [30,31], which prunes inefficient rewritings during the rewritings search phase, based on a simple cost model using two different matrix sparsity estimators. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00035822391510009766}, "created": {"value": false, "score": 0.36450809240341187}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.46474331617355347}, "created": {"value": false, "score": 0.36450809240341187}, "shared": {"value": false, "score": 4.172325134277344e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Ten-sorFlow", "normalizedForm": "Ten-sorFlow", "offsetStart": 27, "offsetEnd": 38}, "version": {"rawForm": "2.7", "normalizedForm": "2.7", "offsetStart": 21, "offsetEnd": 24}, "context": "Numpy 1.16.6 (python 2.7), Ten-sorFlow 1.4.1, ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9991868138313293}, "created": {"value": false, "score": 5.662441253662109e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9991868138313293}, "created": {"value": false, "score": 5.662441253662109e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "VREM", "normalizedForm": "VREM", "offsetStart": 30, "offsetEnd": 34}, "context": "To model LA operations on the VREM relational schema (part of which appears in Table 1), we also rely on a set of integrity constraints MMC, which are encoded using relations in VREM.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9475173354148865}, "created": {"value": false, "score": 8.863210678100586e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9971269369125366}, "created": {"value": true, "score": 0.7424609065055847}, "shared": {"value": false, "score": 7.748603820800781e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "software-name": {"rawForm": "SystemML", "normalizedForm": "SystemML", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "offsetStart": 31, "offsetEnd": 39}, "version": {"rawForm": "1.2.0", "normalizedForm": "1.2.0"}, "context": "Among the 39 P \u00acOpt pipelines, SystemML finds efficient rewritings for a set of 6, denoted P \u00acOpt S M , while TensorFlow optimizes a different set of 11, denoted P \u00acOpt T F .", "mentionContextAttributes": {"used": {"value": false, "score": 0.0019010305404663086}, "created": {"value": false, "score": 3.516674041748047e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999902844429016}, "created": {"value": true, "score": 0.8823952674865723}, "shared": {"value": false, "score": 1.2516975402832031e-06}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 18}, {"label": "[19]", "normalizedForm": "[19]", "refKey": 18}]}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.5539, "software-name": {"rawForm": "Spark", "normalizedForm": "Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.5539, "offsetStart": 32, "offsetEnd": 37}, "version": {"rawForm": "2.4.5", "normalizedForm": "2.4.5"}, "context": "The driver memory allocated for Spark and SystemML is 115GB.", "mentionContextAttributes": {"used": {"value": true, "score": 0.7190213203430176}, "created": {"value": false, "score": 9.715557098388672e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999902844429016}, "created": {"value": false, "score": 0.010217428207397461}, "shared": {"value": false, "score": 2.980232238769531e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PACB", "normalizedForm": "PACB", "offsetStart": 34, "offsetEnd": 38}, "context": "From a set V of view definitions, PACB therefore derives a set of view constraints", "mentionContextAttributes": {"used": {"value": false, "score": 0.039854586124420166}, "created": {"value": false, "score": 1.5079975128173828e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9973574876785278}, "created": {"value": true, "score": 0.6551459431648254}, "shared": {"value": false, "score": 1.1324882507324219e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PACB", "normalizedForm": "PACB", "offsetStart": 36, "offsetEnd": 40}, "context": "We exemplify this below, and detail PACB ++ 's inner workings in Section 6.", "mentionContextAttributes": {"used": {"value": true, "score": 0.7618564367294312}, "created": {"value": false, "score": 0.0005842447280883789}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9973574876785278}, "created": {"value": true, "score": 0.6551459431648254}, "shared": {"value": false, "score": 1.1324882507324219e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PACB", "normalizedForm": "PACB", "offsetStart": 37, "offsetEnd": 41}, "context": "Then, we detail our extension to the PACB rewriting engine based on the Prune pr ov algorithm (Section 6.3) to prune out inefficient rewritings.", "mentionContextAttributes": {"used": {"value": false, "score": 0.06777620315551758}, "created": {"value": true, "score": 0.6551459431648254}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9973574876785278}, "created": {"value": true, "score": 0.6551459431648254}, "shared": {"value": false, "score": 1.1324882507324219e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q197520", "wikipediaExternalRef": 381782, "lang": "en", "confidence": 0.9088, "software-name": {"rawForm": "NumPy", "normalizedForm": "NumPy", "wikidataId": "Q197520", "wikipediaExternalRef": 381782, "lang": "en", "confidence": 0.9088, "offsetStart": 38, "offsetEnd": 46}, "context": "Languages/libraries such as R [3] and NumPy [2], as well as LAoriented systems such as SystemML [19] and TensorFlow [11] treat matrices and linear algebra operations as first-class citizens: they offer a rich set of built-in LA operations and algorithms. ", "mentionContextAttributes": {"used": {"value": false, "score": 9.387731552124023e-05}, "created": {"value": false, "score": 4.9173831939697266e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9947383403778076}, "created": {"value": true, "score": 0.9945457577705383}, "shared": {"value": false, "score": 1.2516975402832031e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Prune pr ov", "normalizedForm": "Prune pr ov", "offsetStart": 38, "offsetEnd": 49}, "context": "Therefore, in our modified version of Prune pr ov , we keep track of the rewriting costs already estimated, to prevent such redundant work. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0002561807632446289}, "created": {"value": false, "score": 0.18717360496520996}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9989869594573975}, "created": {"value": true, "score": 0.6551459431648254}, "shared": {"value": false, "score": 1.1324882507324219e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "software-name": {"rawForm": "SystemML", "normalizedForm": "SystemML", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "offsetStart": 39, "offsetEnd": 47}, "version": {"rawForm": "1.2.0", "normalizedForm": "1.2.0"}, "context": "For fairness, we ensured SparkMLib and SystemML compute the entire pipeline (despite their lazy evaluation mode).", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999732375144958}, "created": {"value": true, "score": 0.8823952674865723}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999902844429016}, "created": {"value": true, "score": 0.8823952674865723}, "shared": {"value": false, "score": 1.2516975402832031e-06}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 18}, {"label": "[19]", "normalizedForm": "[19]", "refKey": 18}]}, {"type": "software", "software-type": "software", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "software-name": {"rawForm": "SystemML", "normalizedForm": "SystemML", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "offsetStart": 42, "offsetEnd": 50}, "version": {"rawForm": "1.2.0", "normalizedForm": "1.2.0"}, "context": "The driver memory allocated for Spark and SystemML is 115GB.", "mentionContextAttributes": {"used": {"value": true, "score": 0.7190213203430176}, "created": {"value": false, "score": 9.715557098388672e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999902844429016}, "created": {"value": true, "score": 0.8823952674865723}, "shared": {"value": false, "score": 1.2516975402832031e-06}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 18}, {"label": "[19]", "normalizedForm": "[19]", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PACB", "normalizedForm": "PACB", "offsetStart": 43, "offsetEnd": 47}, "context": "Given the query Q(x, y):-R(x, z), S(z, y), PACB finds the reformulation \u03c1(x, y):-V (x, y).", "mentionContextAttributes": {"used": {"value": false, "score": 0.2763391137123108}, "created": {"value": false, "score": 5.185604095458984e-06}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9973574876785278}, "created": {"value": true, "score": 0.6551459431648254}, "shared": {"value": false, "score": 1.1324882507324219e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.5539, "software-name": {"rawForm": "Spark", "normalizedForm": "Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.5539, "offsetStart": 46, "offsetEnd": 51}, "version": {"rawForm": "2.4.5", "normalizedForm": "2.4.5"}, "context": "While M thus converted has the same sparsity, Spark views it as being of a dense type ( multiplication on BlockMatrix is considered to produce dense matrices) [9].", "mentionContextAttributes": {"used": {"value": false, "score": 0.0007609128952026367}, "created": {"value": false, "score": 5.185604095458984e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999902844429016}, "created": {"value": false, "score": 0.010217428207397461}, "shared": {"value": false, "score": 2.980232238769531e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "software-name": {"rawForm": "SystemML", "normalizedForm": "SystemML", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "offsetStart": 46, "offsetEnd": 54}, "version": {"rawForm": "1.2.0", "normalizedForm": "1.2.0"}, "context": "We use a JVM-based linear algebra library for SystemML as recommended in [44], at the optimization level 4. Additionally, we enable multi-threaded matrix operations in a single node.", "mentionContextAttributes": {"used": {"value": false, "score": 0.009072422981262207}, "created": {"value": false, "score": 0.008116841316223145}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999902844429016}, "created": {"value": true, "score": 0.8823952674865723}, "shared": {"value": false, "score": 1.2516975402832031e-06}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 18}, {"label": "[19]", "normalizedForm": "[19]", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "VREM", "normalizedForm": "VREM", "offsetStart": 47, "offsetEnd": 51}, "context": "We define a virtual relation name(M i 1 , n) \u2208 VREM attaching a unique ID M i 1 to any matrix identified by a name denoted n (which may be e.g. of the form \"/data/M.csv\").", "mentionContextAttributes": {"used": {"value": false, "score": 0.003901541233062744}, "created": {"value": false, "score": 0.0001761913299560547}, "shared": {"value": false, "score": 7.748603820800781e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9971269369125366}, "created": {"value": true, "score": 0.7424609065055847}, "shared": {"value": false, "score": 7.748603820800781e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Prune pr ov", "normalizedForm": "Prune pr ov", "offsetStart": 47, "offsetEnd": 58}, "context": "We extended the PACB rewriting engine with the Prune pr ov algorithm sketched and discussed in [30,31], to eliminate inefficient rewritings during the rewriting search phase.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9938421249389648}, "created": {"value": false, "score": 0.009098529815673828}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9989869594573975}, "created": {"value": true, "score": 0.6551459431648254}, "shared": {"value": false, "score": 1.1324882507324219e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PACB ++", "normalizedForm": "PACB ++", "offsetStart": 50, "offsetEnd": 57}, "context": "For the selected relational reformulation RW e by PACB ++ , a decoding step dec(RW e ) is performed to translate RW e into the native syntax of its respective underlying store/engine (e.g., R, DML, etc.).", "mentionContextAttributes": {"used": {"value": false, "score": 0.46474331617355347}, "created": {"value": false, "score": 0.00019121170043945312}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.46474331617355347}, "created": {"value": false, "score": 0.36450809240341187}, "shared": {"value": false, "score": 4.172325134277344e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q197520", "wikipediaExternalRef": 381782, "lang": "en", "confidence": 0.9088, "software-name": {"rawForm": "NumPy", "normalizedForm": "NumPy", "wikidataId": "Q197520", "wikipediaExternalRef": 381782, "lang": "en", "confidence": 0.9088, "offsetStart": 56, "offsetEnd": 61}, "context": "This rewrite leads to 70\u00d7, 55\u00d7 and 150\u00d7 speed-ups on R, NumPy and MLlib, respectively; TensorFlow is omitted as matmul operator does not support matrix-vector multiplication.", "mentionContextAttributes": {"used": {"value": false, "score": 0.015084803104400635}, "created": {"value": false, "score": 4.470348358154297e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9947383403778076}, "created": {"value": true, "score": 0.9945457577705383}, "shared": {"value": false, "score": 1.2516975402832031e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q197520", "wikipediaExternalRef": 381782, "lang": "en", "confidence": 0.9088, "software-name": {"rawForm": "NumPy", "normalizedForm": "NumPy", "wikidataId": "Q197520", "wikipediaExternalRef": 381782, "lang": "en", "confidence": 0.9088, "offsetStart": 57, "offsetEnd": 62}, "context": "It could run this pipeline by converting the matrices to NumPy, whose performance we already report separately.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9947383403778076}, "created": {"value": false, "score": 0.005426287651062012}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9947383403778076}, "created": {"value": true, "score": 0.9945457577705383}, "shared": {"value": false, "score": 1.2516975402832031e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "VREM", "normalizedForm": "VREM", "offsetStart": 58, "offsetEnd": 62}, "context": "Regardless of matrix data's physical storage, we only use VREM to encode LA expressions and views relationally to reason about them. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9971269369125366}, "created": {"value": false, "score": 2.092123031616211e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9971269369125366}, "created": {"value": true, "score": 0.7424609065055847}, "shared": {"value": false, "score": 7.748603820800781e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "VREM", "normalizedForm": "VREM", "offsetStart": 58, "offsetEnd": 62}, "context": "We now illustrate the encoding of an LA expression on the VREM schema.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9918205142021179}, "created": {"value": true, "score": 0.7424609065055847}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9971269369125366}, "created": {"value": true, "score": 0.7424609065055847}, "shared": {"value": false, "score": 7.748603820800781e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q21155124", "wikipediaExternalRef": 46710808, "lang": "en", "confidence": 0.4529, "software-name": {"rawForm": "OpenBLAS", "normalizedForm": "OpenBLAS", "wikidataId": "Q21155124", "wikipediaExternalRef": 46710808, "lang": "en", "confidence": 0.4529, "offsetStart": 61, "offsetEnd": 69}, "context": "We run Spark using the standalone cluster manager, and using OpenBLAS (built from the sources as detailed in [10]) to take advantage of its accelerations [44]. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.5260589718818665}, "created": {"value": false, "score": 0.010217428207397461}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.5260589718818665}, "created": {"value": false, "score": 0.010217428207397461}, "shared": {"value": false, "score": 1.7881393432617188e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PACB", "normalizedForm": "PACB", "offsetStart": 63, "offsetEnd": 67}, "context": "Scalability considerations forced us to further optimize na\u00efve PACB to find only minimum-cost rewritings, aggressively pruning the others during the generation phase.", "mentionContextAttributes": {"used": {"value": true, "score": 0.6300729513168335}, "created": {"value": false, "score": 0.00028395652770996094}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9973574876785278}, "created": {"value": true, "score": 0.6551459431648254}, "shared": {"value": false, "score": 1.1324882507324219e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PACB", "normalizedForm": "PACB", "offsetStart": 63, "offsetEnd": 67}, "context": "The idea behind cost-based pruning is that, whenever the naive PACB backchase would add a provenance conjunct c to an existing atom a's provenance formula \u03c0 (a), Prune pr ov does so more conservatively: if the cost \u03b3 (sq(c)) is larger than the minimum cost threshold T found so far, then c will never participate in a minimumcost rewriting and need not be added to \u03c0 (a).", "mentionContextAttributes": {"used": {"value": true, "score": 0.9847168922424316}, "created": {"value": false, "score": 2.8014183044433594e-06}, "shared": {"value": false, "score": 1.1324882507324219e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9973574876785278}, "created": {"value": true, "score": 0.6551459431648254}, "shared": {"value": false, "score": 1.1324882507324219e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PACB", "normalizedForm": "PACB", "offsetStart": 64, "offsetEnd": 68}, "context": "Denoting with \u03c0 (S) the provenance formula of a set of atoms S, PACB computes the DNF form D of h \u2208H \u03c0 (h(Q)).", "mentionContextAttributes": {"used": {"value": true, "score": 0.7877599000930786}, "created": {"value": false, "score": 6.020069122314453e-06}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9973574876785278}, "created": {"value": true, "score": 0.6551459431648254}, "shared": {"value": false, "score": 1.1324882507324219e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PACB ++", "normalizedForm": "PACB ++", "offsetStart": 69, "offsetEnd": 76}, "context": "Section 6 details the choice of an efficient rewriting utilizing the PACB ++ engine. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0051947832107543945}, "created": {"value": false, "score": 0.0002987384796142578}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.46474331617355347}, "created": {"value": false, "score": 0.36450809240341187}, "shared": {"value": false, "score": 4.172325134277344e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "HADAD\u27e8LA", "normalizedForm": "HADAD\u27e8LA", "offsetStart": 70, "offsetEnd": 78}, "context": "If the cost model \u03b3 is monotonic, then for every E \u2208 L and every rw \u2208 HADAD\u27e8LA pr op , V, \u03b3 \u27e9(E), we have rw \u2208 Eq \u03b3 \u27e8LA pr op , V\u27e9(E).", "mentionContextAttributes": {"used": {"value": true, "score": 0.9941921234130859}, "created": {"value": false, "score": 5.066394805908203e-06}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9978634119033813}, "created": {"value": false, "score": 7.450580596923828e-06}, "shared": {"value": false, "score": 7.748603820800781e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Prune pr ov", "normalizedForm": "Prune pr ov", "offsetStart": 72, "offsetEnd": 83}, "context": "Then, we detail our extension to the PACB rewriting engine based on the Prune pr ov algorithm (Section 6.3) to prune out inefficient rewritings.", "mentionContextAttributes": {"used": {"value": false, "score": 0.06777620315551758}, "created": {"value": true, "score": 0.6551459431648254}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9989869594573975}, "created": {"value": true, "score": 0.6551459431648254}, "shared": {"value": false, "score": 1.1324882507324219e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "HADAD\u27e8LA", "normalizedForm": "HADAD\u27e8LA", "offsetStart": 76, "offsetEnd": 84}, "context": "Given E \u2208 L, HADAD\u27e8LA pr op , V, \u03b3 \u27e9(E) denotes all expressions returned by HADAD\u27e8LA pr op , V, \u03b3 \u27e9 on input E. Theorem 7.1 (Soundness).", "mentionContextAttributes": {"used": {"value": true, "score": 0.9978634119033813}, "created": {"value": false, "score": 7.450580596923828e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9978634119033813}, "created": {"value": false, "score": 7.450580596923828e-06}, "shared": {"value": false, "score": 7.748603820800781e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "software-name": {"rawForm": "SystemML", "normalizedForm": "SystemML", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "offsetStart": 77, "offsetEnd": 85}, "version": {"rawForm": "1.2.0", "normalizedForm": "1.2.0"}, "context": "Not shown in the Figure , \nwe re-ran this with M ultra sparse (using AS) and SystemML: the rewrite did not bring benefits, since MN is already efficient.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9998185634613037}, "created": {"value": false, "score": 5.036592483520508e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999902844429016}, "created": {"value": true, "score": 0.8823952674865723}, "shared": {"value": false, "score": 1.2516975402832031e-06}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 18}, {"label": "[19]", "normalizedForm": "[19]", "refKey": 18}]}, {"type": "software", "software-type": "software", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "software-name": {"rawForm": "SystemML", "normalizedForm": "SystemML", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "offsetStart": 77, "offsetEnd": 85}, "version": {"rawForm": "1.2.0", "normalizedForm": "1.2.0"}, "context": "In the same fashion as in the previous scenario, X is loaded for analysis in SystemML, where we filter rows with overall rate greater than 3. Next, we run the same analysis computation described in Scenario 1, where the obtained rewriting is also the same.", "mentionContextAttributes": {"used": {"value": true, "score": 0.7996946573257446}, "created": {"value": false, "score": 1.531839370727539e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999902844429016}, "created": {"value": true, "score": 0.8823952674865723}, "shared": {"value": false, "score": 1.2516975402832031e-06}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 18}, {"label": "[19]", "normalizedForm": "[19]", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "VREM", "normalizedForm": "VREM", "offsetStart": 80, "offsetEnd": 84}, "context": "These constraints show how the view's inputs are related to its output over the VREM schema.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9886901378631592}, "created": {"value": false, "score": 4.0471553802490234e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9971269369125366}, "created": {"value": true, "score": 0.7424609065055847}, "shared": {"value": false, "score": 7.748603820800781e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "software-name": {"rawForm": "SystemML", "normalizedForm": "SystemML", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "offsetStart": 80, "offsetEnd": 88}, "version": {"rawForm": "1.2.0", "normalizedForm": "1.2.0"}, "context": "We refer the reader to the extended version of the paper [4] for a full list of SystemML's encoded rewrite rules.", "mentionContextAttributes": {"used": {"value": false, "score": 0.37233197689056396}, "created": {"value": false, "score": 0.009451985359191895}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999902844429016}, "created": {"value": true, "score": 0.8823952674865723}, "shared": {"value": false, "score": 1.2516975402832031e-06}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 18}, {"label": "[19]", "normalizedForm": "[19]", "refKey": 18}]}, {"type": "software", "software-type": "software", "wikidataId": "Q197520", "wikipediaExternalRef": 381782, "lang": "en", "confidence": 0.9088, "software-name": {"rawForm": "NumPy", "normalizedForm": "NumPy", "wikidataId": "Q197520", "wikipediaExternalRef": 381782, "lang": "en", "confidence": 0.9088, "offsetStart": 81, "offsetEnd": 86}, "context": "Some of these works call LA packages through UDFs, where libraries such as R and NumPy are embedded in the host language [1]. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0001614093780517578}, "created": {"value": false, "score": 0.00033164024353027344}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9947383403778076}, "created": {"value": true, "score": 0.9945457577705383}, "shared": {"value": false, "score": 1.2516975402832031e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "software-name": {"rawForm": "SystemML", "normalizedForm": "SystemML", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "offsetStart": 87, "offsetEnd": 95}, "version": {"rawForm": "1.2.0", "normalizedForm": "1.2.0"}, "context": "Languages/libraries such as R [3] and NumPy [2], as well as LAoriented systems such as SystemML [19] and TensorFlow [11] treat matrices and linear algebra operations as first-class citizens: they offer a rich set of built-in LA operations and algorithms.", "mentionContextAttributes": {"used": {"value": false, "score": 9.387731552124023e-05}, "created": {"value": false, "score": 4.9173831939697266e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999902844429016}, "created": {"value": true, "score": 0.8823952674865723}, "shared": {"value": false, "score": 1.2516975402832031e-06}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 18, "offsetStart": 2508, "offsetEnd": 2512}, {"label": "[19]", "normalizedForm": "[19]", "refKey": 18, "offsetStart": 2508, "offsetEnd": 2512}]}, {"type": "software", "software-type": "software", "wikidataId": "Q21447895", "wikipediaExternalRef": 48508507, "lang": "en", "confidence": 0.9154, "software-name": {"rawForm": "TensorFlow", "normalizedForm": "TensorFlow", "wikidataId": "Q21447895", "wikipediaExternalRef": 48508507, "lang": "en", "confidence": 0.9154, "offsetStart": 87, "offsetEnd": 97}, "context": "This rewrite leads to 70\u00d7, 55\u00d7 and 150\u00d7 speed-ups on R, NumPy and MLlib, respectively; TensorFlow is omitted as matmul operator does not support matrix-vector multiplication.", "mentionContextAttributes": {"used": {"value": false, "score": 0.015084803104400635}, "created": {"value": false, "score": 4.470348358154297e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9751015901565552}, "created": {"value": true, "score": 0.9945457577705383}, "shared": {"value": false, "score": 7.748603820800781e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PACB", "normalizedForm": "PACB", "offsetStart": 88, "offsetEnd": 92}, "context": "To solve the relational rewriting problem under constraints, the algorithm of choice is PACB (recall Section 3).", "mentionContextAttributes": {"used": {"value": false, "score": 0.06920725107192993}, "created": {"value": false, "score": 0.00011974573135375977}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9973574876785278}, "created": {"value": true, "score": 0.6551459431648254}, "shared": {"value": false, "score": 1.1324882507324219e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SparkMLlib", "normalizedForm": "SparkMLlib", "offsetStart": 91, "offsetEnd": 101}, "context": "On sparse matrices, using the na\u00efve and MNC cost models, the overhead reaches up to 0.18% (SparkMLlib) to 1.94% (SystemML), and 0.5% (SparkMLlib) to 2.61% (SystemML), respectively.", "mentionContextAttributes": {"used": {"value": false, "score": 0.2265203595161438}, "created": {"value": false, "score": 2.205371856689453e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.22652077674865723}, "created": {"value": false, "score": 0.0002664327621459961}, "shared": {"value": false, "score": 2.980232238769531e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "HADAD", "normalizedForm": "HADAD", "offsetStart": 94, "offsetEnd": 99}, "context": "The ability to rewrite such queries using heterogeneous views directly and fully transfers to HADAD: thus, instead of a relation, we could have the (tuple-structured) results of an XML or JSON query; views materialized by joining an XML document with a JSON one and a relational database could also be reused.", "mentionContextAttributes": {"used": {"value": false, "score": 0.07613486051559448}, "created": {"value": false, "score": 2.0205974578857422e-05}, "shared": {"value": false, "score": 2.086162567138672e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.49534332752227783}, "created": {"value": true, "score": 0.9999298453330994}, "shared": {"value": false, "score": 2.086162567138672e-06}}, "references": [{"label": "[14]", "normalizedForm": "[14]", "refKey": 13}]}, {"type": "software", "software-type": "software", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "software-name": {"rawForm": "SystemML", "normalizedForm": "SystemML", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "offsetStart": 95, "offsetEnd": 103}, "version": {"rawForm": "1.2.0", "normalizedForm": "1.2.0"}, "context": "Further (not shown in the Figure ), we ran P.15 with AS in the role of M. This is 4\u00d7 faster in SystemML since with an ultra sparse M, multiplication is more efficient.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9970968961715698}, "created": {"value": false, "score": 6.252527236938477e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999902844429016}, "created": {"value": true, "score": 0.8823952674865723}, "shared": {"value": false, "score": 1.2516975402832031e-06}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 18}, {"label": "[19]", "normalizedForm": "[19]", "refKey": 18}]}, {"type": "software", "software-type": "software", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "software-name": {"rawForm": "SystemML", "normalizedForm": "SystemML", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "offsetStart": 96, "offsetEnd": 104}, "version": {"rawForm": "1.2.0", "normalizedForm": "1.2.0"}, "context": "Rewriting P1.13: sum(MN ) into sum(t(colSums(M)) * rowSums(N )) yields a speed-up of 50\u00d7; while SystemML has this rewrite as a static rule, it did not apply it.", "mentionContextAttributes": {"used": {"value": true, "score": 0.8473301529884338}, "created": {"value": false, "score": 7.68899917602539e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999902844429016}, "created": {"value": true, "score": 0.8823952674865723}, "shared": {"value": false, "score": 1.2516975402832031e-06}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 18}, {"label": "[19]", "normalizedForm": "[19]", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PACB", "normalizedForm": "PACB", "offsetStart": 98, "offsetEnd": 102}, "context": "With the set of views constraints C V and MMC = MMC m \u222a MMC LA pr op \u222a MMC St at A\u0434\u0434 , we rely on PACB ++ to rewrite a given expression under integrity constraints.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9421327114105225}, "created": {"value": false, "score": 6.258487701416016e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9973574876785278}, "created": {"value": true, "score": 0.6551459431648254}, "shared": {"value": false, "score": 1.1324882507324219e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "software-name": {"rawForm": "SystemML", "normalizedForm": "SystemML", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "offsetStart": 99, "offsetEnd": 107}, "version": {"rawForm": "1.2.0", "normalizedForm": "1.2.0"}, "context": "If, instead, N S (1.3860% non-zeros) plays the role of M, our rewrite achieves \u2248 1.8\u00d7 speed-up for SystemML.", "mentionContextAttributes": {"used": {"value": false, "score": 0.06927859783172607}, "created": {"value": false, "score": 4.45246696472168e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999902844429016}, "created": {"value": true, "score": 0.8823952674865723}, "shared": {"value": false, "score": 1.2516975402832031e-06}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 18}, {"label": "[19]", "normalizedForm": "[19]", "refKey": 18}]}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.5539, "software-name": {"rawForm": "Spark", "normalizedForm": "Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.5539, "offsetStart": 102, "offsetEnd": 107}, "version": {"rawForm": "2.4.5", "normalizedForm": "2.4.5"}, "context": "We exclude MLlib from this experiment since it failed to allocate memory for the intermediate matrix (Spark/MLLib limits the maximum size of a dense matrix).", "mentionContextAttributes": {"used": {"value": true, "score": 0.5735717415809631}, "created": {"value": false, "score": 6.431341171264648e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999902844429016}, "created": {"value": false, "score": 0.010217428207397461}, "shared": {"value": false, "score": 2.980232238769531e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "VREM", "normalizedForm": "VREM", "offsetStart": 103, "offsetEnd": 107}, "context": "Let LA pr op be a set of properties of the LA operations in L ops that admits relational encoding over VREM.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0068128108978271484}, "created": {"value": false, "score": 8.803606033325195e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9971269369125366}, "created": {"value": true, "score": 0.7424609065055847}, "shared": {"value": false, "score": 7.748603820800781e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q21447895", "wikipediaExternalRef": 48508507, "lang": "en", "confidence": 0.9154, "software-name": {"rawForm": "TensorFlow", "normalizedForm": "TensorFlow", "wikidataId": "Q21447895", "wikipediaExternalRef": 48508507, "lang": "en", "confidence": 0.9154, "offsetStart": 105, "offsetEnd": 120}, "context": "Languages/libraries such as R [3] and NumPy [2], as well as LAoriented systems such as SystemML [19] and TensorFlow [11] treat matrices and linear algebra operations as first-class citizens: they offer a rich set of built-in LA operations and algorithms. ", "mentionContextAttributes": {"used": {"value": false, "score": 9.387731552124023e-05}, "created": {"value": false, "score": 4.9173831939697266e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9751015901565552}, "created": {"value": true, "score": 0.9945457577705383}, "shared": {"value": false, "score": 7.748603820800781e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PACB", "normalizedForm": "PACB", "offsetStart": 107, "offsetEnd": 111}, "context": "We denote with HADAD\u27e8LA pr op , V, \u03b3 \u27e9 our parameterized solution based on relational encoding followed by PACB++ rewriting and next by decoding all the relational rewritings generated by the cost-based pruning PACB++ (recall Figure 1).", "mentionContextAttributes": {"used": {"value": true, "score": 0.9973574876785278}, "created": {"value": false, "score": 1.6093254089355469e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9973574876785278}, "created": {"value": true, "score": 0.6551459431648254}, "shared": {"value": false, "score": 1.1324882507324219e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q197520", "wikipediaExternalRef": 381782, "lang": "en", "confidence": 0.9088, "software-name": {"rawForm": "NumPy", "normalizedForm": "NumPy", "wikidataId": "Q197520", "wikipediaExternalRef": 381782, "lang": "en", "confidence": 0.9088, "offsetStart": 108, "offsetEnd": 113}, "context": "Some works propose calling LA packages through user defined functions (UDFs), where libraries such as R and NumPy are embedded in the host language [1]. ", "mentionContextAttributes": {"used": {"value": false, "score": 6.538629531860352e-05}, "created": {"value": false, "score": 0.010311543941497803}, "shared": {"value": false, "score": 1.2516975402832031e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9947383403778076}, "created": {"value": true, "score": 0.9945457577705383}, "shared": {"value": false, "score": 1.2516975402832031e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "software-name": {"rawForm": "SystemML", "normalizedForm": "SystemML", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "offsetStart": 110, "offsetEnd": 118}, "version": {"rawForm": "1.2.0", "normalizedForm": "1.2.0"}, "context": "The analysis is rewritten into u 1 v T 2 v 2 -Xv 2 ; this is the main reason for the 60\u00d7 speed-up we bring to SystemML (Figure 10).", "mentionContextAttributes": {"used": {"value": true, "score": 0.9884817600250244}, "created": {"value": false, "score": 6.854534149169922e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999902844429016}, "created": {"value": true, "score": 0.8823952674865723}, "shared": {"value": false, "score": 1.2516975402832031e-06}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 18}, {"label": "[19]", "normalizedForm": "[19]", "refKey": 18}]}, {"type": "software", "software-type": "software", "wikidataId": "Q21447895", "wikipediaExternalRef": 48508507, "lang": "en", "confidence": 0.9154, "software-name": {"rawForm": "TensorFlow", "normalizedForm": "TensorFlow", "wikidataId": "Q21447895", "wikipediaExternalRef": 48508507, "lang": "en", "confidence": 0.9154, "offsetStart": 110, "offsetEnd": 120}, "context": "Among the 39 P \u00acOpt pipelines, SystemML finds efficient rewritings for a set of 6, denoted P \u00acOpt S M , while TensorFlow optimizes a different set of 11, denoted P \u00acOpt T F . ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0019010305404663086}, "created": {"value": false, "score": 3.516674041748047e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9751015901565552}, "created": {"value": true, "score": 0.9945457577705383}, "shared": {"value": false, "score": 7.748603820800781e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "software-name": {"rawForm": "SystemML", "normalizedForm": "SystemML", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "offsetStart": 113, "offsetEnd": 121}, "version": {"rawForm": "1.2.0", "normalizedForm": "1.2.0"}, "context": "On sparse matrices, using the na\u00efve and MNC cost models, the overhead reaches up to 0.18% (SparkMLlib) to 1.94% (SystemML), and 0.5% (SparkMLlib) to 2.61% (SystemML), respectively.", "mentionContextAttributes": {"used": {"value": false, "score": 0.2265203595161438}, "created": {"value": false, "score": 2.205371856689453e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999902844429016}, "created": {"value": true, "score": 0.8823952674865723}, "shared": {"value": false, "score": 1.2516975402832031e-06}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 18}, {"label": "[19]", "normalizedForm": "[19]", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "VREM", "normalizedForm": "VREM", "offsetStart": 118, "offsetEnd": 122}, "context": "We model CD, as well as other well-known decompositions (LU, QR, and Pivoted LU or PLU) as a set of virtual relations VREM dec , which we add to VREM.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0007252693176269531}, "created": {"value": true, "score": 0.6832888126373291}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9971269369125366}, "created": {"value": true, "score": 0.7424609065055847}, "shared": {"value": false, "score": 7.748603820800781e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "HADAD", "normalizedForm": "HADAD", "offsetStart": 120, "offsetEnd": 125}, "context": "(iii) Some (system, pipeline) pairs lead to a low Q ex ec when the system applies internally the same optimization that HADAD finds \"outside\" of the system.", "mentionContextAttributes": {"used": {"value": false, "score": 0.007638752460479736}, "created": {"value": false, "score": 2.682209014892578e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.49534332752227783}, "created": {"value": true, "score": 0.9999298453330994}, "shared": {"value": false, "score": 2.086162567138672e-06}}, "references": [{"label": "[14]", "normalizedForm": "[14]", "refKey": 13}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "HADAD\u27e8LA", "normalizedForm": "HADAD\u27e8LA", "offsetStart": 120, "offsetEnd": 128}, "context": "If \u03b3 is monotonic and LA pr op is terminating, then for every E \u2208 L and every rw \u2208 Eq \u03b3 \u27e8LA pr op , V\u27e9(E), we have rw \u2208 HADAD\u27e8LA pr op , V, \u03b3 \u27e9(E).", "mentionContextAttributes": {"used": {"value": true, "score": 0.9719143509864807}, "created": {"value": false, "score": 4.231929779052734e-06}, "shared": {"value": false, "score": 7.748603820800781e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9978634119033813}, "created": {"value": false, "score": 7.450580596923828e-06}, "shared": {"value": false, "score": 7.748603820800781e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SparkMLlib", "normalizedForm": "SparkMLlib", "offsetStart": 134, "offsetEnd": 144}, "context": "On sparse matrices, using the na\u00efve and MNC cost models, the overhead reaches up to 0.18% (SparkMLlib) to 1.94% (SystemML), and 0.5% (SparkMLlib) to 2.61% (SystemML), respectively.", "mentionContextAttributes": {"used": {"value": false, "score": 0.22652077674865723}, "created": {"value": false, "score": 2.205371856689453e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.22652077674865723}, "created": {"value": false, "score": 0.0002664327621459961}, "shared": {"value": false, "score": 2.980232238769531e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.5539, "software-name": {"rawForm": "Spark", "normalizedForm": "Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.5539, "offsetStart": 135, "offsetEnd": 140}, "version": {"rawForm": "2.4.5", "normalizedForm": "2.4.5"}, "context": "To support them, we use the Breeze Scala library [7], convert MLlib's datatypes to Breeze types and express the basic LA operations in Spark.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9979997277259827}, "created": {"value": false, "score": 1.6510486602783203e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999902844429016}, "created": {"value": false, "score": 0.010217428207397461}, "shared": {"value": false, "score": 2.980232238769531e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.5539, "software-name": {"rawForm": "Spark", "normalizedForm": "Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.5539, "offsetStart": 138, "offsetEnd": 143}, "version": {"rawForm": "2.4.5", "normalizedForm": "2.4.5"}, "context": "SparkMLlib [39] provides LA operations and built-in function implementations of popular ML algorithms, such as linear regression, etc. on Spark RDDs.", "mentionContextAttributes": {"used": {"value": false, "score": 4.45246696472168e-05}, "created": {"value": false, "score": 0.0002664327621459961}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999902844429016}, "created": {"value": false, "score": 0.010217428207397461}, "shared": {"value": false, "score": 2.980232238769531e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "VREM", "normalizedForm": "VREM", "offsetStart": 145, "offsetEnd": 149}, "context": "We model CD, as well as other well-known decompositions (LU, QR, and Pivoted LU or PLU) as a set of virtual relations VREM dec , which we add to VREM.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0007252693176269531}, "created": {"value": true, "score": 0.6832888126373291}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9971269369125366}, "created": {"value": true, "score": 0.7424609065055847}, "shared": {"value": false, "score": 7.748603820800781e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "VREM", "normalizedForm": "VREM", "offsetStart": 152, "offsetEnd": 156}, "context": "Then, in Section 5.2, we show how matrices and their operations can be represented (encoded) using a set of virtual relations, part of a schema we call VREM (for Virtual Relational Encoding of Matrices), together with the integrity constraints MMC that capture the LA properties of these operations. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.029669225215911865}, "created": {"value": false, "score": 0.004112184047698975}, "shared": {"value": false, "score": 6.556510925292969e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9971269369125366}, "created": {"value": true, "score": 0.7424609065055847}, "shared": {"value": false, "score": 7.748603820800781e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "VREM", "normalizedForm": "VREM", "offsetStart": 153, "offsetEnd": 157}, "context": "The encoding function enc(E) takes as argument the LA expression E and returns a conjunctive query whose: (i) body is the relational encoding of E using VREM (see below), and (ii) head has one distinguished variable, denoting the equivalence class of the result.", "mentionContextAttributes": {"used": {"value": false, "score": 0.27383923530578613}, "created": {"value": false, "score": 1.4603137969970703e-05}, "shared": {"value": false, "score": 6.556510925292969e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9971269369125366}, "created": {"value": true, "score": 0.7424609065055847}, "shared": {"value": false, "score": 7.748603820800781e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "software-name": {"rawForm": "SystemML", "normalizedForm": "SystemML", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "offsetStart": 156, "offsetEnd": 164}, "version": {"rawForm": "1.2.0", "normalizedForm": "1.2.0"}, "context": "On sparse matrices, using the na\u00efve and MNC cost models, the overhead reaches up to 0.18% (SparkMLlib) to 1.94% (SystemML), and 0.5% (SparkMLlib) to 2.61% (SystemML), respectively.", "mentionContextAttributes": {"used": {"value": false, "score": 0.2265203595161438}, "created": {"value": false, "score": 2.205371856689453e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999902844429016}, "created": {"value": true, "score": 0.8823952674865723}, "shared": {"value": false, "score": 1.2516975402832031e-06}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 18}, {"label": "[19]", "normalizedForm": "[19]", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PACB", "normalizedForm": "PACB", "offsetStart": 157, "offsetEnd": 161}, "context": "The stateof-the-art method for this task, called Chase & Backchase, was introduced in [26] and improved in [31], as the Provenance-Aware Chase & Back-Chase (PACB in short).", "mentionContextAttributes": {"used": {"value": false, "score": 0.0001227855682373047}, "created": {"value": false, "score": 0.03521859645843506}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9973574876785278}, "created": {"value": true, "score": 0.6551459431648254}, "shared": {"value": false, "score": 1.1324882507324219e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Prune pr ov", "normalizedForm": "Prune pr ov", "offsetStart": 162, "offsetEnd": 173}, "context": "The idea behind cost-based pruning is that, whenever the naive PACB backchase would add a provenance conjunct c to an existing atom a's provenance formula \u03c0 (a), Prune pr ov does so more conservatively: if the cost \u03b3 (sq(c)) is larger than the minimum cost threshold T found so far, then c will never participate in a minimumcost rewriting and need not be added to \u03c0 (a).", "mentionContextAttributes": {"used": {"value": true, "score": 0.9847168922424316}, "created": {"value": false, "score": 2.8014183044433594e-06}, "shared": {"value": false, "score": 1.1324882507324219e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9989869594573975}, "created": {"value": true, "score": 0.6551459431648254}, "shared": {"value": false, "score": 1.1324882507324219e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "VREM", "normalizedForm": "VREM", "offsetStart": 178, "offsetEnd": 182}, "context": "To model LA operations on the VREM relational schema (part of which appears in Table 1), we also rely on a set of integrity constraints MMC, which are encoded using relations in VREM. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9475173354148865}, "created": {"value": false, "score": 8.863210678100586e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9971269369125366}, "created": {"value": true, "score": 0.7424609065055847}, "shared": {"value": false, "score": 7.748603820800781e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q21447895", "wikipediaExternalRef": 48508507, "lang": "en", "confidence": 0.9154, "software-name": {"rawForm": "TensorFlow", "normalizedForm": "TensorFlow", "wikidataId": "Q21447895", "wikipediaExternalRef": 48508507, "lang": "en", "confidence": 0.9154, "offsetStart": 187, "offsetEnd": 197}, "context": "For the other P Opt pipelines with short Q ex ec , mostly matrix multiplications chains already in the optimal order, on dense matrices, the overhead reaches 0.143% (SparkMlLib) to 9.8% (TensorFlow) using the na\u00efve cost model, while the MNC cost model leads to an overhead of 0.45% (SparkMlib) up to 10.26% (TensorFlow).", "mentionContextAttributes": {"used": {"value": true, "score": 0.6144925951957703}, "created": {"value": false, "score": 1.7285346984863281e-06}, "shared": {"value": false, "score": 7.748603820800781e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9751015901565552}, "created": {"value": true, "score": 0.9945457577705383}, "shared": {"value": false, "score": 7.748603820800781e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "software-name": {"rawForm": "SystemML", "normalizedForm": "SystemML", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "offsetStart": 189, "offsetEnd": 197}, "version": {"rawForm": "1.2.0", "normalizedForm": "1.2.0"}, "context": "As a variation (not plotted in the Figure ), we ran the same pipeline with the ultra-sparse AS matrix (0.0075% non-zeros) used as M. The Q ex ec and RW ex ec time are very comparable using SystemML, because we avoid large dense intermediates.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999601244926453}, "created": {"value": false, "score": 1.8477439880371094e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999902844429016}, "created": {"value": true, "score": 0.8823952674865723}, "shared": {"value": false, "score": 1.2516975402832031e-06}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 18}, {"label": "[19]", "normalizedForm": "[19]", "refKey": 18}]}, {"type": "software", "software-type": "software", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "software-name": {"rawForm": "SystemML", "normalizedForm": "SystemML", "wikidataId": "Q22681943", "wikipediaExternalRef": 49338480, "lang": "en", "confidence": 0.4703, "offsetStart": 209, "offsetEnd": 217}, "version": {"rawForm": "1.2.0", "normalizedForm": "1.2.0"}, "context": "Pipeline P2.25 (Figure 9(c)) benefits from a view V 5 , which precomputes a dense intermediate vector multiplication result; then, rewriting based on the property (A + B)v = Av + Bv leads to a 65\u00d7 speed-up in SystemML.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0033218860626220703}, "created": {"value": false, "score": 2.205371856689453e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999902844429016}, "created": {"value": true, "score": 0.8823952674865723}, "shared": {"value": false, "score": 1.2516975402832031e-06}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 18}, {"label": "[19]", "normalizedForm": "[19]", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PACB++", "normalizedForm": "PACB++", "offsetStart": 211, "offsetEnd": 217}, "context": "We denote with HADAD\u27e8LA pr op , V, \u03b3 \u27e9 our parameterized solution based on relational encoding followed by PACB++ rewriting and next by decoding all the relational rewritings generated by the cost-based pruning PACB++ (recall Figure 1). ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9973574876785278}, "created": {"value": false, "score": 1.6093254089355469e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9973574876785278}, "created": {"value": false, "score": 1.6093254089355469e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "VREM", "normalizedForm": "VREM", "offsetStart": 260, "offsetEnd": 264}, "context": "To bring such fruitful optimization to other LA-oriented systems lacking support of such rewrite rules, we have incorporated Sys-temML's rewrite rules into our framework, encoding them as a set of integrity constraints over the virtual relations in the schema VREM, denoted MMC St at A\u0434\u0434 (MMC St at A\u0434\u0434 \u2282 MMC).", "mentionContextAttributes": {"used": {"value": false, "score": 0.006353974342346191}, "created": {"value": false, "score": 0.03017711639404297}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9971269369125366}, "created": {"value": true, "score": 0.7424609065055847}, "shared": {"value": false, "score": 7.748603820800781e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q21447895", "wikipediaExternalRef": 48508507, "lang": "en", "confidence": 0.9154, "software-name": {"rawForm": "TensorFlow", "normalizedForm": "TensorFlow", "wikidataId": "Q21447895", "wikipediaExternalRef": 48508507, "lang": "en", "confidence": 0.9154, "offsetStart": 308, "offsetEnd": 318}, "context": "For the other P Opt pipelines with short Q ex ec , mostly matrix multiplications chains already in the optimal order, on dense matrices, the overhead reaches 0.143% (SparkMlLib) to 9.8% (TensorFlow) using the na\u00efve cost model, while the MNC cost model leads to an overhead of 0.45% (SparkMlib) up to 10.26% (TensorFlow).", "mentionContextAttributes": {"used": {"value": true, "score": 0.6144930124282837}, "created": {"value": false, "score": 1.6689300537109375e-06}, "shared": {"value": false, "score": 7.152557373046875e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9751015901565552}, "created": {"value": true, "score": 0.9945457577705383}, "shared": {"value": false, "score": 7.748603820800781e-07}}}], "references": [{"refKey": 13, "tei": "<biblStruct xml:id=\"b13\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">Towards Scalable Hybrid Stores</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Rana</forename><surname>Alotaibi</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Damian</forename><surname>Bursztyn</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Alin</forename><surname>Deutsch</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Ioana</forename><surname>Manolescu</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Stamatis</forename><surname>Zampetakis</surname></persName>\n\t\t</author>\n\t\t<idno type=\"DOI\">10.1145/3299869.3319895</idno>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"m\">Proceedings of the 2019 International Conference on Management of Data</title>\n\t\t<meeting>the 2019 International Conference on Management of Data</meeting>\n\t\t<imprint>\n\t\t\t<publisher>ACM</publisher>\n\t\t\t<date type=\"published\" when=\"2019-06-25\">2019</date>\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}, {"refKey": 18, "tei": "<biblStruct xml:id=\"b18\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">Apache SystemML</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Matthias</forename><surname>Boehm</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">M</forename><forename type=\"middle\">W</forename><surname>Dusenberry</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">D</forename><surname>Eriksson</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">A</forename><forename type=\"middle\">V</forename><surname>Evfimievski</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">F</forename><forename type=\"middle\">M</forename><surname>Manshadi</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">N</forename><surname>Pansare</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">B</forename><surname>Reinwald</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">F</forename><forename type=\"middle\">R</forename><surname>Reiss</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">P</forename><surname>Sen</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">A</forename><forename type=\"middle\">C</forename><surname>Surve</surname></persName>\n\t\t</author>\n\t\t<idno type=\"DOI\">10.1007/978-3-319-77525-8_187</idno>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"m\">Encyclopedia of Big Data Technologies</title>\n\t\t<imprint>\n\t\t\t<publisher>Springer International Publishing</publisher>\n\t\t\t<date type=\"published\" when=\"2019\">2016</date>\n\t\t\t<biblScope unit=\"volume\">9</biblScope>\n\t\t\t<biblScope unit=\"page\" from=\"81\" to=\"86\" />\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}, {"refKey": 3, "tei": "<biblStruct xml:id=\"b3\">\n\t<monogr>\n\t\t<title/>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">R</forename></persName>\n\t\t</author>\n\t\t<imprint/>\n\t</monogr>\n</biblStruct>\n"}], "runtime": 142779, "id": "818c22a418e201ce0dc73f10ca0239fb66862dfc", "metadata": {"id": "818c22a418e201ce0dc73f10ca0239fb66862dfc"}, "original_file_path": "../../datalake/Samuel/SOFTware-Sync/data/xml_not_sofctied/hal-03347677.grobid.tei.xml", "file_name": "hal-03347677.grobid.tei.xml"}