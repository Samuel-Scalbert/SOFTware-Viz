{"application": "software-mentions", "version": "0.8.0", "date": "2024-10-07T11:52+0000", "md5": "F7D1F43E29F645EED70DD9611A65DEDF", "mentions": [{"type": "software", "software-type": "software", "software-name": {"rawForm": "CQAPri", "normalizedForm": "CQAPri", "offsetStart": 0, "offsetEnd": 6}, "language": {"rawForm": "Java", "normalizedForm": "Java"}, "context": "CQAPri is built on top of the relational database server PostgreSQL v9.3.2 (www.postgresql.org), ", "mentionContextAttributes": {"used": {"value": true, "score": 0.94675213098526}, "created": {"value": false, "score": 0.00019592046737670898}, "shared": {"value": false, "score": 0.008239507675170898}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997870326042175}, "created": {"value": true, "score": 0.9996846914291382}, "shared": {"value": true, "score": 0.9922263622283936}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CQAPri", "normalizedForm": "CQAPri", "offsetStart": 0, "offsetEnd": 6}, "language": {"rawForm": "Java", "normalizedForm": "Java"}, "context": "CQAPri computes the set of conflicts for the KB in a preprocessing phase since it is query-independent. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0011390447616577148}, "created": {"value": false, "score": 5.602836608886719e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997870326042175}, "created": {"value": true, "score": 0.9996846914291382}, "shared": {"value": true, "score": 0.9922263622283936}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CQAPri", "normalizedForm": "CQAPri", "offsetStart": 0, "offsetEnd": 6}, "language": {"rawForm": "Java", "normalizedForm": "Java"}, "context": "CQAPri handles ABoxes stored in PostgreSQL, while it keeps the TBox in-memory.", "mentionContextAttributes": {"used": {"value": false, "score": 0.005748867988586426}, "created": {"value": false, "score": 4.5299530029296875e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997870326042175}, "created": {"value": true, "score": 0.9996846914291382}, "shared": {"value": true, "score": 0.9922263622283936}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "genBest", "normalizedForm": "genBest", "offsetStart": 0, "offsetEnd": 7}, "context": "genBest) if it outputs an explanation (resp.", "mentionContextAttributes": {"used": {"value": false, "score": 0.012998819351196289}, "created": {"value": false, "score": 1.3113021850585938e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.4922901391983032}, "created": {"value": true, "score": 0.9200234413146973}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "genBest", "normalizedForm": "genBest", "offsetStart": 0, "offsetEnd": 7}, "context": "genBest) is \u03a0 p 2 -hard (resp.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0015247464179992676}, "created": {"value": false, "score": 3.4570693969726562e-06}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.4922901391983032}, "created": {"value": true, "score": 0.9200234413146973}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ComputeCauses", "normalizedForm": "ComputeCauses", "offsetStart": 0, "offsetEnd": 13}, "context": "ComputeCauses runs in polynomial time in |A| on input T , A , q, a.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0014391541481018066}, "created": {"value": false, "score": 2.6226043701171875e-06}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999198913574219}, "created": {"value": true, "score": 0.9993359446525574}, "shared": {"value": false, "score": 3.5762786865234375e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "genOne", "normalizedForm": "genOne", "offsetStart": 2, "offsetEnd": 8}, "context": "\u2022 genOne and genBest: Let T 0 , A 0 , and q 0 be as in Proposition 5.12.", "mentionContextAttributes": {"used": {"value": false, "score": 0.4922901391983032}, "created": {"value": false, "score": 3.4570693969726562e-06}, "shared": {"value": false, "score": 1.0728836059570312e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.4922901391983032}, "created": {"value": false, "score": 0.0016813278198242188}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Rapid", "normalizedForm": "Rapid", "offsetStart": 4, "offsetEnd": 9}, "version": {"rawForm": "1.", "normalizedForm": "1", "offsetStart": 11, "offsetEnd": 13}, "context": "the Rapid v1.0 query rewriting engine for DL-Lite (Chortaras, Trivela, & Stamou, 2011), and the SAT4J v2.3.4 ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9989367127418518}, "created": {"value": false, "score": 2.5272369384765625e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9989367127418518}, "created": {"value": false, "score": 0.0002796053886413574}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SaQAI", "normalizedForm": "SaQAI", "offsetStart": 4, "offsetEnd": 9}, "context": "The SaQAI system computes the intersection of the repairs by computing the conflicts and removing them from the ABox, then saturates the ABox obtained before performing standard query evaluation. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.05214434862136841}, "created": {"value": false, "score": 1.049041748046875e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.831919252872467}, "created": {"value": false, "score": 0.000556647777557373}, "shared": {"value": false, "score": 5.960464477539062e-07}}, "references": [{"label": "(Tsalapati, Stoilos, Stamou, & Koletsos, 2016)", "normalizedForm": "Tsalapati, Stoilos, Stamou, & Koletsos, 2016", "refKey": 72}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CQAPri", "normalizedForm": "CQAPri", "offsetStart": 7, "offsetEnd": 13}, "language": {"rawForm": "Java", "normalizedForm": "Java"}, "context": "2. The CQAPri system and benchmark can be downloaded from https://www.lri.fr/", "mentionContextAttributes": {"used": {"value": false, "score": 0.00025409460067749023}, "created": {"value": false, "score": 8.368492126464844e-05}, "shared": {"value": true, "score": 0.9922263622283936}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997870326042175}, "created": {"value": true, "score": 0.9996846914291382}, "shared": {"value": true, "score": 0.9922263622283936}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CQAPri", "normalizedForm": "CQAPri", "offsetStart": 9, "offsetEnd": 15}, "language": {"rawForm": "Java", "normalizedForm": "Java"}, "context": "Overall, CQAPri scales well in settings ranging from ones we consider realistic to more artificial ones.", "mentionContextAttributes": {"used": {"value": false, "score": 5.8770179748535156e-05}, "created": {"value": false, "score": 9.834766387939453e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997870326042175}, "created": {"value": true, "score": 0.9996846914291382}, "shared": {"value": true, "score": 0.9922263622283936}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CQAPri", "normalizedForm": "CQAPri", "offsetStart": 10, "offsetEnd": 16}, "language": {"rawForm": "Java", "normalizedForm": "Java"}, "context": "~bourgaux/CQAPri.", "mentionContextAttributes": {"used": {"value": false, "score": 0.010601043701171875}, "created": {"value": false, "score": 8.344650268554688e-06}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997870326042175}, "created": {"value": true, "score": 0.9996846914291382}, "shared": {"value": true, "score": 0.9922263622283936}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CQAPri", "normalizedForm": "CQAPri", "offsetStart": 10, "offsetEnd": 16}, "language": {"rawForm": "Java", "normalizedForm": "Java"}, "context": "~bourgaux/CQAPri", "mentionContextAttributes": {"used": {"value": false, "score": 0.06437081098556519}, "created": {"value": false, "score": 1.8596649169921875e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997870326042175}, "created": {"value": true, "score": 0.9996846914291382}, "shared": {"value": true, "score": 0.9922263622283936}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ComputeCauses", "normalizedForm": "ComputeCauses", "offsetStart": 11, "offsetEnd": 24}, "context": "1 Causes \u2190 ComputeCauses(q( a), K);", "mentionContextAttributes": {"used": {"value": true, "score": 0.9995939135551453}, "created": {"value": false, "score": 4.0531158447265625e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999198913574219}, "created": {"value": true, "score": 0.9993359446525574}, "shared": {"value": false, "score": 3.5762786865234375e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CQAPri", "normalizedForm": "CQAPri", "offsetStart": 12, "offsetEnd": 18}, "language": {"rawForm": "Java", "normalizedForm": "Java"}, "context": "To evaluate CQAPri, we needed a DL-Lite R KB with a large and inconsistent ABox.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9979085922241211}, "created": {"value": false, "score": 0.0011168122291564941}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997870326042175}, "created": {"value": true, "score": 0.9996846914291382}, "shared": {"value": true, "score": 0.9922263622283936}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "genBest", "normalizedForm": "genBest", "offsetStart": 13, "offsetEnd": 20}, "context": "\u2022 genOne and genBest: Let T 0 , A 0 , and q 0 be as in Proposition 5.12.", "mentionContextAttributes": {"used": {"value": false, "score": 0.4922901391983032}, "created": {"value": false, "score": 3.4570693969726562e-06}, "shared": {"value": false, "score": 1.0728836059570312e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.4922901391983032}, "created": {"value": true, "score": 0.9200234413146973}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClassifyQuery", "normalizedForm": "ClassifyQuery", "offsetStart": 13, "offsetEnd": 26}, "context": "ALGORITHM 3: ClassifyQuery Input: a conjunctive query q( x), a candidate answer a, a KB K = T , A Output: IAR if T , A |= IAR q( a), AR if T , A |= AR q( a) and T , A |= IAR q( a), brave if T , A |= brave q( a) and T , A |= AR q( a), and not brave otherwise", "mentionContextAttributes": {"used": {"value": true, "score": 0.9625610709190369}, "created": {"value": false, "score": 2.0265579223632812e-06}, "shared": {"value": false, "score": 7.152557373046875e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9625610709190369}, "created": {"value": true, "score": 0.9997629523277283}, "shared": {"value": false, "score": 7.152557373046875e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ComputeCauses", "normalizedForm": "ComputeCauses", "offsetStart": 14, "offsetEnd": 27}, "context": "The algorithm ComputeCauses computes the causes for a Boolean query or a single answer tuple a. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.041570425033569336}, "created": {"value": false, "score": 0.0006170272827148438}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999198913574219}, "created": {"value": true, "score": 0.9993359446525574}, "shared": {"value": false, "score": 3.5762786865234375e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MUSes", "normalizedForm": "MUSes", "offsetStart": 16, "offsetEnd": 21}, "context": "We show how the MUSes of a propositional clause set can be captured by explanations of positive AR-answers.", "mentionContextAttributes": {"used": {"value": false, "score": 0.19768893718719482}, "created": {"value": false, "score": 0.000864565372467041}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999810457229614}, "created": {"value": true, "score": 0.9811890125274658}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "Liberatore, 2005)", "normalizedForm": "Liberatore, 2005)", "refKey": 53}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "genOne", "normalizedForm": "genOne", "offsetStart": 16, "offsetEnd": 22}, "context": "This means that genOne is in PTime.", "mentionContextAttributes": {"used": {"value": false, "score": 0.02650076150894165}, "created": {"value": false, "score": 3.743171691894531e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.4922901391983032}, "created": {"value": false, "score": 0.0016813278198242188}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CQAPri", "normalizedForm": "CQAPri", "offsetStart": 16, "offsetEnd": 22}, "language": {"rawForm": "Java", "normalizedForm": "Java"}, "context": "For the causes, CQAPri prunes the non-minimal images computed during the query answering phase.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9858447313308716}, "created": {"value": false, "score": 2.872943878173828e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997870326042175}, "created": {"value": true, "score": 0.9996846914291382}, "shared": {"value": true, "score": 0.9922263622283936}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CQAPri", "normalizedForm": "CQAPri", "offsetStart": 17, "offsetEnd": 23}, "language": {"rawForm": "Java", "normalizedForm": "Java"}, "context": "The time it took CQAPri to be up and ready to answer queries is dominated by the construction of the conflict graph for the ABox (Table 4); it took about 2 seconds to load the TBox, construct the queries that correspond to the violation of negative inclusions, and open the PostgreSQL connection to the ABox.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9997870326042175}, "created": {"value": false, "score": 3.0994415283203125e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997870326042175}, "created": {"value": true, "score": 0.9996846914291382}, "shared": {"value": true, "score": 0.9922263622283936}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClassifyQuery", "normalizedForm": "ClassifyQuery", "offsetStart": 17, "offsetEnd": 30}, "context": "As a first step, ClassifyQuery computes and stores the KB's conflicts (line 1) and uses them to identify the set ConflAssertions of assertions that belong to some conflict (line 2). ", "mentionContextAttributes": {"used": {"value": false, "score": 0.043456852436065674}, "created": {"value": false, "score": 4.649162292480469e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9625610709190369}, "created": {"value": true, "score": 0.9997629523277283}, "shared": {"value": false, "score": 7.152557373046875e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CQAPri", "normalizedForm": "CQAPri", "offsetStart": 22, "offsetEnd": 28}, "language": {"rawForm": "Java", "normalizedForm": "Java"}, "context": "When a query arrives, CQAPri first evaluates it over the ABox using its SQLized rewriting, to obtain its candidate answers and their images.", "mentionContextAttributes": {"used": {"value": false, "score": 0.010797441005706787}, "created": {"value": false, "score": 7.271766662597656e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997870326042175}, "created": {"value": true, "score": 0.9996846914291382}, "shared": {"value": true, "score": 0.9922263622283936}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CQAPri", "normalizedForm": "CQAPri", "offsetStart": 22, "offsetEnd": 28}, "language": {"rawForm": "Java", "normalizedForm": "Java"}, "context": "To make our prototype CQAPri able to handle KBs expressed in DL-Lite F or DL-Lite A , we simply need to modify the computation of the conflicts of the knowledge base that currently only search for violation of disjointness TBox axioms in order to also find pairs of assertions that contradict functionality axioms (as well as datatype restrictions, in the case of DL-Lite A ). Regarding complexity lower bounds, all hardness results of Section 5 hold for KBs expressed in DL-Lite core , hence for these four DL-Lite dialects.", "mentionContextAttributes": {"used": {"value": false, "score": 0.026886403560638428}, "created": {"value": false, "score": 0.0005095005035400391}, "shared": {"value": false, "score": 1.1920928955078125e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997870326042175}, "created": {"value": true, "score": 0.9996846914291382}, "shared": {"value": true, "score": 0.9922263622283936}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CQAPri", "normalizedForm": "CQAPri", "offsetStart": 23, "offsetEnd": 29}, "language": {"rawForm": "Java", "normalizedForm": "Java"}, "context": "For the other queries, CQAPri scales up to large ABoxes when the proportion of assertions involved in some conflict is only a few percent, and even a few tens percent for most of the queries.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0191076397895813}, "created": {"value": false, "score": 1.1682510375976562e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997870326042175}, "created": {"value": true, "score": 0.9996846914291382}, "shared": {"value": true, "score": 0.9922263622283936}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "genBest", "normalizedForm": "genBest", "offsetStart": 23, "offsetEnd": 30}, "context": "The \u03a3 p 2 -hardness of genBest, when explanations are ranked based upon the number of disjuncts or the number of assertions, follows from the \u03a0 p 2 -hardness of best rec for these same criteria.", "mentionContextAttributes": {"used": {"value": false, "score": 0.47938311100006104}, "created": {"value": false, "score": 2.9802322387695312e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.4922901391983032}, "created": {"value": true, "score": 0.9200234413146973}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CQAPri", "normalizedForm": "CQAPri", "offsetStart": 25, "offsetEnd": 31}, "language": {"rawForm": "Java", "normalizedForm": "Java"}, "context": "The main difference with CQAPri is that instead of building and solving one encoding for each answer, only one is built using variables to represent the different answers, so that setting them to 1 trivializes the equations related to the causes of this answer.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00019925832748413086}, "created": {"value": false, "score": 0.0001862645149230957}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997870326042175}, "created": {"value": true, "score": 0.9996846914291382}, "shared": {"value": true, "score": 0.9922263622283936}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CQAPri", "normalizedForm": "CQAPri", "offsetStart": 26, "offsetEnd": 32}, "language": {"rawForm": "Java", "normalizedForm": "Java"}, "context": "For positive IAR-answers, CQAPri stores the causes that are without conflict during the query answering phase. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.1980428695678711}, "created": {"value": false, "score": 1.3470649719238281e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997870326042175}, "created": {"value": true, "score": 0.9996846914291382}, "shared": {"value": true, "score": 0.9922263622283936}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CQAPri", "normalizedForm": "CQAPri", "offsetStart": 26, "offsetEnd": 32}, "language": {"rawForm": "Java", "normalizedForm": "Java"}, "context": "Our experiments show that CQAPri scales up to large ABoxes for realistic to challenging ratios of conflicting assertions. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.3541029691696167}, "created": {"value": false, "score": 0.007821738719940186}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997870326042175}, "created": {"value": true, "score": 0.9996846914291382}, "shared": {"value": true, "score": 0.9922263622283936}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CQAPri", "normalizedForm": "CQAPri", "offsetStart": 29, "offsetEnd": 35}, "language": {"rawForm": "Java", "normalizedForm": "Java"}, "context": "Among the candidate answers, CQAPri identifies those which are not brave-answers by discarding the inconsistent images, that contain an edge of the conflict graph: an answer that has only such images does not hold under brave semantics. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0010773539543151855}, "created": {"value": false, "score": 2.086162567138672e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997870326042175}, "created": {"value": true, "score": 0.9996846914291382}, "shared": {"value": true, "score": 0.9922263622283936}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CQAPri", "normalizedForm": "CQAPri", "offsetStart": 30, "offsetEnd": 36}, "language": {"rawForm": "Java", "normalizedForm": "Java"}, "context": "In Section 6, we describe the CQAPri system and the benchmark we developed, and Section 7 presents the results of our experimental evaluation.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0643310546875}, "created": {"value": true, "score": 0.9963623881340027}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997870326042175}, "created": {"value": true, "score": 0.9996846914291382}, "shared": {"value": true, "score": 0.9922263622283936}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CQAPri", "normalizedForm": "CQAPri", "offsetStart": 30, "offsetEnd": 36}, "language": {"rawForm": "Java", "normalizedForm": "Java"}, "context": "In this table, OOM means that CQAPri ran out of memory.", "mentionContextAttributes": {"used": {"value": true, "score": 0.8156290650367737}, "created": {"value": false, "score": 9.894371032714844e-06}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997870326042175}, "created": {"value": true, "score": 0.9996846914291382}, "shared": {"value": true, "score": 0.9922263622283936}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Rapid", "normalizedForm": "Rapid", "offsetStart": 31, "offsetEnd": 36}, "version": {"rawForm": "1.", "normalizedForm": "1"}, "context": "Their rewritings produced with Rapid have between 2 and 202,710 CQs, 23,185.95 on average.", "mentionContextAttributes": {"used": {"value": true, "score": 0.7313678860664368}, "created": {"value": false, "score": 0.0002796053886413574}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9989367127418518}, "created": {"value": false, "score": 0.0002796053886413574}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "genOne", "normalizedForm": "genOne", "offsetStart": 31, "offsetEnd": 37}, "context": "To see why the generation task genOne is NP-hard, we note that to solve the NPcomplete problem of deciding whether K |= AR q( a), it suffices to call the procedure for genOne to generate a single explanation for K |= AR q( a). ", "mentionContextAttributes": {"used": {"value": false, "score": 0.01935112476348877}, "created": {"value": false, "score": 0.00012183189392089844}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.4922901391983032}, "created": {"value": false, "score": 0.0016813278198242188}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CQAPri", "normalizedForm": "CQAPri", "offsetStart": 32, "offsetEnd": 38}, "language": {"rawForm": "Java", "normalizedForm": "Java"}, "context": "In this section, we present the CQAPri system, which implements the query answering and explanation algorithms described in Sections 4 and 5, as well as the benchmark we created to test the system; the results of our experimental evaluation will be presented in the following section.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0011827349662780762}, "created": {"value": true, "score": 0.9988532066345215}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997870326042175}, "created": {"value": true, "score": 0.9996846914291382}, "shared": {"value": true, "score": 0.9922263622283936}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PostgreSQL", "normalizedForm": "PostgreSQL", "offsetStart": 32, "offsetEnd": 42}, "version": {"rawForm": "9.3.2", "normalizedForm": "9.3.2"}, "url": {"rawForm": "www.postgresql.org", "normalizedForm": "www.postgresql.org"}, "context": "CQAPri handles ABoxes stored in PostgreSQL, while it keeps the TBox in-memory. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.005748867988586426}, "created": {"value": false, "score": 4.5299530029296875e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997870326042175}, "created": {"value": false, "score": 0.00019592046737670898}, "shared": {"value": false, "score": 0.008239507675170898}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SaQAI", "normalizedForm": "SaQAI", "offsetStart": 34, "offsetEnd": 39}, "context": "This is not surprising given that SaQAI uses saturation while the others use query rewriting. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.009693503379821777}, "created": {"value": false, "score": 4.649162292480469e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.831919252872467}, "created": {"value": false, "score": 0.000556647777557373}, "shared": {"value": false, "score": 5.960464477539062e-07}}, "references": [{"label": "(Tsalapati, Stoilos, Stamou, & Koletsos, 2016)", "normalizedForm": "Tsalapati, Stoilos, Stamou, & Koletsos, 2016", "refKey": 72}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAT4J", "normalizedForm": "SAT4J", "offsetStart": 36, "offsetEnd": 41}, "version": {"rawForm": "2.3.4", "normalizedForm": "2.3.4"}, "context": "For negative AR-answers, we rely on SAT4J to compute a smallest model of \u03d5 \u00acq \u2227 \u03d5 cons , as well as the necessary and relevant assertions with the encodings presented in Propositions 5.16 and 5.17 that we use to test every potentially relevant assertion, i.e. that appears in \u03d5 \u00acq .", "mentionContextAttributes": {"used": {"value": true, "score": 0.9996945858001709}, "created": {"value": false, "score": 1.7881393432617188e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996945858001709}, "created": {"value": false, "score": 2.5272369384765625e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClassifyQuery", "normalizedForm": "ClassifyQuery", "offsetStart": 39, "offsetEnd": 52}, "context": "For a non-Boolean query, the algorithm ClassifyQuery can be slightly modified to classify all tuples that hold under at least one of the semantics.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0009036064147949219}, "created": {"value": false, "score": 0.00011348724365234375}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9625610709190369}, "created": {"value": true, "score": 0.9997629523277283}, "shared": {"value": false, "score": 7.152557373046875e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CQAPri", "normalizedForm": "CQAPri", "offsetStart": 41, "offsetEnd": 47}, "language": {"rawForm": "Java", "normalizedForm": "Java"}, "context": "Our approach has been implemented in the CQAPri system and evaluated over the benchmark we built starting from the well-known LUBM benchmark. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0013633370399475098}, "created": {"value": true, "score": 0.8657699823379517}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997870326042175}, "created": {"value": true, "score": 0.9996846914291382}, "shared": {"value": true, "score": 0.9922263622283936}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ComputeCauses", "normalizedForm": "ComputeCauses", "offsetStart": 41, "offsetEnd": 54}, "context": "First, we use the non-Boolean version of ComputeCauses to generate the causes for all assignments a to the answer variables x that admit at least one cause.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999198913574219}, "created": {"value": false, "score": 3.349781036376953e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999198913574219}, "created": {"value": true, "score": 0.9993359446525574}, "shared": {"value": false, "score": 3.5762786865234375e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DALEK", "normalizedForm": "DALEK", "offsetStart": 43, "offsetEnd": 48}, "context": "This framework has been implemented in the DALEK prototype (Arioua, Croitoru, & Buche, 2016). ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00010097026824951172}, "created": {"value": true, "score": 0.5642854571342468}, "shared": {"value": false, "score": 5.960464477539062e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.6880472898483276}, "created": {"value": true, "score": 0.5642854571342468}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "genBest", "normalizedForm": "genBest", "offsetStart": 43, "offsetEnd": 50}, "context": "For polynomial-time ranking criteria, both genBest and best rec are solvable in polynomial time since we can compare all of the explanations to identify the best ones.", "mentionContextAttributes": {"used": {"value": false, "score": 0.017601072788238525}, "created": {"value": false, "score": 6.794929504394531e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.4922901391983032}, "created": {"value": true, "score": 0.9200234413146973}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MUSes", "normalizedForm": "MUSes", "offsetStart": 47, "offsetEnd": 52}, "context": "We recall the following complexity results for MUSes (see Liberatore, 2005):", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999063014984131}, "created": {"value": false, "score": 1.0728836059570312e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999810457229614}, "created": {"value": true, "score": 0.9811890125274658}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "Liberatore, 2005)", "normalizedForm": "Liberatore, 2005)", "refKey": 53, "offsetStart": 76141, "offsetEnd": 76158}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CQAPri", "normalizedForm": "CQAPri", "offsetStart": 48, "offsetEnd": 54}, "language": {"rawForm": "Java", "normalizedForm": "Java"}, "context": "We have implemented our explanation services in CQAPri and performed experiments to understand the practical difficulty of computing (preferred) explanations and the sets of relevant and necessary assertions.", "mentionContextAttributes": {"used": {"value": false, "score": 0.029539287090301514}, "created": {"value": true, "score": 0.9996846914291382}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997870326042175}, "created": {"value": true, "score": 0.9996846914291382}, "shared": {"value": true, "score": 0.9922263622283936}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CQAPri", "normalizedForm": "CQAPri", "offsetStart": 48, "offsetEnd": 54}, "language": {"rawForm": "Java", "normalizedForm": "Java"}, "context": "Following the framework developed in Section 4, CQAPri utilizes the brave, AR, and IAR together to classify a query answer a into one of 3 classes:", "mentionContextAttributes": {"used": {"value": false, "score": 0.0037636160850524902}, "created": {"value": false, "score": 0.03710293769836426}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997870326042175}, "created": {"value": true, "score": 0.9996846914291382}, "shared": {"value": true, "score": 0.9922263622283936}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CQAPri", "normalizedForm": "CQAPri", "offsetStart": 49, "offsetEnd": 55}, "language": {"rawForm": "Java", "normalizedForm": "Java"}, "context": "Section 7.3 for the reason for this choice), but CQAPri can also provide a smallest explanation using the SAT solver to find a cardinality-minimal model of \u03d5 \u00acq . ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0006529688835144043}, "created": {"value": false, "score": 2.384185791015625e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997870326042175}, "created": {"value": true, "score": 0.9996846914291382}, "shared": {"value": true, "score": 0.9922263622283936}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CQAPri", "normalizedForm": "CQAPri", "offsetStart": 50, "offsetEnd": 56}, "language": {"rawForm": "Java", "normalizedForm": "Java"}, "context": "Figure 5 shows the evolution of the time spent by CQAPri for the query answering phase (consisting in identifying all Possible, Likely, and Sure answers) w.r.t. the size of the ABox, for three different ratios of assertions in conflict: a few percent (about 4%, uXc1), as we expect to be the case in most real applications, about 30% (uXc20), or about 45% (uXc50). ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9991083741188049}, "created": {"value": false, "score": 1.430511474609375e-06}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997870326042175}, "created": {"value": true, "score": 0.9996846914291382}, "shared": {"value": true, "score": 0.9922263622283936}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CQAPri", "normalizedForm": "CQAPri", "offsetStart": 50, "offsetEnd": 56}, "language": {"rawForm": "Java", "normalizedForm": "Java"}, "context": "Figure 6 shows the evolution of the time spent by CQAPri for query answering w.r.t. the proportion of ABox assertions involved in some conflicts, for small (u1cY), intermediate (u20cY), and large (u100cY) ABoxes. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.902667760848999}, "created": {"value": false, "score": 8.225440979003906e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997870326042175}, "created": {"value": true, "score": 0.9996846914291382}, "shared": {"value": true, "score": 0.9922263622283936}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MUSes", "normalizedForm": "MUSes", "offsetStart": 54, "offsetEnd": 59}, "context": "The following proposition shows how the connection to MUSes can be exploited to obtain matching lower bounds.", "mentionContextAttributes": {"used": {"value": false, "score": 0.08151066303253174}, "created": {"value": false, "score": 0.00022965669631958008}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999810457229614}, "created": {"value": true, "score": 0.9811890125274658}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "Liberatore, 2005)", "normalizedForm": "Liberatore, 2005)", "refKey": 53}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MUSes", "normalizedForm": "MUSes", "offsetStart": 54, "offsetEnd": 59}, "context": "We can therefore exploit known complexity results for MUSes (Liberatore, 2005):", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999810457229614}, "created": {"value": false, "score": 4.8279762268066406e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999810457229614}, "created": {"value": true, "score": 0.9811890125274658}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "(Liberatore, 2005)", "normalizedForm": "Liberatore, 2005", "refKey": 53, "offsetStart": 81181, "offsetEnd": 81199}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CQAPri", "normalizedForm": "CQAPri", "offsetStart": 54, "offsetEnd": 60}, "language": {"rawForm": "Java", "normalizedForm": "Java"}, "context": "We could therefore not use these datasets to evaluate CQAPri, since there is no chance obtaining query answer that hold under AR semantics but not under IAR semantics.", "mentionContextAttributes": {"used": {"value": true, "score": 0.999421238899231}, "created": {"value": false, "score": 3.349781036376953e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997870326042175}, "created": {"value": true, "score": 0.9996846914291382}, "shared": {"value": true, "score": 0.9922263622283936}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClassifyQuery", "normalizedForm": "ClassifyQuery", "offsetStart": 54, "offsetEnd": 67}, "context": "Putting everything together, we propose the algorithm ClassifyQuery (Algorithm 3) that determines the strongest semantics (among IAR, AR, brave) under which a Boolean query holds (see next paragraph for discussion of the non-Boolean case). ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00027865171432495117}, "created": {"value": true, "score": 0.9997629523277283}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9625610709190369}, "created": {"value": true, "score": 0.9997629523277283}, "shared": {"value": false, "score": 7.152557373046875e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "genOne", "normalizedForm": "genOne", "offsetStart": 56, "offsetEnd": 62}, "context": "We consider that a procedure solves the generation task genOne (resp.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0010323524475097656}, "created": {"value": false, "score": 0.0016813278198242188}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.4922901391983032}, "created": {"value": false, "score": 0.0016813278198242188}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "genBest", "normalizedForm": "genBest", "offsetStart": 57, "offsetEnd": 64}, "context": "Finally, we establish the intractability of best rec and genBest when explanations are ranked by cardinality.", "mentionContextAttributes": {"used": {"value": false, "score": 0.2934949994087219}, "created": {"value": true, "score": 0.9200234413146973}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.4922901391983032}, "created": {"value": true, "score": 0.9200234413146973}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PostgreSQL", "normalizedForm": "PostgreSQL", "offsetStart": 57, "offsetEnd": 67}, "version": {"rawForm": "9.3.2", "normalizedForm": "9.3.2", "offsetStart": 69, "offsetEnd": 74}, "url": {"rawForm": "www.postgresql.org", "normalizedForm": "www.postgresql.org", "offsetStart": 76, "offsetEnd": 94}, "context": "CQAPri is built on top of the relational database server PostgreSQL v9.3.2 (www.postgresql.org), ", "mentionContextAttributes": {"used": {"value": true, "score": 0.94675213098526}, "created": {"value": false, "score": 0.00019592046737670898}, "shared": {"value": false, "score": 0.008239507675170898}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997870326042175}, "created": {"value": false, "score": 0.00019592046737670898}, "shared": {"value": false, "score": 0.008239507675170898}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ComputeCauses", "normalizedForm": "ComputeCauses", "offsetStart": 60, "offsetEnd": 73}, "context": "For non-Boolean queries, we can use the modified version of ComputeCauses to compute all brave-answers of a non-Boolean query.", "mentionContextAttributes": {"used": {"value": true, "score": 0.5097629427909851}, "created": {"value": false, "score": 1.4781951904296875e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999198913574219}, "created": {"value": true, "score": 0.9993359446525574}, "shared": {"value": false, "score": 3.5762786865234375e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "genOne", "normalizedForm": "genOne", "offsetStart": 63, "offsetEnd": 69}, "context": "In addition to the problem of generating a single explanation (genOne), or a single best explanation (genBest) according to a given criteria, we consider four related decision problems: decide whether a given assertion appears in some explanation (rel) or in every explanation (nec), decide whether a candidate is an explanation (rec), resp.", "mentionContextAttributes": {"used": {"value": false, "score": 0.03248608112335205}, "created": {"value": false, "score": 5.245208740234375e-06}, "shared": {"value": false, "score": 9.5367431640625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.4922901391983032}, "created": {"value": false, "score": 0.0016813278198242188}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DALEK", "normalizedForm": "DALEK", "offsetStart": 66, "offsetEnd": 71}, "context": "To support the explanatory dialogue and build (counter)arguments, DALEK computes the set of conflicts of the KB in a similar way to our system, as well as the causes of the claim. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.6880472898483276}, "created": {"value": false, "score": 0.0015718936920166016}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.6880472898483276}, "created": {"value": true, "score": 0.5642854571342468}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ComputeCauses", "normalizedForm": "ComputeCauses", "offsetStart": 67, "offsetEnd": 80}, "context": "Based upon this idea, we present in Algorithm 2 a simple procedure ComputeCauses that produces the causes of a tuple a being an answer to a query q over a DL-Lite R KB. ", "mentionContextAttributes": {"used": {"value": false, "score": 6.639957427978516e-05}, "created": {"value": true, "score": 0.9993359446525574}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999198913574219}, "created": {"value": true, "score": 0.9993359446525574}, "shared": {"value": false, "score": 3.5762786865234375e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ComputeCauses", "normalizedForm": "ComputeCauses", "offsetStart": 69, "offsetEnd": 82}, "context": "For non-Boolean queries, we can again employ the modified version of ComputeCauses to compute all causes of all answers, and then isolate those answers that possess a conflict-free cause to identify the IAR-answers.", "mentionContextAttributes": {"used": {"value": false, "score": 0.22632735967636108}, "created": {"value": false, "score": 0.00046265125274658203}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999198913574219}, "created": {"value": true, "score": 0.9993359446525574}, "shared": {"value": false, "score": 3.5762786865234375e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MUSes", "normalizedForm": "MUSes", "offsetStart": 72, "offsetEnd": 77}, "context": "Moreover, by combining Proposition 5.9 and known complexity results for MUSes, we obtain the following upper bounds: Proposition 5.10.", "mentionContextAttributes": {"used": {"value": true, "score": 0.7835228443145752}, "created": {"value": false, "score": 1.7762184143066406e-05}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999810457229614}, "created": {"value": true, "score": 0.9811890125274658}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "Liberatore, 2005)", "normalizedForm": "Liberatore, 2005)", "refKey": 53}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "genOne", "normalizedForm": "genOne", "offsetStart": 75, "offsetEnd": 81}, "context": "Regarding explanations for negative AR-answers, nec is coNP-hard, and rel, genOne, and genBest (for any ranking criterion) are NP-hard w.r.t.", "mentionContextAttributes": {"used": {"value": false, "score": 0.03659743070602417}, "created": {"value": false, "score": 4.887580871582031e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.4922901391983032}, "created": {"value": false, "score": 0.0016813278198242188}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClassifyQuery", "normalizedForm": "ClassifyQuery", "offsetStart": 81, "offsetEnd": 94}, "context": "At query time, the system implements the steps from the (non-Boolean version of) ClassifyQuery procedure.", "mentionContextAttributes": {"used": {"value": false, "score": 0.003206312656402588}, "created": {"value": false, "score": 0.00047528743743896484}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9625610709190369}, "created": {"value": true, "score": 0.9997629523277283}, "shared": {"value": false, "score": 7.152557373046875e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "genBest", "normalizedForm": "genBest", "offsetStart": 82, "offsetEnd": 89}, "context": "This yields the coNP-hardness of best rec, as well as the NP-and coNP-hardness of genBest: we can solve the minimum assignment problem -and its complement -by generating a cardinality-minimal explanation and comparing its size with the number of variables set to true by the candidate assignment.", "mentionContextAttributes": {"used": {"value": false, "score": 0.19126659631729126}, "created": {"value": false, "score": 1.0728836059570312e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.4922901391983032}, "created": {"value": true, "score": 0.9200234413146973}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CQAPri", "normalizedForm": "CQAPri", "offsetStart": 87, "offsetEnd": 93}, "language": {"rawForm": "Java", "normalizedForm": "Java"}, "context": "The experiments reported by Tsalapati et al. (2016) show that for IAR query answering, CQAPri performances are comparable to those of QuID and often better, while SaQAI is much more efficient.", "mentionContextAttributes": {"used": {"value": false, "score": 0.009587466716766357}, "created": {"value": false, "score": 2.753734588623047e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997870326042175}, "created": {"value": true, "score": 0.9996846914291382}, "shared": {"value": true, "score": 0.9922263622283936}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "genBest", "normalizedForm": "genBest", "offsetStart": 87, "offsetEnd": 94}, "context": "Regarding explanations for negative AR-answers, nec is coNP-hard, and rel, genOne, and genBest (for any ranking criterion) are NP-hard w.r.t.", "mentionContextAttributes": {"used": {"value": false, "score": 0.03659743070602417}, "created": {"value": false, "score": 4.887580871582031e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.4922901391983032}, "created": {"value": true, "score": 0.9200234413146973}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CQAPri", "normalizedForm": "CQAPri", "offsetStart": 92, "offsetEnd": 98}, "language": {"rawForm": "Java", "normalizedForm": "Java"}, "context": "For positive AR-answers, the SAT encoding is constructed for the query answering phase, and CQAPri uses the solver SAT4J to compute the MUSes (see Section 6, Berre and Parrain, 2010). ", "mentionContextAttributes": {"used": {"value": true, "score": 0.5515651106834412}, "created": {"value": false, "score": 5.245208740234375e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997870326042175}, "created": {"value": true, "score": 0.9996846914291382}, "shared": {"value": true, "score": 0.9922263622283936}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAT4J", "normalizedForm": "SAT4J", "offsetStart": 96, "offsetEnd": 101}, "version": {"rawForm": "2.3.4", "normalizedForm": "2.3.4", "offsetStart": 103, "offsetEnd": 108}, "context": "the Rapid v1.0 query rewriting engine for DL-Lite (Chortaras, Trivela, & Stamou, 2011), and the SAT4J v2.3.4 ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9989367127418518}, "created": {"value": false, "score": 2.5272369384765625e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996945858001709}, "created": {"value": false, "score": 2.5272369384765625e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CQAPri", "normalizedForm": "CQAPri", "offsetStart": 96, "offsetEnd": 102}, "language": {"rawForm": "Java", "normalizedForm": "Java"}, "context": "We implemented both inconsistency-tolerant query answering and the explanation framework in our CQAPri system and built a benchmark for inconsistency-tolerant query answering upon a well-established DL-Lite R benchmark.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00019186735153198242}, "created": {"value": true, "score": 0.9985103011131287}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997870326042175}, "created": {"value": true, "score": 0.9996846914291382}, "shared": {"value": true, "score": 0.9922263622283936}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Rapid", "normalizedForm": "Rapid", "offsetStart": 99, "offsetEnd": 104}, "version": {"rawForm": "1.", "normalizedForm": "1"}, "context": "Queries in terms of shape, numbers of atoms, variables, constants, rewritings, and rewriting time (Rapid).", "mentionContextAttributes": {"used": {"value": false, "score": 0.0016568899154663086}, "created": {"value": false, "score": 5.14984130859375e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9989367127418518}, "created": {"value": false, "score": 0.0002796053886413574}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MUSes", "normalizedForm": "MUSes", "offsetStart": 102, "offsetEnd": 107}, "context": "For AR (non)-answers, the extension of the SAT encoding presented in Remark 4.12 can be used, and the MUSes of \u03d5 1 \u00acq w.r.t.", "mentionContextAttributes": {"used": {"value": true, "score": 0.8020384311676025}, "created": {"value": false, "score": 3.0994415283203125e-06}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999810457229614}, "created": {"value": true, "score": 0.9811890125274658}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "Liberatore, 2005)", "normalizedForm": "Liberatore, 2005)", "refKey": 53}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "genBest", "normalizedForm": "genBest", "offsetStart": 102, "offsetEnd": 109}, "context": "In addition to the problem of generating a single explanation (genOne), or a single best explanation (genBest) according to a given criteria, we consider four related decision problems: decide whether a given assertion appears in some explanation (rel) or in every explanation (nec), decide whether a candidate is an explanation (rec), resp.", "mentionContextAttributes": {"used": {"value": false, "score": 0.03248608112335205}, "created": {"value": false, "score": 5.245208740234375e-06}, "shared": {"value": false, "score": 9.5367431640625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.4922901391983032}, "created": {"value": true, "score": 0.9200234413146973}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ComputeCauses", "normalizedForm": "ComputeCauses", "offsetStart": 104, "offsetEnd": 117}, "context": "Therefore, deciding if a query is entailed under IAR semantics can be done by computing its causes with ComputeCauses and the conflicts of the KB with ComputeConflicts, and then checking whether there is a cause without conflicts.", "mentionContextAttributes": {"used": {"value": true, "score": 0.944757878780365}, "created": {"value": false, "score": 7.867813110351562e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999198913574219}, "created": {"value": true, "score": 0.9993359446525574}, "shared": {"value": false, "score": 3.5762786865234375e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "genBest", "normalizedForm": "genBest", "offsetStart": 106, "offsetEnd": 113}, "context": "Regarding explanations for negative IAR-answers in the case where explanations are ranked by cardinality, genBest is NP-hard, and best rec is coNP-hard w.r.t.", "mentionContextAttributes": {"used": {"value": false, "score": 0.026773154735565186}, "created": {"value": false, "score": 8.940696716308594e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.4922901391983032}, "created": {"value": true, "score": 0.9200234413146973}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "genOne", "normalizedForm": "genOne", "offsetStart": 107, "offsetEnd": 113}, "context": "Regarding explanations for positive AR-answers, rec is BH 2 -hard, nec is NP-hard, rel is \u03a3 p 2 -hard, and genOne is NP-hard w.r.t.", "mentionContextAttributes": {"used": {"value": false, "score": 0.17113041877746582}, "created": {"value": false, "score": 2.0265579223632812e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.4922901391983032}, "created": {"value": false, "score": 0.0016813278198242188}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "genBest", "normalizedForm": "genBest", "offsetStart": 107, "offsetEnd": 114}, "context": "Indeed, to show that an explanation is not a best explanation, it suffices to generate a best explanation (genBest) and verify that it has fewer disjuncts / assertions than the explanation at hand.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0046367645263671875}, "created": {"value": false, "score": 1.895427703857422e-05}, "shared": {"value": false, "score": 5.960464477539062e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.4922901391983032}, "created": {"value": true, "score": 0.9200234413146973}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CentOS", "normalizedForm": "CentOS", "offsetStart": 109, "offsetEnd": 115}, "version": {"rawForm": "6.8", "normalizedForm": "6.8", "offsetStart": 116, "offsetEnd": 119}, "context": "All experiments reported in this work were run on an Intel Xeon X5647 at 2.93 GHz with 16 GB of RAM, running CentOS 6.8. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9998769760131836}, "created": {"value": false, "score": 0.001634061336517334}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998769760131836}, "created": {"value": false, "score": 0.001634061336517334}, "shared": {"value": false, "score": 3.5762786865234375e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ComputeCauses", "normalizedForm": "ComputeCauses", "offsetStart": 109, "offsetEnd": 122}, "context": "Therefore, to decide if a query is entailed under brave semantics, we simply need to compute its causes with ComputeCauses and verify that the output is not empty. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.2653697729110718}, "created": {"value": false, "score": 7.355213165283203e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999198913574219}, "created": {"value": true, "score": 0.9993359446525574}, "shared": {"value": false, "score": 3.5762786865234375e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAT4J", "normalizedForm": "SAT4J", "offsetStart": 115, "offsetEnd": 120}, "version": {"rawForm": "2.3.4", "normalizedForm": "2.3.4"}, "context": "For positive AR-answers, the SAT encoding is constructed for the query answering phase, and CQAPri uses the solver SAT4J to compute the MUSes (see Section 6, Berre and Parrain, 2010). ", "mentionContextAttributes": {"used": {"value": true, "score": 0.5515651106834412}, "created": {"value": false, "score": 5.245208740234375e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996945858001709}, "created": {"value": false, "score": 2.5272369384765625e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CQAPri", "normalizedForm": "CQAPri", "offsetStart": 117, "offsetEnd": 123}, "language": {"rawForm": "Java", "normalizedForm": "Java"}, "context": "This led us to extend the SAT encoding from Section 4 to these semantics and to implement the resulting encodings in CQAPri. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.019726037979125977}, "created": {"value": true, "score": 0.8755858540534973}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997870326042175}, "created": {"value": true, "score": 0.9996846914291382}, "shared": {"value": true, "score": 0.9922263622283936}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CQAPri", "normalizedForm": "CQAPri", "offsetStart": 126, "offsetEnd": 132}, "language": {"rawForm": "Java", "normalizedForm": "Java"}, "context": "We study in particular the impact of varying the size of the ABoxes and the ratio of assertions involved in some conflicts on CQAPri behaviour.", "mentionContextAttributes": {"used": {"value": true, "score": 0.7314670085906982}, "created": {"value": false, "score": 0.0007761716842651367}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997870326042175}, "created": {"value": true, "score": 0.9996846914291382}, "shared": {"value": true, "score": 0.9922263622283936}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MUSes", "normalizedForm": "MUSes", "offsetStart": 136, "offsetEnd": 141}, "context": "For positive AR-answers, the SAT encoding is constructed for the query answering phase, and CQAPri uses the solver SAT4J to compute the MUSes (see Section 6, Berre and Parrain, 2010).", "mentionContextAttributes": {"used": {"value": true, "score": 0.5515651106834412}, "created": {"value": false, "score": 5.245208740234375e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999810457229614}, "created": {"value": true, "score": 0.9811890125274658}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "Liberatore, 2005)", "normalizedForm": "Liberatore, 2005)", "refKey": 53}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CQAPri", "normalizedForm": "CQAPri", "offsetStart": 137, "offsetEnd": 143}, "language": {"rawForm": "Java", "normalizedForm": "Java", "wikidataId": "Q251", "offsetStart": 116, "offsetEnd": 120}, "context": "We implemented our query answering and explaining framework under AR, IAR and brave semantics over DL-Lite R KBs in Java v1.7 within our CQAPri (\"Consistent Query Answering with Priorities\") tool8 . ", "mentionContextAttributes": {"used": {"value": false, "score": 0.008451879024505615}, "created": {"value": true, "score": 0.9160163998603821}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997870326042175}, "created": {"value": true, "score": 0.9996846914291382}, "shared": {"value": true, "score": 0.9922263622283936}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SaQAI", "normalizedForm": "SaQAI", "offsetStart": 144, "offsetEnd": 149}, "context": "The QuID system (Rosati, Ruzzi, Graziosi, & Masotti, 2012) implements the IAR semantics, using either query rewriting or ABox cleaning, and the SaQAI system (Tsalapati, Stoilos, Stamou, & Koletsos, 2016) implements IAR using ABox cleaning and saturation, as well as the ICAR semantics (that corresponds to the IAR semantics over the saturated ABox, Lembo et al., 2010). ", "mentionContextAttributes": {"used": {"value": true, "score": 0.831919252872467}, "created": {"value": false, "score": 5.4836273193359375e-06}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.831919252872467}, "created": {"value": false, "score": 0.000556647777557373}, "shared": {"value": false, "score": 5.960464477539062e-07}}, "references": [{"label": "(Tsalapati, Stoilos, Stamou, & Koletsos, 2016)", "normalizedForm": "Tsalapati, Stoilos, Stamou, & Koletsos, 2016", "refKey": 72, "offsetStart": 5363, "offsetEnd": 5409}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ComputeCauses", "normalizedForm": "ComputeCauses", "offsetStart": 144, "offsetEnd": 157}, "context": "We first explain how we can compute the answers that hold under brave and IAR semantics using the procedures ComputeConflicts (Algorithm 1) and ComputeCauses (Algorithm 2) from the preceding subsection, and afterwards we propose a SAT-based approach to handle the AR semantics.", "mentionContextAttributes": {"used": {"value": false, "score": 0.013479948043823242}, "created": {"value": false, "score": 0.005210757255554199}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999198913574219}, "created": {"value": true, "score": 0.9993359446525574}, "shared": {"value": false, "score": 3.5762786865234375e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "\"Consistent Query Answering with", "normalizedForm": "\"Consistent Query Answering with", "offsetStart": 145, "offsetEnd": 177}, "context": "We implemented our query answering and explaining framework under AR, IAR and brave semantics over DL-Lite R KBs in Java v1.7 within our CQAPri (\"Consistent Query Answering with Priorities\") tool8 . ", "mentionContextAttributes": {"used": {"value": false, "score": 0.008451879024505615}, "created": {"value": true, "score": 0.9160163998603821}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.008451879024505615}, "created": {"value": true, "score": 0.9160163998603821}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MUSes", "normalizedForm": "MUSes", "offsetStart": 158, "offsetEnd": 163}, "context": "Proposition 5.9 directly yields a method of computing explanations for positive ARanswers: simply construct the encoding and call an algorithm for generating MUSes (as implemented e.g. by some SAT solvers). ", "mentionContextAttributes": {"used": {"value": false, "score": 9.679794311523438e-05}, "created": {"value": false, "score": 0.0004521012306213379}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999810457229614}, "created": {"value": true, "score": 0.9811890125274658}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "Liberatore, 2005)", "normalizedForm": "Liberatore, 2005)", "refKey": 53}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SaQAI", "normalizedForm": "SaQAI", "offsetStart": 163, "offsetEnd": 168}, "context": "The experiments reported by Tsalapati et al. (2016) show that for IAR query answering, CQAPri performances are comparable to those of QuID and often better, while SaQAI is much more efficient. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.009587466716766357}, "created": {"value": false, "score": 2.753734588623047e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.831919252872467}, "created": {"value": false, "score": 0.000556647777557373}, "shared": {"value": false, "score": 5.960464477539062e-07}}, "references": [{"label": "(Tsalapati, Stoilos, Stamou, & Koletsos, 2016)", "normalizedForm": "Tsalapati, Stoilos, Stamou, & Koletsos, 2016", "refKey": 72}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "genOne", "normalizedForm": "genOne", "offsetStart": 168, "offsetEnd": 174}, "context": "To see why the generation task genOne is NP-hard, we note that to solve the NPcomplete problem of deciding whether K |= AR q( a), it suffices to call the procedure for genOne to generate a single explanation for K |= AR q( a). ", "mentionContextAttributes": {"used": {"value": false, "score": 0.01935112476348877}, "created": {"value": false, "score": 0.00012183189392089844}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.4922901391983032}, "created": {"value": false, "score": 0.0016813278198242188}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CQAPri", "normalizedForm": "CQAPri", "offsetStart": 172, "offsetEnd": 178}, "language": {"rawForm": "Java", "normalizedForm": "Java"}, "context": "To explain why a query answer a belongs to one of the three classes Possible, Likely and Sure that correspond to K |= S q( a) and K |= S' q( a) for two semantics S and S', CQAPri provides all the explanations for a being a positive answer under the first semantics and a single explanation for it being a negative answer under the other one (i.e. a counterexample), together with the necessary and relevant assertions for both positive and negative answers.", "mentionContextAttributes": {"used": {"value": false, "score": 0.3753880262374878}, "created": {"value": false, "score": 2.5033950805664062e-06}, "shared": {"value": false, "score": 1.5497207641601562e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997870326042175}, "created": {"value": true, "score": 0.9996846914291382}, "shared": {"value": true, "score": 0.9922263622283936}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MUSes", "normalizedForm": "MUSes", "offsetStart": 183, "offsetEnd": 188}, "context": "It follows from the preceding claim that the explanations for T 0 , A 0 |= AR q 0 (a), i.e. the minimal sets of causes for q 0 (a) that cover all repairs, correspond precisely to the MUSes of \u03d5 0 .", "mentionContextAttributes": {"used": {"value": true, "score": 0.9328369498252869}, "created": {"value": false, "score": 1.1205673217773438e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999810457229614}, "created": {"value": true, "score": 0.9811890125274658}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "Liberatore, 2005)", "normalizedForm": "Liberatore, 2005)", "refKey": 53}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SaQAI", "normalizedForm": "SaQAI", "offsetStart": 247, "offsetEnd": 252}, "context": "In terms of implemented tools and benchmarks for inconsistency-tolerant query answering over DL KBs, we are aware of three systems: the QuID system (Rosati et al., 2012;Lembo et al., 2015) that handles IAR semantics for CQs and DL-Lite A KBs, the SaQAI system (Tsalapati et al., 2016) that handles IAR and ICAR semantics for CQs and DL-Lite KBs, and the system by Du et al. (2013) for querying SHIQ KBs under a variant of AR semantics with weight on ABox assertions that handles CQs without non-distinguished variables (which reduces to the simpler task of ABox assertion entailment).", "mentionContextAttributes": {"used": {"value": false, "score": 0.07771331071853638}, "created": {"value": false, "score": 0.000556647777557373}, "shared": {"value": false, "score": 5.960464477539062e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.831919252872467}, "created": {"value": false, "score": 0.000556647777557373}, "shared": {"value": false, "score": 5.960464477539062e-07}}, "references": [{"label": "(Tsalapati et al., 2016)", "normalizedForm": "Tsalapati et al., 2016", "refKey": 72, "offsetStart": 131586, "offsetEnd": 131610}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MUSes", "normalizedForm": "MUSes", "offsetStart": 264, "offsetEnd": 269}, "context": "Interestingly, we establish tight connections between the intractable decision problems, as well as the problem of generating (preferred) explanations, and SAT-based reasoning tasks like computing minimal models or minimal unsatisfiable sets of clauses (so-called MUSes). ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0001780390739440918}, "created": {"value": true, "score": 0.9811890125274658}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999810457229614}, "created": {"value": true, "score": 0.9811890125274658}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "Liberatore, 2005)", "normalizedForm": "Liberatore, 2005)", "refKey": 53}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PostgreSQL", "normalizedForm": "PostgreSQL", "offsetStart": 274, "offsetEnd": 284}, "version": {"rawForm": "9.3.2", "normalizedForm": "9.3.2"}, "url": {"rawForm": "www.postgresql.org", "normalizedForm": "www.postgresql.org"}, "context": "The time it took CQAPri to be up and ready to answer queries is dominated by the construction of the conflict graph for the ABox (Table 4); it took about 2 seconds to load the TBox, construct the queries that correspond to the violation of negative inclusions, and open the PostgreSQL connection to the ABox.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9997870326042175}, "created": {"value": false, "score": 3.0994415283203125e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997870326042175}, "created": {"value": false, "score": 0.00019592046737670898}, "shared": {"value": false, "score": 0.008239507675170898}}}], "references": [{"refKey": 72, "tei": "<biblStruct xml:id=\"b72\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">Efficient query answering over expressive inconsistent description logics</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">E</forename><surname>Tsalapati</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">G</forename><surname>Stoilos</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">G</forename><forename type=\"middle\">B</forename><surname>Stamou</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">G</forename><surname>Koletsos</surname></persName>\n\t\t</author>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"m\">Proceedings of IJCAI</title>\n\t\t<meeting>IJCAI</meeting>\n\t\t<imprint>\n\t\t\t<date>2016</date>\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}, {"refKey": 53, "tei": "<biblStruct xml:id=\"b53\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">Redundancy in logic I: CNF propositional formulae</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Paolo</forename><surname>Liberatore</surname></persName>\n\t\t</author>\n\t\t<idno type=\"DOI\">10.1016/j.artint.2004.11.002</idno>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"j\">Artificial Intelligence</title>\n\t\t<title level=\"j\" type=\"abbrev\">Artificial Intelligence</title>\n\t\t<idno type=\"ISSN\">0004-3702</idno>\n\t\t<imprint>\n\t\t\t<biblScope unit=\"volume\">163</biblScope>\n\t\t\t<biblScope unit=\"issue\">2</biblScope>\n\t\t\t<biblScope unit=\"page\" from=\"203\" to=\"232\" />\n\t\t\t<date type=\"published\" when=\"2005-04\">2005</date>\n\t\t\t<publisher>Elsevier BV</publisher>\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}], "runtime": 24340, "id": "5c1819fe9498b6acbcf96be3066840f28a15a7db", "metadata": {"id": "5c1819fe9498b6acbcf96be3066840f28a15a7db"}, "original_file_path": "../../datalake/Samuel/SOFTware-Sync/downloads/xml/hal-02066288.grobid.tei.xml", "file_name": "hal-02066288.grobid.tei.xml"}