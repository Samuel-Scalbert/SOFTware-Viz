{"application": "software-mentions", "version": "0.8.0", "date": "2024-04-12T15:48+0000", "md5": "983C34788FE2D83C94A94B8E43069609", "mentions": [{"type": "software", "software-type": "software", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "offsetStart": 0, "offsetEnd": 6}, "version": {"rawForm": "1.1", "normalizedForm": "1.1"}, "context": "SPARQL pipelines often rely on several data sources that are queried on-the-fly and whose sub-results are aggregated to form the final result set.", "mentionContextAttributes": {"used": {"value": false, "score": 0.001065075397491455}, "created": {"value": false, "score": 7.808208465576172e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9933119416236877}, "created": {"value": true, "score": 0.9855223298072815}, "shared": {"value": true, "score": 0.9374933838844299}}, "references": [{"label": "[2]", "normalizedForm": "[2]", "refKey": 2}, {"label": "[2]", "normalizedForm": "[2]", "refKey": 2}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SERVICE", "normalizedForm": "SERVICE", "offsetStart": 0, "offsetEnd": 7}, "context": "SERVICE <URI> { ?s ?t ?u .", "mentionContextAttributes": {"used": {"value": true, "score": 0.9930984377861023}, "created": {"value": false, "score": 6.258487701416016e-06}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9930984377861023}, "created": {"value": true, "score": 0.5381202697753906}, "shared": {"value": false, "score": 5.364418029785156e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SERVICE", "normalizedForm": "SERVICE", "offsetStart": 1, "offsetEnd": 8}, "context": "\"SERVICE ?url { ... }\", requiring the endpoint to first retrieve the possible entities for this variable and then call the external endpoints applying the set of conditions.", "mentionContextAttributes": {"used": {"value": false, "score": 0.3866179585456848}, "created": {"value": false, "score": 1.1622905731201172e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9930984377861023}, "created": {"value": true, "score": 0.5381202697753906}, "shared": {"value": false, "score": 5.364418029785156e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9098, "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9098, "offsetStart": 4, "offsetEnd": 10}, "version": {"rawForm": "1.1", "normalizedForm": "1.1"}, "context": "The SPARQL standard provides a large set of built-in functions, from ones dedicated to strings to specific ones about dates. ", "mentionContextAttributes": {"used": {"value": false, "score": 5.537271499633789e-05}, "created": {"value": false, "score": 0.00022864341735839844}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9933119416236877}, "created": {"value": true, "score": 0.9855223298072815}, "shared": {"value": true, "score": 0.9374933838844299}}, "references": [{"label": "[2]", "normalizedForm": "[2]", "refKey": 2}, {"label": "[2]", "normalizedForm": "[2]", "refKey": 2}]}, {"type": "software", "software-type": "software", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9098, "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9098, "offsetStart": 9, "offsetEnd": 15}, "version": {"rawForm": "1.1", "normalizedForm": "1.1"}, "context": "By using SPARQL to compute the signature of the query results, it avoids large result sets to be sent over the network. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.06423932313919067}, "created": {"value": false, "score": 1.8894672393798828e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9933119416236877}, "created": {"value": true, "score": 0.9855223298072815}, "shared": {"value": true, "score": 0.9374933838844299}}, "references": [{"label": "[2]", "normalizedForm": "[2]", "refKey": 2}, {"label": "[2]", "normalizedForm": "[2]", "refKey": 2}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SERVICE", "normalizedForm": "SERVICE", "offsetStart": 13, "offsetEnd": 20}, "context": "Indeed, each SERVICE call can be extracted and encapsulated following the steps presented previously.", "mentionContextAttributes": {"used": {"value": false, "score": 0.042946815490722656}, "created": {"value": false, "score": 2.1278858184814453e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9930984377861023}, "created": {"value": true, "score": 0.5381202697753906}, "shared": {"value": false, "score": 5.364418029785156e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "offsetStart": 17, "offsetEnd": 23}, "version": {"rawForm": "1.1", "normalizedForm": "1.1"}, "context": "Practically, the SPARQL standard provides the designers with a built-in function to call an external endpoint with specific conditions: the SERVICE keyword.", "mentionContextAttributes": {"used": {"value": false, "score": 5.3942203521728516e-05}, "created": {"value": false, "score": 0.00019431114196777344}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9933119416236877}, "created": {"value": true, "score": 0.9855223298072815}, "shared": {"value": true, "score": 0.9374933838844299}}, "references": [{"label": "[2]", "normalizedForm": "[2]", "refKey": 2}, {"label": "[2]", "normalizedForm": "[2]", "refKey": 2}]}, {"type": "software", "software-type": "software", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "offsetStart": 17, "offsetEnd": 23}, "version": {"rawForm": "1.1", "normalizedForm": "1.1"}, "context": "According to the SPARQL 1.1 standard, this SPARQL endpoint URI may also be a variable, e.g.", "mentionContextAttributes": {"used": {"value": false, "score": 0.02308577299118042}, "created": {"value": false, "score": 6.496906280517578e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9933119416236877}, "created": {"value": true, "score": 0.9855223298072815}, "shared": {"value": true, "score": 0.9374933838844299}}, "references": [{"label": "[2]", "normalizedForm": "[2]", "refKey": 2}, {"label": "[2]", "normalizedForm": "[2]", "refKey": 2}]}, {"type": "software", "software-type": "software", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "offsetStart": 19, "offsetEnd": 25}, "version": {"rawForm": "1.1", "normalizedForm": "1.1"}, "context": "Unfortunately, the SPARQL standard does not provide them with a method to be aware of such updates; and therefore pipelines are regularly relaunched from scratch, often uselessly.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00025963783264160156}, "created": {"value": false, "score": 9.08970832824707e-05}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9933119416236877}, "created": {"value": true, "score": 0.9855223298072815}, "shared": {"value": true, "score": 0.9374933838844299}}, "references": [{"label": "[2]", "normalizedForm": "[2]", "refKey": 2}, {"label": "[2]", "normalizedForm": "[2]", "refKey": 2}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SERVICE", "normalizedForm": "SERVICE", "offsetStart": 26, "offsetEnd": 33}, "context": "Following recursively the SERVICE calls.", "mentionContextAttributes": {"used": {"value": true, "score": 0.7885820269584656}, "created": {"value": false, "score": 5.781650543212891e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9930984377861023}, "created": {"value": true, "score": 0.5381202697753906}, "shared": {"value": false, "score": 5.364418029785156e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "offsetStart": 29, "offsetEnd": 35}, "version": {"rawForm": "1.1", "normalizedForm": "1.1"}, "context": "Assuming Q is the considered SPARQL select query, we propose the following steps to generate the query which computes the hash of the results of Q:", "mentionContextAttributes": {"used": {"value": false, "score": 0.10106128454208374}, "created": {"value": false, "score": 0.3410208821296692}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9933119416236877}, "created": {"value": true, "score": 0.9855223298072815}, "shared": {"value": true, "score": 0.9374933838844299}}, "references": [{"label": "[2]", "normalizedForm": "[2]", "refKey": 2}, {"label": "[2]", "normalizedForm": "[2]", "refKey": 2}]}, {"type": "software", "software-type": "software", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "offsetStart": 29, "offsetEnd": 35}, "version": {"rawForm": "1.1", "normalizedForm": "1.1"}, "context": "Consequently, by the mean of SPARQL sub-queries it is possible to refine the previous method when the designer sets up federated queries.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0001544952392578125}, "created": {"value": false, "score": 9.208917617797852e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9933119416236877}, "created": {"value": true, "score": 0.9855223298072815}, "shared": {"value": true, "score": 0.9374933838844299}}, "references": [{"label": "[2]", "normalizedForm": "[2]", "refKey": 2}, {"label": "[2]", "normalizedForm": "[2]", "refKey": 2}]}, {"type": "software", "software-type": "software", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "offsetStart": 36, "offsetEnd": 42}, "version": {"rawForm": "1.1", "normalizedForm": "1.1"}, "context": "This abundance of open datasets and SPARQL [2] endpoints led not only researchers but also businesses to integrate RDF graphs into their complex data pipelines.", "mentionContextAttributes": {"used": {"value": false, "score": 0.012207329273223877}, "created": {"value": false, "score": 0.00016617774963378906}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9933119416236877}, "created": {"value": true, "score": 0.9855223298072815}, "shared": {"value": true, "score": 0.9374933838844299}}, "references": [{"label": "[2]", "normalizedForm": "[2]", "refKey": 2, "offsetStart": 1518, "offsetEnd": 1521}]}, {"type": "software", "software-type": "software", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "offsetStart": 37, "offsetEnd": 43}, "version": {"rawForm": "1.1", "normalizedForm": "1.1"}, "context": "In this article, mainly dedicated to SPARQL practitioners and data pipeline designers, we present some possibilities provided by SPARQL 1.1 [2] to hash query result sets with a focus on the case of SPARQL federation of sources with the SERVICE keyword.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0002993345260620117}, "created": {"value": true, "score": 0.5381202101707458}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9933119416236877}, "created": {"value": true, "score": 0.9855223298072815}, "shared": {"value": true, "score": 0.9374933838844299}}, "references": [{"label": "[2]", "normalizedForm": "[2]", "refKey": 2}, {"label": "[2]", "normalizedForm": "[2]", "refKey": 2}]}, {"type": "software", "software-type": "software", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "offsetStart": 37, "offsetEnd": 43}, "version": {"rawForm": "1.1", "normalizedForm": "1.1"}, "context": "Practically, our generator takes the SPARQL query Q and returns a new one Q hash which take care of computing all the necessary hashing sub-queries once run on the designers' SPARQL endpoint 7 .", "mentionContextAttributes": {"used": {"value": false, "score": 0.06062060594558716}, "created": {"value": false, "score": 0.00022721290588378906}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9933119416236877}, "created": {"value": true, "score": 0.9855223298072815}, "shared": {"value": true, "score": 0.9374933838844299}}, "references": [{"label": "[2]", "normalizedForm": "[2]", "refKey": 2}, {"label": "[2]", "normalizedForm": "[2]", "refKey": 2}]}, {"type": "software", "software-type": "software", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "offsetStart": 41, "offsetEnd": 47}, "version": {"rawForm": "1.1", "normalizedForm": "1.1"}, "context": "Specifically, Q hash's result is another SPARQL query Q check which is in charge of running8 the various hashing sub-queries in order to compare the hashes with the previous ones obtained by Q hash.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9015116095542908}, "created": {"value": false, "score": 5.429983139038086e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9933119416236877}, "created": {"value": true, "score": 0.9855223298072815}, "shared": {"value": true, "score": 0.9374933838844299}}, "references": [{"label": "[2]", "normalizedForm": "[2]", "refKey": 2}, {"label": "[2]", "normalizedForm": "[2]", "refKey": 2}]}, {"type": "software", "software-type": "software", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "offsetStart": 43, "offsetEnd": 49}, "version": {"rawForm": "1.1", "normalizedForm": "1.1"}, "context": "According to the SPARQL 1.1 standard, this SPARQL endpoint URI may also be a variable, e.g.", "mentionContextAttributes": {"used": {"value": false, "score": 0.02308577299118042}, "created": {"value": false, "score": 6.496906280517578e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9933119416236877}, "created": {"value": true, "score": 0.9855223298072815}, "shared": {"value": true, "score": 0.9374933838844299}}, "references": [{"label": "[2]", "normalizedForm": "[2]", "refKey": 2}, {"label": "[2]", "normalizedForm": "[2]", "refKey": 2}]}, {"type": "software", "software-type": "software", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "offsetStart": 48, "offsetEnd": 54}, "version": {"rawForm": "1.1", "normalizedForm": "1.1"}, "context": "This keyword is supposed to take as arguments a SPARQL endpoint URI5 and a set of conditions similarly to the where clause.", "mentionContextAttributes": {"used": {"value": false, "score": 0.181651771068573}, "created": {"value": false, "score": 0.0002536773681640625}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9933119416236877}, "created": {"value": true, "score": 0.9855223298072815}, "shared": {"value": true, "score": 0.9374933838844299}}, "references": [{"label": "[2]", "normalizedForm": "[2]", "refKey": 2}, {"label": "[2]", "normalizedForm": "[2]", "refKey": 2}]}, {"type": "software", "software-type": "software", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "offsetStart": 50, "offsetEnd": 56}, "version": {"rawForm": "1.1", "normalizedForm": "1.1"}, "context": "Moreover, this method is fully compliant with the SPARQL standard as it uses exclusively built-in functions.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00011283159255981445}, "created": {"value": false, "score": 0.00018548965454101562}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9933119416236877}, "created": {"value": true, "score": 0.9855223298072815}, "shared": {"value": true, "score": 0.9374933838844299}}, "references": [{"label": "[2]", "normalizedForm": "[2]", "refKey": 2}, {"label": "[2]", "normalizedForm": "[2]", "refKey": 2}]}, {"type": "software", "software-type": "software", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "offsetStart": 53, "offsetEnd": 59}, "version": {"rawForm": "1.1", "normalizedForm": "1.1", "offsetStart": 60, "offsetEnd": 63}, "context": "In addition, as our solution is exclusively based on SPARQL 1.1 built-in functions, it is fully-compliant with all the endpoints.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00042957067489624023}, "created": {"value": false, "score": 0.06651115417480469}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9933119416236877}, "created": {"value": true, "score": 0.9855223298072815}, "shared": {"value": true, "score": 0.9374933838844299}}, "references": [{"label": "[2]", "normalizedForm": "[2]", "refKey": 2}, {"label": "[2]", "normalizedForm": "[2]", "refKey": 2}]}, {"type": "software", "software-type": "software", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "offsetStart": 58, "offsetEnd": 64}, "version": {"rawForm": "1.1", "normalizedForm": "1.1"}, "context": "Therefore, by structuring the query like so, an optimised SPARQL endpoint might be able to properly order its query plan in order to evaluate sequentially the various sub-queries and stop as soon as possible, saving computational resources.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00461965799331665}, "created": {"value": false, "score": 2.8431415557861328e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9933119416236877}, "created": {"value": true, "score": 0.9855223298072815}, "shared": {"value": true, "score": 0.9374933838844299}}, "references": [{"label": "[2]", "normalizedForm": "[2]", "refKey": 2}, {"label": "[2]", "normalizedForm": "[2]", "refKey": 2}]}, {"type": "software", "software-type": "software", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "offsetStart": 62, "offsetEnd": 68}, "version": {"rawForm": "1.1", "normalizedForm": "1.1"}, "context": "In this Section, we review several use-cases where the use of SPARQL hashing features becomes relevant.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0730542540550232}, "created": {"value": false, "score": 0.011823415756225586}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9933119416236877}, "created": {"value": true, "score": 0.9855223298072815}, "shared": {"value": true, "score": 0.9374933838844299}}, "references": [{"label": "[2]", "normalizedForm": "[2]", "refKey": 2}, {"label": "[2]", "normalizedForm": "[2]", "refKey": 2}]}, {"type": "software", "software-type": "software", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "offsetStart": 69, "offsetEnd": 75}, "version": {"rawForm": "1.1", "normalizedForm": "1.1"}, "context": "To give an example, if we consider the query 4  Using this method, a SPARQL pipeline designer can easily obtain a hash corresponding to a result set, and store it for computing a comparison later.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0024293065071105957}, "created": {"value": false, "score": 3.260374069213867e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9933119416236877}, "created": {"value": true, "score": 0.9855223298072815}, "shared": {"value": true, "score": 0.9374933838844299}}, "references": [{"label": "[2]", "normalizedForm": "[2]", "refKey": 2}, {"label": "[2]", "normalizedForm": "[2]", "refKey": 2}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SERVICE", "normalizedForm": "SERVICE", "offsetStart": 70, "offsetEnd": 77}, "context": "More generally, one needs to generate one dedicated hashing query per SERVICE call plus a general hashing query for the main/top-level SPARQL query.", "mentionContextAttributes": {"used": {"value": false, "score": 0.01306086778640747}, "created": {"value": false, "score": 3.820657730102539e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9930984377861023}, "created": {"value": true, "score": 0.5381202697753906}, "shared": {"value": false, "score": 5.364418029785156e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "offsetStart": 72, "offsetEnd": 78}, "version": {"rawForm": "1.1", "normalizedForm": "1.1"}, "context": "In particular, we focus on various methods to obtain a \"signature\" of a SPARQL result set.", "mentionContextAttributes": {"used": {"value": false, "score": 0.005467057228088379}, "created": {"value": true, "score": 0.9855223298072815}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9933119416236877}, "created": {"value": true, "score": 0.9855223298072815}, "shared": {"value": true, "score": 0.9374933838844299}}, "references": [{"label": "[2]", "normalizedForm": "[2]", "refKey": 2}, {"label": "[2]", "normalizedForm": "[2]", "refKey": 2}]}, {"type": "software", "software-type": "software", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "offsetStart": 72, "offsetEnd": 78}, "version": {"rawForm": "1.1", "normalizedForm": "1.1"}, "context": "}}, we can obtain a finer precision computing the following two hashing SPARQL queries: The first query (left-hand side) focuses on computing a hash of the results set obtained from the external source; and the second one hashes the complete result set obtained once the local and the external results are joined.", "mentionContextAttributes": {"used": {"value": false, "score": 0.02615898847579956}, "created": {"value": false, "score": 5.9664249420166016e-05}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9933119416236877}, "created": {"value": true, "score": 0.9855223298072815}, "shared": {"value": true, "score": 0.9374933838844299}}, "references": [{"label": "[2]", "normalizedForm": "[2]", "refKey": 2}, {"label": "[2]", "normalizedForm": "[2]", "refKey": 2}]}, {"type": "software", "software-type": "software", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "offsetStart": 77, "offsetEnd": 83}, "version": {"rawForm": "1.1", "normalizedForm": "1.1"}, "context": "In the 'MD5' example above, the hash value represents the result of a simple SPARQL query 3 .", "mentionContextAttributes": {"used": {"value": true, "score": 0.9708960056304932}, "created": {"value": false, "score": 3.993511199951172e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9933119416236877}, "created": {"value": true, "score": 0.9855223298072815}, "shared": {"value": true, "score": 0.9374933838844299}}, "references": [{"label": "[2]", "normalizedForm": "[2]", "refKey": 2}, {"label": "[2]", "normalizedForm": "[2]", "refKey": 2}]}, {"type": "software", "software-type": "software", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "offsetStart": 78, "offsetEnd": 84}, "version": {"rawForm": "1.1", "normalizedForm": "1.1"}, "context": "More pragmatically however, these hash functions can be used in order to sign SPARQL query result sets, typically, they allow users to compare different query results for the same SPARQL endpoint.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00027954578399658203}, "created": {"value": false, "score": 5.728006362915039e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9933119416236877}, "created": {"value": true, "score": 0.9855223298072815}, "shared": {"value": true, "score": 0.9374933838844299}}, "references": [{"label": "[2]", "normalizedForm": "[2]", "refKey": 2}, {"label": "[2]", "normalizedForm": "[2]", "refKey": 2}]}, {"type": "software", "software-type": "software", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "offsetStart": 82, "offsetEnd": 88}, "version": {"rawForm": "1.1", "normalizedForm": "1.1"}, "context": "This article describes how to improve existing Semantic Web data pipelines with a SPARQL-based method that helps in identifying when query results have changed.", "mentionContextAttributes": {"used": {"value": false, "score": 3.451108932495117e-05}, "created": {"value": true, "score": 0.9526796340942383}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9933119416236877}, "created": {"value": true, "score": 0.9855223298072815}, "shared": {"value": true, "score": 0.9374933838844299}}, "references": [{"label": "[2]", "normalizedForm": "[2]", "refKey": 2}, {"label": "[2]", "normalizedForm": "[2]", "refKey": 2}]}, {"type": "software", "software-type": "software", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "offsetStart": 84, "offsetEnd": 90}, "version": {"rawForm": "1.1", "normalizedForm": "1.1"}, "context": "On advantage of such a method lays in the place where the computations happens: the SPARQL endpoint which could thereby be in charge of having otpimisation techniques (such as result caching or sub-view updating) to retrieve the result sets faster.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9933119416236877}, "created": {"value": false, "score": 3.236532211303711e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9933119416236877}, "created": {"value": true, "score": 0.9855223298072815}, "shared": {"value": true, "score": 0.9374933838844299}}, "references": [{"label": "[2]", "normalizedForm": "[2]", "refKey": 2}, {"label": "[2]", "normalizedForm": "[2]", "refKey": 2}]}, {"type": "software", "software-type": "software", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "offsetStart": 92, "offsetEnd": 98}, "version": {"rawForm": "1.1", "normalizedForm": "1.1"}, "context": "For example, in a more extreme case, they could be used over a complete RDF graph through a SPARQL endpoint: one can extract all the triples available with select * where {?s ?p ?o}, and then hash all of them, aggregated with a group concat function.", "mentionContextAttributes": {"used": {"value": true, "score": 0.7444573044776917}, "created": {"value": false, "score": 2.086162567138672e-06}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9933119416236877}, "created": {"value": true, "score": 0.9855223298072815}, "shared": {"value": true, "score": 0.9374933838844299}}, "references": [{"label": "[2]", "normalizedForm": "[2]", "refKey": 2}, {"label": "[2]", "normalizedForm": "[2]", "refKey": 2}]}, {"type": "software", "software-type": "software", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "offsetStart": 98, "offsetEnd": 104}, "version": {"rawForm": "1.1", "normalizedForm": "1.1"}, "context": "In order to help pipeline designers in practice, we serve our method at: https://dgraux.github.io/SPARQL-hash/", "mentionContextAttributes": {"used": {"value": false, "score": 0.0007121562957763672}, "created": {"value": false, "score": 0.299946129322052}, "shared": {"value": true, "score": 0.9374933838844299}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9933119416236877}, "created": {"value": true, "score": 0.9855223298072815}, "shared": {"value": true, "score": 0.9374933838844299}}, "references": [{"label": "[2]", "normalizedForm": "[2]", "refKey": 2}, {"label": "[2]", "normalizedForm": "[2]", "refKey": 2}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SERVICE", "normalizedForm": "SERVICE", "offsetStart": 114, "offsetEnd": 121}, "context": "The aforedescribed steps to generate the queries that obtain the hashes, splitting the query into pieces based on SERVICE, are easy to automate and allow users to know when to relaunch their pipelines. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0003743767738342285}, "created": {"value": false, "score": 0.0007489919662475586}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9930984377861023}, "created": {"value": true, "score": 0.5381202697753906}, "shared": {"value": false, "score": 5.364418029785156e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9098, "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9098, "offsetStart": 129, "offsetEnd": 135}, "version": {"rawForm": "1.1", "normalizedForm": "1.1", "offsetStart": 136, "offsetEnd": 143}, "context": "In this article, mainly dedicated to SPARQL practitioners and data pipeline designers, we present some possibilities provided by SPARQL 1.1 [2] to hash query result sets with a focus on the case of SPARQL federation of sources with the SERVICE keyword. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0002993345260620117}, "created": {"value": true, "score": 0.5381202101707458}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9933119416236877}, "created": {"value": true, "score": 0.9855223298072815}, "shared": {"value": true, "score": 0.9374933838844299}}, "references": [{"label": "[2]", "normalizedForm": "[2]", "refKey": 2, "offsetStart": 2989, "offsetEnd": 2992}, {"label": "[2]", "normalizedForm": "[2]", "refKey": 2, "offsetStart": 2989, "offsetEnd": 2992}]}, {"type": "software", "software-type": "software", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "offsetStart": 135, "offsetEnd": 141}, "version": {"rawForm": "1.1", "normalizedForm": "1.1"}, "context": "More generally, one needs to generate one dedicated hashing query per SERVICE call plus a general hashing query for the main/top-level SPARQL query.", "mentionContextAttributes": {"used": {"value": false, "score": 0.01306086778640747}, "created": {"value": false, "score": 3.820657730102539e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9933119416236877}, "created": {"value": true, "score": 0.9855223298072815}, "shared": {"value": true, "score": 0.9374933838844299}}, "references": [{"label": "[2]", "normalizedForm": "[2]", "refKey": 2}, {"label": "[2]", "normalizedForm": "[2]", "refKey": 2}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SERVICE", "normalizedForm": "SERVICE", "offsetStart": 140, "offsetEnd": 147}, "context": "Practically, the SPARQL standard provides the designers with a built-in function to call an external endpoint with specific conditions: the SERVICE keyword.", "mentionContextAttributes": {"used": {"value": false, "score": 5.3942203521728516e-05}, "created": {"value": false, "score": 0.00019431114196777344}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9930984377861023}, "created": {"value": true, "score": 0.5381202697753906}, "shared": {"value": false, "score": 5.364418029785156e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "offsetStart": 141, "offsetEnd": 147}, "version": {"rawForm": "1.1", "normalizedForm": "1.1"}, "context": "where our query converters can be used directly by developers to generate queries computing the hash of their result sets both for \"regular\" SPARQL queries and federated ones.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0004910826683044434}, "created": {"value": false, "score": 0.0006478428840637207}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9933119416236877}, "created": {"value": true, "score": 0.9855223298072815}, "shared": {"value": true, "score": 0.9374933838844299}}, "references": [{"label": "[2]", "normalizedForm": "[2]", "refKey": 2}, {"label": "[2]", "normalizedForm": "[2]", "refKey": 2}]}, {"type": "software", "software-type": "software", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9098, "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9098, "offsetStart": 173, "offsetEnd": 179}, "version": {"rawForm": "1.1", "normalizedForm": "1.1"}, "context": "As a consequence of this increasing complexity of the usecases, the pipelines themselves are getting more complicated, and often rely on several distinct data sources using SPARQL federation techniques, in order to compute their final results.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0014129877090454102}, "created": {"value": false, "score": 9.399652481079102e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9933119416236877}, "created": {"value": true, "score": 0.9855223298072815}, "shared": {"value": true, "score": 0.9374933838844299}}, "references": [{"label": "[2]", "normalizedForm": "[2]", "refKey": 2}, {"label": "[2]", "normalizedForm": "[2]", "refKey": 2}]}, {"type": "software", "software-type": "software", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "offsetStart": 175, "offsetEnd": 181}, "version": {"rawForm": "1.1", "normalizedForm": "1.1"}, "context": "Practically, our generator takes the SPARQL query Q and returns a new one Q hash which take care of computing all the necessary hashing sub-queries once run on the designers' SPARQL endpoint 7 .", "mentionContextAttributes": {"used": {"value": false, "score": 0.06062060594558716}, "created": {"value": false, "score": 0.00022721290588378906}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9933119416236877}, "created": {"value": true, "score": 0.9855223298072815}, "shared": {"value": true, "score": 0.9374933838844299}}, "references": [{"label": "[2]", "normalizedForm": "[2]", "refKey": 2}, {"label": "[2]", "normalizedForm": "[2]", "refKey": 2}]}, {"type": "software", "software-type": "software", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "offsetStart": 180, "offsetEnd": 186}, "version": {"rawForm": "1.1", "normalizedForm": "1.1"}, "context": "More pragmatically however, these hash functions can be used in order to sign SPARQL query result sets, typically, they allow users to compare different query results for the same SPARQL endpoint.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00027954578399658203}, "created": {"value": false, "score": 5.728006362915039e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9933119416236877}, "created": {"value": true, "score": 0.9855223298072815}, "shared": {"value": true, "score": 0.9374933838844299}}, "references": [{"label": "[2]", "normalizedForm": "[2]", "refKey": 2}, {"label": "[2]", "normalizedForm": "[2]", "refKey": 2}]}, {"type": "software", "software-type": "software", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "wikidataId": "Q54871", "wikipediaExternalRef": 2574343, "lang": "en", "confidence": 0.9146, "offsetStart": 198, "offsetEnd": 204}, "version": {"rawForm": "1.1", "normalizedForm": "1.1"}, "context": "In this article, mainly dedicated to SPARQL practitioners and data pipeline designers, we present some possibilities provided by SPARQL 1.1 [2] to hash query result sets with a focus on the case of SPARQL federation of sources with the SERVICE keyword.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0002993345260620117}, "created": {"value": true, "score": 0.5381202697753906}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9933119416236877}, "created": {"value": true, "score": 0.9855223298072815}, "shared": {"value": true, "score": 0.9374933838844299}}, "references": [{"label": "[2]", "normalizedForm": "[2]", "refKey": 2}, {"label": "[2]", "normalizedForm": "[2]", "refKey": 2}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SERVICE", "normalizedForm": "SERVICE", "offsetStart": 236, "offsetEnd": 243}, "context": "In this article, mainly dedicated to SPARQL practitioners and data pipeline designers, we present some possibilities provided by SPARQL 1.1 [2] to hash query result sets with a focus on the case of SPARQL federation of sources with the SERVICE keyword.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0002993345260620117}, "created": {"value": true, "score": 0.5381202697753906}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9930984377861023}, "created": {"value": true, "score": 0.5381202697753906}, "shared": {"value": false, "score": 5.364418029785156e-07}}}], "references": [{"refKey": 2, "tei": "<biblStruct xml:id=\"b2\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">SPARQL Query Processing with Conventional Relational Database Systems</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Stephen</forename><surname>Harris</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Nigel</forename><surname>Shadbolt</surname></persName>\n\t\t</author>\n\t\t<idno type=\"DOI\">10.1007/11581116_25</idno>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"m\">Web Information Systems Engineering \u2013 WISE 2005 Workshops</title>\n\t\t<imprint>\n\t\t\t<publisher>Springer Berlin Heidelberg</publisher>\n\t\t\t<date type=\"published\" when=\"2005\">2013</date>\n\t\t\t<biblScope unit=\"volume\">21</biblScope>\n\t\t\t<biblScope unit=\"page\" from=\"235\" to=\"244\" />\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}], "runtime": 106261, "id": "8e3e1a38f1369c560c9227c258ad4fc677143be2", "metadata": {"id": "8e3e1a38f1369c560c9227c258ad4fc677143be2"}, "original_file_path": "../../datalake/Samuel/SOFTware-Sync/data/xml_files/hal-03516459.grobid.tei.xml", "file_name": "hal-03516459.grobid.tei.xml"}