{"application": "software-mentions", "version": "0.8.0", "date": "2024-10-07T12:01+0000", "md5": "232DBF41365B571281E6C6FDFB2C4BBB", "mentions": [{"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 0, "offsetEnd": 3}, "context": "SQL's NULL features usage.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00017279386520385742}, "created": {"value": false, "score": 1.9788742065429688e-05}, "shared": {"value": false, "score": 7.152557373046875e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 0, "offsetEnd": 3}, "context": "SQL handling of nulls is not satisfactory.", "mentionContextAttributes": {"used": {"value": false, "score": 0.001907050609588623}, "created": {"value": false, "score": 2.3365020751953125e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 0, "offsetEnd": 3}, "context": "SQL's rules for handling NULL values are not fully satisfactory.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0008190274238586426}, "created": {"value": false, "score": 2.300739288330078e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GROUP BY", "normalizedForm": "GROUP BY", "offsetStart": 0, "offsetEnd": 8}, "context": "GROUP BY NULL should cause the user and/or data designer to vanish from existence immediately.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00023990869522094727}, "created": {"value": false, "score": 0.00013244152069091797}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.944040060043335}, "created": {"value": false, "score": 0.00013244152069091797}, "shared": {"value": false, "score": 4.76837158203125e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 2, "offsetEnd": 5}, "context": "\u2022 SQL's DDL constraints, such as NOT NULL, to prevent NULL from appearing in columns;", "mentionContextAttributes": {"used": {"value": false, "score": 0.1388360857963562}, "created": {"value": false, "score": 1.633167266845703e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 2, "offsetEnd": 5}, "context": "\u2022 SQL's three-valued logic filters out too many results, which increases users' disagreement with SQL on queries with negation.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00035583972930908203}, "created": {"value": false, "score": 4.470348358154297e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 12, "offsetEnd": 15}, "context": "Conclusion: SQL's way of handling NULLs for the positive generic queries satisfies a vast majority of the users.", "mentionContextAttributes": {"used": {"value": false, "score": 0.05793929100036621}, "created": {"value": false, "score": 7.867813110351562e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 13, "offsetEnd": 16}, "context": "In this case SQL uses the syntactic equality of nulls, i.e., two NULLs are equal, which of course differs from the treatment of NULLs elsewhere and thus causes additional problems.", "mentionContextAttributes": {"used": {"value": false, "score": 0.014180898666381836}, "created": {"value": false, "score": 2.09808349609375e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ISNULL", "normalizedForm": "ISNULL", "offsetStart": 15, "offsetEnd": 21}, "context": "We remark that ISNULL() and IFNULL(), as opposed to IS [NOT] NULL, are non-standard functions only available in some systems. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0002734065055847168}, "created": {"value": false, "score": 9.250640869140625e-05}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9031099081039429}, "created": {"value": false, "score": 9.250640869140625e-05}, "shared": {"value": false, "score": 4.76837158203125e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 19, "offsetEnd": 22}, "context": "The agreement with SQL's way of handling NULL slightly decreases when aggregates are applied to columns containing NULL (in which case the rule is not to output NULL but rather to ignore all nulls and then compute the aggregate).", "mentionContextAttributes": {"used": {"value": false, "score": 0.017380475997924805}, "created": {"value": false, "score": 2.9206275939941406e-05}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 22, "offsetEnd": 25}, "context": "(Q1) How commonly are SQL's NULL and related features used?", "mentionContextAttributes": {"used": {"value": true, "score": 0.7841870188713074}, "created": {"value": false, "score": 5.841255187988281e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 23, "offsetEnd": 26}, "context": "In order to understand SQL's handling of NULL we organize our findings in two parts.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9966076612472534}, "created": {"value": false, "score": 0.005030930042266846}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 23, "offsetEnd": 26}, "context": "Most disagreement with SQL occurs in the case of queries with grouping on a column that may contain NULL.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0041599273681640625}, "created": {"value": false, "score": 6.794929504394531e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 24, "offsetEnd": 27}, "context": "\u2022 Behavior is blamed on SQL's three-valued logic (3VL); indeed, it is commonly assumed that programmers tend to think in terms of the familiar two-valued logic, while 3VL underlies the implementation of SQL's null-related features.", "mentionContextAttributes": {"used": {"value": false, "score": 0.07426142692565918}, "created": {"value": false, "score": 0.0003095865249633789}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "IFNULL", "normalizedForm": "IFNULL", "offsetStart": 28, "offsetEnd": 34}, "context": "We remark that ISNULL() and IFNULL(), as opposed to IS [NOT] NULL, are non-standard functions only available in some systems. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0002734065055847168}, "created": {"value": false, "score": 9.250640869140625e-05}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9031099081039429}, "created": {"value": false, "score": 9.250640869140625e-05}, "shared": {"value": false, "score": 4.76837158203125e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ISNULL", "normalizedForm": "ISNULL", "offsetStart": 28, "offsetEnd": 34}, "context": "[NOT] DISTINCT, COALESCE(), ISNULL(), and IFNULL().", "mentionContextAttributes": {"used": {"value": true, "score": 0.9031099081039429}, "created": {"value": false, "score": 1.9669532775878906e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9031099081039429}, "created": {"value": false, "score": 9.250640869140625e-05}, "shared": {"value": false, "score": 4.76837158203125e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 30, "offsetEnd": 33}, "context": "(Q3) Are users satisfied with SQL's handling of nulls and, if not, why? (Q4) Are there readily available solutions to mitigate the problems?", "mentionContextAttributes": {"used": {"value": false, "score": 0.027985990047454834}, "created": {"value": false, "score": 3.314018249511719e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 30, "offsetEnd": 33}, "context": "This makes the task of fixing SQL even more daunting, if at all possible.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00037789344787597656}, "created": {"value": false, "score": 0.0014711618423461914}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 31, "offsetEnd": 34}, "context": "In Fig. 3e we see how commonly SQL's null-related features are used in queries.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0830378532409668}, "created": {"value": false, "score": 1.9311904907226562e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 33, "offsetEnd": 36}, "context": "\u2022 Back-end users, who manipulate SQL code often or regularly; they account for 65% of the respondents with the largest group, almost half, saying regularly; thus, we have reached our target audience.", "mentionContextAttributes": {"used": {"value": false, "score": 0.03634786605834961}, "created": {"value": false, "score": 0.00026232004165649414}, "shared": {"value": false, "score": 1.9073486328125e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 33, "offsetEnd": 36}, "context": "Even prior to the development of SQL, an ANSI committee working on the then new relational model suggested 14 different interpretations of nulls [1].", "mentionContextAttributes": {"used": {"value": false, "score": 0.0033306479454040527}, "created": {"value": false, "score": 0.0005764961242675781}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 34, "offsetEnd": 37}, "context": "\u2022 Front-end users, who manipulate SQL code only occasionally or infrequently; they make up 34% of the respondents (with 1% saying never).", "mentionContextAttributes": {"used": {"value": false, "score": 0.0006716251373291016}, "created": {"value": false, "score": 3.147125244140625e-05}, "shared": {"value": false, "score": 1.0728836059570312e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 34, "offsetEnd": 37}, "context": "Finally around 40% would like for SQL to evaluate disequality comparisons between NULL and a constant to false rather than unknown.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9855258464813232}, "created": {"value": false, "score": 3.6954879760742188e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 34, "offsetEnd": 37}, "context": "We see from Table 4a that the way SQL applies functions whose arguments could be NULL (using the rule that the value of any such function is NULL then) is fairly uncontroversial and accepted by most.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0048403143882751465}, "created": {"value": false, "score": 0.00011718273162841797}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 35, "offsetEnd": 38}, "context": "First, the level of agreement with SQL results is higher: the median in all the cases except grouping on NULL moves to the highest score 5. Second, the level of controversy increases too (indicated by the widened blue shaded area in the diagram: more different scored are picked by more participants).", "mentionContextAttributes": {"used": {"value": true, "score": 0.5838621854782104}, "created": {"value": false, "score": 7.033348083496094e-06}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 35, "offsetEnd": 38}, "context": "The users do not seem to like that SQL's 3VL filters out so many tuples.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0003966689109802246}, "created": {"value": false, "score": 2.8014183044433594e-05}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 35, "offsetEnd": 38}, "context": "Users are reasonably accustomed to SQL's way of handling NULLs in arithmetic operations, and slightly less so in aggregation, where the rule changes and NULLs are ignored.", "mentionContextAttributes": {"used": {"value": false, "score": 7.534027099609375e-05}, "created": {"value": false, "score": 7.3909759521484375e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 35, "offsetEnd": 38}, "context": "However it was shown recently that SQL's 3-valued logic is the most rational choice of a propositional logic that does not hamper query evaluation [21].", "mentionContextAttributes": {"used": {"value": false, "score": 0.0035422444343566895}, "created": {"value": false, "score": 8.237361907958984e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 38, "offsetEnd": 41}, "context": "As already mentioned, shortcomings of SQL's NULLs are anecdotally known in the community, with only few exceptions trying to systematize them in the research literature.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00015413761138916016}, "created": {"value": false, "score": 0.00021654367446899414}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 40, "offsetEnd": 43}, "context": "They use some NULLspecific operators of SQL (most commonly IS NULL tests), but rely more on schema constraints to rule out NULL values.", "mentionContextAttributes": {"used": {"value": false, "score": 0.03337860107421875}, "created": {"value": false, "score": 5.6862831115722656e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 41, "offsetEnd": 44}, "context": "\u2022 One often finds statements like \"those SQL features are [. . .", "mentionContextAttributes": {"used": {"value": false, "score": 0.00027877092361450195}, "created": {"value": false, "score": 5.793571472167969e-05}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 41, "offsetEnd": 44}, "context": "Around 20% of our respondents would want SQL to view two NULL values as equal (i.e., use syntactic equality for them), while around 10% would like them to be different.", "mentionContextAttributes": {"used": {"value": true, "score": 0.8878607749938965}, "created": {"value": false, "score": 6.29425048828125e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "IFNULL", "normalizedForm": "IFNULL", "offsetStart": 42, "offsetEnd": 48}, "context": "[NOT] DISTINCT, COALESCE(), ISNULL(), and IFNULL().", "mentionContextAttributes": {"used": {"value": true, "score": 0.9031099081039429}, "created": {"value": false, "score": 1.9669532775878906e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9031099081039429}, "created": {"value": false, "score": 9.250640869140625e-05}, "shared": {"value": false, "score": 4.76837158203125e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 43, "offsetEnd": 46}, "context": "We asked how often participants manipulate SQL code, to assess their familiarity with the language itself.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999749660491943}, "created": {"value": false, "score": 0.0037910938262939453}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 45, "offsetEnd": 48}, "context": "Anecdotally, one hears that the way in which SQL, the standard language for relational databases, handles nulls creates a myriad of problems in everyday applications of database systems.", "mentionContextAttributes": {"used": {"value": false, "score": 5.698204040527344e-05}, "created": {"value": false, "score": 0.0011753439903259277}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 46, "offsetEnd": 49}, "context": "If we consider the whole positive fragment of SQL generic queries, and therefore also take into account the answers obtained with filtering queries on equality conditions (Table 2), this percentage drops to 68%.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9942038655281067}, "created": {"value": false, "score": 1.9550323486328125e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 49, "offsetEnd": 52}, "context": "I understand why it is the way it is, but I wish SQL had defined NOT IN as a syntactic transform to NOT EXISTS.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0030460357666015625}, "created": {"value": false, "score": 0.00023597478866577148}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 50, "offsetEnd": 53}, "context": "This manifests itself most commonly in the use of SQL's DDL, by frequently declaring some columns as NOT NULL.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0017792582511901855}, "created": {"value": false, "score": 4.76837158203125e-05}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 50, "offsetEnd": 53}, "context": "When queries have negation, the disagreement with SQL query results increases significantly.", "mentionContextAttributes": {"used": {"value": false, "score": 0.01766526699066162}, "created": {"value": false, "score": 1.621246337890625e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 53, "offsetEnd": 56}, "context": "It is folklore in the database theory community that SQL nulls can be modeled by non-repeating marked nulls (i.e., with distinct identifiers).", "mentionContextAttributes": {"used": {"value": false, "score": 0.00020641088485717773}, "created": {"value": false, "score": 0.0001266002655029297}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 54, "offsetEnd": 57}, "context": "For value-inventing queries, participants agreed with SQL if the answers produced by SQL were their most satisfying options.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9998894929885864}, "created": {"value": false, "score": 1.3470649719238281e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GROUP BY", "normalizedForm": "GROUP BY", "offsetStart": 54, "offsetEnd": 62}, "context": "\u2022 When NULL is considered as a syntactic value, as in GROUP BY or set operations, dissatisfaction increases.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0003521442413330078}, "created": {"value": false, "score": 8.821487426757812e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.944040060043335}, "created": {"value": false, "score": 0.00013244152069091797}, "shared": {"value": false, "score": 4.76837158203125e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 55, "offsetEnd": 58}, "context": "The severity of these problems varies depending on the SQL features used, and they cannot be reduced to a single issue.", "mentionContextAttributes": {"used": {"value": false, "score": 0.006065785884857178}, "created": {"value": false, "score": 5.710124969482422e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 61, "offsetEnd": 64}, "context": "Among those are [11], which looks into issues experienced by SQL programmers in general, not with nulls directly, and [53], which studies how aggressive optimization techniques result in incorrect query evaluation in the presence of nulls.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00010120868682861328}, "created": {"value": false, "score": 2.3365020751953125e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 63, "offsetEnd": 66}, "context": "III) We need to address research challenges brought to life by SQL design decisions, such as the use of 3VL and mixing different semantics of NULL (e.g., syntactic equality of nulls in grouping or set operations, and 3VL interpretation in conditions).", "mentionContextAttributes": {"used": {"value": false, "score": 0.00018781423568725586}, "created": {"value": false, "score": 0.026545047760009766}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 64, "offsetEnd": 67}, "context": "For generic queries, participants were considered to agree with SQL if they built precisely the answer SQL produces.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9998571872711182}, "created": {"value": false, "score": 8.940696716308594e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 66, "offsetEnd": 69}, "context": "To the best of our knowledge, however, the actual shortcomings of SQL in this respect, as perceived by database practitioners, have not been systematically documented, and it is not known if existing research results can readily be used to address the practical challenges.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0003616809844970703}, "created": {"value": false, "score": 0.005293428897857666}, "shared": {"value": false, "score": 1.5497207641601562e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 66, "offsetEnd": 69}, "context": "The next row shows that more than 75% were satisfied with the way SQL evaluated NULL+NULL.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999538660049438}, "created": {"value": false, "score": 1.049041748046875e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 66, "offsetEnd": 69}, "context": "We looked at how they correlate with participants' agreement with SQL answers for each of the queries, which is simply labeled as true or false.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": false, "score": 4.2557716369628906e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 74, "offsetEnd": 77}, "context": "And third, the percentage of users who prefer an answer that differs from SQL's is now much higher and peaks (at almost two thirds) for the grouping on NULL.", "mentionContextAttributes": {"used": {"value": false, "score": 0.002719402313232422}, "created": {"value": false, "score": 2.491474151611328e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 75, "offsetEnd": 78}, "context": "First, null values are ubiquitous and relevant in real-life scenarios, but SQL's features designed to deal with them cause multiple problems.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00011396408081054688}, "created": {"value": false, "score": 0.0016712546348571777}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 76, "offsetEnd": 79}, "context": "There is no consensus among the respondents as to what a better behavior of SQL could be.", "mentionContextAttributes": {"used": {"value": true, "score": 0.980015218257904}, "created": {"value": false, "score": 0.00029343366622924805}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 77, "offsetEnd": 80}, "context": "We would like to see whether survey participants were satisfied with the way SQL evaluated comparisons between NULL and \u2022 a constant equal to: 0 for numerical types, and empty string for character types;", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999786615371704}, "created": {"value": false, "score": 8.463859558105469e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 77, "offsetEnd": 80}, "context": "The study provides clues and indications about users' (dis)satisfaction with SQL features:", "mentionContextAttributes": {"used": {"value": false, "score": 0.16204434633255005}, "created": {"value": false, "score": 1.0132789611816406e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 84, "offsetEnd": 87}, "context": "Our goal is to collect and analyze the shortcomings of nulls and their treatment by SQL, and to re-evaluate existing research in this light.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00030553340911865234}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 84, "offsetEnd": 87}, "context": "The results of our survey revealed both agreement and significant disagreement with SQL's handling of nulls, as well as much variety when it comes to the interpretation of NULL.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999762773513794}, "created": {"value": false, "score": 0.0001361370086669922}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 85, "offsetEnd": 88}, "context": "For value-inventing queries, participants agreed with SQL if the answers produced by SQL were their most satisfying options.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9998894929885864}, "created": {"value": false, "score": 1.3470649719238281e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 89, "offsetEnd": 92}, "context": "This shows that database practitioners have a strong interest in the problem of nulls in SQL.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0015401840209960938}, "created": {"value": false, "score": 0.00020080804824829102}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 89, "offsetEnd": 92}, "context": "For such queries we want to see how satisfied the participants are with the results that SQL produces, and whether they have alternatives.", "mentionContextAttributes": {"used": {"value": false, "score": 0.01214599609375}, "created": {"value": false, "score": 0.004751741886138916}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 89, "offsetEnd": 92}, "context": "In all of these questions we ask the participants to tell us how satisfied they are with SQL answers on the 0-to-5 scale, with 0 being the least satisfied and 5 the most satisfied.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9652485251426697}, "created": {"value": false, "score": 5.4836273193359375e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 90, "offsetEnd": 93}, "context": "In these questions (Fig. 1a) participants are presented with a relational database and an SQL query, and then asked to construct, by adding default or custom rows to the output table, the answer they would like to obtain.", "mentionContextAttributes": {"used": {"value": true, "score": 0.8574984669685364}, "created": {"value": false, "score": 9.226799011230469e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 94, "offsetEnd": 97}, "context": "The \"Alternative\" column gives the percentage of respondents who scored the table produced by SQL lower than (at least one of) the others.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9997730851173401}, "created": {"value": false, "score": 1.2159347534179688e-05}, "shared": {"value": false, "score": 9.5367431640625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 95, "offsetEnd": 98}, "context": "At the same time, the percentage of participants who say that the result should be the same as SQL for every query using those features is 84%.", "mentionContextAttributes": {"used": {"value": false, "score": 0.220628023147583}, "created": {"value": false, "score": 2.9802322387695312e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 98, "offsetEnd": 101}, "context": "While for simple queries (positive fragment of relational algebra) most of our respondents accept SQL's behavior, for more complex queries, involving either aggregation or negation, many are not satisfied with SQL answers.", "mentionContextAttributes": {"used": {"value": false, "score": 0.023971378803253174}, "created": {"value": false, "score": 1.1563301086425781e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 98, "offsetEnd": 101}, "context": "\u2022 SQL's three-valued logic filters out too many results, which increases users' disagreement with SQL on queries with negation.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00035583972930908203}, "created": {"value": false, "score": 4.470348358154297e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 102, "offsetEnd": 105}, "context": "In these questions (Fig. 1b) participants are presented with a relational database, a value-inventing SQL query (i.e., producing a value not already present in the database, such as an aggregate value over a column) and several tables.", "mentionContextAttributes": {"used": {"value": false, "score": 0.08338886499404907}, "created": {"value": false, "score": 8.344650268554688e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 103, "offsetEnd": 106}, "context": "For each query we report the average and the quartile values of the satisfaction score obtained by the SQL answer, and we also compute the proportion of participants who would be more satisfied with a different answer.", "mentionContextAttributes": {"used": {"value": true, "score": 0.986672043800354}, "created": {"value": false, "score": 1.3709068298339844e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 103, "offsetEnd": 106}, "context": "There is a clear mismatch between the model of nulls used in theoretical database research and that of SQL; even if we interpret SQL nulls solely under the EU semantics, marked nulls are more expressive, because they allow co-reference of nulls, which is not possible in SQL.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0007796287536621094}, "created": {"value": false, "score": 0.00013208389282226562}, "shared": {"value": false, "score": 1.6689300537109375e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 103, "offsetEnd": 106}, "context": "For generic queries, participants were considered to agree with SQL if they built precisely the answer SQL produces.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9998571872711182}, "created": {"value": false, "score": 8.940696716308594e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 104, "offsetEnd": 107}, "context": "One direction of work is to capture the semantics of different nulls by extending the 3-valued logic of SQL with more values and even paraconsistent logics [7,20,32,59,63].", "mentionContextAttributes": {"used": {"value": false, "score": 6.473064422607422e-05}, "created": {"value": true, "score": 0.9500959515571594}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 116, "offsetEnd": 119}, "context": "Therefore, we partition the participants' answers into four groups, according to whether the answer (1) matches the SQL answer, (2) is a subset of the SQL answer, (3) is a superset of the SQL answer, or (4) is not comparable with the SQL answer.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9408899545669556}, "created": {"value": false, "score": 3.600120544433594e-05}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 116, "offsetEnd": 119}, "context": "They proposed user-defined nulls, a model moving in the direction of marked nulls, with user-defined semantics, and SQL's NULL as the fallback position.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0003713369369506836}, "created": {"value": true, "score": 0.9883606433868408}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GROUP BY", "normalizedForm": "GROUP BY", "offsetStart": 117, "offsetEnd": 125}, "context": "What they do not like is the use of syntactic equality (saying that two NULLs are equal) for generating groups using GROUP BY.", "mentionContextAttributes": {"used": {"value": false, "score": 0.000428617000579834}, "created": {"value": false, "score": 1.4424324035644531e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.944040060043335}, "created": {"value": false, "score": 0.00013244152069091797}, "shared": {"value": false, "score": 4.76837158203125e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PostgreSQL", "normalizedForm": "PostgreSQL", "offsetStart": 124, "offsetEnd": 134}, "context": "As shown in Fig. 2c and Fig. 2d, they mostly deal with relational data, and use a variety of systems, with a preference for PostgreSQL, MySQL, and Microsoft SQL Server (followed by Oracle Database, SQLite, and others).", "mentionContextAttributes": {"used": {"value": false, "score": 0.08498519659042358}, "created": {"value": false, "score": 0.00010073184967041016}, "shared": {"value": false, "score": 2.384185791015625e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.08498519659042358}, "created": {"value": false, "score": 0.00010073184967041016}, "shared": {"value": false, "score": 2.384185791015625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 129, "offsetEnd": 132}, "context": "There is a clear mismatch between the model of nulls used in theoretical database research and that of SQL; even if we interpret SQL nulls solely under the EU semantics, marked nulls are more expressive, because they allow co-reference of nulls, which is not possible in SQL.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0007796287536621094}, "created": {"value": false, "score": 0.00013208389282226562}, "shared": {"value": false, "score": 1.6689300537109375e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 131, "offsetEnd": 134}, "context": "Agreement and Controversy This is our informal interpretation of the results; agreement indicates to what extent people agree with SQL answers and controversy indicates how much of the difference of opinion there is; the possible scores are high, medium, and low.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9070771932601929}, "created": {"value": false, "score": 0.0003077983856201172}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MySQL", "normalizedForm": "MySQL", "offsetStart": 136, "offsetEnd": 141}, "context": "As shown in Fig. 2c and Fig. 2d, they mostly deal with relational data, and use a variety of systems, with a preference for PostgreSQL, MySQL, and Microsoft SQL Server (followed by Oracle Database, SQLite, and others).", "mentionContextAttributes": {"used": {"value": false, "score": 0.08498519659042358}, "created": {"value": false, "score": 0.00010073184967041016}, "shared": {"value": false, "score": 2.384185791015625e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.08498519659042358}, "created": {"value": false, "score": 0.00010073184967041016}, "shared": {"value": false, "score": 2.384185791015625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 140, "offsetEnd": 143}, "context": "For each individual query testing a particular feature, more than 90% of our participants say that the answer should be the same as the one SQL returns.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9986781477928162}, "created": {"value": false, "score": 2.574920654296875e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 140, "offsetEnd": 143}, "context": "It revealed that, somewhat surprisingly, there is no correlation between the users' demographics and their responses to the questions about SQL.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9994605183601379}, "created": {"value": false, "score": 0.0003840923309326172}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 145, "offsetEnd": 148}, "context": "However, due to the nature of the task, even if the prevalence of each row can be of interest, we argue that more emphasis should be put towards SQL's  default answers.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0006136894226074219}, "created": {"value": false, "score": 0.004325568675994873}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 145, "offsetEnd": 148}, "context": "Thus, we ask about users' expectations with respect to queries that evaluate expressions such as 30+NULL or NULL+NULL (whose values, returned by SQL, is NULL), or the same expression in the SUM aggregate (which, perhaps confusingly for some users, would return 30 for SUM(30,NULL) and NULL for SUM(NULL,NULL)).", "mentionContextAttributes": {"used": {"value": true, "score": 0.9815100431442261}, "created": {"value": false, "score": 3.814697265625e-06}, "shared": {"value": false, "score": 3.2186508178710938e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 150, "offsetEnd": 153}, "context": "When it comes to queries, we aim to learn whether the answer the participants would like to see returned in the presence of NULL \u2022 coincides with the SQL answer, or \u2022 contains the SQL answer, or \u2022 is contained in the SQL answer, or \u2022 is incomparable with the SQL answer.", "mentionContextAttributes": {"used": {"value": false, "score": 0.07623767852783203}, "created": {"value": false, "score": 0.00013363361358642578}, "shared": {"value": false, "score": 5.960464477539062e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 151, "offsetEnd": 154}, "context": "Therefore, we partition the participants' answers into four groups, according to whether the answer (1) matches the SQL answer, (2) is a subset of the SQL answer, (3) is a superset of the SQL answer, or (4) is not comparable with the SQL answer.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9408899545669556}, "created": {"value": false, "score": 3.600120544433594e-05}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 154, "offsetEnd": 157}, "context": "While [1] did not provide any semantics of operations on nulls, nor a logic for their handling, this was suggested in two later documents [2,16] from the SQL standardization process; these proposals date back to the late 1980s, but no action with respect to the Standard was taken.", "mentionContextAttributes": {"used": {"value": false, "score": 0.06669032573699951}, "created": {"value": false, "score": 0.00010406970977783203}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL Server", "normalizedForm": "SQL Server", "offsetStart": 157, "offsetEnd": 167}, "publisher": {"rawForm": "Microsoft", "normalizedForm": "Microsoft", "offsetStart": 147, "offsetEnd": 156}, "context": "As shown in Fig. 2c and Fig. 2d, they mostly deal with relational data, and use a variety of systems, with a preference for PostgreSQL, MySQL, and Microsoft SQL Server (followed by Oracle Database, SQLite, and others).", "mentionContextAttributes": {"used": {"value": false, "score": 0.08498519659042358}, "created": {"value": false, "score": 0.00010073184967041016}, "shared": {"value": false, "score": 2.384185791015625e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.08498519659042358}, "created": {"value": false, "score": 0.00010073184967041016}, "shared": {"value": false, "score": 2.384185791015625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 159, "offsetEnd": 162}, "context": "We now move to the next question: whether there exists any correlation between the demographics for our respondents, and their preferences for the behavior of SQL queries.", "mentionContextAttributes": {"used": {"value": false, "score": 0.04481148719787598}, "created": {"value": true, "score": 0.9692885875701904}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 161, "offsetEnd": 164}, "context": "With this knowledge, we asked ourselves whether there could be an association between the participants' demographic data (industry vs academia, familiarity with SQL, etc.), their view of the semantics of NULL and their preferred query behavior.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999788999557495}, "created": {"value": false, "score": 0.03377121686935425}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 163, "offsetEnd": 166}, "context": "Therefore, we have strong evidence that the demographic data is not sufficient to predict, with a reasonable degree of certainty, the user's preferred behavior of SQL queries in the presence of NULL.", "mentionContextAttributes": {"used": {"value": true, "score": 0.6020183563232422}, "created": {"value": false, "score": 0.0017083287239074707}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 176, "offsetEnd": 179}, "context": "For example, looking at the first row of Table 4, we see that 75% of respondents gave answers 3, 4, or 5, indicating that they were rather or very satisfied with the fact that SQL evaluated 30+NULL as NULL. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.99993896484375}, "created": {"value": false, "score": 1.2159347534179688e-05}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GROUP BY", "normalizedForm": "GROUP BY", "offsetStart": 177, "offsetEnd": 185}, "context": "We also ask about queries in which the summation aggregate is applied to values obtained as the result of arithmetic expressions (SUM(NULL+30,NULL+0)), and look at queries with GROUP BY where grouping is done on an attribute whose value is NULL.", "mentionContextAttributes": {"used": {"value": true, "score": 0.944040060043335}, "created": {"value": false, "score": 2.0265579223632812e-05}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.944040060043335}, "created": {"value": false, "score": 0.00013244152069091797}, "shared": {"value": false, "score": 4.76837158203125e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 180, "offsetEnd": 183}, "context": "When it comes to queries, we aim to learn whether the answer the participants would like to see returned in the presence of NULL \u2022 coincides with the SQL answer, or \u2022 contains the SQL answer, or \u2022 is contained in the SQL answer, or \u2022 is incomparable with the SQL answer.", "mentionContextAttributes": {"used": {"value": false, "score": 0.07623767852783203}, "created": {"value": false, "score": 0.00013363361358642578}, "shared": {"value": false, "score": 5.960464477539062e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 184, "offsetEnd": 187}, "context": "The results for EXCEPT ALL seem to be more about handling duplicates than handling nulls: analyzing them in more detail we see that most outputs preferred by survey participants match SQL answers except for duplicates.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999374151229858}, "created": {"value": false, "score": 7.510185241699219e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 188, "offsetEnd": 191}, "context": "Therefore, we partition the participants' answers into four groups, according to whether the answer (1) matches the SQL answer, (2) is a subset of the SQL answer, (3) is a superset of the SQL answer, or (4) is not comparable with the SQL answer.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9408899545669556}, "created": {"value": false, "score": 3.600120544433594e-05}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 195, "offsetEnd": 198}, "context": "We use the results of four build-the-answer questions (Fig. 1a) to study both equality and disequality comparisons, and are interested in the percentage of participants who disagree with the way SQL handles such comparisons; the higher the value is, the more problematic such a comparison.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9988937973976135}, "created": {"value": false, "score": 7.474422454833984e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQLite", "normalizedForm": "SQLite", "offsetStart": 198, "offsetEnd": 204}, "context": "As shown in Fig. 2c and Fig. 2d, they mostly deal with relational data, and use a variety of systems, with a preference for PostgreSQL, MySQL, and Microsoft SQL Server (followed by Oracle Database, SQLite, and others).", "mentionContextAttributes": {"used": {"value": false, "score": 0.08498519659042358}, "created": {"value": false, "score": 0.00010073184967041016}, "shared": {"value": false, "score": 2.384185791015625e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.08498519659042358}, "created": {"value": false, "score": 0.00010073184967041016}, "shared": {"value": false, "score": 2.384185791015625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 203, "offsetEnd": 206}, "context": "\u2022 Behavior is blamed on SQL's three-valued logic (3VL); indeed, it is commonly assumed that programmers tend to think in terms of the familiar two-valued logic, while 3VL underlies the implementation of SQL's null-related features.", "mentionContextAttributes": {"used": {"value": false, "score": 0.07426142692565918}, "created": {"value": false, "score": 0.0003095865249633789}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 203, "offsetEnd": 206}, "context": "This led to a well-defined notion of query answering and approximation for the EU semantics, but not for the NI semantics, where the discussion stopped at the level of investigating a number of concrete SQL queries.", "mentionContextAttributes": {"used": {"value": false, "score": 0.015503406524658203}, "created": {"value": false, "score": 0.019772768020629883}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 210, "offsetEnd": 213}, "context": "While for simple queries (positive fragment of relational algebra) most of our respondents accept SQL's behavior, for more complex queries, involving either aggregation or negation, many are not satisfied with SQL answers.", "mentionContextAttributes": {"used": {"value": false, "score": 0.023971259593963623}, "created": {"value": false, "score": 1.1563301086425781e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 215, "offsetEnd": 218}, "context": "\"Though some of these scenarios give the opportunity to address common frustrations, they have also illustrated how difficult it would be to change the way NULLs are handled without significantly changing how other SQL syntax works.", "mentionContextAttributes": {"used": {"value": false, "score": 0.001523435115814209}, "created": {"value": false, "score": 0.008257448673248291}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 217, "offsetEnd": 220}, "context": "When it comes to queries, we aim to learn whether the answer the participants would like to see returned in the presence of NULL \u2022 coincides with the SQL answer, or \u2022 contains the SQL answer, or \u2022 is contained in the SQL answer, or \u2022 is incomparable with the SQL answer.", "mentionContextAttributes": {"used": {"value": false, "score": 0.07623809576034546}, "created": {"value": false, "score": 0.00013363361358642578}, "shared": {"value": false, "score": 5.960464477539062e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 234, "offsetEnd": 237}, "context": "Therefore, we partition the participants' answers into four groups, according to whether the answer (1) matches the SQL answer, (2) is a subset of the SQL answer, (3) is a superset of the SQL answer, or (4) is not comparable with the SQL answer.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9408903121948242}, "created": {"value": false, "score": 3.600120544433594e-05}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 259, "offsetEnd": 262}, "context": "When it comes to queries, we aim to learn whether the answer the participants would like to see returned in the presence of NULL \u2022 coincides with the SQL answer, or \u2022 contains the SQL answer, or \u2022 is contained in the SQL answer, or \u2022 is incomparable with the SQL answer.", "mentionContextAttributes": {"used": {"value": false, "score": 0.07623809576034546}, "created": {"value": false, "score": 0.00013363361358642578}, "shared": {"value": false, "score": 5.960464477539062e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 271, "offsetEnd": 274}, "context": "There is a clear mismatch between the model of nulls used in theoretical database research and that of SQL; even if we interpret SQL nulls solely under the EU semantics, marked nulls are more expressive, because they allow co-reference of nulls, which is not possible in SQL.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0007796287536621094}, "created": {"value": false, "score": 0.00013208389282226562}, "shared": {"value": false, "score": 1.6689300537109375e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999942779541016}, "created": {"value": true, "score": 0.9983867406845093}, "shared": {"value": false, "score": 3.2186508178710938e-06}}}], "references": [], "runtime": 18105, "id": "ec7d123ea8d3b75867b6227a86dd0214f3838564", "metadata": {"id": "ec7d123ea8d3b75867b6227a86dd0214f3838564"}, "original_file_path": "../../datalake/Samuel/SOFTware-Sync/downloads/xml/hal-03934346.grobid.tei.xml", "file_name": "hal-03934346.grobid.tei.xml"}