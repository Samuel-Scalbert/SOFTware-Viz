{"application": "software-mentions", "version": "0.8.0", "date": "2024-10-07T12:05+0000", "md5": "F8838991FF51CD8072DDAB760B3CCA70", "mentions": [{"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 0, "offsetEnd": 7}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "fimpera is built in a modular way. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0005473494529724121}, "created": {"value": true, "score": 0.6001039147377014}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 0, "offsetEnd": 7}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "fimpera's objectives are to reduce F P R cAM Q and to improve precision on true positive calls, using a method based on splitting k-mers into smaller words called s-mers.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00011289119720458984}, "created": {"value": false, "score": 0.007796168327331543}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 0, "offsetEnd": 7}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "fimpera's query is a two-step process:", "mentionContextAttributes": {"used": {"value": false, "score": 0.0045986175537109375}, "created": {"value": false, "score": 5.4836273193359375e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 4, "offsetEnd": 11}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "The fimpera approach may generate a novel kind of false-positives.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00010466575622558594}, "created": {"value": false, "score": 0.051119327545166016}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 5, "offsetEnd": 12}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "With fimpera, wrongly reporting d as present requires that every s-mer of that k-mer are wrongly found as present in the counting AMQ.", "mentionContextAttributes": {"used": {"value": true, "score": 0.605638325214386}, "created": {"value": false, "score": 1.3947486877441406e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 6, "offsetEnd": 13}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "Thus, fimpera only needs to query one s-mer every z + 1 position as long as the queried s-mers are absent in the counting AMQ, effectively saving time. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0010686516761779785}, "created": {"value": false, "score": 1.0371208190917969e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 7, "offsetEnd": 14}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "In the fimpera algorithm, if a s-mer is not found during the query, an optimisation consists of searching for the abundance of the s-mer z + 1 positions further away in the query.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0002880692481994629}, "created": {"value": false, "score": 4.4465065002441406e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 9, "offsetEnd": 16}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "However, fimpera is a generic approach that may be applied on any counting AMQ.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00016307830810546875}, "created": {"value": false, "score": 0.0005273222923278809}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 10, "offsetEnd": 17}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "In short, fimpera splits every k-mer into s-mers (with k \u2265 s > 0) and then associates the abundance of a k-mer to its constituent s-mers in a counting AMQ.", "mentionContextAttributes": {"used": {"value": false, "score": 0.001177370548248291}, "created": {"value": false, "score": 5.3763389587402344e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 10, "offsetEnd": 17}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "Hence the fimpera approach enabled to yield about 45 times fewer false-positive calls, with no drawback and even saving query time (see Section 3.8).", "mentionContextAttributes": {"used": {"value": true, "score": 0.9827389717102051}, "created": {"value": false, "score": 3.457069396972656e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 10, "offsetEnd": 17}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "Among the fimpera calls estimating an incorrect abundance among the true positives, 83 % are due to the so-called \"reconstruction overestimation\".", "mentionContextAttributes": {"used": {"value": true, "score": 0.9506117701530457}, "created": {"value": false, "score": 8.106231689453125e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 12, "offsetEnd": 19}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "By default, fimpera prints each input sequence along with the abundance of every of its consecutive k-mer. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.012244880199432373}, "created": {"value": false, "score": 2.9802322387695312e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 12, "offsetEnd": 19}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "In practice fimpera includes an option to use any abundance function provided by the user (identity, \u230alog 2 \u230b, \u230alog 10 \u230b, range of values, etc. . . ) to compute ranges of abundance per encoded value.", "mentionContextAttributes": {"used": {"value": false, "score": 4.661083221435547e-05}, "created": {"value": false, "score": 4.470348358154297e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 12, "offsetEnd": 19}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "Algorithm 1 fimpera's query 1: procedure query(q \u2208 \u03a3 * ; cAMQ indexing s-mers; k and z in N + (|q| \u2265 k, z \u2264 k)) 2:", "mentionContextAttributes": {"used": {"value": true, "score": 0.9990735054016113}, "created": {"value": false, "score": 5.0067901611328125e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 12, "offsetEnd": 19}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "Algorithm 3 fimpera's query 1: procedure query(q \u2208 \u03a3 * ; cAMQ indexing s-mers; k and z in N + (|q| \u2265 k, z \u2264 k)) 2: s \u2190 k -z 3:", "mentionContextAttributes": {"used": {"value": true, "score": 0.9959821701049805}, "created": {"value": false, "score": 1.6689300537109375e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 13, "offsetEnd": 20}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "We presented fimpera, a novel computational method to reduce the false positive rate and increase the precision of any counting Approximate Membership Query data structure with no modification of the original data structure.", "mentionContextAttributes": {"used": {"value": false, "score": 7.867813110351562e-05}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 14, "offsetEnd": 21}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "Consequently, fimpera's overestimations are not uniformly distributed random events.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0036815404891967773}, "created": {"value": false, "score": 6.318092346191406e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 14, "offsetEnd": 21}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "Querying with fimpera fimpera's query consists in querying all consecutive, overlapping k-mers from a sequence of size greater than k through their constituent s-mers.", "mentionContextAttributes": {"used": {"value": false, "score": 0.002462029457092285}, "created": {"value": false, "score": 4.601478576660156e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 14, "offsetEnd": 21}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "When applying fimpera, the false positive rate drops to 0.56%.", "mentionContextAttributes": {"used": {"value": false, "score": 0.11230170726776123}, "created": {"value": false, "score": 1.895427703857422e-05}, "shared": {"value": false, "score": 5.960464477539062e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 16, "offsetEnd": 23}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "Among all these fimpera false positives, 4.8 % are due to the so-called \"construction false positives\" (see Section 2.2), thus representing 0.0027% of the total k-mer calls.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9764893651008606}, "created": {"value": false, "score": 5.257129669189453e-05}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 16, "offsetEnd": 23}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "Moreover, using fimpera, abundance errors were slightly less frequent on true positive calls, and finally, those abundance errors were on average 1.07 apart from the ground truth with fimpera while they are on average 1.33 apart from the ground truth with the original cBF.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999767541885376}, "created": {"value": false, "score": 4.0531158447265625e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 21, "offsetEnd": 28}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "For each sequence S, fimpera extract s-mers, which are then queried against the cAMQ, and the abundance of any k-mer of S is computed as the minimum of s abundance of its s-mers. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9997692704200745}, "created": {"value": false, "score": 6.663799285888672e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 21, "offsetEnd": 28}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera", "offsetStart": 45, "offsetEnd": 81}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "An implementation of fimpera is available at https://github.com/lrobidou/ fimpera. ", "mentionContextAttributes": {"used": {"value": false, "score": 4.1961669921875e-05}, "created": {"value": false, "score": 0.05336648225784302}, "shared": {"value": true, "score": 0.9929779171943665}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 22, "offsetEnd": 29}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "Querying with fimpera fimpera's query consists in querying all consecutive, overlapping k-mers from a sequence of size greater than k through their constituent s-mers.", "mentionContextAttributes": {"used": {"value": false, "score": 0.002462029457092285}, "created": {"value": false, "score": 4.601478576660156e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 25, "offsetEnd": 32}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "Querying such k-mer with fimpera returns a non-zero abundance, so generating a false-positive, that we call a \"construction false-positive\".", "mentionContextAttributes": {"used": {"value": false, "score": 0.001335740089416504}, "created": {"value": false, "score": 0.0004094243049621582}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 26, "offsetEnd": 33}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "As stated in Section 2.2, fimpera's indexation is a two-step process:", "mentionContextAttributes": {"used": {"value": false, "score": 0.0008855462074279785}, "created": {"value": false, "score": 2.2649765014648438e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 27, "offsetEnd": 34}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "As seen Fig. 3-right, with fimpera, almost all (excepted a few outliers) overestimations are only one value apart from the correct range (the average difference with the correct abundance range is 1.07).", "mentionContextAttributes": {"used": {"value": false, "score": 0.10943889617919922}, "created": {"value": false, "score": 0.0001671314239501953}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 28, "offsetEnd": 35}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "Query overview The query of fimpera consists of a set of sequences. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0071710944175720215}, "created": {"value": false, "score": 2.5272369384765625e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 28, "offsetEnd": 35}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "The problem, independent of fimpera, is as follows: given a vector of values (integers of floats) v and an integer size window, give an array r such that \u2200i \u2208 [0, |v| -size window], r", "mentionContextAttributes": {"used": {"value": false, "score": 0.25293976068496704}, "created": {"value": false, "score": 4.506111145019531e-05}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 29, "offsetEnd": 36}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "A non-optimised algorithm of fimpera's query is shown in Algorithm 1.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0006636977195739746}, "created": {"value": false, "score": 0.0011293292045593262}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 30, "offsetEnd": 37}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "To measure the quality of the fimpera results and the cBF results, we propose three metrics:", "mentionContextAttributes": {"used": {"value": true, "score": 0.7730461955070496}, "created": {"value": true, "score": 0.6772608757019043}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 30, "offsetEnd": 37}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "As mentioned Section 2.5, the fimpera approach does not increase the query running.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0002747178077697754}, "created": {"value": false, "score": 4.5299530029296875e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 31, "offsetEnd": 38}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "Overview of overestimations of fimpera's query To overestimate the abundance of a queried k-mer, overestimations are required to happen on the abundance of every s-mer of that k-mer.", "mentionContextAttributes": {"used": {"value": true, "score": 0.7722145915031433}, "created": {"value": false, "score": 7.796287536621094e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 33, "offsetEnd": 40}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "Its usefulness is not limited to fimpera.", "mentionContextAttributes": {"used": {"value": false, "score": 9.584426879882812e-05}, "created": {"value": false, "score": 0.0002415776252746582}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 34, "offsetEnd": 41}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "The method we introduce is called fimpera.", "mentionContextAttributes": {"used": {"value": false, "score": 6.091594696044922e-05}, "created": {"value": true, "score": 0.9999091625213623}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 35, "offsetEnd": 42}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++", "wikidataId": "Q2407", "offsetStart": 13, "offsetEnd": 16}, "context": "We provide a C++ implementation of fimpera which enabled us to validate the approach. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9980593323707581}, "created": {"value": true, "score": 0.998498797416687}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 36, "offsetEnd": 43}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "Overview of false positive calls of fimpera's query Let's consider a kmer d with an abundance of 0 and each of its s-mer has an s abundance of 0 as well.", "mentionContextAttributes": {"used": {"value": false, "score": 0.02618926763534546}, "created": {"value": false, "score": 2.276897430419922e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 40, "offsetEnd": 47}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "Indexation overview At indexation time, fimpera takes a file of counted kmers, typically extracted from a genomic sequence dataset, and splits each k-mer to be indexed into its k -s + 1 s-mers (k \u2265 s).", "mentionContextAttributes": {"used": {"value": false, "score": 0.004319429397583008}, "created": {"value": false, "score": 9.5367431640625e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 40, "offsetEnd": 47}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "This non-optimised algorithm version of fimpera's query is shown in algorithm 1, in supplementary material, Section S1.1.", "mentionContextAttributes": {"used": {"value": false, "score": 0.025999009609222412}, "created": {"value": false, "score": 0.00010061264038085938}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 42, "offsetEnd": 49}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "Even if this choice is independent of the fimpera approach, it is motivated by the fact that major tools indexing large sets of k-mers as BIGSI [3], COBS [2], HowDe-SBT [5] as well as generic methods for preprocessing k-mers like kmtricks [8] are based on Bloom filters using a unique hash function for performances purposes.", "mentionContextAttributes": {"used": {"value": false, "score": 0.006744384765625}, "created": {"value": false, "score": 7.3909759521484375e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 47, "offsetEnd": 54}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "We propose an experiment in which we apply the fimpera approach on top of a counting Bloom Filter designed to have 25% of false-positive calls, while using 5 bits per hash value for storing the abundance of indexed k-mers.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0006330609321594238}, "created": {"value": true, "score": 0.9952455163002014}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 48, "offsetEnd": 55}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "Independently from parameters of the used cAMQ, fimpera requires to set up a unique parameter, z.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0032413601875305176}, "created": {"value": false, "score": 8.225440979003906e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 48, "offsetEnd": 55}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "In this section we show the entire algorithm of fimpera (algorithm 3), including the optimisation consisting in skipping stretches of absent k-mers.", "mentionContextAttributes": {"used": {"value": true, "score": 0.6325560808181763}, "created": {"value": false, "score": 0.004760026931762695}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 55, "offsetEnd": 62}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "This contribution may be useful independently from the fimpera context.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0023280978202819824}, "created": {"value": false, "score": 0.00022548437118530273}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 56, "offsetEnd": 63}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "This new kind of false-positive call is specific to the fimpera approach.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00018006563186645508}, "created": {"value": true, "score": 0.7214536666870117}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 68, "offsetEnd": 75}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "Compared to the original counting AMQ indexing k-mers, we show that fimpera improves the abundance correctness while reducing the false positives rate by an order of magnitude without generating false-negative calls nor underestimation of the abundance of a k-mer.", "mentionContextAttributes": {"used": {"value": true, "score": 0.8703490495681763}, "created": {"value": false, "score": 0.00032639503479003906}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 72, "offsetEnd": 79}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "We now describe in more details both indexing step and querying step of fimpera, as well as two optimisations, allowing querying in constant time and skipping unnecessary queries.", "mentionContextAttributes": {"used": {"value": false, "score": 6.747245788574219e-05}, "created": {"value": false, "score": 0.20973151922225952}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 72, "offsetEnd": 79}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "Our results showed that when applied on top of a counting Bloom Filter, fimpera enabled to yields about 45 times fewer false-positive calls than when querying directly a counting Bloom Filter of identical size.", "mentionContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": false, "score": 2.1696090698242188e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 80, "offsetEnd": 87}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "This implies that we compare results of a cBF indexing 31-mers, with results of fimpera used on a cBF with the same sizing, but indexing s-mers of size 28 (31-3).", "mentionContextAttributes": {"used": {"value": true, "score": 0.9994959831237793}, "created": {"value": false, "score": 3.4570693969726562e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 94, "offsetEnd": 101}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "We used two fastq files from the TARA ocean metagenomic dataset to show advantages offered by fimpera on metagenomic samples.", "mentionContextAttributes": {"used": {"value": true, "score": 0.99997878074646}, "created": {"value": false, "score": 3.516674041748047e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 95, "offsetEnd": 102}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "In the results, we show that the erroneous abundance calls are closer to the ground truth with fimpera compared to those obtained with the original cBF.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999686479568481}, "created": {"value": false, "score": 2.0265579223632812e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 95, "offsetEnd": 102}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "A list of commands for reproducing the results is available here: https:// github.com/lrobidou/fimpera/blob/paper/paper_companion/Readme.md", "mentionContextAttributes": {"used": {"value": false, "score": 0.005823254585266113}, "created": {"value": false, "score": 3.135204315185547e-05}, "shared": {"value": true, "score": 0.9242722392082214}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 101, "offsetEnd": 108}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "We propose in this section to assess the impact of this unique additional parameter needed for using fimpera.", "mentionContextAttributes": {"used": {"value": false, "score": 0.003602266311645508}, "created": {"value": true, "score": 0.999816358089447}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 108, "offsetEnd": 115}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "We call those overestimations \"construction overestimation\"; this new kind of overestimation is specific to fimpera.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0002778172492980957}, "created": {"value": true, "score": 0.8909341096878052}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 111, "offsetEnd": 118}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "We compare the results of queries made against this counting Bloom Filter with results of queries made against fimpera wrapping that same counting Bloom Filter.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9993855953216553}, "created": {"value": false, "score": 2.7418136596679688e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 122, "offsetEnd": 129}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "To the best of our knowledge, no other tool focuses on reducing the false positive rate of existing cAMQ, thus we compare fimpera results applied on a counting Bloom filter indexing s-mers with the original counting Bloom filter results indexing k-mers.", "mentionContextAttributes": {"used": {"value": false, "score": 0.09455865621566772}, "created": {"value": false, "score": 9.238719940185547e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 123, "offsetEnd": 130}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "Hence, these results do not concern the 25% false-positive calls obtained with the original cBF, nor the 0.56 % ones using fimpera.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999798536300659}, "created": {"value": false, "score": 3.2186508178710938e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 143, "offsetEnd": 150}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "These results show that 1.54 % of true-positive calls are overestimated in the cBF, while 1.33 % of true-positive calls are overestimated with fimpera.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9998372793197632}, "created": {"value": false, "score": 1.9311904907226562e-05}, "shared": {"value": false, "score": 5.960464477539062e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 163, "offsetEnd": 170}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "For instance, with z=3 (which is a recommended and default value), a counting AMQ having a false positive rate of 25%, the probability of false-positive rate with fimpera for that setting is \u2248 0.04%.", "mentionContextAttributes": {"used": {"value": false, "score": 0.47944819927215576}, "created": {"value": false, "score": 1.6808509826660156e-05}, "shared": {"value": false, "score": 5.960464477539062e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 184, "offsetEnd": 191}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "Moreover, using fimpera, abundance errors were slightly less frequent on true positive calls, and finally, those abundance errors were on average 1.07 apart from the ground truth with fimpera while they are on average 1.33 apart from the ground truth with the original cBF.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999767541885376}, "created": {"value": false, "score": 4.0531158447265625e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fimpera", "normalizedForm": "fimpera", "offsetStart": 208, "offsetEnd": 215}, "url": {"rawForm": "https://github.com/lrobidou/ fimpera", "normalizedForm": "https://github.com/lrobidou/ fimpera"}, "language": {"rawForm": "C++", "normalizedForm": "C++"}, "context": "In this section, we focus only on the wrongly estimated calls among true positives Results presented Fig. 3 show that, as stated Section 2.2, the erroneous abundance calls are closer to the ground truth with fimpera compared to those obtained with the original cBF.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9998145699501038}, "created": {"value": false, "score": 1.6689300537109375e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999985933303833}, "created": {"value": true, "score": 0.9999228715896606}, "shared": {"value": true, "score": 0.9929779171943665}}}], "references": [], "runtime": 13879, "id": "3aaffd4af72e0291471a97928a199016d6699af1", "metadata": {"id": "3aaffd4af72e0291471a97928a199016d6699af1"}, "original_file_path": "../../datalake/Samuel/SOFTware-Sync/downloads/xml/hal-03912993.grobid.tei.xml", "file_name": "hal-03912993.grobid.tei.xml"}