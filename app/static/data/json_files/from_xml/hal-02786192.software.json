{"application": "software-mentions", "version": "0.8.0", "date": "2024-10-07T11:49+0000", "md5": "9085E4D76AC716A873CEFDEFF0F62452", "mentions": [{"type": "software", "software-type": "software", "software-name": {"rawForm": "MEDeA", "normalizedForm": "MEDeA", "offsetStart": 0, "offsetEnd": 5}, "context": "MEDeA est entra\u00een\u00e9 avec toutes les donn\u00e9es sur toutes les combinaisons possibles entre les langues (IT, ES, LA), pendant 50 it\u00e9rations (\u00ab epochs \u00bb).", "mentionContextAttributes": {"used": {"value": false, "score": 0.006315946578979492}, "created": {"value": false, "score": 3.337860107421875e-06}, "shared": {"value": false, "score": 1.430511474609375e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.13337504863739014}, "created": {"value": false, "score": 4.172325134277344e-06}, "shared": {"value": false, "score": 2.1457672119140625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MEDeA", "normalizedForm": "MEDeA", "offsetStart": 73, "offsetEnd": 78}, "context": "Pour cet article, nous utilisons notre impl\u00e9mentation de cet algorithme, MEDeA (Multiway Encoder Decoder Architecture, en Python et PyTorch), qui utilise un encodeur diff\u00e9rent pour chaque langue d'entr\u00e9e, et un d\u00e9codeur ind\u00e9pendant, avec sa propre attention, et diff\u00e9rent pour chaque langue de sortie. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.028644323348999023}, "created": {"value": false, "score": 4.172325134277344e-06}, "shared": {"value": false, "score": 1.9073486328125e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.13337504863739014}, "created": {"value": false, "score": 4.172325134277344e-06}, "shared": {"value": false, "score": 2.1457672119140625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PyTorch", "normalizedForm": "PyTorch", "offsetStart": 132, "offsetEnd": 139}, "context": "Pour cet article, nous utilisons notre impl\u00e9mentation de cet algorithme, MEDeA (Multiway Encoder Decoder Architecture, en Python et PyTorch), qui utilise un encodeur diff\u00e9rent pour chaque langue d'entr\u00e9e, et un d\u00e9codeur ind\u00e9pendant, avec sa propre attention, et diff\u00e9rent pour chaque langue de sortie. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.028644323348999023}, "created": {"value": false, "score": 4.172325134277344e-06}, "shared": {"value": false, "score": 1.9073486328125e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.028644323348999023}, "created": {"value": false, "score": 4.172325134277344e-06}, "shared": {"value": false, "score": 1.9073486328125e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MEDeA", "normalizedForm": "MEDeA", "offsetStart": 335, "offsetEnd": 340}, "context": "Sur les donn\u00e9es synth\u00e9tiques d\u00e9nu\u00e9es de bruit, le mod\u00e8le statistique comme le mod\u00e8le neuronal apprennent tr\u00e8s bien \u00e0 pr\u00e9dire d'une langue fille (F1) \u00e0 une autre langue fille (F2), et atteignent des scores tr\u00e8s nettement sup\u00e9rieurs \u00e0 ceux obtenus lors des exp\u00e9riences pr\u00e9liminaires sur les lexiques bilingues : entre 88 et 97 BLEU pour MEDeA et 90 \u00e0 96 pour Moses, soit des r\u00e9sultats \u00e9quivalents, comme on peut le voir sur les colonnes F1-F2 et F2-F1 de la figure 1. Les r\u00e9seaux de neurones peuvent donc apprendre \u00e0 pr\u00e9dire des cognats d'une langue fille \u00e0 une autre langue fille, \u00e0 partir de donn\u00e9es de cognats, si tant est que ces donn\u00e9es soient de qualit\u00e9 et de quantit\u00e9 suffisante.", "mentionContextAttributes": {"used": {"value": false, "score": 0.13337504863739014}, "created": {"value": false, "score": 3.6954879760742188e-06}, "shared": {"value": false, "score": 2.1457672119140625e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.13337504863739014}, "created": {"value": false, "score": 4.172325134277344e-06}, "shared": {"value": false, "score": 2.1457672119140625e-06}}}], "references": [], "runtime": 12217, "id": "4351aaeae7dc68e2eb1c3e17967146104ee70241", "metadata": {"id": "4351aaeae7dc68e2eb1c3e17967146104ee70241"}, "original_file_path": "../../datalake/Samuel/SOFTware-Sync/downloads/xml/hal-02786192.grobid.tei.xml", "file_name": "hal-02786192.grobid.tei.xml"}