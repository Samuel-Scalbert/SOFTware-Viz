{"application": "software-mentions", "version": "0.8.0", "date": "2024-10-07T12:49+0000", "md5": "71DB16B305A1F7EA9CDA57109B0ABDE4", "mentions": [{"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 0, "offsetEnd": 3}, "context": "SQL approach: a textbook version The usual explanation of the logic behind SQL is that it adds a new truth value u to account for any comparisons involving nulls.", "mentionContextAttributes": {"used": {"value": false, "score": 4.017353057861328e-05}, "created": {"value": false, "score": 6.175041198730469e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999197721481323}, "created": {"value": true, "score": 0.9083213806152344}, "shared": {"value": false, "score": 4.7206878662109375e-05}}, "references": [{"label": "(Date and Darwen 1996)", "normalizedForm": "Date and Darwen 1996", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 0, "offsetEnd": 3}, "context": "SQL approach: what really happens While the textbook approach comes close to describing the logic of SQL, it misses one important feature of such logic.", "mentionContextAttributes": {"used": {"value": false, "score": 5.996227264404297e-05}, "created": {"value": false, "score": 0.00030112266540527344}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999197721481323}, "created": {"value": true, "score": 0.9083213806152344}, "shared": {"value": false, "score": 4.7206878662109375e-05}}, "references": [{"label": "(Date and Darwen 1996)", "normalizedForm": "Date and Darwen 1996", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 10, "offsetEnd": 13}, "context": "The basic SQL query can then be expressed in FO(L \u2191 3v ):", "mentionContextAttributes": {"used": {"value": true, "score": 0.6140300035476685}, "created": {"value": false, "score": 2.9802322387695312e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999197721481323}, "created": {"value": true, "score": 0.9083213806152344}, "shared": {"value": false, "score": 4.7206878662109375e-05}}, "references": [{"label": "(Date and Darwen 1996)", "normalizedForm": "Date and Darwen 1996", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 12, "offsetEnd": 15}, "context": "Recall that SQL uses a single null denoted here by N N N. Now we add it; how should the logic change to capture this extension?", "mentionContextAttributes": {"used": {"value": true, "score": 0.8080078363418579}, "created": {"value": false, "score": 2.1576881408691406e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999197721481323}, "created": {"value": true, "score": 0.9083213806152344}, "shared": {"value": false, "score": 4.7206878662109375e-05}}, "references": [{"label": "(Date and Darwen 1996)", "normalizedForm": "Date and Darwen 1996", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 13, "offsetEnd": 16}, "context": "The logic of SQL We finally apply the above observation to SQL's logic.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9972890615463257}, "created": {"value": false, "score": 0.00031363964080810547}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999197721481323}, "created": {"value": true, "score": 0.9083213806152344}, "shared": {"value": false, "score": 4.7206878662109375e-05}}, "references": [{"label": "(Date and Darwen 1996)", "normalizedForm": "Date and Darwen 1996", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 13, "offsetEnd": 16}, "context": "Note that in SQL query evaluation, it is the conditions \u03b8 that are evaluated in L 3v ; once the evaluation of the where \u03b8 clause is finished, only tuples that evaluated to t are kept.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9319455623626709}, "created": {"value": false, "score": 9.417533874511719e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999197721481323}, "created": {"value": true, "score": 0.9083213806152344}, "shared": {"value": false, "score": 4.7206878662109375e-05}}, "references": [{"label": "(Date and Darwen 1996)", "normalizedForm": "Date and Darwen 1996", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 18, "offsetEnd": 21}, "context": "Thus, even though SQL designers were justified in choosing Kleene's logic as the propositional logic for reasoning about incomplete information, they overlooked the fact that, when considered within FO, such a logic does not add any expressive power.", "mentionContextAttributes": {"used": {"value": true, "score": 0.8983967304229736}, "created": {"value": false, "score": 0.0001830458641052246}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999197721481323}, "created": {"value": true, "score": 0.9083213806152344}, "shared": {"value": false, "score": 4.7206878662109375e-05}}, "references": [{"label": "(Date and Darwen 1996)", "normalizedForm": "Date and Darwen 1996", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 20, "offsetEnd": 23}, "context": "Indeed, the core of SQL is essentially a programming syntax for relational calculus, which is another name for first-order (FO) predicate logic.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0001329183578491211}, "created": {"value": false, "score": 0.006755053997039795}, "shared": {"value": false, "score": 9.5367431640625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999197721481323}, "created": {"value": true, "score": 0.9083213806152344}, "shared": {"value": false, "score": 4.7206878662109375e-05}}, "references": [{"label": "(Date and Darwen 1996)", "normalizedForm": "Date and Darwen 1996", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 24, "offsetEnd": 27}, "context": "This is the approach of SQL and implementations of relational DBMSs, where there is just one single null value.", "mentionContextAttributes": {"used": {"value": false, "score": 5.91278076171875e-05}, "created": {"value": false, "score": 0.04814726114273071}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999197721481323}, "created": {"value": true, "score": 0.9083213806152344}, "shared": {"value": false, "score": 4.7206878662109375e-05}}, "references": [{"label": "(Date and Darwen 1996)", "normalizedForm": "Date and Darwen 1996", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 25, "offsetEnd": 28}, "context": "However, even though the SQL designers were justified in their choice of Kleene's logic, they neglected to consider the impact that lifting it to full predicate logic would have.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9992238283157349}, "created": {"value": false, "score": 0.00014722347259521484}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999197721481323}, "created": {"value": true, "score": 0.9083213806152344}, "shared": {"value": false, "score": 4.7206878662109375e-05}}, "references": [{"label": "(Date and Darwen 1996)", "normalizedForm": "Date and Darwen 1996", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 26, "offsetEnd": 29}, "context": "Nonetheless, this is what SQL did.", "mentionContextAttributes": {"used": {"value": true, "score": 0.5448587536811829}, "created": {"value": false, "score": 0.0005060434341430664}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999197721481323}, "created": {"value": true, "score": 0.9083213806152344}, "shared": {"value": false, "score": 4.7206878662109375e-05}}, "references": [{"label": "(Date and Darwen 1996)", "normalizedForm": "Date and Darwen 1996", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 28, "offsetEnd": 31}, "context": "We now analyze the power of SQL and the need for three truth values at a purely logical level.", "mentionContextAttributes": {"used": {"value": false, "score": 0.017256081104278564}, "created": {"value": false, "score": 0.027737736701965332}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999197721481323}, "created": {"value": true, "score": 0.9083213806152344}, "shared": {"value": false, "score": 4.7206878662109375e-05}}, "references": [{"label": "(Date and Darwen 1996)", "normalizedForm": "Date and Darwen 1996", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 28, "offsetEnd": 31}, "context": "In essence, we can think of SQL queries as expressions select x from Q 1 , . . .", "mentionContextAttributes": {"used": {"value": false, "score": 0.03423929214477539}, "created": {"value": false, "score": 6.258487701416016e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999197721481323}, "created": {"value": true, "score": 0.9083213806152344}, "shared": {"value": false, "score": 4.7206878662109375e-05}}, "references": [{"label": "(Date and Darwen 1996)", "normalizedForm": "Date and Darwen 1996", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 29, "offsetEnd": 32}, "context": "\u2022 one adopts the approach of SQL (Date and Darwen 1996),", "mentionContextAttributes": {"used": {"value": false, "score": 0.00029283761978149414}, "created": {"value": false, "score": 5.316734313964844e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999197721481323}, "created": {"value": true, "score": 0.9083213806152344}, "shared": {"value": false, "score": 4.7206878662109375e-05}}, "references": [{"label": "(Date and Darwen 1996)", "normalizedForm": "Date and Darwen 1996", "refKey": 18, "offsetStart": 29574, "offsetEnd": 29596}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 30, "offsetEnd": 33}, "context": "which is now written into the SQL Standard (ISO/IEC 2016), presented in all database textbooks, and implemented in all database products. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.003907740116119385}, "created": {"value": false, "score": 0.05450934171676636}, "shared": {"value": false, "score": 2.2530555725097656e-05}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999197721481323}, "created": {"value": true, "score": 0.9083213806152344}, "shared": {"value": false, "score": 4.7206878662109375e-05}}, "references": [{"label": "(Date and Darwen 1996)", "normalizedForm": "Date and Darwen 1996", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 30, "offsetEnd": 33}, "context": "This was the design choice of SQL, the language of relational DBMSs, Copyright c 2018, Association for the Advancement of Artificial Intelligence (www.aaai.org).", "mentionContextAttributes": {"used": {"value": false, "score": 0.4978777766227722}, "created": {"value": false, "score": 0.017786741256713867}, "shared": {"value": false, "score": 4.7206878662109375e-05}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999197721481323}, "created": {"value": true, "score": 0.9083213806152344}, "shared": {"value": false, "score": 4.7206878662109375e-05}}, "references": [{"label": "(Date and Darwen 1996)", "normalizedForm": "Date and Darwen 1996", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 37, "offsetEnd": 40}, "context": "A rough approximation of the core of SQL -the way it is presented in many database textbooks -is first-order logic.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00013387203216552734}, "created": {"value": false, "score": 0.0025241971015930176}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999197721481323}, "created": {"value": true, "score": 0.9083213806152344}, "shared": {"value": false, "score": 4.7206878662109375e-05}}, "references": [{"label": "(Date and Darwen 1996)", "normalizedForm": "Date and Darwen 1996", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 37, "offsetEnd": 40}, "context": "And yet there is even more to it: in SQL queries, answer tuples are split into true ones that need to be returned, and others that are not returned, thus collapsing a three-valued logic to twovalued.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0008270144462585449}, "created": {"value": false, "score": 4.756450653076172e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999197721481323}, "created": {"value": true, "score": 0.9083213806152344}, "shared": {"value": false, "score": 4.7206878662109375e-05}}, "references": [{"label": "(Date and Darwen 1996)", "normalizedForm": "Date and Darwen 1996", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 37, "offsetEnd": 40}, "context": "Notice that much of the criticism of SQL concentrated on its propositional logic.", "mentionContextAttributes": {"used": {"value": true, "score": 0.959244430065155}, "created": {"value": false, "score": 0.0014615058898925781}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999197721481323}, "created": {"value": true, "score": 0.9083213806152344}, "shared": {"value": false, "score": 4.7206878662109375e-05}}, "references": [{"label": "(Date and Darwen 1996)", "normalizedForm": "Date and Darwen 1996", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 38, "offsetEnd": 41}, "context": "An attempt to find a logic underlying SQL concentrated on its features that go beyond FO (i.e., aggregation) rather than nulls (Hella et al. 2001).", "mentionContextAttributes": {"used": {"value": false, "score": 0.04671722650527954}, "created": {"value": false, "score": 0.0026593804359436035}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999197721481323}, "created": {"value": true, "score": 0.9083213806152344}, "shared": {"value": false, "score": 4.7206878662109375e-05}}, "references": [{"label": "(Date and Darwen 1996)", "normalizedForm": "Date and Darwen 1996", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 40, "offsetEnd": 43}, "context": "This was done, however, at the level of SQL queries.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999197721481323}, "created": {"value": false, "score": 0.00011086463928222656}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999197721481323}, "created": {"value": true, "score": 0.9083213806152344}, "shared": {"value": false, "score": 4.7206878662109375e-05}}, "references": [{"label": "(Date and Darwen 1996)", "normalizedForm": "Date and Darwen 1996", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 42, "offsetEnd": 45}, "context": "However, taking into account the needs of SQL query evaluation (e.g., distributivity laws), the largest fragment of L 6v that does not break traditional evaluation and optimization strategies is Kleene's logic L 3v , precisely the one chosen by SQL.", "mentionContextAttributes": {"used": {"value": false, "score": 0.006838560104370117}, "created": {"value": false, "score": 2.765655517578125e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999197721481323}, "created": {"value": true, "score": 0.9083213806152344}, "shared": {"value": false, "score": 4.7206878662109375e-05}}, "references": [{"label": "(Date and Darwen 1996)", "normalizedForm": "Date and Darwen 1996", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 43, "offsetEnd": 46}, "context": "All commercial database systems that speak SQL offer a solution based on a three-valued propositional logic that is lifted then to full predicate logic.", "mentionContextAttributes": {"used": {"value": false, "score": 4.2438507080078125e-05}, "created": {"value": false, "score": 0.0001774430274963379}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999197721481323}, "created": {"value": true, "score": 0.9083213806152344}, "shared": {"value": false, "score": 4.7206878662109375e-05}}, "references": [{"label": "(Date and Darwen 1996)", "normalizedForm": "Date and Darwen 1996", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 45, "offsetEnd": 48}, "context": "Thus, we justify the choice that was made by SQL designers and standards committees in choosing L 3v as the logic to be implemented in all database products.", "mentionContextAttributes": {"used": {"value": false, "score": 0.2533724308013916}, "created": {"value": false, "score": 0.13443797826766968}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999197721481323}, "created": {"value": true, "score": 0.9083213806152344}, "shared": {"value": false, "score": 4.7206878662109375e-05}}, "references": [{"label": "(Date and Darwen 1996)", "normalizedForm": "Date and Darwen 1996", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 46, "offsetEnd": 49}, "context": "It was recently argued, by means of rewriting SQL queries, that FO based on Kleene's logic can be encoded in the usual Boolean FO (Guagliardo and Libkin 2017).", "mentionContextAttributes": {"used": {"value": false, "score": 0.0005224347114562988}, "created": {"value": false, "score": 0.0011987686157226562}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999197721481323}, "created": {"value": true, "score": 0.9083213806152344}, "shared": {"value": false, "score": 4.7206878662109375e-05}}, "references": [{"label": "(Date and Darwen 1996)", "normalizedForm": "Date and Darwen 1996", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 47, "offsetEnd": 50}, "context": "This was certainly true in the early stages of SQL design, as it grew out of relational calculus, which is just another name for FO.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0008117556571960449}, "created": {"value": false, "score": 0.0023866891860961914}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999197721481323}, "created": {"value": true, "score": 0.9083213806152344}, "shared": {"value": false, "score": 4.7206878662109375e-05}}, "references": [{"label": "(Date and Darwen 1996)", "normalizedForm": "Date and Darwen 1996", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 48, "offsetEnd": 51}, "context": "Most database texts will claim that the core of SQL, the main relational database query language, is first-order logic FO.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0016377568244934082}, "created": {"value": false, "score": 0.000615239143371582}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999197721481323}, "created": {"value": true, "score": 0.9083213806152344}, "shared": {"value": false, "score": 4.7206878662109375e-05}}, "references": [{"label": "(Date and Darwen 1996)", "normalizedForm": "Date and Darwen 1996", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 48, "offsetEnd": 51}, "context": "Thus, the many-valued predicate logic capturing SQL's behavior is FO(L \u2191 3v ) under sql .", "mentionContextAttributes": {"used": {"value": true, "score": 0.8123179078102112}, "created": {"value": false, "score": 1.5735626220703125e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999197721481323}, "created": {"value": true, "score": 0.9083213806152344}, "shared": {"value": false, "score": 4.7206878662109375e-05}}, "references": [{"label": "(Date and Darwen 1996)", "normalizedForm": "Date and Darwen 1996", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 56, "offsetEnd": 59}, "context": "We use this observation to analyze the logic underlying SQL query evaluation, and conclude that the many-valued extension for handling incompleteness does not add any expressiveness to it.", "mentionContextAttributes": {"used": {"value": true, "score": 0.8870254755020142}, "created": {"value": false, "score": 0.0001888871192932129}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999197721481323}, "created": {"value": true, "score": 0.9083213806152344}, "shared": {"value": false, "score": 4.7206878662109375e-05}}, "references": [{"label": "(Date and Darwen 1996)", "normalizedForm": "Date and Darwen 1996", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 56, "offsetEnd": 59}, "context": "To sum up, there are three choices of a logic capturing SQL's behavior: 1) Boolean predicate logic BFO; 2) FO based on Kleene's logic under the sql semantics; 3) FO based on Kleene's logic with the assertion operator under the sql semantics.", "mentionContextAttributes": {"used": {"value": false, "score": 0.019320130348205566}, "created": {"value": false, "score": 3.814697265625e-06}, "shared": {"value": false, "score": 7.152557373046875e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999197721481323}, "created": {"value": true, "score": 0.9083213806152344}, "shared": {"value": false, "score": 4.7206878662109375e-05}}, "references": [{"label": "(Date and Darwen 1996)", "normalizedForm": "Date and Darwen 1996", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 58, "offsetEnd": 61}, "context": "As one example, consider the version of FO that underlies SQL and is based on Kleene's logic.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00044542551040649414}, "created": {"value": false, "score": 9.262561798095703e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999197721481323}, "created": {"value": true, "score": 0.9083213806152344}, "shared": {"value": false, "score": 4.7206878662109375e-05}}, "references": [{"label": "(Date and Darwen 1996)", "normalizedForm": "Date and Darwen 1996", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 58, "offsetEnd": 61}, "context": "Several attempts to provide a theoretical language behind SQL looked at relational algebra translations of the language (Ceri and Gottlob 1985;Van den Bussche and Vansummeren 2009) or presented semantics of various fragments of the language, often under the simplifying assumption that no nulls are present and no three-valued logic is used (Chu et al. 2017;Negri, Pelagatti, and Sbattella 1991).", "mentionContextAttributes": {"used": {"value": true, "score": 0.602816641330719}, "created": {"value": false, "score": 1.6450881958007812e-05}, "shared": {"value": false, "score": 2.1457672119140625e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999197721481323}, "created": {"value": true, "score": 0.9083213806152344}, "shared": {"value": false, "score": 4.7206878662109375e-05}}, "references": [{"label": "(Date and Darwen 1996)", "normalizedForm": "Date and Darwen 1996", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 59, "offsetEnd": 62}, "context": "The logic of SQL We finally apply the above observation to SQL's logic.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9972890615463257}, "created": {"value": false, "score": 0.00031363964080810547}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999197721481323}, "created": {"value": true, "score": 0.9083213806152344}, "shared": {"value": false, "score": 4.7206878662109375e-05}}, "references": [{"label": "(Date and Darwen 1996)", "normalizedForm": "Date and Darwen 1996", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 68, "offsetEnd": 71}, "context": "These logics are still not well understood, as the formalization of SQL mainly took a different route via relational algebra, which is the procedural counterpart of FO.", "mentionContextAttributes": {"used": {"value": false, "score": 0.02928394079208374}, "created": {"value": false, "score": 0.00043135881423950195}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999197721481323}, "created": {"value": true, "score": 0.9083213806152344}, "shared": {"value": false, "score": 4.7206878662109375e-05}}, "references": [{"label": "(Date and Darwen 1996)", "normalizedForm": "Date and Darwen 1996", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 75, "offsetEnd": 78}, "context": "SQL approach: a textbook version The usual explanation of the logic behind SQL is that it adds a new truth value u to account for any comparisons involving nulls.", "mentionContextAttributes": {"used": {"value": false, "score": 4.017353057861328e-05}, "created": {"value": false, "score": 6.175041198730469e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999197721481323}, "created": {"value": true, "score": 0.9083213806152344}, "shared": {"value": false, "score": 4.7206878662109375e-05}}, "references": [{"label": "(Date and Darwen 1996)", "normalizedForm": "Date and Darwen 1996", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 83, "offsetEnd": 86}, "context": "In particular, for the equality predicate =, this is exactly the semantics used by SQL (Date and Darwen 1996).", "mentionContextAttributes": {"used": {"value": true, "score": 0.9814406633377075}, "created": {"value": false, "score": 1.0848045349121094e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999197721481323}, "created": {"value": true, "score": 0.9083213806152344}, "shared": {"value": false, "score": 4.7206878662109375e-05}}, "references": [{"label": "(Date and Darwen 1996)", "normalizedForm": "Date and Darwen 1996", "refKey": 18, "offsetStart": 34172, "offsetEnd": 34194}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 85, "offsetEnd": 88}, "context": "More recent work (Guagliardo and Libkin 2017), while providing a direct semantics of SQL, accounted for null values and three-valued logic, and even gave a translation of SQL queries that, similarly in spirit to the results in the previous section, showed how to evaluate them without ever producing the unknown truth value u.", "mentionContextAttributes": {"used": {"value": false, "score": 0.1116645336151123}, "created": {"value": false, "score": 0.38908451795578003}, "shared": {"value": false, "score": 5.960464477539062e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999197721481323}, "created": {"value": true, "score": 0.9083213806152344}, "shared": {"value": false, "score": 4.7206878662109375e-05}}, "references": [{"label": "(Date and Darwen 1996)", "normalizedForm": "Date and Darwen 1996", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 87, "offsetEnd": 90}, "context": "We showed that it leads to no increase in expressive power; had this been known to the SQL designers, perhaps other choices would have been considered too.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9920926690101624}, "created": {"value": false, "score": 0.000932157039642334}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999197721481323}, "created": {"value": true, "score": 0.9083213806152344}, "shared": {"value": false, "score": 4.7206878662109375e-05}}, "references": [{"label": "(Date and Darwen 1996)", "normalizedForm": "Date and Darwen 1996", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 88, "offsetEnd": 91}, "context": "To sum up, our investigation validates the choice of Kleene's logic by the designers of SQL, but at the same time asks whether it was really necessary and opens up a possibility for future languages that handle incomplete information to avoid the recourse to many-valued logics.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0028300881385803223}, "created": {"value": false, "score": 0.08518815040588379}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999197721481323}, "created": {"value": true, "score": 0.9083213806152344}, "shared": {"value": false, "score": 4.7206878662109375e-05}}, "references": [{"label": "(Date and Darwen 1996)", "normalizedForm": "Date and Darwen 1996", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 101, "offsetEnd": 104}, "context": "SQL approach: what really happens While the textbook approach comes close to describing the logic of SQL, it misses one important feature of such logic.", "mentionContextAttributes": {"used": {"value": false, "score": 5.996227264404297e-05}, "created": {"value": false, "score": 0.00030112266540527344}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999197721481323}, "created": {"value": true, "score": 0.9083213806152344}, "shared": {"value": false, "score": 4.7206878662109375e-05}}, "references": [{"label": "(Date and Darwen 1996)", "normalizedForm": "Date and Darwen 1996", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 105, "offsetEnd": 108}, "context": "Then, with respect to the truth value t, there is no difference between the logics that attempt to model SQL's behavior.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0008043646812438965}, "created": {"value": false, "score": 0.00012171268463134766}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999197721481323}, "created": {"value": true, "score": 0.9083213806152344}, "shared": {"value": false, "score": 4.7206878662109375e-05}}, "references": [{"label": "(Date and Darwen 1996)", "normalizedForm": "Date and Darwen 1996", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 112, "offsetEnd": 115}, "context": "3) What is the logic that underlies real-life handling of incomplete information in relational databases (i.e., SQL's logic), and how much more power than the usual twovalued FO does it possess?", "mentionContextAttributes": {"used": {"value": false, "score": 0.0001906752586364746}, "created": {"value": false, "score": 0.0018254518508911133}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999197721481323}, "created": {"value": true, "score": 0.9083213806152344}, "shared": {"value": false, "score": 4.7206878662109375e-05}}, "references": [{"label": "(Date and Darwen 1996)", "normalizedForm": "Date and Darwen 1996", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 116, "offsetEnd": 119}, "context": "For \u2126 = {\u2227, \u2228, \u00ac}, the standard Boolean logic L Bool has truth values {t, f} and truth tables as in Figure 1, while SQL uses Kleene's three-valued logic, denoted by L 3v , with truth values {t, f, u} and truth tables as in Figure 2.", "mentionContextAttributes": {"used": {"value": false, "score": 0.24092978239059448}, "created": {"value": false, "score": 2.7418136596679688e-06}, "shared": {"value": false, "score": 9.5367431640625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999197721481323}, "created": {"value": true, "score": 0.9083213806152344}, "shared": {"value": false, "score": 4.7206878662109375e-05}}, "references": [{"label": "(Date and Darwen 1996)", "normalizedForm": "Date and Darwen 1996", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 118, "offsetEnd": 121}, "context": "Therefore, when it comes to balancing expressiveness and practicality, the much criticized three-valued logic used by SQL is in fact a good choice for dealing with incomplete information in relational databases, at least for the propositional case.", "mentionContextAttributes": {"used": {"value": false, "score": 7.212162017822266e-05}, "created": {"value": false, "score": 0.00029772520065307617}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999197721481323}, "created": {"value": true, "score": 0.9083213806152344}, "shared": {"value": false, "score": 4.7206878662109375e-05}}, "references": [{"label": "(Date and Darwen 1996)", "normalizedForm": "Date and Darwen 1996", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 120, "offsetEnd": 123}, "context": "Organization The paper is structured around three main themes: propositional logics, predicate logics, and the logic of SQL, followed by conclusions and future work.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0003883242607116699}, "created": {"value": true, "score": 0.9083213806152344}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999197721481323}, "created": {"value": true, "score": 0.9083213806152344}, "shared": {"value": false, "score": 4.7206878662109375e-05}}, "references": [{"label": "(Date and Darwen 1996)", "normalizedForm": "Date and Darwen 1996", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 148, "offsetEnd": 151}, "context": "We start with the basic fragment of relational languages that has the power of FO, or -equivalently -the basic operations of relational algebra, or SQL's select-from-where queries without aggregation.", "mentionContextAttributes": {"used": {"value": false, "score": 0.000532686710357666}, "created": {"value": false, "score": 0.017661690711975098}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999197721481323}, "created": {"value": true, "score": 0.9083213806152344}, "shared": {"value": false, "score": 4.7206878662109375e-05}}, "references": [{"label": "(Date and Darwen 1996)", "normalizedForm": "Date and Darwen 1996", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 171, "offsetEnd": 174}, "context": "More recent work (Guagliardo and Libkin 2017), while providing a direct semantics of SQL, accounted for null values and three-valued logic, and even gave a translation of SQL queries that, similarly in spirit to the results in the previous section, showed how to evaluate them without ever producing the unknown truth value u.", "mentionContextAttributes": {"used": {"value": false, "score": 0.1116645336151123}, "created": {"value": false, "score": 0.38908451795578003}, "shared": {"value": false, "score": 5.960464477539062e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999197721481323}, "created": {"value": true, "score": 0.9083213806152344}, "shared": {"value": false, "score": 4.7206878662109375e-05}}, "references": [{"label": "(Date and Darwen 1996)", "normalizedForm": "Date and Darwen 1996", "refKey": 18}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 245, "offsetEnd": 248}, "context": "However, taking into account the needs of SQL query evaluation (e.g., distributivity laws), the largest fragment of L 6v that does not break traditional evaluation and optimization strategies is Kleene's logic L 3v , precisely the one chosen by SQL.", "mentionContextAttributes": {"used": {"value": false, "score": 0.006838560104370117}, "created": {"value": false, "score": 2.765655517578125e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999197721481323}, "created": {"value": true, "score": 0.9083213806152344}, "shared": {"value": false, "score": 4.7206878662109375e-05}}, "references": [{"label": "(Date and Darwen 1996)", "normalizedForm": "Date and Darwen 1996", "refKey": 18}]}], "references": [{"refKey": 18, "tei": "<biblStruct xml:id=\"b18\">\n\t<monogr>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">C</forename><forename type=\"middle\">J</forename><surname>Date</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">H</forename><surname>Darwen</surname></persName>\n\t\t</author>\n\t\t<title level=\"m\">A Guide to the SQL Standard</title>\n\t\t<imprint>\n\t\t\t<publisher>Addison-Wesley</publisher>\n\t\t\t<date>1996</date>\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}], "runtime": 12620, "id": "9d861016f59cffffe9847fd46d778c9fe4f395d2", "metadata": {"id": "9d861016f59cffffe9847fd46d778c9fe4f395d2"}, "original_file_path": "../../datalake/Samuel/SOFTware-Sync/downloads/xml/hal-03934331.grobid.tei.xml", "file_name": "hal-03934331.grobid.tei.xml"}