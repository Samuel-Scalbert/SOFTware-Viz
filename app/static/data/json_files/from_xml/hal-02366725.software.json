{"application": "software-mentions", "version": "0.8.0", "date": "2024-04-12T17:26+0000", "md5": "3EA0616E3CA4AFCFF7509D2F7C50769D", "mentions": [{"type": "software", "software-type": "software", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "software-name": {"rawForm": "FAUST", "normalizedForm": "FAUST", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "offsetStart": 0, "offsetEnd": 5}, "context": "FAUST [6] is a functional, synchronous, domain specific programming language designed for real time audio signal processing and synthesis.", "mentionContextAttributes": {"used": {"value": false, "score": 3.808736801147461e-05}, "created": {"value": false, "score": 0.0049620866775512695}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996438026428223}, "created": {"value": true, "score": 0.9999306797981262}, "shared": {"value": false, "score": 0.0025163888931274414}}, "references": [{"label": "[6]", "normalizedForm": "[6]", "refKey": 6, "offsetStart": 5504, "offsetEnd": 5507}]}, {"type": "software", "software-type": "software", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "software-name": {"rawForm": "FAUST", "normalizedForm": "FAUST", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "offsetStart": 0, "offsetEnd": 5}, "context": "FAUST also allows to circumvent some important buffer size issues that we encountered in our previous works on the implementation of signal loops in WebAudio.", "mentionContextAttributes": {"used": {"value": false, "score": 3.510713577270508e-05}, "created": {"value": false, "score": 0.41912221908569336}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996438026428223}, "created": {"value": true, "score": 0.9999306797981262}, "shared": {"value": false, "score": 0.0025163888931274414}}, "references": [{"label": "[6]", "normalizedForm": "[6]", "refKey": 6}]}, {"type": "software", "software-type": "software", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "software-name": {"rawForm": "FAUST", "normalizedForm": "FAUST", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "offsetStart": 4, "offsetEnd": 9}, "context": "The FAUST compiler is organized in successive stages, from the DSP block diagram to signals, and finally to the FIR (FAUST Imperative Representation) which is then translated into several target languages.", "mentionContextAttributes": {"used": {"value": false, "score": 0.15099191665649414}, "created": {"value": false, "score": 0.0002219676971435547}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996438026428223}, "created": {"value": true, "score": 0.9999306797981262}, "shared": {"value": false, "score": 0.0025163888931274414}}, "references": [{"label": "[6]", "normalizedForm": "[6]", "refKey": 6}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FAUST IDE", "normalizedForm": "FAUST IDE", "offsetStart": 4, "offsetEnd": 13}, "context": "The FAUST IDE itself needs to be extended to include sound file management , so that plugins using audio samples for 12 instance could be implemented. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0006033182144165039}, "created": {"value": false, "score": 0.00023937225341796875}, "shared": {"value": false, "score": 6.556510925292969e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0006033182144165039}, "created": {"value": false, "score": 0.00023937225341796875}, "shared": {"value": false, "score": 6.556510925292969e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q2814113", "wikipediaExternalRef": 35614465, "lang": "en", "confidence": 0.7797, "software-name": {"rawForm": "Emscripten", "normalizedForm": "Emscripten", "wikidataId": "Q2814113", "wikipediaExternalRef": 35614465, "lang": "en", "confidence": 0.7797, "offsetStart": 4, "offsetEnd": 14}, "context": "The Emscripten module was previously implemented in the FAUST IDE using a JavaScript wrapper which allowed the application to compile and transform FAUST source code into a WebAudio node. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.38988828659057617}, "created": {"value": false, "score": 0.00411534309387207}, "shared": {"value": false, "score": 7.134675979614258e-05}}, "documentContextAttributes": {"used": {"value": false, "score": 0.38988828659057617}, "created": {"value": true, "score": 0.9658463597297668}, "shared": {"value": false, "score": 0.001840829849243164}}, "references": [{"label": "[12]", "normalizedForm": "[12]", "refKey": 12}, {"label": "[12]", "normalizedForm": "[12]", "refKey": 12}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "WebAudio", "normalizedForm": "WebAudio", "offsetStart": 7, "offsetEnd": 15}, "context": "In the WebAudio API specs, loops in the graph are required to include at least a delay node. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.18617409467697144}, "created": {"value": false, "score": 1.8417835235595703e-05}, "shared": {"value": false, "score": 2.4437904357910156e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.38988834619522095}, "created": {"value": true, "score": 0.9990670680999756}, "shared": {"value": false, "score": 0.0013333559036254883}}}, {"type": "software", "software-type": "software", "wikidataId": "Q20155677", "wikipediaExternalRef": 47013794, "lang": "en", "confidence": 0.9161, "software-name": {"rawForm": "WebAssembly", "normalizedForm": "WebAssembly", "wikidataId": "Q20155677", "wikipediaExternalRef": 47013794, "lang": "en", "confidence": 0.9161, "offsetStart": 7, "offsetEnd": 18}, "context": "\u2022 Load WebAssembly version of the FAUST compiler and import its C functions into JavaScript", "mentionContextAttributes": {"used": {"value": false, "score": 0.0032514333724975586}, "created": {"value": false, "score": 3.11732292175293e-05}, "shared": {"value": false, "score": 4.589557647705078e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9995498061180115}, "created": {"value": false, "score": 0.03601634502410889}, "shared": {"value": false, "score": 0.009379863739013672}}}, {"type": "software", "software-type": "software", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "software-name": {"rawForm": "FAUST", "normalizedForm": "FAUST", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "offsetStart": 8, "offsetEnd": 13}, "context": "The new FAUST Web editor", "mentionContextAttributes": {"used": {"value": false, "score": 0.0003293752670288086}, "created": {"value": false, "score": 0.00757986307144165}, "shared": {"value": false, "score": 6.556510925292969e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996438026428223}, "created": {"value": true, "score": 0.9999306797981262}, "shared": {"value": false, "score": 0.0025163888931274414}}, "references": [{"label": "[6]", "normalizedForm": "[6]", "refKey": 6}]}, {"type": "software", "software-type": "software", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "software-name": {"rawForm": "FAUST", "normalizedForm": "FAUST", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "offsetStart": 8, "offsetEnd": 13}, "context": "After a FAUST DSP is tested in the editor, users can export the DSP to different architectures including WebAudio Plugins (WAPs).", "mentionContextAttributes": {"used": {"value": false, "score": 0.003065943717956543}, "created": {"value": false, "score": 0.00014781951904296875}, "shared": {"value": false, "score": 0.0016504526138305664}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996438026428223}, "created": {"value": true, "score": 0.9999306797981262}, "shared": {"value": false, "score": 0.0025163888931274414}}, "references": [{"label": "[6]", "normalizedForm": "[6]", "refKey": 6}]}, {"type": "software", "software-type": "software", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "software-name": {"rawForm": "FAUST", "normalizedForm": "FAUST", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "offsetStart": 12, "offsetEnd": 17}, "context": "\u2022 Offline : FAUST WebAudio wrapper offers an \"offline processor\" which is useful to allow a DSP to calculate the first samples at any sample rate independently of the actual audio context one.", "mentionContextAttributes": {"used": {"value": false, "score": 3.534555435180664e-05}, "created": {"value": false, "score": 4.13060188293457e-05}, "shared": {"value": false, "score": 7.748603820800781e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996438026428223}, "created": {"value": true, "score": 0.9999306797981262}, "shared": {"value": false, "score": 0.0025163888931274414}}, "references": [{"label": "[6]", "normalizedForm": "[6]", "refKey": 6}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "asm", "normalizedForm": "asm", "offsetStart": 13, "offsetEnd": 16}, "context": "By adding an asm.js generating backend in the compiler, and compiling the compiler itself in asm.js/JavaScript using the Emscripten transpiler, the dynamic generation of WebAudio nodes from FAUST code has been demonstrated [16] [17].", "mentionContextAttributes": {"used": {"value": false, "score": 0.021566390991210938}, "created": {"value": false, "score": 0.0002887248992919922}, "shared": {"value": false, "score": 2.9206275939941406e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.021566390991210938}, "created": {"value": false, "score": 0.00039845705032348633}, "shared": {"value": false, "score": 1.4126300811767578e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "AnalyserNode", "normalizedForm": "AnalyserNode", "offsetStart": 13, "offsetEnd": 25}, "context": "Firstly, the AnalyserNode has only one input, which means it needs an additional ChannelSplitterNode to retrieve the correct channel from the FAUST DSP Node. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.04438161849975586}, "created": {"value": false, "score": 1.0907649993896484e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9320352673530579}, "created": {"value": false, "score": 3.4868717193603516e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "WebAudio", "normalizedForm": "WebAudio", "offsetStart": 18, "offsetEnd": 26}, "context": "\u2022 Offline : FAUST WebAudio wrapper offers an \"offline processor\" which is useful to allow a DSP to calculate the first samples at any sample rate independently of the actual audio context one. ", "mentionContextAttributes": {"used": {"value": false, "score": 3.534555435180664e-05}, "created": {"value": false, "score": 4.13060188293457e-05}, "shared": {"value": false, "score": 7.748603820800781e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.38988834619522095}, "created": {"value": true, "score": 0.9990670680999756}, "shared": {"value": false, "score": 0.0013333559036254883}}}, {"type": "software", "software-type": "software", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "software-name": {"rawForm": "FAUST", "normalizedForm": "FAUST", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "offsetStart": 20, "offsetEnd": 25}, "context": "\u2022 On Event : as the FAUST DSP usually comes with a GUI to control its parameters, it is important to visualize the part of signals while parameters change.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0004913210868835449}, "created": {"value": false, "score": 2.390146255493164e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996438026428223}, "created": {"value": true, "score": 0.9999306797981262}, "shared": {"value": false, "score": 0.0025163888931274414}}, "references": [{"label": "[6]", "normalizedForm": "[6]", "refKey": 6}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FAUST compiler", "normalizedForm": "FAUST compiler", "offsetStart": 21, "offsetEnd": 35}, "context": "When embedded in the FAUST compiler running on the Web, they allow to dynamically compile FAUST DSP programs in pure Web applications. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0019522309303283691}, "created": {"value": false, "score": 0.0005375146865844727}, "shared": {"value": false, "score": 7.092952728271484e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0019522309303283691}, "created": {"value": false, "score": 0.0005375146865844727}, "shared": {"value": false, "score": 7.092952728271484e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "software-name": {"rawForm": "FAUST", "normalizedForm": "FAUST", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "offsetStart": 22, "offsetEnd": 27}, "context": "Based on the previous FAUST online editor, we built a code editor (Figure 2) with full IDE user experience that could provide more information and details of a DSP through graphical representation in a Web page.", "mentionContextAttributes": {"used": {"value": false, "score": 0.006499171257019043}, "created": {"value": false, "score": 0.4654076099395752}, "shared": {"value": false, "score": 0.00011664628982543945}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996438026428223}, "created": {"value": true, "score": 0.9999306797981262}, "shared": {"value": false, "score": 0.0025163888931274414}}, "references": [{"label": "[6]", "normalizedForm": "[6]", "refKey": 6}]}, {"type": "software", "software-type": "software", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "software-name": {"rawForm": "FAUST", "normalizedForm": "FAUST", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "offsetStart": 25, "offsetEnd": 30}, "context": "\u2022 All options related to FAUST code compilation are located using controllers from the left sidebar panel This method provides both sample values and a spectrum given by the FFT of the current audio buffer.", "mentionContextAttributes": {"used": {"value": false, "score": 0.19099009037017822}, "created": {"value": false, "score": 5.543231964111328e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996438026428223}, "created": {"value": true, "score": 0.9999306797981262}, "shared": {"value": false, "score": 0.0025163888931274414}}, "references": [{"label": "[6]", "normalizedForm": "[6]", "refKey": 6}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Firefox", "normalizedForm": "Firefox", "offsetStart": 25, "offsetEnd": 32}, "context": "Without this delay node, Firefox stops rendering the graph, while Chrome does not complain but adds, behind the scenes, a 3 ms delay (minimum size of an audio buffer is 128 frames hence a minimal delay of 128/sampling rate or roughly 3 ms at 44.1kHz). ", "mentionContextAttributes": {"used": {"value": false, "score": 0.004703104496002197}, "created": {"value": false, "score": 2.378225326538086e-05}, "shared": {"value": false, "score": 6.556510925292969e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.004703104496002197}, "created": {"value": false, "score": 2.378225326538086e-05}, "shared": {"value": false, "score": 6.556510925292969e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q2814113", "wikipediaExternalRef": 35614465, "lang": "en", "confidence": 0.7797, "software-name": {"rawForm": "Emscripten", "normalizedForm": "Emscripten", "wikidataId": "Q2814113", "wikipediaExternalRef": 35614465, "lang": "en", "confidence": 0.7797, "offsetStart": 25, "offsetEnd": 35}, "context": "\u2022 A virtual file system: Emscripten supports a virtual file system (in memory) compatible with the C++ I/O standard library, but also usable from the JavaScript wrapper. ", "mentionContextAttributes": {"used": {"value": false, "score": 5.823373794555664e-05}, "created": {"value": false, "score": 0.0002721548080444336}, "shared": {"value": false, "score": 0.001840829849243164}}, "documentContextAttributes": {"used": {"value": false, "score": 0.38988828659057617}, "created": {"value": true, "score": 0.9658463597297668}, "shared": {"value": false, "score": 0.001840829849243164}}, "references": [{"label": "[12]", "normalizedForm": "[12]", "refKey": 12}, {"label": "[12]", "normalizedForm": "[12]", "refKey": 12}]}, {"type": "software", "software-type": "software", "wikidataId": "Q80535", "wikipediaExternalRef": 19996, "lang": "en", "confidence": 0.9025, "software-name": {"rawForm": "MIDI", "normalizedForm": "MIDI", "wikidataId": "Q80535", "wikipediaExternalRef": 19996, "lang": "en", "confidence": 0.9025, "offsetStart": 28, "offsetEnd": 32}, "context": "When audio effects or audio/MIDI instruments have to be shared between several DAWs or audio environments, a plugin model is usually preferred.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0002758502960205078}, "created": {"value": false, "score": 8.481740951538086e-05}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0011025667190551758}, "created": {"value": true, "score": 0.6967083215713501}, "shared": {"value": false, "score": 4.214048385620117e-05}}, "references": [{"label": "[15]", "normalizedForm": "[15]", "refKey": 15}]}, {"type": "software", "software-type": "software", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "software-name": {"rawForm": "FAUST", "normalizedForm": "FAUST", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "offsetStart": 30, "offsetEnd": 35}, "context": "A WAP plugin generated by the FAUST online IDE is a zipped archive file that contains the DSP WebAssembly module, the standard JSON WAP descriptor and the GUI code (HTML/CSS/JS) wrapped as a WebComponent.", "mentionContextAttributes": {"used": {"value": false, "score": 0.022242307662963867}, "created": {"value": false, "score": 3.17692756652832e-05}, "shared": {"value": false, "score": 2.0682811737060547e-05}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996438026428223}, "created": {"value": true, "score": 0.9999306797981262}, "shared": {"value": false, "score": 0.0025163888931274414}}, "references": [{"label": "[6]", "normalizedForm": "[6]", "refKey": 6}]}, {"type": "software", "software-type": "software", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "software-name": {"rawForm": "FAUST", "normalizedForm": "FAUST", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "offsetStart": 33, "offsetEnd": 38}, "context": "As a specification language, the FAUST code only describes the DSP part, and an abstract version of the control interface.", "mentionContextAttributes": {"used": {"value": false, "score": 0.01121985912322998}, "created": {"value": false, "score": 0.00020885467529296875}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996438026428223}, "created": {"value": true, "score": 0.9999306797981262}, "shared": {"value": false, "score": 0.0025163888931274414}}, "references": [{"label": "[6]", "normalizedForm": "[6]", "refKey": 6}]}, {"type": "software", "software-type": "software", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "software-name": {"rawForm": "FAUST", "normalizedForm": "FAUST", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "offsetStart": 34, "offsetEnd": 39}, "context": "\u2022 Load WebAssembly version of the FAUST compiler and import its C functions into JavaScript", "mentionContextAttributes": {"used": {"value": false, "score": 0.0032514333724975586}, "created": {"value": false, "score": 3.11732292175293e-05}, "shared": {"value": false, "score": 4.589557647705078e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996438026428223}, "created": {"value": true, "score": 0.9999306797981262}, "shared": {"value": false, "score": 0.0025163888931274414}}, "references": [{"label": "[6]", "normalizedForm": "[6]", "refKey": 6}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "KissFFT", "normalizedForm": "KissFFT", "offsetStart": 35, "offsetEnd": 42}, "context": "We chose the JavaScript version of KissFFT for its high 8 performance when compiled to WebAssembly . ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9995498061180115}, "created": {"value": false, "score": 4.464387893676758e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9995498061180115}, "created": {"value": false, "score": 4.464387893676758e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "software-name": {"rawForm": "FAUST", "normalizedForm": "FAUST", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "offsetStart": 37, "offsetEnd": 42}, "context": "\u2022 Compile the code: the input is the FAUST source code, the output is the compiled WebAssembly binary version with some related data \u2022 Load and wrap the module as a DSP processing function inside an AudioWorkletProcessor or a ScriptProcessor AudioNode", "mentionContextAttributes": {"used": {"value": true, "score": 0.6129092574119568}, "created": {"value": false, "score": 2.8312206268310547e-05}, "shared": {"value": false, "score": 3.993511199951172e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996438026428223}, "created": {"value": true, "score": 0.9999306797981262}, "shared": {"value": false, "score": 0.0025163888931274414}}, "references": [{"label": "[6]", "normalizedForm": "[6]", "refKey": 6}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "AnalyserNode", "normalizedForm": "AnalyserNode", "offsetStart": 37, "offsetEnd": 49}, "context": "Secondly, as we cannot tell when the AnalyserNode does an analysis, the audio data are provided only on demand. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9320352673530579}, "created": {"value": false, "score": 3.4868717193603516e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9320352673530579}, "created": {"value": false, "score": 3.4868717193603516e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "software-name": {"rawForm": "FAUST", "normalizedForm": "FAUST", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "offsetStart": 40, "offsetEnd": 45}, "context": "slider to knob), it does not change the FAUST code back.", "mentionContextAttributes": {"used": {"value": false, "score": 0.003259003162384033}, "created": {"value": false, "score": 1.4126300811767578e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996438026428223}, "created": {"value": true, "score": 0.9999306797981262}, "shared": {"value": false, "score": 0.0025163888931274414}}, "references": [{"label": "[6]", "normalizedForm": "[6]", "refKey": 6}]}, {"type": "software", "software-type": "software", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "software-name": {"rawForm": "FAUST", "normalizedForm": "FAUST", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "offsetStart": 40, "offsetEnd": 45}, "context": "This will also require to extend the 13 FAUST remote compilation service.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0017254352569580078}, "created": {"value": false, "score": 0.0015375018119812012}, "shared": {"value": false, "score": 1.2516975402832031e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996438026428223}, "created": {"value": true, "score": 0.9999306797981262}, "shared": {"value": false, "score": 0.0025163888931274414}}, "references": [{"label": "[6]", "normalizedForm": "[6]", "refKey": 6}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FAUST compiler", "normalizedForm": "FAUST compiler", "offsetStart": 41, "offsetEnd": 55}, "context": "This file system became important as the FAUST compiler searches libraries and imported source codes locally, or generates DSPs code for other targets/architectures. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00034105777740478516}, "created": {"value": false, "score": 0.00041419267654418945}, "shared": {"value": false, "score": 3.159046173095703e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0019522309303283691}, "created": {"value": false, "score": 0.0005375146865844727}, "shared": {"value": false, "score": 7.092952728271484e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "WebAudio", "normalizedForm": "WebAudio", "offsetStart": 42, "offsetEnd": 50}, "context": "In the first years after the birth of the WebAudio standard (2011), there was no standard format for high-level audio plugins.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00027823448181152344}, "created": {"value": false, "score": 0.0003180503845214844}, "shared": {"value": false, "score": 9.953975677490234e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.38988834619522095}, "created": {"value": true, "score": 0.9990670680999756}, "shared": {"value": false, "score": 0.0013333559036254883}}}, {"type": "software", "software-type": "software", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "software-name": {"rawForm": "FAUST", "normalizedForm": "FAUST", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "offsetStart": 43, "offsetEnd": 48}, "context": "As explained in the previous sections, the FAUST DSP code is compiled to a JavaScript wrapper and a WebAssembly module.", "mentionContextAttributes": {"used": {"value": false, "score": 0.06923317909240723}, "created": {"value": false, "score": 0.00014066696166992188}, "shared": {"value": false, "score": 9.953975677490234e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996438026428223}, "created": {"value": true, "score": 0.9999306797981262}, "shared": {"value": false, "score": 0.0025163888931274414}}, "references": [{"label": "[6]", "normalizedForm": "[6]", "refKey": 6}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "WebAudio", "normalizedForm": "WebAudio", "offsetStart": 44, "offsetEnd": 52}, "context": "So far, we implemented only a generator for WebAudio plugins, using HTML/CSS/JS code that follows the W3C WebComponents specifications . ", "mentionContextAttributes": {"used": {"value": false, "score": 8.362531661987305e-05}, "created": {"value": true, "score": 0.9985744953155518}, "shared": {"value": false, "score": 8.52346420288086e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.38988834619522095}, "created": {"value": true, "score": 0.9990670680999756}, "shared": {"value": false, "score": 0.0013333559036254883}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "WebAudio AnalyserNode", "normalizedForm": "WebAudio AnalyserNode", "offsetStart": 44, "offsetEnd": 65}, "context": "compiling, audio probes are an important addition to the new editor. We designed four modes of signal visualisations: data table, oscilloscope (stacked and interleaved by channels), spectroscope and spectrogram, to help FAUST users t", "mentionContextAttributes": {"used": {"value": false, "score": 5.3942203521728516e-05}, "created": {"value": true, "score": 0.9672712087631226}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 5.3942203521728516e-05}, "created": {"value": true, "score": 0.9672712087631226}, "shared": {"value": false, "score": 2.980232238769531e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "WebAudio", "normalizedForm": "WebAudio", "offsetStart": 45, "offsetEnd": 53}, "context": ".Figure 2:The first method consists of using WebAudio AnalyserNode with its integrated methods: get Byte Frequency Data , get Byte Time Domain Data , getFloatFrequencyData , get Float Time Domain Data (which does not exist in Safari)", "mentionContextAttributes": {"used": {"value": false, "score": 0.07273632287979126}, "created": {"value": false, "score": 2.962350845336914e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.38988834619522095}, "created": {"value": true, "score": 0.9990670680999756}, "shared": {"value": false, "score": 0.0013333559036254883}}}, {"type": "software", "software-type": "software", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "software-name": {"rawForm": "FAUST", "normalizedForm": "FAUST", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "offsetStart": 46, "offsetEnd": 51}, "context": "Thus, we perform 9 the FFT computation in the FAUST online editor with 2 overlaps using a Blackman window function.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9980920553207397}, "created": {"value": false, "score": 5.185604095458984e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996438026428223}, "created": {"value": true, "score": 0.9999306797981262}, "shared": {"value": false, "score": 0.0025163888931274414}}, "references": [{"label": "[6]", "normalizedForm": "[6]", "refKey": 6}]}, {"type": "software", "software-type": "software", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "software-name": {"rawForm": "FAUST", "normalizedForm": "FAUST", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "offsetStart": 46, "offsetEnd": 51}, "context": "The editor is not yet 100% bijective with the FAUST definition of GUI controllers (that serve as a \"hint\" to bootstrap the GUI design process).", "mentionContextAttributes": {"used": {"value": false, "score": 0.00026237964630126953}, "created": {"value": false, "score": 0.00010985136032104492}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996438026428223}, "created": {"value": true, "score": 0.9999306797981262}, "shared": {"value": false, "score": 0.0025163888931274414}}, "references": [{"label": "[6]", "normalizedForm": "[6]", "refKey": 6}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "AmpedStudio DAW", "normalizedForm": "AmpedStudio DAW", "offsetStart": 46, "offsetEnd": 61}, "context": "Concluding tests have been conducted with the AmpedStudio DAW, for example. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999857544898987}, "created": {"value": false, "score": 1.6629695892333984e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999857544898987}, "created": {"value": false, "score": 1.6629695892333984e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q2814113", "wikipediaExternalRef": 35614465, "lang": "en", "confidence": 0.7797, "software-name": {"rawForm": "Emscripten", "normalizedForm": "Emscripten", "wikidataId": "Q2814113", "wikipediaExternalRef": 35614465, "lang": "en", "confidence": 0.7797, "offsetStart": 47, "offsetEnd": 57}, "context": "Recent native to Web porting technologies like Emscripten and WebAssembly, as well as recognised Web standards (like WebComponents) have been heavily used.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0010769963264465332}, "created": {"value": false, "score": 0.0005623102188110352}, "shared": {"value": false, "score": 1.3649463653564453e-05}}, "documentContextAttributes": {"used": {"value": false, "score": 0.38988828659057617}, "created": {"value": true, "score": 0.9658463597297668}, "shared": {"value": false, "score": 0.001840829849243164}}, "references": [{"label": "[12]", "normalizedForm": "[12]", "refKey": 12}, {"label": "[12]", "normalizedForm": "[12]", "refKey": 12}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "WebAudio API", "normalizedForm": "WebAudio API", "offsetStart": 49, "offsetEnd": 61}, "context": "There are many ways to develop software with the WebAudio API today. ", "mentionContextAttributes": {"used": {"value": false, "score": 3.0338764190673828e-05}, "created": {"value": false, "score": 0.3876757025718689}, "shared": {"value": false, "score": 0.01024925708770752}}, "documentContextAttributes": {"used": {"value": false, "score": 3.0338764190673828e-05}, "created": {"value": false, "score": 0.3876757025718689}, "shared": {"value": false, "score": 0.01024925708770752}}}, {"type": "software", "software-type": "software", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "software-name": {"rawForm": "FAUST", "normalizedForm": "FAUST", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "offsetStart": 50, "offsetEnd": 55}, "context": "In this paper, we present a solution based around FAUST, its redesigned Web based editor, and the integration of a plugin GUI editor allowing to directly test, generate and deploy WAP plugins.", "mentionContextAttributes": {"used": {"value": false, "score": 4.4405460357666016e-05}, "created": {"value": true, "score": 0.9999306797981262}, "shared": {"value": false, "score": 6.020069122314453e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996438026428223}, "created": {"value": true, "score": 0.9999306797981262}, "shared": {"value": false, "score": 0.0025163888931274414}}, "references": [{"label": "[6]", "normalizedForm": "[6]", "refKey": 6}]}, {"type": "software", "software-type": "software", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "software-name": {"rawForm": "FAUST", "normalizedForm": "FAUST", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "offsetStart": 50, "offsetEnd": 55}, "context": "This example shows the need for solutions such as FAUST to circumvent these limitations of the WebAudio standard.", "mentionContextAttributes": {"used": {"value": false, "score": 5.918741226196289e-05}, "created": {"value": false, "score": 0.04415661096572876}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996438026428223}, "created": {"value": true, "score": 0.9999306797981262}, "shared": {"value": false, "score": 0.0025163888931274414}}, "references": [{"label": "[6]", "normalizedForm": "[6]", "refKey": 6}]}, {"type": "software", "software-type": "software", "wikidataId": "Q20155677", "wikipediaExternalRef": 47013794, "lang": "en", "confidence": 0.9161, "software-name": {"rawForm": "WebAssembly", "normalizedForm": "WebAssembly", "wikidataId": "Q20155677", "wikipediaExternalRef": 47013794, "lang": "en", "confidence": 0.9161, "offsetStart": 50, "offsetEnd": 61}, "context": "Already C/C++ written code can be transpiled to 2 WebAssembly using Emscripten [12], or by using domain specific languages for programming DSP algorithms that also compile to WebAssembly, like the mature Csound [ 14 ] with its set of WebAudio examples , or the recently announced SOUL DSP 3 1 https://www.reasonstudios.com/press/275-reasons-flagship-europa-synth-now-availa ", "mentionContextAttributes": {"used": {"value": false, "score": 0.058709681034088135}, "created": {"value": false, "score": 1.1980533599853516e-05}, "shared": {"value": false, "score": 0.00020265579223632812}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9995498061180115}, "created": {"value": false, "score": 0.03601634502410889}, "shared": {"value": false, "score": 0.009379863739013672}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "AudioWorklet", "normalizedForm": "AudioWorklet", "offsetStart": 50, "offsetEnd": 62}, "context": "\u2022 Data output: a callback has been added into the AudioWorklet node to support additional processing or analysis after the buffer has been fully calculated. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.025378525257110596}, "created": {"value": false, "score": 8.386373519897461e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.025378525257110596}, "created": {"value": false, "score": 8.386373519897461e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "WebAudio Plugins", "normalizedForm": "WebAudio Plugins", "offsetStart": 50, "offsetEnd": 66}, "context": "Our group previously presented an open format for WebAudio Plugins named WAP [11]. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0002269744873046875}, "created": {"value": true, "score": 0.9251604080200195}, "shared": {"value": false, "score": 0.0005303621292114258}}, "documentContextAttributes": {"used": {"value": false, "score": 0.003065943717956543}, "created": {"value": true, "score": 0.9251604080200195}, "shared": {"value": false, "score": 0.0016504526138305664}}}, {"type": "software", "software-type": "software", "wikidataId": "Q80535", "wikipediaExternalRef": 19996, "lang": "en", "confidence": 0.9025, "software-name": {"rawForm": "MIDI", "normalizedForm": "MIDI", "wikidataId": "Q80535", "wikipediaExternalRef": 19996, "lang": "en", "confidence": 0.9025, "offsetStart": 52, "offsetEnd": 56}, "context": "It aims to facilitate the interoperability of audio/MIDI plugins developed either using pure Web APIs, porting existing native code bases, or using Domain Specific Languages (DSL).", "mentionContextAttributes": {"used": {"value": false, "score": 9.495019912719727e-05}, "created": {"value": false, "score": 0.04114753007888794}, "shared": {"value": false, "score": 4.214048385620117e-05}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0011025667190551758}, "created": {"value": true, "score": 0.6967083215713501}, "shared": {"value": false, "score": 4.214048385620117e-05}}, "references": [{"label": "[15]", "normalizedForm": "[15]", "refKey": 15}]}, {"type": "software", "software-type": "software", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "software-name": {"rawForm": "FAUST", "normalizedForm": "FAUST", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "offsetStart": 53, "offsetEnd": 58}, "context": "11 Normally, there should be no bad surprises as the FAUST workflow generates valid WAPs.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0005446672439575195}, "created": {"value": false, "score": 3.260374069213867e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996438026428223}, "created": {"value": true, "score": 0.9999306797981262}, "shared": {"value": false, "score": 0.0025163888931274414}}, "references": [{"label": "[6]", "normalizedForm": "[6]", "refKey": 6}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "AnalyserNode", "normalizedForm": "AnalyserNode", "offsetStart": 54, "offsetEnd": 66}, "context": ".Figure 2:The first method consists of using WebAudio AnalyserNode with its integrated methods: get Byte Frequency Data , get Byte Time Domain Data , getFloatFrequencyData , get Float Time Domain Data (which does not exist in Safari)", "mentionContextAttributes": {"used": {"value": false, "score": 0.07273632287979126}, "created": {"value": false, "score": 2.962350845336914e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9320352673530579}, "created": {"value": false, "score": 3.4868717193603516e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "software-name": {"rawForm": "FAUST", "normalizedForm": "FAUST", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "offsetStart": 56, "offsetEnd": 61}, "context": "The Emscripten module was previously implemented in the FAUST IDE using a JavaScript wrapper which allowed the application to compile and transform FAUST source code into a WebAudio node.", "mentionContextAttributes": {"used": {"value": false, "score": 0.38988828659057617}, "created": {"value": false, "score": 0.00411534309387207}, "shared": {"value": false, "score": 7.134675979614258e-05}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996438026428223}, "created": {"value": true, "score": 0.9999306797981262}, "shared": {"value": false, "score": 0.0025163888931274414}}, "references": [{"label": "[6]", "normalizedForm": "[6]", "refKey": 6}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Web Audio Modules", "normalizedForm": "Web Audio Modules", "offsetStart": 57, "offsetEnd": 74}, "context": "proposal, and how it is related to other approaches like Web Audio Modules (WAMs), WebAudio API eXtension (WAAX) or JavaScript Audio Plugin (JSAP), see [11].", "mentionContextAttributes": {"used": {"value": false, "score": 0.00014472007751464844}, "created": {"value": false, "score": 0.0002504587173461914}, "shared": {"value": false, "score": 2.205371856689453e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00014472007751464844}, "created": {"value": false, "score": 0.0002504587173461914}, "shared": {"value": false, "score": 2.205371856689453e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q20155677", "wikipediaExternalRef": 47013794, "lang": "en", "confidence": 0.9161, "software-name": {"rawForm": "WebAssembly", "normalizedForm": "WebAssembly", "wikidataId": "Q20155677", "wikipediaExternalRef": 47013794, "lang": "en", "confidence": 0.9161, "offsetStart": 59, "offsetEnd": 70}, "context": "With the apparition of the more stable and better designed WebAssembly format in 2017, as a replacement of asm.js, the previous work done with asm.js has been adapted.", "mentionContextAttributes": {"used": {"value": false, "score": 8.875131607055664e-05}, "created": {"value": false, "score": 0.00039845705032348633}, "shared": {"value": false, "score": 1.4126300811767578e-05}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9995498061180115}, "created": {"value": false, "score": 0.03601634502410889}, "shared": {"value": false, "score": 0.009379863739013672}}}, {"type": "software", "software-type": "software", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "software-name": {"rawForm": "FAUST", "normalizedForm": "FAUST", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "offsetStart": 60, "offsetEnd": 65}, "context": "In the DSL category, we already did developments to use the FAUST audio DSP language.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9982044696807861}, "created": {"value": false, "score": 0.0014930963516235352}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996438026428223}, "created": {"value": true, "score": 0.9999306797981262}, "shared": {"value": false, "score": 0.0025163888931274414}}, "references": [{"label": "[6]", "normalizedForm": "[6]", "refKey": 6}]}, {"type": "software", "software-type": "software", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "software-name": {"rawForm": "FAUST", "normalizedForm": "FAUST", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "offsetStart": 61, "offsetEnd": 66}, "context": "In addition, to be able to calculate audio separately with a FAUST DSP independent from the browser audio context, we created an \"offline processor\" which will be used exclusively for getting the very first samples calculated by a DSP.", "mentionContextAttributes": {"used": {"value": false, "score": 0.022619783878326416}, "created": {"value": true, "score": 0.8531703352928162}, "shared": {"value": false, "score": 6.556510925292969e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996438026428223}, "created": {"value": true, "score": 0.9999306797981262}, "shared": {"value": false, "score": 0.0025163888931274414}}, "references": [{"label": "[6]", "normalizedForm": "[6]", "refKey": 6}]}, {"type": "software", "software-type": "software", "wikidataId": "Q20155677", "wikipediaExternalRef": 47013794, "lang": "en", "confidence": 0.9161, "software-name": {"rawForm": "WebAssembly", "normalizedForm": "WebAssembly", "wikidataId": "Q20155677", "wikipediaExternalRef": 47013794, "lang": "en", "confidence": 0.9161, "offsetStart": 62, "offsetEnd": 73}, "context": "Recent native to Web porting technologies like Emscripten and WebAssembly, as well as recognised Web standards (like WebComponents) have been heavily used.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0010769963264465332}, "created": {"value": false, "score": 0.0005623102188110352}, "shared": {"value": false, "score": 1.3649463653564453e-05}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9995498061180115}, "created": {"value": false, "score": 0.03601634502410889}, "shared": {"value": false, "score": 0.009379863739013672}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Chrome", "normalizedForm": "Chrome", "offsetStart": 66, "offsetEnd": 72}, "context": "Without this delay node, Firefox stops rendering the graph, while Chrome does not complain but adds, behind the scenes, a 3 ms delay (minimum size of an audio buffer is 128 frames hence a minimal delay of 128/sampling rate or roughly 3 ms at 44.1kHz). ", "mentionContextAttributes": {"used": {"value": false, "score": 0.004703104496002197}, "created": {"value": false, "score": 2.378225326538086e-05}, "shared": {"value": false, "score": 6.556510925292969e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.8741998076438904}, "created": {"value": false, "score": 0.0001042485237121582}, "shared": {"value": false, "score": 6.556510925292969e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q20155677", "wikipediaExternalRef": 47013794, "lang": "en", "confidence": 0.9161, "software-name": {"rawForm": "WebAssembly", "normalizedForm": "WebAssembly", "wikidataId": "Q20155677", "wikipediaExternalRef": 47013794, "lang": "en", "confidence": 0.9161, "offsetStart": 67, "offsetEnd": 78}, "context": "For the Web platform, two backends have been developed to generate WebAssembly text (so-called \"wast\" or \"wat\") and binary formats (so-called \"wasm\") [7] . ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00010222196578979492}, "created": {"value": false, "score": 0.03601634502410889}, "shared": {"value": false, "score": 4.470348358154297e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9995498061180115}, "created": {"value": false, "score": 0.03601634502410889}, "shared": {"value": false, "score": 0.009379863739013672}}}, {"type": "software", "software-type": "software", "wikidataId": "Q2814113", "wikipediaExternalRef": 35614465, "lang": "en", "confidence": 0.7797, "software-name": {"rawForm": "Emscripten", "normalizedForm": "Emscripten", "wikidataId": "Q2814113", "wikipediaExternalRef": 35614465, "lang": "en", "confidence": 0.7797, "offsetStart": 68, "offsetEnd": 78}, "context": "Already C/C++ written code can be transpiled to 2 WebAssembly using Emscripten [12], or by using domain specific languages for programming DSP algorithms that also compile to WebAssembly, like the mature Csound [ 14 ] with its set of WebAudio examples , or the recently announced SOUL DSP 3 1 https://www.reasonstudios.com/press/275-reasons-flagship-europa-synth-now-availa", "mentionContextAttributes": {"used": {"value": false, "score": 0.058709681034088135}, "created": {"value": false, "score": 1.1980533599853516e-05}, "shared": {"value": false, "score": 0.00020265579223632812}}, "documentContextAttributes": {"used": {"value": false, "score": 0.38988828659057617}, "created": {"value": true, "score": 0.9658463597297668}, "shared": {"value": false, "score": 0.001840829849243164}}, "references": [{"label": "[12]", "normalizedForm": "[12]", "refKey": 12, "offsetStart": 1599, "offsetEnd": 1603}, {"label": "[12]", "normalizedForm": "[12]", "refKey": 12, "offsetStart": 1599, "offsetEnd": 1603}]}, {"type": "software", "software-type": "software", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "software-name": {"rawForm": "FAUST", "normalizedForm": "FAUST", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "offsetStart": 70, "offsetEnd": 75}, "context": "A dedicated GUI builder is integrated in the online IDE that receives FAUST DSP's GUI definitions while it is compiled.", "mentionContextAttributes": {"used": {"value": false, "score": 0.017302632331848145}, "created": {"value": false, "score": 0.0002491474151611328}, "shared": {"value": false, "score": 4.947185516357422e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996438026428223}, "created": {"value": true, "score": 0.9999306797981262}, "shared": {"value": false, "score": 0.0025163888931274414}}, "references": [{"label": "[6]", "normalizedForm": "[6]", "refKey": 6}]}, {"type": "software", "software-type": "software", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "software-name": {"rawForm": "FAUST", "normalizedForm": "FAUST", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "offsetStart": 81, "offsetEnd": 86}, "context": "Thus it is impossible to get precise data in a specific buffer calculated by the FAUST DSP.", "mentionContextAttributes": {"used": {"value": false, "score": 0.18786752223968506}, "created": {"value": false, "score": 1.627206802368164e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996438026428223}, "created": {"value": true, "score": 0.9999306797981262}, "shared": {"value": false, "score": 0.0025163888931274414}}, "references": [{"label": "[6]", "normalizedForm": "[6]", "refKey": 6}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ChannelSplitterNode", "normalizedForm": "ChannelSplitterNode", "offsetStart": 81, "offsetEnd": 100}, "context": "Firstly, the AnalyserNode has only one input, which means it needs an additional ChannelSplitterNode to retrieve the correct channel from the FAUST DSP Node. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.04438161849975586}, "created": {"value": false, "score": 1.0907649993896484e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.04438161849975586}, "created": {"value": false, "score": 1.0907649993896484e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q20155677", "wikipediaExternalRef": 47013794, "lang": "en", "confidence": 0.9161, "software-name": {"rawForm": "WebAssembly", "normalizedForm": "WebAssembly", "wikidataId": "Q20155677", "wikipediaExternalRef": 47013794, "lang": "en", "confidence": 0.9161, "offsetStart": 83, "offsetEnd": 94}, "context": "\u2022 Compile the code: the input is the FAUST source code, the output is the compiled WebAssembly binary version with some related data \u2022 Load and wrap the module as a DSP processing function inside an AudioWorkletProcessor or a ScriptProcessor AudioNode", "mentionContextAttributes": {"used": {"value": true, "score": 0.6129092574119568}, "created": {"value": false, "score": 2.8312206268310547e-05}, "shared": {"value": false, "score": 3.993511199951172e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9995498061180115}, "created": {"value": false, "score": 0.03601634502410889}, "shared": {"value": false, "score": 0.009379863739013672}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "WebAudio API eXtension", "normalizedForm": "WebAudio API eXtension", "offsetStart": 83, "offsetEnd": 105}, "context": "proposal, and how it is related to other approaches like Web Audio Modules (WAMs), WebAudio API eXtension (WAAX) or JavaScript Audio Plugin (JSAP), see [11].", "mentionContextAttributes": {"used": {"value": false, "score": 0.00014472007751464844}, "created": {"value": false, "score": 0.0002504587173461914}, "shared": {"value": false, "score": 2.205371856689453e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00014472007751464844}, "created": {"value": false, "score": 0.0002504587173461914}, "shared": {"value": false, "score": 2.205371856689453e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "software-name": {"rawForm": "FAUST", "normalizedForm": "FAUST", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "offsetStart": 86, "offsetEnd": 91}, "context": "The second method consists of getting the sample values directly with a callback in a FAUST DSP AudioNode.", "mentionContextAttributes": {"used": {"value": false, "score": 0.007059156894683838}, "created": {"value": false, "score": 2.0682811737060547e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996438026428223}, "created": {"value": true, "score": 0.9999306797981262}, "shared": {"value": false, "score": 0.0025163888931274414}}, "references": [{"label": "[6]", "normalizedForm": "[6]", "refKey": 6}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "WebAudio", "normalizedForm": "WebAudio", "offsetStart": 86, "offsetEnd": 94}, "context": "Additional JavaScript glue code is added to transform DSP modules in fully functional WebAudio nodes.", "mentionContextAttributes": {"used": {"value": false, "score": 0.004198968410491943}, "created": {"value": false, "score": 0.0005718469619750977}, "shared": {"value": false, "score": 2.9206275939941406e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.38988834619522095}, "created": {"value": true, "score": 0.9990670680999756}, "shared": {"value": false, "score": 0.0013333559036254883}}}, {"type": "software", "software-type": "software", "wikidataId": "Q20155677", "wikipediaExternalRef": 47013794, "lang": "en", "confidence": 0.9161, "software-name": {"rawForm": "WebAssembly", "normalizedForm": "WebAssembly", "wikidataId": "Q20155677", "wikipediaExternalRef": 47013794, "lang": "en", "confidence": 0.9161, "offsetStart": 87, "offsetEnd": 98}, "context": "We chose the JavaScript version of KissFFT for its high 8 performance when compiled to WebAssembly . ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9995498061180115}, "created": {"value": false, "score": 4.464387893676758e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9995498061180115}, "created": {"value": false, "score": 0.03601634502410889}, "shared": {"value": false, "score": 0.009379863739013672}}}, {"type": "software", "software-type": "software", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "software-name": {"rawForm": "FAUST", "normalizedForm": "FAUST", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "offsetStart": 90, "offsetEnd": 95}, "context": "When embedded in the FAUST compiler running on the Web, they allow to dynamically compile FAUST DSP programs in pure Web applications. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0019522309303283691}, "created": {"value": false, "score": 0.0005375146865844727}, "shared": {"value": false, "score": 7.092952728271484e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996438026428223}, "created": {"value": true, "score": 0.9999306797981262}, "shared": {"value": false, "score": 0.0025163888931274414}}, "references": [{"label": "[6]", "normalizedForm": "[6]", "refKey": 6}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "asm", "normalizedForm": "asm", "offsetStart": 93, "offsetEnd": 96}, "context": "By adding an asm.js generating backend in the compiler, and compiling the compiler itself in asm.js/JavaScript using the Emscripten transpiler, the dynamic generation of WebAudio nodes from FAUST code has been demonstrated [16] [17].", "mentionContextAttributes": {"used": {"value": false, "score": 0.021566390991210938}, "created": {"value": false, "score": 0.0002887248992919922}, "shared": {"value": false, "score": 2.9206275939941406e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.021566390991210938}, "created": {"value": false, "score": 0.00039845705032348633}, "shared": {"value": false, "score": 1.4126300811767578e-05}}}, {"type": "software", "software-type": "software", "wikidataId": "Q20155677", "wikipediaExternalRef": 47013794, "lang": "en", "confidence": 0.9161, "software-name": {"rawForm": "WebAssembly", "normalizedForm": "WebAssembly", "wikidataId": "Q20155677", "wikipediaExternalRef": 47013794, "lang": "en", "confidence": 0.9161, "offsetStart": 94, "offsetEnd": 105}, "context": "A WAP plugin generated by the FAUST online IDE is a zipped archive file that contains the DSP WebAssembly module, the standard JSON WAP descriptor and the GUI code (HTML/CSS/JS) wrapped as a WebComponent. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.022242307662963867}, "created": {"value": false, "score": 3.17692756652832e-05}, "shared": {"value": false, "score": 2.0682811737060547e-05}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9995498061180115}, "created": {"value": false, "score": 0.03601634502410889}, "shared": {"value": false, "score": 0.009379863739013672}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "WebAudio", "normalizedForm": "WebAudio", "offsetStart": 95, "offsetEnd": 103}, "context": "This example shows the need for solutions such as FAUST to circumvent these limitations of the WebAudio standard.", "mentionContextAttributes": {"used": {"value": false, "score": 5.918741226196289e-05}, "created": {"value": false, "score": 0.04415661096572876}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.38988834619522095}, "created": {"value": true, "score": 0.9990670680999756}, "shared": {"value": false, "score": 0.0013333559036254883}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "AudioNode", "normalizedForm": "AudioNode", "offsetStart": 96, "offsetEnd": 105}, "context": "The second method consists of getting the sample values directly with a callback in a FAUST DSP AudioNode.", "mentionContextAttributes": {"used": {"value": false, "score": 0.007059156894683838}, "created": {"value": false, "score": 2.0682811737060547e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.6129092574119568}, "created": {"value": false, "score": 2.8312206268310547e-05}, "shared": {"value": false, "score": 3.993511199951172e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q20155677", "wikipediaExternalRef": 47013794, "lang": "en", "confidence": 0.9161, "software-name": {"rawForm": "WebAssembly", "normalizedForm": "WebAssembly", "wikidataId": "Q20155677", "wikipediaExternalRef": 47013794, "lang": "en", "confidence": 0.9161, "offsetStart": 100, "offsetEnd": 111}, "context": "As explained in the previous sections, the FAUST DSP code is compiled to a JavaScript wrapper and a WebAssembly module. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.06923317909240723}, "created": {"value": false, "score": 0.00014066696166992188}, "shared": {"value": false, "score": 9.953975677490234e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9995498061180115}, "created": {"value": false, "score": 0.03601634502410889}, "shared": {"value": false, "score": 0.009379863739013672}}}, {"type": "software", "software-type": "software", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "software-name": {"rawForm": "FAUST", "normalizedForm": "FAUST", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "offsetStart": 105, "offsetEnd": 110}, "context": "However, having a way to build and customize a GUI this way is a great time saver, full sync between the FAUST code and GUI is planned as future enhancements.", "mentionContextAttributes": {"used": {"value": false, "score": 6.860494613647461e-05}, "created": {"value": false, "score": 0.0009896159172058105}, "shared": {"value": false, "score": 1.6391277313232422e-05}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996438026428223}, "created": {"value": true, "score": 0.9999306797981262}, "shared": {"value": false, "score": 0.0025163888931274414}}, "references": [{"label": "[6]", "normalizedForm": "[6]", "refKey": 6}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "WebAudio Plugins", "normalizedForm": "WebAudio Plugins", "offsetStart": 105, "offsetEnd": 121}, "context": "After a FAUST DSP is tested in the editor, users can export the DSP to different architectures including WebAudio Plugins (WAPs). ", "mentionContextAttributes": {"used": {"value": false, "score": 0.003065943717956543}, "created": {"value": false, "score": 0.00014781951904296875}, "shared": {"value": false, "score": 0.0016504526138305664}}, "documentContextAttributes": {"used": {"value": false, "score": 0.003065943717956543}, "created": {"value": true, "score": 0.9251604080200195}, "shared": {"value": false, "score": 0.0016504526138305664}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "asm.", "normalizedForm": "asm", "offsetStart": 107, "offsetEnd": 111}, "context": "With the apparition of the more stable and better designed WebAssembly format in 2017, as a replacement of asm.js, the previous work done with asm.js has been adapted. ", "mentionContextAttributes": {"used": {"value": false, "score": 8.875131607055664e-05}, "created": {"value": false, "score": 0.00039845705032348633}, "shared": {"value": false, "score": 1.4126300811767578e-05}}, "documentContextAttributes": {"used": {"value": false, "score": 0.021566390991210938}, "created": {"value": false, "score": 0.00039845705032348633}, "shared": {"value": false, "score": 1.4126300811767578e-05}}}, {"type": "software", "software-type": "software", "wikidataId": "Q2814113", "wikipediaExternalRef": 35614465, "lang": "en", "confidence": 0.7797, "software-name": {"rawForm": "Emscripten", "normalizedForm": "Emscripten", "wikidataId": "Q2814113", "wikipediaExternalRef": 35614465, "lang": "en", "confidence": 0.7797, "offsetStart": 111, "offsetEnd": 121}, "context": "To do that, we plan to expose more of the already C++ written architectures files on JavaScript side thanks to Emscripten . ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00023651123046875}, "created": {"value": true, "score": 0.9658463597297668}, "shared": {"value": false, "score": 1.0132789611816406e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.38988828659057617}, "created": {"value": true, "score": 0.9658463597297668}, "shared": {"value": false, "score": 0.001840829849243164}}, "references": [{"label": "[12]", "normalizedForm": "[12]", "refKey": 12}, {"label": "[12]", "normalizedForm": "[12]", "refKey": 12}]}, {"type": "software", "software-type": "software", "wikidataId": "Q80535", "wikipediaExternalRef": 19996, "lang": "en", "confidence": 0.9025, "software-name": {"rawForm": "MIDI", "normalizedForm": "MIDI", "wikidataId": "Q80535", "wikipediaExternalRef": 19996, "lang": "en", "confidence": 0.9025, "offsetStart": 114, "offsetEnd": 118}, "context": "The authors' short term plans are to complete and stabilize the presented workflow, to add support for polyphonic MIDI controllable instrument plugins, and to develop more features within the WAP GUI Builder that currently provides basic editing tools.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0001609325408935547}, "created": {"value": false, "score": 0.4259111285209656}, "shared": {"value": false, "score": 9.238719940185547e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0011025667190551758}, "created": {"value": true, "score": 0.6967083215713501}, "shared": {"value": false, "score": 4.214048385620117e-05}}, "references": [{"label": "[15]", "normalizedForm": "[15]", "refKey": 15}]}, {"type": "software", "software-type": "software", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "software-name": {"rawForm": "FAUST", "normalizedForm": "FAUST", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "offsetStart": 117, "offsetEnd": 122}, "context": "The FAUST compiler is organized in successive stages, from the DSP block diagram to signals, and finally to the FIR (FAUST Imperative Representation) which is then translated into several target languages.", "mentionContextAttributes": {"used": {"value": false, "score": 0.15099191665649414}, "created": {"value": false, "score": 0.0002219676971435547}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996438026428223}, "created": {"value": true, "score": 0.9999306797981262}, "shared": {"value": false, "score": 0.0025163888931274414}}, "references": [{"label": "[6]", "normalizedForm": "[6]", "refKey": 6}]}, {"type": "software", "software-type": "software", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "software-name": {"rawForm": "FAUST", "normalizedForm": "FAUST", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "offsetStart": 117, "offsetEnd": 122}, "context": "\u2022 Continuous : similar to normal audio scopes, this mode draws in real time the most recent samples processed by the FAUST DSP.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0005384683609008789}, "created": {"value": false, "score": 1.1861324310302734e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996438026428223}, "created": {"value": true, "score": 0.9999306797981262}, "shared": {"value": false, "score": 0.0025163888931274414}}, "references": [{"label": "[6]", "normalizedForm": "[6]", "refKey": 6}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SoundTrap", "normalizedForm": "SoundTrap", "offsetStart": 120, "offsetEnd": 129}, "context": "With the emergence of Web-based audio software such as digital audio workstations (DAWs) developed by companies such as SoundTrap, BandLab or AmpedStudio, it was desirable to have a standard to make WebAudio instruments and effects interoperable as plugins compatible with these DAWs and more generally with any compatible host software. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0013442635536193848}, "created": {"value": false, "score": 0.1489698886871338}, "shared": {"value": false, "score": 5.894899368286133e-05}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0013442635536193848}, "created": {"value": false, "score": 0.1489698886871338}, "shared": {"value": false, "score": 5.894899368286133e-05}}}, {"type": "software", "software-type": "software", "wikidataId": "Q2814113", "wikipediaExternalRef": 35614465, "lang": "en", "confidence": 0.7797, "software-name": {"rawForm": "Emscripten", "normalizedForm": "Emscripten", "wikidataId": "Q2814113", "wikipediaExternalRef": 35614465, "lang": "en", "confidence": 0.7797, "offsetStart": 121, "offsetEnd": 131}, "context": "By adding an asm.js generating backend in the compiler, and compiling the compiler itself in asm.js/JavaScript using the Emscripten transpiler, the dynamic generation of WebAudio nodes from FAUST code has been demonstrated [16] [17].", "mentionContextAttributes": {"used": {"value": false, "score": 0.021566390991210938}, "created": {"value": false, "score": 0.0002887248992919922}, "shared": {"value": false, "score": 2.9206275939941406e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.38988828659057617}, "created": {"value": true, "score": 0.9658463597297668}, "shared": {"value": false, "score": 0.001840829849243164}}, "references": [{"label": "[12]", "normalizedForm": "[12]", "refKey": 12}, {"label": "[12]", "normalizedForm": "[12]", "refKey": 12}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "WebAudio", "normalizedForm": "WebAudio", "offsetStart": 124, "offsetEnd": 132}, "context": "For example, the Negative Feedback Loop (NFB) as in our push-pull tube amps simulations [1,2] is a tricky issue due to some WebAudio API limitations and divergences /bugs in how browsers generally parse the WebAudio graphs with loops. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00011640787124633789}, "created": {"value": false, "score": 0.00011223554611206055}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.38988834619522095}, "created": {"value": true, "score": 0.9990670680999756}, "shared": {"value": false, "score": 0.0013333559036254883}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "BandLab", "normalizedForm": "BandLab", "offsetStart": 131, "offsetEnd": 138}, "context": "With the emergence of Web-based audio software such as digital audio workstations (DAWs) developed by companies such as SoundTrap, BandLab or AmpedStudio, it was desirable to have a standard to make WebAudio instruments and effects interoperable as plugins compatible with these DAWs and more generally with any compatible host software. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0013442635536193848}, "created": {"value": false, "score": 0.1489698886871338}, "shared": {"value": false, "score": 5.894899368286133e-05}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0013442635536193848}, "created": {"value": false, "score": 0.1489698886871338}, "shared": {"value": false, "score": 5.894899368286133e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "WebAudio", "normalizedForm": "WebAudio", "offsetStart": 140, "offsetEnd": 148}, "context": "To this end, some initiatives have been proposed [3,9] and with other groups of researchers and developers we made in 2018 a proposal for a WebAudio plugins standard called WAP (WebAudio Pl ugins), which includes an API specification, an SDK, online plugin validation tools, and a series of plugin examples written in JavaScript but also with other languages .", "mentionContextAttributes": {"used": {"value": false, "score": 0.0002862215042114258}, "created": {"value": true, "score": 0.984636664390564}, "shared": {"value": false, "score": 0.0013333559036254883}}, "documentContextAttributes": {"used": {"value": false, "score": 0.38988834619522095}, "created": {"value": true, "score": 0.9990670680999756}, "shared": {"value": false, "score": 0.0013333559036254883}}}, {"type": "software", "software-type": "software", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "software-name": {"rawForm": "FAUST", "normalizedForm": "FAUST", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "offsetStart": 142, "offsetEnd": 147}, "context": "Firstly, the AnalyserNode has only one input, which means it needs an additional ChannelSplitterNode to retrieve the correct channel from the FAUST DSP Node.", "mentionContextAttributes": {"used": {"value": false, "score": 0.04438161849975586}, "created": {"value": false, "score": 1.0907649993896484e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996438026428223}, "created": {"value": true, "score": 0.9999306797981262}, "shared": {"value": false, "score": 0.0025163888931274414}}, "references": [{"label": "[6]", "normalizedForm": "[6]", "refKey": 6}]}, {"type": "software", "software-type": "software", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "software-name": {"rawForm": "FAUST", "normalizedForm": "FAUST", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "offsetStart": 142, "offsetEnd": 147}, "context": "In this example, all virtual pedal effects at the bottom of the screen have been coded and compiled with their GUI designed and tested in the FAUST online IDE.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9996438026428223}, "created": {"value": false, "score": 0.0008833408355712891}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996438026428223}, "created": {"value": true, "score": 0.9999306797981262}, "shared": {"value": false, "score": 0.0025163888931274414}}, "references": [{"label": "[6]", "normalizedForm": "[6]", "refKey": 6}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "AmpedStudio", "normalizedForm": "AmpedStudio", "offsetStart": 142, "offsetEnd": 153}, "context": "With the emergence of Web-based audio software such as digital audio workstations (DAWs) developed by companies such as SoundTrap, BandLab or AmpedStudio, it was desirable to have a standard to make WebAudio instruments and effects interoperable as plugins compatible with these DAWs and more generally with any compatible host software. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0013442635536193848}, "created": {"value": false, "score": 0.1489698886871338}, "shared": {"value": false, "score": 5.894899368286133e-05}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0013442635536193848}, "created": {"value": false, "score": 0.1489698886871338}, "shared": {"value": false, "score": 5.894899368286133e-05}}}, {"type": "software", "software-type": "software", "wikidataId": "Q13496636", "wikipediaExternalRef": 38962533, "lang": "en", "confidence": 0.9135, "software-name": {"rawForm": "asm.js", "normalizedForm": "asm.js", "wikidataId": "Q13496636", "wikipediaExternalRef": 38962533, "lang": "en", "confidence": 0.9135, "offsetStart": 143, "offsetEnd": 149}, "context": "With the apparition of the more stable and better designed WebAssembly format in 2017, as a replacement of asm.js, the previous work done with asm.js has been adapted. ", "mentionContextAttributes": {"used": {"value": false, "score": 8.875131607055664e-05}, "created": {"value": false, "score": 0.00039845705032348633}, "shared": {"value": false, "score": 1.4126300811767578e-05}}, "documentContextAttributes": {"used": {"value": false, "score": 8.875131607055664e-05}, "created": {"value": false, "score": 0.00039845705032348633}, "shared": {"value": false, "score": 1.4126300811767578e-05}}}, {"type": "software", "software-type": "software", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "software-name": {"rawForm": "FAUST", "normalizedForm": "FAUST", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "offsetStart": 144, "offsetEnd": 149}, "context": "In the next sections we will focus on a new online IDE we developed, that is well suited for coding, testing, publishing WAP plugins written in FAUST, directly in a Web browser.", "mentionContextAttributes": {"used": {"value": false, "score": 8.779764175415039e-05}, "created": {"value": true, "score": 0.999351441860199}, "shared": {"value": false, "score": 0.0025163888931274414}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996438026428223}, "created": {"value": true, "score": 0.9999306797981262}, "shared": {"value": false, "score": 0.0025163888931274414}}, "references": [{"label": "[6]", "normalizedForm": "[6]", "refKey": 6}]}, {"type": "software", "software-type": "software", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "software-name": {"rawForm": "FAUST", "normalizedForm": "FAUST", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "offsetStart": 148, "offsetEnd": 153}, "context": "The Emscripten module was previously implemented in the FAUST IDE using a JavaScript wrapper which allowed the application to compile and transform FAUST source code into a WebAudio node.", "mentionContextAttributes": {"used": {"value": false, "score": 0.38988828659057617}, "created": {"value": false, "score": 0.00411534309387207}, "shared": {"value": false, "score": 7.134675979614258e-05}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996438026428223}, "created": {"value": true, "score": 0.9999306797981262}, "shared": {"value": false, "score": 0.0025163888931274414}}, "references": [{"label": "[6]", "normalizedForm": "[6]", "refKey": 6}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "WebAudio", "normalizedForm": "WebAudio", "offsetStart": 149, "offsetEnd": 157}, "context": "FAUST also allows to circumvent some important buffer size issues that we encountered in our previous works on the implementation of signal loops in WebAudio. ", "mentionContextAttributes": {"used": {"value": false, "score": 3.510713577270508e-05}, "created": {"value": false, "score": 0.41912221908569336}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.38988834619522095}, "created": {"value": true, "score": 0.9990670680999756}, "shared": {"value": false, "score": 0.0013333559036254883}}}, {"type": "software", "software-type": "software", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "software-name": {"rawForm": "FAUST", "normalizedForm": "FAUST", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "offsetStart": 151, "offsetEnd": 156}, "context": "We designed four modes of signal visualisations: data table, oscilloscope (stacked and interleaved by channels), spectroscope and spectrogram, to help FAUST users to debug their DSPs.", "mentionContextAttributes": {"used": {"value": false, "score": 7.957220077514648e-05}, "created": {"value": true, "score": 0.9992694854736328}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996438026428223}, "created": {"value": true, "score": 0.9999306797981262}, "shared": {"value": false, "score": 0.0025163888931274414}}, "references": [{"label": "[6]", "normalizedForm": "[6]", "refKey": 6}]}, {"type": "software", "software-type": "software", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "software-name": {"rawForm": "FAUST", "normalizedForm": "FAUST", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "offsetStart": 151, "offsetEnd": 156}, "context": "We designed four modes of signal visualisations: data table, oscilloscope (stacked and interleaved by channels), spectroscope and spectrogram, to help FAUST users to debug their DSPs.", "mentionContextAttributes": {"used": {"value": false, "score": 7.957220077514648e-05}, "created": {"value": true, "score": 0.9992694854736328}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996438026428223}, "created": {"value": true, "score": 0.9999306797981262}, "shared": {"value": false, "score": 0.0025163888931274414}}, "references": [{"label": "[6]", "normalizedForm": "[6]", "refKey": 6}]}, {"type": "software", "software-type": "software", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "software-name": {"rawForm": "FAUST", "normalizedForm": "FAUST", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "offsetStart": 151, "offsetEnd": 156}, "context": "We designed four modes of signal visualisations: data table, oscilloscope (stacked and interleaved by channels), spectroscope and spectrogram, to help FAUST users to debug their DSPs.", "mentionContextAttributes": {"used": {"value": false, "score": 7.957220077514648e-05}, "created": {"value": true, "score": 0.9992694854736328}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996438026428223}, "created": {"value": true, "score": 0.9999306797981262}, "shared": {"value": false, "score": 0.0025163888931274414}}, "references": [{"label": "[6]", "normalizedForm": "[6]", "refKey": 6}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Chrome", "normalizedForm": "Chrome", "offsetStart": 168, "offsetEnd": 174}, "context": "With the current limitations, and quite strangely, a 3ms delay in the loop to conform to the specs, was bringing slightly different coloring of the amps between FF and Chrome.", "mentionContextAttributes": {"used": {"value": true, "score": 0.8741998076438904}, "created": {"value": false, "score": 0.0001042485237121582}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.8741998076438904}, "created": {"value": false, "score": 0.0001042485237121582}, "shared": {"value": false, "score": 6.556510925292969e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "WebAudio", "normalizedForm": "WebAudio", "offsetStart": 170, "offsetEnd": 178}, "context": "By adding an asm.js generating backend in the compiler, and compiling the compiler itself in asm.js/JavaScript using the Emscripten transpiler, the dynamic generation of WebAudio nodes from FAUST code has been demonstrated [16] [17].", "mentionContextAttributes": {"used": {"value": false, "score": 0.021566390991210938}, "created": {"value": false, "score": 0.0002887248992919922}, "shared": {"value": false, "score": 2.9206275939941406e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.38988834619522095}, "created": {"value": true, "score": 0.9990670680999756}, "shared": {"value": false, "score": 0.0013333559036254883}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "WebAudio", "normalizedForm": "WebAudio", "offsetStart": 173, "offsetEnd": 181}, "context": "The Emscripten module was previously implemented in the FAUST IDE using a JavaScript wrapper which allowed the application to compile and transform FAUST source code into a WebAudio node.", "mentionContextAttributes": {"used": {"value": false, "score": 0.38988834619522095}, "created": {"value": false, "score": 0.00411534309387207}, "shared": {"value": false, "score": 7.134675979614258e-05}}, "documentContextAttributes": {"used": {"value": false, "score": 0.38988834619522095}, "created": {"value": true, "score": 0.9990670680999756}, "shared": {"value": false, "score": 0.0013333559036254883}}}, {"type": "software", "software-type": "software", "wikidataId": "Q20155677", "wikipediaExternalRef": 47013794, "lang": "en", "confidence": 0.9161, "software-name": {"rawForm": "WebAssembly", "normalizedForm": "WebAssembly", "wikidataId": "Q20155677", "wikipediaExternalRef": 47013794, "lang": "en", "confidence": 0.9161, "offsetStart": 175, "offsetEnd": 186}, "context": "Already C/C++ written code can be transpiled to 2 WebAssembly using Emscripten [12], or by using domain specific languages for programming DSP algorithms that also compile to WebAssembly, like the mature Csound [ 14 ] with its set of WebAudio examples , or the recently announced SOUL DSP 3 1 https://www.reasonstudios.com/press/275-reasons-flagship-europa-synth-now-availa ", "mentionContextAttributes": {"used": {"value": false, "score": 0.05871003866195679}, "created": {"value": false, "score": 1.1980533599853516e-05}, "shared": {"value": false, "score": 0.00020265579223632812}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9995498061180115}, "created": {"value": false, "score": 0.03601634502410889}, "shared": {"value": false, "score": 0.009379863739013672}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "WebAudio Pl ugins", "normalizedForm": "WebAudio Pl ugins", "offsetStart": 178, "offsetEnd": 195}, "context": "To this end, some initiatives have been proposed [3,9] and with other groups of researchers and developers we made in 2018 a proposal for a WebAudio plugins standard called WAP (WebAudio Pl ugins), which includes an API specification, an SDK, online plugin validation tools, and a series of plugin examples written in JavaScript but also with other languages .", "mentionContextAttributes": {"used": {"value": false, "score": 0.0002862215042114258}, "created": {"value": true, "score": 0.984636664390564}, "shared": {"value": false, "score": 0.0013333559036254883}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0002862215042114258}, "created": {"value": true, "score": 0.984636664390564}, "shared": {"value": false, "score": 0.0013333559036254883}}}, {"type": "software", "software-type": "software", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "software-name": {"rawForm": "FAUST", "normalizedForm": "FAUST", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "offsetStart": 190, "offsetEnd": 195}, "context": "By adding an asm.js generating backend in the compiler, and compiling the compiler itself in asm.js/JavaScript using the Emscripten transpiler, the dynamic generation of WebAudio nodes from FAUST code has been demonstrated [16] [17].", "mentionContextAttributes": {"used": {"value": false, "score": 0.021566390991210938}, "created": {"value": false, "score": 0.0002887248992919922}, "shared": {"value": false, "score": 2.9206275939941406e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996438026428223}, "created": {"value": true, "score": 0.9999306797981262}, "shared": {"value": false, "score": 0.0025163888931274414}}, "references": [{"label": "[6]", "normalizedForm": "[6]", "refKey": 6}]}, {"type": "software", "software-type": "software", "wikidataId": "Q189210", "wikipediaExternalRef": 288311, "lang": "en", "confidence": 0.4543, "software-name": {"rawForm": "WebApp", "normalizedForm": "WebApp", "wikidataId": "Q189210", "wikipediaExternalRef": 288311, "lang": "en", "confidence": 0.4543, "offsetStart": 190, "offsetEnd": 196}, "context": "These examples serve as proof of concept for developers and also illustrate the power of the Web platform: plugins can be discovered from remote repositories, dynamically uploaded to a host WebApp and instantiated, connected together etc. ", "mentionContextAttributes": {"used": {"value": false, "score": 4.476308822631836e-05}, "created": {"value": false, "score": 0.004092693328857422}, "shared": {"value": false, "score": 0.0005100369453430176}}, "documentContextAttributes": {"used": {"value": false, "score": 4.476308822631836e-05}, "created": {"value": false, "score": 0.004092693328857422}, "shared": {"value": false, "score": 0.0005100369453430176}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "WebComponent", "normalizedForm": "WebComponent", "offsetStart": 191, "offsetEnd": 203}, "context": "A WAP plugin generated by the FAUST online IDE is a zipped archive file that contains the DSP WebAssembly module, the standard JSON WAP descriptor and the GUI code (HTML/CSS/JS) wrapped as a WebComponent. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.022242307662963867}, "created": {"value": false, "score": 3.17692756652832e-05}, "shared": {"value": false, "score": 2.0682811737060547e-05}}, "documentContextAttributes": {"used": {"value": false, "score": 0.022242307662963867}, "created": {"value": false, "score": 3.17692756652832e-05}, "shared": {"value": false, "score": 2.0682811737060547e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "WebAudio", "normalizedForm": "WebAudio", "offsetStart": 192, "offsetEnd": 200}, "context": "This paper presented the combined work of two teams deeply involved in the development of an audio DSP programming language and its complete ecosystem on the one hand, and the definition of a WebAudio plugin standard (WAP) and its complete surrounding environment on the other. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0026091933250427246}, "created": {"value": true, "score": 0.9990670680999756}, "shared": {"value": false, "score": 1.3709068298339844e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.38988834619522095}, "created": {"value": true, "score": 0.9990670680999756}, "shared": {"value": false, "score": 0.0013333559036254883}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "WAP GUI Builder", "normalizedForm": "WAP GUI Builder", "offsetStart": 192, "offsetEnd": 207}, "context": "The authors' short term plans are to complete and stabilize the presented workflow, to add support for polyphonic MIDI controllable instrument plugins, and to develop more features within the WAP GUI Builder that currently provides basic editing tools. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0001609325408935547}, "created": {"value": false, "score": 0.4259111285209656}, "shared": {"value": false, "score": 9.238719940185547e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0001609325408935547}, "created": {"value": false, "score": 0.4259111285209656}, "shared": {"value": false, "score": 9.238719940185547e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "WebAudio", "normalizedForm": "WebAudio", "offsetStart": 199, "offsetEnd": 207}, "context": "With the emergence of Web-based audio software such as digital audio workstations (DAWs) developed by companies such as SoundTrap, BandLab or AmpedStudio, it was desirable to have a standard to make WebAudio instruments and effects interoperable as plugins compatible with these DAWs and more generally with any compatible host software.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0013442635536193848}, "created": {"value": false, "score": 0.1489698886871338}, "shared": {"value": false, "score": 5.894899368286133e-05}}, "documentContextAttributes": {"used": {"value": false, "score": 0.38988834619522095}, "created": {"value": true, "score": 0.9990670680999756}, "shared": {"value": false, "score": 0.0013333559036254883}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "AudioWorkletProcessor", "normalizedForm": "AudioWorkletProcessor", "offsetStart": 199, "offsetEnd": 220}, "context": "\u2022 Compile the code: the input is the FAUST source code, the output is the compiled WebAssembly binary version with some related data \u2022 Load and wrap the module as a DSP processing function inside an AudioWorkletProcessor or a ScriptProcessor AudioNode", "mentionContextAttributes": {"used": {"value": true, "score": 0.6129092574119568}, "created": {"value": false, "score": 2.8312206268310547e-05}, "shared": {"value": false, "score": 3.993511199951172e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.6129092574119568}, "created": {"value": false, "score": 2.8312206268310547e-05}, "shared": {"value": false, "score": 3.993511199951172e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "WebAudio", "normalizedForm": "WebAudio", "offsetStart": 207, "offsetEnd": 215}, "context": "For example, the Negative Feedback Loop (NFB) as in our push-pull tube amps simulations [1,2] is a tricky issue due to some WebAudio API limitations and divergences /bugs in how browsers generally parse the WebAudio graphs with loops. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00011640787124633789}, "created": {"value": false, "score": 0.00011223554611206055}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.38988834619522095}, "created": {"value": true, "score": 0.9990670680999756}, "shared": {"value": false, "score": 0.0013333559036254883}}}, {"type": "software", "software-type": "software", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "software-name": {"rawForm": "FAUST", "normalizedForm": "FAUST", "wikidataId": "Q1398550", "wikipediaExternalRef": 4532356, "lang": "en", "confidence": 0.3648, "offsetStart": 209, "offsetEnd": 214}, "context": "Many examples of audio effects have been ported to WAPs directly by copying and pasting existing code from the Guitarix project , from the OWL pedal 14 project , or from diverse open source projects, into the FAUST 15 online IDE.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0024903416633605957}, "created": {"value": false, "score": 0.0001316070556640625}, "shared": {"value": false, "score": 0.00027930736541748047}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996438026428223}, "created": {"value": true, "score": 0.9999306797981262}, "shared": {"value": false, "score": 0.0025163888931274414}}, "references": [{"label": "[6]", "normalizedForm": "[6]", "refKey": 6}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ScriptProcessor", "normalizedForm": "ScriptProcessor", "offsetStart": 226, "offsetEnd": 241}, "context": "\u2022 Compile the code: the input is the FAUST source code, the output is the compiled WebAssembly binary version with some related data \u2022 Load and wrap the module as a DSP processing function inside an AudioWorkletProcessor or a ScriptProcessor AudioNode", "mentionContextAttributes": {"used": {"value": true, "score": 0.6129092574119568}, "created": {"value": false, "score": 2.8312206268310547e-05}, "shared": {"value": false, "score": 3.993511199951172e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.6129092574119568}, "created": {"value": false, "score": 2.8312206268310547e-05}, "shared": {"value": false, "score": 3.993511199951172e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "WebAudio", "normalizedForm": "WebAudio", "offsetStart": 234, "offsetEnd": 242}, "context": "Already C/C++ written code can be transpiled to 2 WebAssembly using Emscripten [12], or by using domain specific languages for programming DSP algorithms that also compile to WebAssembly, like the mature Csound [ 14 ] with its set of WebAudio examples , or the recently announced SOUL DSP 3 1 https://www.reasonstudios.com/press/275-reasons-flagship-europa-synth-now-availa ", "mentionContextAttributes": {"used": {"value": false, "score": 0.058709681034088135}, "created": {"value": false, "score": 1.1980533599853516e-05}, "shared": {"value": false, "score": 0.00020265579223632812}}, "documentContextAttributes": {"used": {"value": false, "score": 0.38988834619522095}, "created": {"value": true, "score": 0.9990670680999756}, "shared": {"value": false, "score": 0.0013333559036254883}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "AudioNode", "normalizedForm": "AudioNode", "offsetStart": 242, "offsetEnd": 251}, "context": "\u2022 Compile the code: the input is the FAUST source code, the output is the compiled WebAssembly binary version with some related data \u2022 Load and wrap the module as a DSP processing function inside an AudioWorkletProcessor or a ScriptProcessor AudioNode", "mentionContextAttributes": {"used": {"value": true, "score": 0.6129092574119568}, "created": {"value": false, "score": 2.8312206268310547e-05}, "shared": {"value": false, "score": 3.993511199951172e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.6129092574119568}, "created": {"value": false, "score": 2.8312206268310547e-05}, "shared": {"value": false, "score": 3.993511199951172e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q80535", "wikipediaExternalRef": 19996, "lang": "en", "confidence": 0.9025, "software-name": {"rawForm": "MIDI", "normalizedForm": "MIDI", "wikidataId": "Q80535", "wikipediaExternalRef": 19996, "lang": "en", "confidence": 0.9025, "offsetStart": 257, "offsetEnd": 261}, "context": "Additional generic code is added to connect the DSP computation itself with audio inputs/outputs, and with parameter controllers, which could be buttons, sliders, numerical entries etc. Architectures files can also possibly implement polyphonic support for MIDI controllable instruments, by automatically dealing with dynamic voice allocation, and decoding and mapping of incoming MIDI event s [15].", "mentionContextAttributes": {"used": {"value": false, "score": 0.0011025667190551758}, "created": {"value": false, "score": 0.009149432182312012}, "shared": {"value": false, "score": 2.3245811462402344e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0011025667190551758}, "created": {"value": true, "score": 0.6967083215713501}, "shared": {"value": false, "score": 4.214048385620117e-05}}, "references": [{"label": "[15]", "normalizedForm": "[15]", "refKey": 15}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "libsndfile", "normalizedForm": "libsndfile", "offsetStart": 267, "offsetEnd": 277}, "context": "Examples/d\u00e9mos of online validators can be tested online, see for example https://jsbin.com/jeretab/edit?js,output 12 Thats is handling the language 'soundfile' primitive which requires to implement a proper audio resources loading architecture 13 C++ code using the libsndfile library can directly be compiled to WebAssembly and ported in JavaScript ", "mentionContextAttributes": {"used": {"value": false, "score": 0.18919742107391357}, "created": {"value": false, "score": 6.854534149169922e-06}, "shared": {"value": false, "score": 0.009379804134368896}}, "documentContextAttributes": {"used": {"value": false, "score": 0.18919742107391357}, "created": {"value": false, "score": 6.854534149169922e-06}, "shared": {"value": false, "score": 0.009379804134368896}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Linux", "normalizedForm": "Linux", "offsetStart": 271, "offsetEnd": 276}, "context": "Several native audio plugin formats are now popular, including Steinberg's VST format (Virtual Studio Technology, created in 1997 by Cubase creators), Apple's Audio Units format (Logic Audio, GarageBand), Avid's AAX format (ProTools creators) and the LV2 format from the Linux audio community. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0005925893783569336}, "created": {"value": false, "score": 0.0010101795196533203}, "shared": {"value": false, "score": 6.848573684692383e-05}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0005925893783569336}, "created": {"value": false, "score": 0.0010101795196533203}, "shared": {"value": false, "score": 6.848573684692383e-05}}}, {"type": "software", "software-type": "software", "wikidataId": "Q20155677", "wikipediaExternalRef": 47013794, "lang": "en", "confidence": 0.9161, "software-name": {"rawForm": "WebAssembly", "normalizedForm": "WebAssembly", "wikidataId": "Q20155677", "wikipediaExternalRef": 47013794, "lang": "en", "confidence": 0.9161, "offsetStart": 314, "offsetEnd": 325}, "context": "Examples/d\u00e9mos of online validators can be tested online, see for example https://jsbin.com/jeretab/edit?js,output 12 Thats is handling the language 'soundfile' primitive which requires to implement a proper audio resources loading architecture 13 C++ code using the libsndfile library can directly be compiled to WebAssembly and ported in JavaScript ", "mentionContextAttributes": {"used": {"value": false, "score": 0.18919742107391357}, "created": {"value": false, "score": 6.794929504394531e-06}, "shared": {"value": false, "score": 0.009379863739013672}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9995498061180115}, "created": {"value": false, "score": 0.03601634502410889}, "shared": {"value": false, "score": 0.009379863739013672}}}, {"type": "software", "software-type": "software", "wikidataId": "Q80535", "wikipediaExternalRef": 19996, "lang": "en", "confidence": 0.9025, "software-name": {"rawForm": "MIDI", "normalizedForm": "MIDI", "wikidataId": "Q80535", "wikipediaExternalRef": 19996, "lang": "en", "confidence": 0.9025, "offsetStart": 381, "offsetEnd": 385}, "context": "Additional generic code is added to connect the DSP computation itself with audio inputs/outputs, and with parameter controllers, which could be buttons, sliders, numerical entries etc. Architectures files can also possibly implement polyphonic support for MIDI controllable instruments, by automatically dealing with dynamic voice allocation, and decoding and mapping of incoming MIDI event s [15].", "mentionContextAttributes": {"used": {"value": false, "score": 0.0011025667190551758}, "created": {"value": false, "score": 0.009149372577667236}, "shared": {"value": false, "score": 2.2649765014648438e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0011025667190551758}, "created": {"value": true, "score": 0.6967083215713501}, "shared": {"value": false, "score": 4.214048385620117e-05}}, "references": [{"label": "[15]", "normalizedForm": "[15]", "refKey": 15, "offsetStart": 6794, "offsetEnd": 6798}]}, {"type": "software", "software-type": "software", "wikidataId": "Q80535", "wikipediaExternalRef": 19996, "lang": "en", "confidence": 0.9025, "software-name": {"rawForm": "MIDI", "normalizedForm": "MIDI", "wikidataId": "Q80535", "wikipediaExternalRef": 19996, "lang": "en", "confidence": 0.9025, "offsetStart": 390, "offsetEnd": 394}, "context": "The project includes examples of very simple plugins and host software, but also more ambitious software to validate the WAP standard: a virtual guitar \"pedalboard\" that discovers plugins from several remote repositories, and allows the musician to chain for example virtual audio effects pedal plugins, synthesizers, guitar amplifier simulators, drum machines etc. and to control them via MIDI in real time (Figure 1). ", "mentionContextAttributes": {"used": {"value": false, "score": 8.630752563476562e-05}, "created": {"value": true, "score": 0.6967083215713501}, "shared": {"value": false, "score": 5.9604644775390625e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0011025667190551758}, "created": {"value": true, "score": 0.6967083215713501}, "shared": {"value": false, "score": 4.214048385620117e-05}}, "references": [{"label": "[15]", "normalizedForm": "[15]", "refKey": 15}]}], "references": [{"refKey": 6, "tei": "<biblStruct xml:id=\"b6\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">Syntactical and semantical aspects of Faust</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Y</forename><surname>Orlarey</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">D</forename><surname>Fober</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">S</forename><surname>Letz</surname></persName>\n\t\t</author>\n\t\t<idno type=\"DOI\">10.1007/s00500-004-0388-1</idno>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"j\">Soft Computing</title>\n\t\t<title level=\"j\" type=\"abbrev\">Soft Computing</title>\n\t\t<idno type=\"ISSN\">1432-7643</idno>\n\t\t<idno type=\"ISSNe\">1433-7479</idno>\n\t\t<imprint>\n\t\t\t<biblScope unit=\"volume\">8</biblScope>\n\t\t\t<biblScope unit=\"issue\">9</biblScope>\n\t\t\t<biblScope unit=\"page\">632</biblScope>\n\t\t\t<date type=\"published\" when=\"2004-07-15\">2004. 2004</date>\n\t\t\t<publisher>Springer Science and Business Media LLC</publisher>\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}, {"refKey": 12, "tei": "<biblStruct xml:id=\"b12\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">Emscripten</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Alon</forename><surname>Zakai</surname></persName>\n\t\t</author>\n\t\t<idno type=\"DOI\">10.1145/2048147.2048224</idno>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"m\">Proceedings of the ACM international conference companion on Object oriented programming systems languages and applications companion</title>\n\t\t<meeting>the ACM international conference companion on Object oriented programming systems languages and applications companion</meeting>\n\t\t<imprint>\n\t\t\t<publisher>ACM</publisher>\n\t\t\t<date type=\"published\" when=\"2011-10-22\">2011</date>\n\t\t\t<biblScope unit=\"page\">312</biblScope>\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}, {"refKey": 15, "tei": "<biblStruct xml:id=\"b15\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">Polyphony, sample-accurate control and MIDI support for FAUST DSP using combinable architecture files</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">S</forename><surname>Letz</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Y</forename><surname>Orlarey</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">D</forename><surname>Fober</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">R</forename><surname>Michon</surname></persName>\n\t\t</author>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"m\">Proceedings of Linux Audio Conference )</title>\n\t\t<meeting>Linux Audio Conference )</meeting>\n\t\t<imprint>\n\t\t\t<date>2017</date>\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}], "runtime": 65320, "id": "80b44996d09906e6d3422484360d0fd126b00786", "metadata": {"id": "80b44996d09906e6d3422484360d0fd126b00786"}, "original_file_path": "../../datalake/Samuel/SOFTware-Sync/data/xml_not_sofctied/hal-02366725.grobid.tei.xml", "file_name": "hal-02366725.grobid.tei.xml"}