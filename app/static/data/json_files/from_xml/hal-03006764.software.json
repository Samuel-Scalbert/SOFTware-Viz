{"application": "software-mentions", "version": "0.8.0", "date": "2024-10-07T11:41+0000", "md5": "BFD7AB567EB53D251D99B6089046AC58", "mentions": [{"type": "software", "software-type": "software", "software-name": {"rawForm": "GATK", "normalizedForm": "GATK", "offsetStart": 3, "offsetEnd": 7}, "context": "To GATK has been run with standard parameters. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.012177646160125732}, "created": {"value": false, "score": 0.026868343353271484}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.01400846242904663}, "created": {"value": false, "score": 0.12805670499801636}, "shared": {"value": false, "score": 1.430511474609375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "upVC", "normalizedForm": "upVC", "offsetStart": 9, "offsetEnd": 13}, "context": "However, upVC provides excellent results and legitimates our variant calling implementation on PIM architecture, knowing that the current code has plenty of room for improvement.", "mentionContextAttributes": {"used": {"value": false, "score": 4.3272972106933594e-05}, "created": {"value": false, "score": 0.18918567895889282}, "shared": {"value": false, "score": 5.960464477539062e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9791429042816162}, "created": {"value": true, "score": 0.7637346386909485}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "upVC", "normalizedForm": "upVC", "offsetStart": 12, "offsetEnd": 16}, "context": "Compared to upVC, the quality is clearly better.", "mentionContextAttributes": {"used": {"value": false, "score": 0.001831650733947754}, "created": {"value": false, "score": 0.00034439563751220703}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9791429042816162}, "created": {"value": true, "score": 0.7637346386909485}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "upVC", "normalizedForm": "upVC", "offsetStart": 15, "offsetEnd": 19}, "context": "EXPERIMENT The upVC software has been tested on a 1280 DPU prototype system running at 266 MHz on Human Genome. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9377744197845459}, "created": {"value": false, "score": 0.0002383589744567871}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9791429042816162}, "created": {"value": true, "score": 0.7637346386909485}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GATK", "normalizedForm": "GATK", "offsetStart": 23, "offsetEnd": 30}, "context": "Many software, such as GATK [1], Strelka2 [2], Varscan2 [3], SOAPsnp [4] or DeepVariant [5] have been developed for that purpose. ", "mentionContextAttributes": {"used": {"value": false, "score": 4.100799560546875e-05}, "created": {"value": false, "score": 0.002386331558227539}, "shared": {"value": false, "score": 1.430511474609375e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.01400846242904663}, "created": {"value": false, "score": 0.12805670499801636}, "shared": {"value": false, "score": 1.430511474609375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Strelka2", "normalizedForm": "Strelka2", "offsetStart": 33, "offsetEnd": 44}, "context": "Many software, such as GATK [1], Strelka2 [2], Varscan2 [3], SOAPsnp [4] or DeepVariant [5] have been developed for that purpose. ", "mentionContextAttributes": {"used": {"value": false, "score": 4.100799560546875e-05}, "created": {"value": false, "score": 0.002386331558227539}, "shared": {"value": false, "score": 1.430511474609375e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 4.100799560546875e-05}, "created": {"value": false, "score": 0.002386331558227539}, "shared": {"value": false, "score": 1.430511474609375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "upVC", "normalizedForm": "upVC", "offsetStart": 34, "offsetEnd": 38}, "context": "From a quality point of view, the upVC implementation is not intended to immediately compete with mature software such as GATK.", "mentionContextAttributes": {"used": {"value": false, "score": 4.982948303222656e-05}, "created": {"value": false, "score": 0.12805670499801636}, "shared": {"value": false, "score": 1.0728836059570312e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9791429042816162}, "created": {"value": true, "score": 0.7637346386909485}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "upVC", "normalizedForm": "upVC", "offsetStart": 35, "offsetEnd": 39}, "context": "We compare the performances of the upVC PIM implementation with two other hardware accelerators: Illumina DRAGEN using proprietary software on 8 FPGA Xilinx UltraScale Plus 16 nm FPGA [13], and Nvidia Parabricks using BWA-GATK4 on 8 NVIDIA\u00aeTesla\u00aeV100 GPUs [19].", "mentionContextAttributes": {"used": {"value": true, "score": 0.776488721370697}, "created": {"value": false, "score": 2.2172927856445312e-05}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9791429042816162}, "created": {"value": true, "score": 0.7637346386909485}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "upVC", "normalizedForm": "upVC", "offsetStart": 44, "offsetEnd": 48}, "context": "A generic variant calling algorithm, called upVC, has been implemented as a testbed on real PIM components to provide exact measurement and fair comparison with existing systems in terms of speed-up, energy consumption and cost.", "mentionContextAttributes": {"used": {"value": false, "score": 3.4928321838378906e-05}, "created": {"value": true, "score": 0.7637346386909485}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9791429042816162}, "created": {"value": true, "score": 0.7637346386909485}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Varscan2", "normalizedForm": "Varscan2", "offsetStart": 47, "offsetEnd": 58}, "context": "Many software, such as GATK [1], Strelka2 [2], Varscan2 [3], SOAPsnp [4] or DeepVariant [5] have been developed for that purpose. ", "mentionContextAttributes": {"used": {"value": false, "score": 4.100799560546875e-05}, "created": {"value": false, "score": 0.002386331558227539}, "shared": {"value": false, "score": 1.430511474609375e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 4.100799560546875e-05}, "created": {"value": false, "score": 0.002386331558227539}, "shared": {"value": false, "score": 1.430511474609375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GATK", "normalizedForm": "GATK", "offsetStart": 50, "offsetEnd": 54}, "context": "In terms of algorithms, they are identical to BWA-GATK4, using DNA-Bricks to port them over GPU architectures and do not represent an overhead cost to use the solution.", "mentionContextAttributes": {"used": {"value": false, "score": 0.01400846242904663}, "created": {"value": false, "score": 0.00010454654693603516}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.01400846242904663}, "created": {"value": false, "score": 0.12805670499801636}, "shared": {"value": false, "score": 1.430511474609375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SpeedSeq", "normalizedForm": "SpeedSeq", "offsetStart": 53, "offsetEnd": 66}, "context": "Other parallel pipelines for variant calling include SpeedSeq [11] and ADAM [12].", "mentionContextAttributes": {"used": {"value": false, "score": 0.000631868839263916}, "created": {"value": false, "score": 4.076957702636719e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.000631868839263916}, "created": {"value": false, "score": 4.076957702636719e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "references": [{"label": "[12]", "normalizedForm": "[12]", "refKey": 12, "offsetStart": 2065, "offsetEnd": 2069}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SOAPsnp", "normalizedForm": "SOAPsnp", "offsetStart": 61, "offsetEnd": 72}, "context": "Many software, such as GATK [1], Strelka2 [2], Varscan2 [3], SOAPsnp [4] or DeepVariant [5] have been developed for that purpose. ", "mentionContextAttributes": {"used": {"value": false, "score": 4.100799560546875e-05}, "created": {"value": false, "score": 0.002386331558227539}, "shared": {"value": false, "score": 1.430511474609375e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 4.100799560546875e-05}, "created": {"value": false, "score": 0.002386331558227539}, "shared": {"value": false, "score": 1.430511474609375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "vcf2diploid", "normalizedForm": "vcf2diploid", "offsetStart": 64, "offsetEnd": 75}, "context": "Paternal and maternal chromosomes have been generated using the vcf2diploid tool [22]. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999837875366211}, "created": {"value": false, "score": 1.1563301086425781e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999837875366211}, "created": {"value": false, "score": 1.1563301086425781e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 19, "offsetStart": 7189, "offsetEnd": 7193}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "upVC", "normalizedForm": "upVC", "offsetStart": 69, "offsetEnd": 73}, "context": "Though it does not reach an as high accuracy, development efforts on upVC are progressively narrowing the gap.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00029224157333374023}, "created": {"value": false, "score": 0.00794517993927002}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9791429042816162}, "created": {"value": true, "score": 0.7637346386909485}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ADAM", "normalizedForm": "ADAM", "offsetStart": 71, "offsetEnd": 79}, "context": "Other parallel pipelines for variant calling include SpeedSeq [11] and ADAM [12].", "mentionContextAttributes": {"used": {"value": false, "score": 0.000631868839263916}, "created": {"value": false, "score": 4.076957702636719e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.000631868839263916}, "created": {"value": false, "score": 4.076957702636719e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "upVC", "normalizedForm": "upVC", "offsetStart": 73, "offsetEnd": 77}, "context": "In order to have a ground truth to validate the correct functionality of upVC, a simulated sequencing dataset has been generated using the HG38 Human reference genome from which 3,153,377 small variants have been inserted.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9791429042816162}, "created": {"value": false, "score": 0.00016582012176513672}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9791429042816162}, "created": {"value": true, "score": 0.7637346386909485}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DeepVariant", "normalizedForm": "DeepVariant", "offsetStart": 76, "offsetEnd": 91}, "context": "Many software, such as GATK [1], Strelka2 [2], Varscan2 [3], SOAPsnp [4] or DeepVariant [5] have been developed for that purpose. ", "mentionContextAttributes": {"used": {"value": false, "score": 4.100799560546875e-05}, "created": {"value": false, "score": 0.002386331558227539}, "shared": {"value": false, "score": 1.430511474609375e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 4.100799560546875e-05}, "created": {"value": false, "score": 0.002386331558227539}, "shared": {"value": false, "score": 1.430511474609375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Linux", "normalizedForm": "Linux", "offsetStart": 119, "offsetEnd": 124}, "version": {"rawForm": ".0.0", "normalizedForm": ".0.0", "offsetStart": 105, "offsetEnd": 109}, "context": "The PIM architecture sits on an efficient toolchain centered around a LLVM based Ccompiler using LLVM v10.0.0 and with Linux drivers for x86 servers. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.04242807626724243}, "created": {"value": false, "score": 0.0024953484535217285}, "shared": {"value": false, "score": 4.410743713378906e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.04242807626724243}, "created": {"value": false, "score": 0.0024953484535217285}, "shared": {"value": false, "score": 4.410743713378906e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GATK", "normalizedForm": "GATK", "offsetStart": 122, "offsetEnd": 126}, "context": "From a quality point of view, the upVC implementation is not intended to immediately compete with mature software such as GATK.", "mentionContextAttributes": {"used": {"value": false, "score": 4.982948303222656e-05}, "created": {"value": false, "score": 0.12805670499801636}, "shared": {"value": false, "score": 1.0728836059570312e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.01400846242904663}, "created": {"value": false, "score": 0.12805670499801636}, "shared": {"value": false, "score": 1.430511474609375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "HugeSeq", "normalizedForm": "HugeSeq", "offsetStart": 128, "offsetEnd": 138}, "context": "Several methods have been proposed to accelerate variant calling by the means of parallel and distributed computing techniques: HugeSeq [6], MegaSeq [7], Churchill [8] and Halvade [9] support variant calling pipelines related to GATK [10]. ", "mentionContextAttributes": {"used": {"value": false, "score": 8.368492126464844e-05}, "created": {"value": false, "score": 0.00579756498336792}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 8.368492126464844e-05}, "created": {"value": false, "score": 0.00579756498336792}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GATK", "normalizedForm": "GATK", "offsetStart": 140, "offsetEnd": 144}, "context": "Among recent FPGA systems dedicated to genomic data analysis, the following platforms demonstrate significant speed-up compared to standard GATK software: the Illumina DRAGEN-Bio-IT platform [13] and the WASAI Lightning platform [14]. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00010800361633300781}, "created": {"value": false, "score": 0.0007104873657226562}, "shared": {"value": false, "score": 5.960464477539062e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.01400846242904663}, "created": {"value": false, "score": 0.12805670499801636}, "shared": {"value": false, "score": 1.430511474609375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MegaSeq", "normalizedForm": "MegaSeq", "offsetStart": 141, "offsetEnd": 151}, "context": "Several methods have been proposed to accelerate variant calling by the means of parallel and distributed computing techniques: HugeSeq [6], MegaSeq [7], Churchill [8] and Halvade [9] support variant calling pipelines related to GATK [10]. ", "mentionContextAttributes": {"used": {"value": false, "score": 8.368492126464844e-05}, "created": {"value": false, "score": 0.00579756498336792}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 8.368492126464844e-05}, "created": {"value": false, "score": 0.00579756498336792}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Churchill", "normalizedForm": "Churchill", "offsetStart": 154, "offsetEnd": 167}, "context": "Several methods have been proposed to accelerate variant calling by the means of parallel and distributed computing techniques: HugeSeq [6], MegaSeq [7], Churchill [8] and Halvade [9] support variant calling pipelines related to GATK [10]. ", "mentionContextAttributes": {"used": {"value": false, "score": 8.368492126464844e-05}, "created": {"value": false, "score": 0.00579756498336792}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 8.368492126464844e-05}, "created": {"value": false, "score": 0.00579756498336792}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "upVC", "normalizedForm": "upVC", "offsetStart": 155, "offsetEnd": 159}, "context": "The loading of the reference genome in MRAM is not considered as part of the computation time if enough PIM memory in a system allows single batch runs of upVC.", "mentionContextAttributes": {"used": {"value": false, "score": 0.022691786289215088}, "created": {"value": false, "score": 3.2782554626464844e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9791429042816162}, "created": {"value": true, "score": 0.7637346386909485}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Plus", "normalizedForm": "Plus", "offsetStart": 168, "offsetEnd": 172}, "context": "We compare the performances of the upVC PIM implementation with two other hardware accelerators: Illumina DRAGEN using proprietary software on 8 FPGA Xilinx UltraScale Plus 16 nm FPGA [13], and Nvidia Parabricks using BWA-GATK4 on 8 NVIDIA\u00aeTesla\u00aeV100 GPUs [19].", "mentionContextAttributes": {"used": {"value": true, "score": 0.776488721370697}, "created": {"value": false, "score": 2.2172927856445312e-05}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.776488721370697}, "created": {"value": false, "score": 2.2172927856445312e-05}, "shared": {"value": false, "score": 4.76837158203125e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Halvade", "normalizedForm": "Halvade", "offsetStart": 172, "offsetEnd": 183}, "context": "Several methods have been proposed to accelerate variant calling by the means of parallel and distributed computing techniques: HugeSeq [6], MegaSeq [7], Churchill [8] and Halvade [9] support variant calling pipelines related to GATK [10]. ", "mentionContextAttributes": {"used": {"value": false, "score": 8.368492126464844e-05}, "created": {"value": false, "score": 0.00579756498336792}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 8.368492126464844e-05}, "created": {"value": false, "score": 0.00579756498336792}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Nvidia Parabricks", "normalizedForm": "Nvidia Parabricks", "offsetStart": 194, "offsetEnd": 211}, "context": "We compare the performances of the upVC PIM implementation with two other hardware accelerators: Illumina DRAGEN using proprietary software on 8 FPGA Xilinx UltraScale Plus 16 nm FPGA [13], and Nvidia Parabricks using BWA-GATK4 on 8 NVIDIA\u00aeTesla\u00aeV100 GPUs [19].", "mentionContextAttributes": {"used": {"value": true, "score": 0.776488721370697}, "created": {"value": false, "score": 2.2172927856445312e-05}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.776488721370697}, "created": {"value": false, "score": 2.2172927856445312e-05}, "shared": {"value": false, "score": 4.76837158203125e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "-GATK4", "normalizedForm": "-GATK4", "offsetStart": 221, "offsetEnd": 227}, "context": "We compare the performances of the upVC PIM implementation with two other hardware accelerators: Illumina DRAGEN using proprietary software on 8 FPGA Xilinx UltraScale Plus 16 nm FPGA [13], and Nvidia Parabricks using BWA-GATK4 on 8 NVIDIA\u00aeTesla\u00aeV100 GPUs [19].", "mentionContextAttributes": {"used": {"value": true, "score": 0.776488721370697}, "created": {"value": false, "score": 2.2172927856445312e-05}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.776488721370697}, "created": {"value": false, "score": 2.2172927856445312e-05}, "shared": {"value": false, "score": 4.76837158203125e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GATK", "normalizedForm": "GATK", "offsetStart": 229, "offsetEnd": 237}, "context": "Several methods have been proposed to accelerate variant calling by the means of parallel and distributed computing techniques: HugeSeq [6], MegaSeq [7], Churchill [8] and Halvade [9] support variant calling pipelines related to GATK [10]. ", "mentionContextAttributes": {"used": {"value": false, "score": 8.368492126464844e-05}, "created": {"value": false, "score": 0.00579756498336792}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.01400846242904663}, "created": {"value": false, "score": 0.12805670499801636}, "shared": {"value": false, "score": 1.430511474609375e-06}}}], "references": [{"refKey": 12, "tei": "<biblStruct xml:id=\"b12\">\n\t<monogr>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">F</forename><surname>Nothaft</surname></persName>\n\t\t</author>\n\t\t<idno>UCB/EECS- 20IS-6S</idno>\n\t\t<title level=\"m\">Scalable Genome Resequencing with ADAM and avocado</title>\n\t\t<imprint>\n\t\t\t<date>2015</date>\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}, {"refKey": 19, "tei": "<biblStruct xml:id=\"b19\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">Combined DRAM and logic chip for massively parallel systems</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">P</forename><forename type=\"middle\">M</forename><surname>Kogge</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">T</forename><surname>Sunaga</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">H</forename><surname>Miyataka</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">K</forename><surname>Kitamura</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">E</forename><forename type=\"middle\">A E</forename><surname>Retter</surname></persName>\n\t\t</author>\n\t\t<idno type=\"DOI\">10.1109/arvlsi.1995.515607</idno>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"m\">Proceedings Sixteenth Conference on Advanced Research in VLSI</title>\n\t\t<meeting>Sixteenth Conference on Advanced Research in VLSI</meeting>\n\t\t<imprint>\n\t\t\t<publisher>IEEE Comput. Soc. Press</publisher>\n\t\t\t<date>1995</date>\n\t\t\t<biblScope unit=\"page\" from=\"4\" to=\"16\" />\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}], "runtime": 19911, "id": "dc755842379ddd4ef1c5fd63a33a4a6398c9db6c", "metadata": {"id": "dc755842379ddd4ef1c5fd63a33a4a6398c9db6c"}, "original_file_path": "../../datalake/Samuel/SOFTware-Sync/downloads/xml/hal-03006764.grobid.tei.xml", "file_name": "hal-03006764.grobid.tei.xml"}