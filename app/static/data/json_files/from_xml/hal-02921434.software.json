{"application": "software-mentions", "version": "0.8.0", "date": "2024-04-12T16:09+0000", "md5": "C4805C93856EA287C8F38F7E63125AC3", "mentions": [{"type": "software", "software-type": "software", "software-name": {"rawForm": "Obi-Wan", "normalizedForm": "Obi-Wan", "offsetStart": 0, "offsetEnd": 7}, "version": {"rawForm": "1.8", "normalizedForm": "1.8", "offsetStart": 29, "offsetEnd": 32}, "context": "Obi-Wan is developed in Java 1.8 on top of Tatooine [4], a mediator system handling JSON, relational, key-value and RDF data (based on MongoDB, Postgres, Redis, and Jena TDB, respectively); Tatooine also provides physical query operators (selections, joins etc.) within the mediator. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.003926277160644531}, "created": {"value": false, "score": 0.002039313316345215}, "shared": {"value": false, "score": 1.7285346984863281e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9735399484634399}, "created": {"value": false, "score": 0.002039313316345215}, "shared": {"value": false, "score": 1.7285346984863281e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "offsetStart": 15, "offsetEnd": 21}, "context": "However, while SPARQL allows querying the data together with the ontology, e.g., \"find the properties of node n, as well the classes to which the values of these properties belong\", a DL-based mediation approach shares with all logic-based query languages, e.g., Datalog, SQL etc., the inability to do so. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00011080503463745117}, "created": {"value": false, "score": 0.0002110004425048828}, "shared": {"value": false, "score": 4.470348358154297e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.007469117641448975}, "created": {"value": true, "score": 0.999842643737793}, "shared": {"value": false, "score": 4.470348358154297e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Obi-Wan", "normalizedForm": "Obi-Wan", "offsetStart": 21, "offsetEnd": 28}, "version": {"rawForm": "1.8", "normalizedForm": "1.8"}, "context": "For query rewriting, Obi-Wan relies on Graal [3], a toolkit for query answering in knowledge bases. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0013992786407470703}, "created": {"value": false, "score": 3.343820571899414e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9735399484634399}, "created": {"value": false, "score": 0.002039313316345215}, "shared": {"value": false, "score": 1.7285346984863281e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Obi-Wan", "normalizedForm": "Obi-Wan", "offsetStart": 23, "offsetEnd": 30}, "version": {"rawForm": "1.8", "normalizedForm": "1.8"}, "context": "Secondly, we will show Obi-Wan on a larger RIS (108M induced triples) used in the experiments of [6], based on an extended version of BSBM, with relational and JSON data sources. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9735399484634399}, "created": {"value": false, "score": 7.051229476928711e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9735399484634399}, "created": {"value": false, "score": 0.002039313316345215}, "shared": {"value": false, "score": 1.7285346984863281e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "offsetStart": 28, "offsetEnd": 34}, "context": "RDF mediators which support SPARQL but limited to querying the data only (not the ontology) appear in the row we label SPARQL-data.", "mentionContextAttributes": {"used": {"value": false, "score": 0.007469117641448975}, "created": {"value": false, "score": 5.3822994232177734e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.007469117641448975}, "created": {"value": true, "score": 0.999842643737793}, "shared": {"value": false, "score": 4.470348358154297e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Tatooine", "normalizedForm": "Tatooine", "offsetStart": 43, "offsetEnd": 54}, "language": {"rawForm": "Java", "normalizedForm": "Java", "wikidataId": "Q251", "offsetStart": 24, "offsetEnd": 28}, "context": "Obi-Wan is developed in Java 1.8 on top of Tatooine [4], a mediator system handling JSON, relational, key-value and RDF data (based on MongoDB, Postgres, Redis, and Jena TDB, respectively); Tatooine also provides physical query operators (selections, joins etc.) within the mediator. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.003926277160644531}, "created": {"value": false, "score": 0.002039313316345215}, "shared": {"value": false, "score": 1.7285346984863281e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.38644689321517944}, "created": {"value": false, "score": 0.002039313316345215}, "shared": {"value": false, "score": 1.7285346984863281e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "offsetStart": 75, "offsetEnd": 81}, "context": "We propose to demonstrate Obi-Wan, a novel GLAV mediator system supporting SPARQL queries over the data and the ontology, described in a recent work [6].", "mentionContextAttributes": {"used": {"value": false, "score": 0.00012683868408203125}, "created": {"value": true, "score": 0.999842643737793}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.007469117641448975}, "created": {"value": true, "score": 0.999842643737793}, "shared": {"value": false, "score": 4.470348358154297e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "offsetStart": 85, "offsetEnd": 91}, "context": "Users can query the (virtual) RDF graph containing this data by means of conjunctive SPARQL queries; query answers need to reflect not only the data exposed in the graph, but also the reasoning enabled by the ontology.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0005806684494018555}, "created": {"value": false, "score": 4.309415817260742e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.007469117641448975}, "created": {"value": true, "score": 0.999842643737793}, "shared": {"value": false, "score": 4.470348358154297e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "StarFighter", "normalizedForm": "StarFighter", "offsetStart": 91, "offsetEnd": 102}, "context": "This answer is obtained by matching q on the triples (:p, :pilotOf, _:b c ), (_:b c , \u03c4 , :StarFighter), (:pilotOf, \u227a sp , :uses), (:StarFighter, \u227a sc , :StarShip), (:p, :uses, :a), (:a, \u03c4 , :LightSaber) in the saturation of O \u222a G M E , where (:p, :uses, :a) is derived using the above-mentioned R a rule.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9996125102043152}, "created": {"value": false, "score": 3.159046173095703e-06}, "shared": {"value": false, "score": 2.086162567138672e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996125102043152}, "created": {"value": false, "score": 3.516674041748047e-06}, "shared": {"value": false, "score": 2.086162567138672e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "StarFighter", "normalizedForm": "StarFighter", "offsetStart": 92, "offsetEnd": 103}, "context": "We consider the following two mappings: m 1 with head q1 2 (x) \u2190 (x, :pilotOf, y), (y, \u03c4 , :StarFighter) and m 2 with head q 2 2 (x, y) \u2190 (x, :usesWeapon, y), (y, \u03c4 , :LightSaber), where \u03c4 is a shortcut for the property rdf:type.", "mentionContextAttributes": {"used": {"value": true, "score": 0.8373921513557434}, "created": {"value": false, "score": 3.516674041748047e-06}, "shared": {"value": false, "score": 1.6093254089355469e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996125102043152}, "created": {"value": false, "score": 3.516674041748047e-06}, "shared": {"value": false, "score": 2.086162567138672e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "offsetStart": 117, "offsetEnd": 123}, "context": "Accordingly, several mediators from the above CQ group have been extended to support RDF as an integration model and SPARQL query answering.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0007461309432983398}, "created": {"value": false, "score": 0.0019565224647521973}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.007469117641448975}, "created": {"value": true, "score": 0.999842643737793}, "shared": {"value": false, "score": 4.470348358154297e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "offsetStart": 119, "offsetEnd": 125}, "context": "RDF mediators which support SPARQL but limited to querying the data only (not the ontology) appear in the row we label SPARQL-data.", "mentionContextAttributes": {"used": {"value": false, "score": 0.007469117641448975}, "created": {"value": false, "score": 5.3822994232177734e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.007469117641448975}, "created": {"value": true, "score": 0.999842643737793}, "shared": {"value": false, "score": 4.470348358154297e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "offsetStart": 119, "offsetEnd": 125}, "context": "(iv) Recent RDF mediators lift this limitation to support joint querying of the data and ontology; we list them in the SPARQL row.", "mentionContextAttributes": {"used": {"value": false, "score": 0.001752316951751709}, "created": {"value": false, "score": 0.0043378472328186035}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.007469117641448975}, "created": {"value": true, "score": 0.999842643737793}, "shared": {"value": false, "score": 4.470348358154297e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "StarFighter", "normalizedForm": "StarFighter", "offsetStart": 120, "offsetEnd": 131}, "context": "This UCQ is finally rewritten using mappings seen as LAV views: m 1 is seen as V m 1 (x) \u2190 t(x, :pilotOf, y), t(y, \u03c4 , :StarFighter) and m 2 as V m 2 (x, y) \u2190 t(x, :usesWeapon, y), t(y, \u03c4 , :LightSaber).", "mentionContextAttributes": {"used": {"value": true, "score": 0.9989848136901855}, "created": {"value": false, "score": 2.4437904357910156e-06}, "shared": {"value": false, "score": 7.748603820800781e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996125102043152}, "created": {"value": false, "score": 3.516674041748047e-06}, "shared": {"value": false, "score": 2.086162567138672e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "StarFighter", "normalizedForm": "StarFighter", "offsetStart": 133, "offsetEnd": 144}, "context": "This answer is obtained by matching q on the triples (:p, :pilotOf, _:b c ), (_:b c , \u03c4 , :StarFighter), (:pilotOf, \u227a sp , :uses), (:StarFighter, \u227a sc , :StarShip), (:p, :uses, :a), (:a, \u03c4 , :LightSaber) in the saturation of O \u222a G M E , where (:p, :uses, :a) is derived using the above-mentioned R a rule.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9996125102043152}, "created": {"value": false, "score": 3.159046173095703e-06}, "shared": {"value": false, "score": 2.086162567138672e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996125102043152}, "created": {"value": false, "score": 3.516674041748047e-06}, "shared": {"value": false, "score": 2.086162567138672e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "offsetStart": 140, "offsetEnd": 146}, "context": "As Table 1 shows, Obi-Wan is the first capable of integrating multiple data sources of heterogeneous data models through GLAV mappings, for SPARQL querying over the data and the ontology.", "mentionContextAttributes": {"used": {"value": false, "score": 5.823373794555664e-05}, "created": {"value": false, "score": 0.001907944679260254}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.007469117641448975}, "created": {"value": true, "score": 0.999842643737793}, "shared": {"value": false, "score": 4.470348358154297e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "StarFighter", "normalizedForm": "StarFighter", "offsetStart": 142, "offsetEnd": 153}, "context": "The mappings in M a,O have the following heads (where added implicit triples are in blue): (m 1 ) q R a ,O 2 (x) \u2190 (x, :pilotOf, y), (y, \u03c4 , :StarFighter), (x, :uses, y), (y, \u03c4 , :StarShip), (y, \u03c4 , :FictionalObj), (x, \u03c4 , :Character) (m 2 ) q R a ,O 2 (x, y) \u2190(x, :usesWeapon, y), (y, \u03c4 , :LightSaber), (x, :uses, y), (y, \u03c4 , :FictionalObj), (x, \u03c4 , :Character) The reformulation Q c of q is: q(x, :pilotOf) \u2190 (x, :pilotOf, z), (z, \u03c4 , :StarFighter), (x, :uses, a), (a, \u03c4 , :LightSaber) \u222a q(x, :usesWeapon) \u2190(x, :usesWeapon, z), (z, \u03c4 , :StarFighter), (x, :uses, a), (a, \u03c4 , :LightSaber) Rewriting Q c using the views obtained from M a,O yields, as previously, q r (x, :pilotOf) \u2190 V m 1 (x), V m 2 (x, y), obtained from the first union term in Q c (the second term has no rewriting).", "mentionContextAttributes": {"used": {"value": true, "score": 0.9964787364006042}, "created": {"value": false, "score": 2.8014183044433594e-06}, "shared": {"value": false, "score": 1.4901161193847656e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996125102043152}, "created": {"value": false, "score": 3.516674041748047e-06}, "shared": {"value": false, "score": 2.086162567138672e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "StarShip", "normalizedForm": "StarShip", "offsetStart": 148, "offsetEnd": 156}, "context": "Consider the RIS S = \u27e8O, R, M, E\u27e9 introduced in the previous examples and the query q(x, y) \u2190 (x, y, z), (z, \u03c4 , t), (y, \u227a sp , :uses), (t, \u227a sc , :StarShip), (x, :uses, a), (a, \u03c4 , :LightSaber) asking \"Who uses a light saber, and how is she/he using starships?\"", "mentionContextAttributes": {"used": {"value": true, "score": 0.9674071669578552}, "created": {"value": false, "score": 3.039836883544922e-06}, "shared": {"value": false, "score": 1.6093254089355469e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996125102043152}, "created": {"value": false, "score": 3.874301910400391e-06}, "shared": {"value": false, "score": 2.086162567138672e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "StarShip", "normalizedForm": "StarShip", "offsetStart": 154, "offsetEnd": 162}, "context": "This answer is obtained by matching q on the triples (:p, :pilotOf, _:b c ), (_:b c , \u03c4 , :StarFighter), (:pilotOf, \u227a sp , :uses), (:StarFighter, \u227a sc , :StarShip), (:p, :uses, :a), (:a, \u03c4 , :LightSaber) in the saturation of O \u222a G M E , where (:p, :uses, :a) is derived using the above-mentioned R a rule.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9996125102043152}, "created": {"value": false, "score": 3.159046173095703e-06}, "shared": {"value": false, "score": 2.086162567138672e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996125102043152}, "created": {"value": false, "score": 3.874301910400391e-06}, "shared": {"value": false, "score": 2.086162567138672e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "StarShip", "normalizedForm": "StarShip", "offsetStart": 161, "offsetEnd": 169}, "context": "Star Wars example scenario Consider the (partial) ontology: O = {(:uses, \u2190 d , :Character), (:uses, \u2192 r , :FictionalObj), (:LightSaber, \u227a sc , :FictionalObj), (:StarShip, \u227a sc , :FictionalObj), (:StarFighter, \u227a sc , :StarShip), (:usesWeapon, \u227a sp , :uses) (:pilotOf, \u227a sp , :uses), (:pilotOf, \u2192 r , :StarShip)} where \u227a sc , \u227a sp , \u2190 d and \u2192 r stand for the RDFS properties sub-ClassOf, subPropertyOf, domain and range, respectively.", "mentionContextAttributes": {"used": {"value": true, "score": 0.8568820357322693}, "created": {"value": false, "score": 3.039836883544922e-06}, "shared": {"value": false, "score": 1.3709068298339844e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996125102043152}, "created": {"value": false, "score": 3.874301910400391e-06}, "shared": {"value": false, "score": 2.086162567138672e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "StarShip", "normalizedForm": "StarShip", "offsetStart": 180, "offsetEnd": 188}, "context": "The mappings in M a,O have the following heads (where added implicit triples are in blue): (m 1 ) q R a ,O 2 (x) \u2190 (x, :pilotOf, y), (y, \u03c4 , :StarFighter), (x, :uses, y), (y, \u03c4 , :StarShip), (y, \u03c4 , :FictionalObj), (x, \u03c4 , :Character) (m 2 ) q R a ,O 2 (x, y) \u2190(x, :usesWeapon, y), (y, \u03c4 , :LightSaber), (x, :uses, y), (y, \u03c4 , :FictionalObj), (x, \u03c4 , :Character) The reformulation Q c of q is: q(x, :pilotOf) \u2190 (x, :pilotOf, z), (z, \u03c4 , :StarFighter), (x, :uses, a), (a, \u03c4 , :LightSaber) \u222a q(x, :usesWeapon) \u2190(x, :usesWeapon, z), (z, \u03c4 , :StarFighter), (x, :uses, a), (a, \u03c4 , :LightSaber) Rewriting Q c using the views obtained from M a,O yields, as previously, q r (x, :pilotOf) \u2190 V m 1 (x), V m 2 (x, y), obtained from the first union term in Q c (the second term has no rewriting).", "mentionContextAttributes": {"used": {"value": true, "score": 0.9964787364006042}, "created": {"value": false, "score": 2.8014183044433594e-06}, "shared": {"value": false, "score": 1.4901161193847656e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996125102043152}, "created": {"value": false, "score": 3.874301910400391e-06}, "shared": {"value": false, "score": 2.086162567138672e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "StarShip", "normalizedForm": "StarShip", "offsetStart": 187, "offsetEnd": 195}, "context": "R c rules state that \u227a sc and \u227a sp are transitive; they also allow deducing new triples with property \u2190 d or \u2192 r , e.g., the triple (:pilotOf, \u2192 r , :FictionalObj) from (:pilotOf, \u2192 r , :StarShip) and (:StarShip, \u227a sc , :FictionalObj). ", "mentionContextAttributes": {"used": {"value": false, "score": 0.057262420654296875}, "created": {"value": false, "score": 3.874301910400391e-06}, "shared": {"value": false, "score": 1.0132789611816406e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996125102043152}, "created": {"value": false, "score": 3.874301910400391e-06}, "shared": {"value": false, "score": 2.086162567138672e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Tatooine", "normalizedForm": "Tatooine", "offsetStart": 190, "offsetEnd": 198}, "language": {"rawForm": "Java", "normalizedForm": "Java"}, "context": "Obi-Wan is developed in Java 1.8 on top of Tatooine [4], a mediator system handling JSON, relational, key-value and RDF data (based on MongoDB, Postgres, Redis, and Jena TDB, respectively); Tatooine also provides physical query operators (selections, joins etc.) within the mediator. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.003926277160644531}, "created": {"value": false, "score": 0.002039313316345215}, "shared": {"value": false, "score": 1.7285346984863281e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.38644689321517944}, "created": {"value": false, "score": 0.002039313316345215}, "shared": {"value": false, "score": 1.7285346984863281e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Tatooine", "normalizedForm": "Tatooine", "offsetStart": 195, "offsetEnd": 203}, "language": {"rawForm": "Java", "normalizedForm": "Java"}, "context": "For each (RIS, query) pair, the query reformulation/rewriting stages and mappings transformations are visualized in step-by-step fashion through a sequence of dedicated visualizations, until the Tatooine query execution plan which computes the final results (see Figure 4). ", "mentionContextAttributes": {"used": {"value": false, "score": 0.38644689321517944}, "created": {"value": false, "score": 1.3053417205810547e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.38644689321517944}, "created": {"value": false, "score": 0.002039313316345215}, "shared": {"value": false, "score": 1.7285346984863281e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "StarFighter", "normalizedForm": "StarFighter", "offsetStart": 199, "offsetEnd": 210}, "context": "Since RIS data triples are not materialized, we rewrite Q c ,a , seen as a union of CQs (UCQ), using the RIS mappings M seen M mapping saturation Q c ,a = q(x, :pilotOf) \u2190 (x, :pilotOf, z), (z, \u03c4 , :StarFighter), (x, :uses, a), (a, \u03c4 , :LightSaber) \u222a q(x, :pilotOf) \u2190 (x, :pilotOf, z), (z, \u03c4 , :StarFighter), (x, :usesWeapon, a), (a, \u03c4 , :LightSaber) \u222a q(x, :pilotOf) \u2190 (x, :pilotOf, z), (z, \u03c4 , :StarFighter), (x, :pilotOf, a), (a, \u03c4 , :LightSaber) \u222a q(x, :usesWeapon) \u2190(x, :usesWeapon, z), (z, \u03c4 , :StarFighter), (x, :uses, a), (a, \u03c4 , :LightSaber) \u222a q(x, :usesWeapon) \u2190(x, :usesWeapon, z), (z, \u03c4 , :StarFighter), (x, :usesWeapon, a), (a, \u03c4 , :LightSaber) \u222a q(x, :usesWeapon) \u2190(x, :usesWeapon, z), (z, \u03c4 , :StarFighter), (x, :pilotOf, a), (a, \u03c4 , :LightSaber) as relational LAV views (step ( 2)). ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9996092915534973}, "created": {"value": false, "score": 2.086162567138672e-06}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996125102043152}, "created": {"value": false, "score": 3.516674041748047e-06}, "shared": {"value": false, "score": 2.086162567138672e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "StarShip", "normalizedForm": "StarShip", "offsetStart": 203, "offsetEnd": 211}, "context": "R c rules state that \u227a sc and \u227a sp are transitive; they also allow deducing new triples with property \u2190 d or \u2192 r , e.g., the triple (:pilotOf, \u2192 r , :FictionalObj) from (:pilotOf, \u2192 r , :StarShip) and (:StarShip, \u227a sc , :FictionalObj). ", "mentionContextAttributes": {"used": {"value": false, "score": 0.057262420654296875}, "created": {"value": false, "score": 3.874301910400391e-06}, "shared": {"value": false, "score": 1.0132789611816406e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996125102043152}, "created": {"value": false, "score": 3.874301910400391e-06}, "shared": {"value": false, "score": 2.086162567138672e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "StarShip", "normalizedForm": "StarShip", "offsetStart": 217, "offsetEnd": 225}, "context": "Star Wars example scenario Consider the (partial) ontology: O = {(:uses, \u2190 d , :Character), (:uses, \u2192 r , :FictionalObj), (:LightSaber, \u227a sc , :FictionalObj), (:StarShip, \u227a sc , :FictionalObj), (:StarFighter, \u227a sc , :StarShip), (:usesWeapon, \u227a sp , :uses) (:pilotOf, \u227a sp , :uses), (:pilotOf, \u2192 r , :StarShip)} where \u227a sc , \u227a sp , \u2190 d and \u2192 r stand for the RDFS properties sub-ClassOf, subPropertyOf, domain and range, respectively.", "mentionContextAttributes": {"used": {"value": true, "score": 0.8568820357322693}, "created": {"value": false, "score": 3.039836883544922e-06}, "shared": {"value": false, "score": 1.3709068298339844e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996125102043152}, "created": {"value": false, "score": 3.874301910400391e-06}, "shared": {"value": false, "score": 2.086162567138672e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "offsetStart": 241, "offsetEnd": 247}, "context": "(iii) RDF is naturally suited as an integration model, thanks to its flexibility, its wide adoption in the Open Data community, its close relationship with ontology languages such as RDFS and OWL, and the presence of its associated standard SPARQL query language.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00016450881958007812}, "created": {"value": false, "score": 0.0009557604789733887}, "shared": {"value": false, "score": 1.1324882507324219e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.007469117641448975}, "created": {"value": true, "score": 0.999842643737793}, "shared": {"value": false, "score": 4.470348358154297e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "StarFighter", "normalizedForm": "StarFighter", "offsetStart": 295, "offsetEnd": 306}, "context": "Since RIS data triples are not materialized, we rewrite Q c ,a , seen as a union of CQs (UCQ), using the RIS mappings M seen M mapping saturation Q c ,a = q(x, :pilotOf) \u2190 (x, :pilotOf, z), (z, \u03c4 , :StarFighter), (x, :uses, a), (a, \u03c4 , :LightSaber) \u222a q(x, :pilotOf) \u2190 (x, :pilotOf, z), (z, \u03c4 , :StarFighter), (x, :usesWeapon, a), (a, \u03c4 , :LightSaber) \u222a q(x, :pilotOf) \u2190 (x, :pilotOf, z), (z, \u03c4 , :StarFighter), (x, :pilotOf, a), (a, \u03c4 , :LightSaber) \u222a q(x, :usesWeapon) \u2190(x, :usesWeapon, z), (z, \u03c4 , :StarFighter), (x, :uses, a), (a, \u03c4 , :LightSaber) \u222a q(x, :usesWeapon) \u2190(x, :usesWeapon, z), (z, \u03c4 , :StarFighter), (x, :usesWeapon, a), (a, \u03c4 , :LightSaber) \u222a q(x, :usesWeapon) \u2190(x, :usesWeapon, z), (z, \u03c4 , :StarFighter), (x, :pilotOf, a), (a, \u03c4 , :LightSaber) as relational LAV views (step ( 2)).", "mentionContextAttributes": {"used": {"value": true, "score": 0.9996092915534973}, "created": {"value": false, "score": 2.086162567138672e-06}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996125102043152}, "created": {"value": false, "score": 3.516674041748047e-06}, "shared": {"value": false, "score": 2.086162567138672e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "StarShip", "normalizedForm": "StarShip", "offsetStart": 300, "offsetEnd": 308}, "context": "Star Wars example scenario Consider the (partial) ontology: O = {(:uses, \u2190 d , :Character), (:uses, \u2192 r , :FictionalObj), (:LightSaber, \u227a sc , :FictionalObj), (:StarShip, \u227a sc , :FictionalObj), (:StarFighter, \u227a sc , :StarShip), (:usesWeapon, \u227a sp , :uses) (:pilotOf, \u227a sp , :uses), (:pilotOf, \u2192 r , :StarShip)} where \u227a sc , \u227a sp , \u2190 d and \u2192 r stand for the RDFS properties sub-ClassOf, subPropertyOf, domain and range, respectively.", "mentionContextAttributes": {"used": {"value": true, "score": 0.8568820357322693}, "created": {"value": false, "score": 3.039836883544922e-06}, "shared": {"value": false, "score": 1.3709068298339844e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996125102043152}, "created": {"value": false, "score": 3.874301910400391e-06}, "shared": {"value": false, "score": 2.086162567138672e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "StarFighter", "normalizedForm": "StarFighter", "offsetStart": 397, "offsetEnd": 408}, "context": "Since RIS data triples are not materialized, we rewrite Q c ,a , seen as a union of CQs (UCQ), using the RIS mappings M seen M mapping saturation Q c ,a = q(x, :pilotOf) \u2190 (x, :pilotOf, z), (z, \u03c4 , :StarFighter), (x, :uses, a), (a, \u03c4 , :LightSaber) \u222a q(x, :pilotOf) \u2190 (x, :pilotOf, z), (z, \u03c4 , :StarFighter), (x, :usesWeapon, a), (a, \u03c4 , :LightSaber) \u222a q(x, :pilotOf) \u2190 (x, :pilotOf, z), (z, \u03c4 , :StarFighter), (x, :pilotOf, a), (a, \u03c4 , :LightSaber) \u222a q(x, :usesWeapon) \u2190(x, :usesWeapon, z), (z, \u03c4 , :StarFighter), (x, :uses, a), (a, \u03c4 , :LightSaber) \u222a q(x, :usesWeapon) \u2190(x, :usesWeapon, z), (z, \u03c4 , :StarFighter), (x, :usesWeapon, a), (a, \u03c4 , :LightSaber) \u222a q(x, :usesWeapon) \u2190(x, :usesWeapon, z), (z, \u03c4 , :StarFighter), (x, :pilotOf, a), (a, \u03c4 , :LightSaber) as relational LAV views (step ( 2)).", "mentionContextAttributes": {"used": {"value": true, "score": 0.9996092915534973}, "created": {"value": false, "score": 2.086162567138672e-06}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996125102043152}, "created": {"value": false, "score": 3.516674041748047e-06}, "shared": {"value": false, "score": 2.086162567138672e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "StarFighter", "normalizedForm": "StarFighter", "offsetStart": 438, "offsetEnd": 449}, "context": "The mappings in M a,O have the following heads (where added implicit triples are in blue): (m 1 ) q R a ,O 2 (x) \u2190 (x, :pilotOf, y), (y, \u03c4 , :StarFighter), (x, :uses, y), (y, \u03c4 , :StarShip), (y, \u03c4 , :FictionalObj), (x, \u03c4 , :Character) (m 2 ) q R a ,O 2 (x, y) \u2190(x, :usesWeapon, y), (y, \u03c4 , :LightSaber), (x, :uses, y), (y, \u03c4 , :FictionalObj), (x, \u03c4 , :Character) The reformulation Q c of q is: q(x, :pilotOf) \u2190 (x, :pilotOf, z), (z, \u03c4 , :StarFighter), (x, :uses, a), (a, \u03c4 , :LightSaber) \u222a q(x, :usesWeapon) \u2190(x, :usesWeapon, z), (z, \u03c4 , :StarFighter), (x, :uses, a), (a, \u03c4 , :LightSaber) Rewriting Q c using the views obtained from M a,O yields, as previously, q r (x, :pilotOf) \u2190 V m 1 (x), V m 2 (x, y), obtained from the first union term in Q c (the second term has no rewriting).", "mentionContextAttributes": {"used": {"value": true, "score": 0.9964787364006042}, "created": {"value": false, "score": 2.8014183044433594e-06}, "shared": {"value": false, "score": 1.4901161193847656e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996125102043152}, "created": {"value": false, "score": 3.516674041748047e-06}, "shared": {"value": false, "score": 2.086162567138672e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "StarFighter", "normalizedForm": "StarFighter", "offsetStart": 501, "offsetEnd": 512}, "context": "Since RIS data triples are not materialized, we rewrite Q c ,a , seen as a union of CQs (UCQ), using the RIS mappings M seen M mapping saturation Q c ,a = q(x, :pilotOf) \u2190 (x, :pilotOf, z), (z, \u03c4 , :StarFighter), (x, :uses, a), (a, \u03c4 , :LightSaber) \u222a q(x, :pilotOf) \u2190 (x, :pilotOf, z), (z, \u03c4 , :StarFighter), (x, :usesWeapon, a), (a, \u03c4 , :LightSaber) \u222a q(x, :pilotOf) \u2190 (x, :pilotOf, z), (z, \u03c4 , :StarFighter), (x, :pilotOf, a), (a, \u03c4 , :LightSaber) \u222a q(x, :usesWeapon) \u2190(x, :usesWeapon, z), (z, \u03c4 , :StarFighter), (x, :uses, a), (a, \u03c4 , :LightSaber) \u222a q(x, :usesWeapon) \u2190(x, :usesWeapon, z), (z, \u03c4 , :StarFighter), (x, :usesWeapon, a), (a, \u03c4 , :LightSaber) \u222a q(x, :usesWeapon) \u2190(x, :usesWeapon, z), (z, \u03c4 , :StarFighter), (x, :pilotOf, a), (a, \u03c4 , :LightSaber) as relational LAV views (step ( 2)).", "mentionContextAttributes": {"used": {"value": true, "score": 0.9996092915534973}, "created": {"value": false, "score": 2.0265579223632812e-06}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996125102043152}, "created": {"value": false, "score": 3.516674041748047e-06}, "shared": {"value": false, "score": 2.086162567138672e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "StarFighter", "normalizedForm": "StarFighter", "offsetStart": 539, "offsetEnd": 550}, "context": "The mappings in M a,O have the following heads (where added implicit triples are in blue): (m 1 ) q R a ,O 2 (x) \u2190 (x, :pilotOf, y), (y, \u03c4 , :StarFighter), (x, :uses, y), (y, \u03c4 , :StarShip), (y, \u03c4 , :FictionalObj), (x, \u03c4 , :Character) (m 2 ) q R a ,O 2 (x, y) \u2190(x, :usesWeapon, y), (y, \u03c4 , :LightSaber), (x, :uses, y), (y, \u03c4 , :FictionalObj), (x, \u03c4 , :Character) The reformulation Q c of q is: q(x, :pilotOf) \u2190 (x, :pilotOf, z), (z, \u03c4 , :StarFighter), (x, :uses, a), (a, \u03c4 , :LightSaber) \u222a q(x, :usesWeapon) \u2190(x, :usesWeapon, z), (z, \u03c4 , :StarFighter), (x, :uses, a), (a, \u03c4 , :LightSaber) Rewriting Q c using the views obtained from M a,O yields, as previously, q r (x, :pilotOf) \u2190 V m 1 (x), V m 2 (x, y), obtained from the first union term in Q c (the second term has no rewriting).", "mentionContextAttributes": {"used": {"value": true, "score": 0.9964788556098938}, "created": {"value": false, "score": 2.7418136596679688e-06}, "shared": {"value": false, "score": 1.430511474609375e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996125102043152}, "created": {"value": false, "score": 3.516674041748047e-06}, "shared": {"value": false, "score": 2.086162567138672e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "StarFighter", "normalizedForm": "StarFighter", "offsetStart": 602, "offsetEnd": 613}, "context": "Since RIS data triples are not materialized, we rewrite Q c ,a , seen as a union of CQs (UCQ), using the RIS mappings M seen M mapping saturation Q c ,a = q(x, :pilotOf) \u2190 (x, :pilotOf, z), (z, \u03c4 , :StarFighter), (x, :uses, a), (a, \u03c4 , :LightSaber) \u222a q(x, :pilotOf) \u2190 (x, :pilotOf, z), (z, \u03c4 , :StarFighter), (x, :usesWeapon, a), (a, \u03c4 , :LightSaber) \u222a q(x, :pilotOf) \u2190 (x, :pilotOf, z), (z, \u03c4 , :StarFighter), (x, :pilotOf, a), (a, \u03c4 , :LightSaber) \u222a q(x, :usesWeapon) \u2190(x, :usesWeapon, z), (z, \u03c4 , :StarFighter), (x, :uses, a), (a, \u03c4 , :LightSaber) \u222a q(x, :usesWeapon) \u2190(x, :usesWeapon, z), (z, \u03c4 , :StarFighter), (x, :usesWeapon, a), (a, \u03c4 , :LightSaber) \u222a q(x, :usesWeapon) \u2190(x, :usesWeapon, z), (z, \u03c4 , :StarFighter), (x, :pilotOf, a), (a, \u03c4 , :LightSaber) as relational LAV views (step ( 2)).", "mentionContextAttributes": {"used": {"value": true, "score": 0.9996092915534973}, "created": {"value": false, "score": 2.0265579223632812e-06}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996125102043152}, "created": {"value": false, "score": 3.516674041748047e-06}, "shared": {"value": false, "score": 2.086162567138672e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "StarFighter", "normalizedForm": "StarFighter", "offsetStart": 709, "offsetEnd": 720}, "context": "Since RIS data triples are not materialized, we rewrite Q c ,a , seen as a union of CQs (UCQ), using the RIS mappings M seen M mapping saturation Q c ,a = q(x, :pilotOf) \u2190 (x, :pilotOf, z), (z, \u03c4 , :StarFighter), (x, :uses, a), (a, \u03c4 , :LightSaber) \u222a q(x, :pilotOf) \u2190 (x, :pilotOf, z), (z, \u03c4 , :StarFighter), (x, :usesWeapon, a), (a, \u03c4 , :LightSaber) \u222a q(x, :pilotOf) \u2190 (x, :pilotOf, z), (z, \u03c4 , :StarFighter), (x, :pilotOf, a), (a, \u03c4 , :LightSaber) \u222a q(x, :usesWeapon) \u2190(x, :usesWeapon, z), (z, \u03c4 , :StarFighter), (x, :uses, a), (a, \u03c4 , :LightSaber) \u222a q(x, :usesWeapon) \u2190(x, :usesWeapon, z), (z, \u03c4 , :StarFighter), (x, :usesWeapon, a), (a, \u03c4 , :LightSaber) \u222a q(x, :usesWeapon) \u2190(x, :usesWeapon, z), (z, \u03c4 , :StarFighter), (x, :pilotOf, a), (a, \u03c4 , :LightSaber) as relational LAV views (step ( 2)).", "mentionContextAttributes": {"used": {"value": true, "score": 0.9996092915534973}, "created": {"value": false, "score": 2.0265579223632812e-06}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996125102043152}, "created": {"value": false, "score": 3.516674041748047e-06}, "shared": {"value": false, "score": 2.086162567138672e-06}}}], "references": [], "runtime": 90724, "id": "ec305f8a2de705d1458e03cb2882bbe66c079f46", "metadata": {"id": "ec305f8a2de705d1458e03cb2882bbe66c079f46"}, "original_file_path": "../../datalake/Samuel/SOFTware-Sync/data/xml_files/hal-02921434.grobid.tei.xml", "file_name": "hal-02921434.grobid.tei.xml"}