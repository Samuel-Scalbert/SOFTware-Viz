{"application": "software-mentions", "version": "0.8.0", "date": "2024-04-12T16:15+0000", "md5": "523485CC0194361747CF3A35EDBFF460", "mentions": [{"type": "software", "software-type": "software", "software-name": {"rawForm": "MOO", "normalizedForm": "MOO", "offsetStart": 0, "offsetEnd": 3}, "context": "MOO was run on the most important 10 knobs. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9027401208877563}, "created": {"value": false, "score": 0.0003641843795776367}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": true, "score": 0.9999203085899353}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 19}, {"label": "[5]", "normalizedForm": "[5]", "refKey": 5}, {"label": "[8]", "normalizedForm": "[8]", "refKey": 8}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOO", "normalizedForm": "MOO", "offsetStart": 0, "offsetEnd": 3}, "context": "MOO runs online on-demand and uses the most recent model to compute a new configuration, with the delay of a few seconds.", "mentionContextAttributes": {"used": {"value": false, "score": 0.003203868865966797}, "created": {"value": false, "score": 8.398294448852539e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": true, "score": 0.9999203085899353}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 19}, {"label": "[5]", "normalizedForm": "[5]", "refKey": 5}, {"label": "[8]", "normalizedForm": "[8]", "refKey": 8}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOO", "normalizedForm": "MOO", "offsetStart": 0, "offsetEnd": 3}, "context": "MOO approaches for workflow scheduling [13] differ from our MOO in both the parameter space and the solution.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0006968975067138672}, "created": {"value": false, "score": 4.470348358154297e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": true, "score": 0.9999203085899353}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 19}, {"label": "[5]", "normalizedForm": "[5]", "refKey": 5}, {"label": "[8]", "normalizedForm": "[8]", "refKey": 8}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOO.", "normalizedForm": "MOO", "offsetStart": 0, "offsetEnd": 4}, "context": "MOO. UDAO's MOO module is implemented in Java and invokes a solver for constrained optimization (CO). ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0004239678382873535}, "created": {"value": false, "score": 0.011603951454162598}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": true, "score": 0.9999203085899353}, "shared": {"value": false, "score": 8.940696716308594e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "UDAO", "normalizedForm": "UDAO", "offsetStart": 0, "offsetEnd": 4}, "context": "UDAO unifies all of them in the general paradigm of dataflow programs and is implemented on top of Spark, a well-known unified analytics engine with both onpremise and serverless offerings in the cloud (e.g., [23]).", "mentionContextAttributes": {"used": {"value": false, "score": 0.00018906593322753906}, "created": {"value": false, "score": 0.0009218454360961914}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999784827232361}, "created": {"value": true, "score": 0.9999300837516785}, "shared": {"value": false, "score": 1.806020736694336e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "UDAO", "normalizedForm": "UDAO", "offsetStart": 0, "offsetEnd": 4}, "context": "UDAO is designed to work for recurring workloads: for each scheduled job of a recurring task, once a user request is sent to UDAO, it recommends a configuration under a few seconds to improve job performance towards user-specified objectives.", "mentionContextAttributes": {"used": {"value": false, "score": 7.110834121704102e-05}, "created": {"value": false, "score": 0.26017606258392334}, "shared": {"value": false, "score": 1.6093254089355469e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999784827232361}, "created": {"value": true, "score": 0.9999300837516785}, "shared": {"value": false, "score": 1.806020736694336e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "UDAO", "normalizedForm": "UDAO", "offsetStart": 0, "offsetEnd": 4}, "context": "UDAO is designed to also support serverless workloads: whenever the cloud platform needs to launch a serverless analytic task or scale it to adapt to the load, the cloud platform sends a request to UDAO and within a few seconds receives a recommended configuration balancing latency and cost.", "mentionContextAttributes": {"used": {"value": false, "score": 5.942583084106445e-05}, "created": {"value": false, "score": 0.0030844807624816895}, "shared": {"value": false, "score": 1.806020736694336e-05}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999784827232361}, "created": {"value": true, "score": 0.9999300837516785}, "shared": {"value": false, "score": 1.806020736694336e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "UDAO", "normalizedForm": "UDAO", "offsetStart": 0, "offsetEnd": 4}, "context": "UDAO handles each request as follows: If a Spark task runs for the first time or is specified with new objectives, no predictive models are available for these objectives yet.", "mentionContextAttributes": {"used": {"value": false, "score": 0.000270843505859375}, "created": {"value": false, "score": 8.89897346496582e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999784827232361}, "created": {"value": true, "score": 0.9999300837516785}, "shared": {"value": false, "score": 1.806020736694336e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "UDAO", "normalizedForm": "UDAO", "offsetStart": 0, "offsetEnd": 4}, "context": "UDAO can achieve 43%-56% reduction in latency compared to OtterTune while adapting to user preferences (which will be detailed in our performance study).", "mentionContextAttributes": {"used": {"value": false, "score": 7.31348991394043e-05}, "created": {"value": false, "score": 1.7344951629638672e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999784827232361}, "created": {"value": true, "score": 0.9999300837516785}, "shared": {"value": false, "score": 1.806020736694336e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "UDAO", "normalizedForm": "UDAO", "offsetStart": 0, "offsetEnd": 4}, "context": "UDAO is built on top of Spark with three key modules: Model Server.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00542759895324707}, "created": {"value": false, "score": 0.059725821018218994}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999784827232361}, "created": {"value": true, "score": 0.9999300837516785}, "shared": {"value": false, "score": 1.806020736694336e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "UDAO", "normalizedForm": "UDAO", "offsetStart": 0, "offsetEnd": 4}, "context": "UDAO's model server can take handcrafted subdifferentiable regression functions (e.g., [36]) to model task objectives.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00017952919006347656}, "created": {"value": false, "score": 8.285045623779297e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999784827232361}, "created": {"value": true, "score": 0.9999300837516785}, "shared": {"value": false, "score": 1.806020736694336e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "qEHVI", "normalizedForm": "qEHVI", "offsetStart": 0, "offsetEnd": 5}, "context": "qEHVI takes 48 seconds to generate the first Pareto set, while PESM takes 362 seconds to do so.", "mentionContextAttributes": {"used": {"value": false, "score": 0.06123995780944824}, "created": {"value": false, "score": 5.424022674560547e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9986871480941772}, "created": {"value": false, "score": 0.00018405914306640625}, "shared": {"value": false, "score": 4.172325134277344e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "qEHVI", "normalizedForm": "qEHVI", "offsetStart": 0, "offsetEnd": 5}, "context": "qEHVI can only generate Pareto sets for 54 jobs after 20s, and achieve only 69.4% median after 100s.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0001652240753173828}, "created": {"value": false, "score": 8.285045623779297e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9986871480941772}, "created": {"value": false, "score": 0.00018405914306640625}, "shared": {"value": false, "score": 4.172325134277344e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CDBTune", "normalizedForm": "CDBTune", "offsetStart": 0, "offsetEnd": 12}, "context": "CDBTune [39] recommends the best configuration for optimizing the reward (fixed weighted sum of objectives) calculated by Deep RL. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0019629597663879395}, "created": {"value": false, "score": 9.59634780883789e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.08178448677062988}, "created": {"value": false, "score": 9.59634780883789e-06}, "shared": {"value": false, "score": 2.205371856689453e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ClassTune", "normalizedForm": "ClassTune", "offsetStart": 0, "offsetEnd": 14}, "context": "ClassTune [41] solves the optimization problem by classification, which cannot be easily extended to the MOO setting. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0002824068069458008}, "created": {"value": false, "score": 6.020069122314453e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0002824068069458008}, "created": {"value": false, "score": 6.020069122314453e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "UDAO", "normalizedForm": "UDAO", "offsetStart": 3, "offsetEnd": 7}, "context": "As UDAO is designed for Spark workloads, various modeling options can be used to provide such models: (1) Handcrafted models: Domain knowledge and workload profiling were used to develop specific regression models for the Spark platform [36], where different hardware profiles can be collected to customize these models.", "mentionContextAttributes": {"used": {"value": false, "score": 0.14630085229873657}, "created": {"value": false, "score": 0.00013828277587890625}, "shared": {"value": false, "score": 1.1324882507324219e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999784827232361}, "created": {"value": true, "score": 0.9999300837516785}, "shared": {"value": false, "score": 1.806020736694336e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Ottertune", "normalizedForm": "Ottertune", "offsetStart": 3, "offsetEnd": 12}, "context": "As Ottertune supports only single-objective (SO) optimization, we apply a weighted method [39] that combines k objectives into a single objective, k i=1 w i \u03a8 i (x), with i w i = 1, and then call Ottertune to solve a SO problem.", "mentionContextAttributes": {"used": {"value": false, "score": 0.036486268043518066}, "created": {"value": false, "score": 0.0002447366714477539}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999839663505554}, "created": {"value": false, "score": 0.009589076042175293}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[35]", "normalizedForm": "[35]", "refKey": 35}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOO", "normalizedForm": "MOO", "offsetStart": 5, "offsetEnd": 8}, "context": "When MOO needs to be run for a given task, the model for this task may have been updated.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0007128715515136719}, "created": {"value": false, "score": 0.009134173393249512}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": true, "score": 0.9999203085899353}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 19}, {"label": "[5]", "normalizedForm": "[5]", "refKey": 5}, {"label": "[8]", "normalizedForm": "[8]", "refKey": 8}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "UDAO", "normalizedForm": "UDAO", "offsetStart": 5, "offsetEnd": 9}, "context": "MOO. UDAO's MOO module is implemented in Java and invokes a solver for constrained optimization (CO). ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0004239678382873535}, "created": {"value": false, "score": 0.011603951454162598}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999784827232361}, "created": {"value": true, "score": 0.9999300837516785}, "shared": {"value": false, "score": 1.806020736694336e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "qEHVI", "normalizedForm": "qEHVI", "offsetStart": 5, "offsetEnd": 10}, "context": "Both qEHVI and NC need 50 seconds to reduce the median of uncertain space below 10%.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0009681582450866699}, "created": {"value": false, "score": 4.470348358154297e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9986871480941772}, "created": {"value": false, "score": 0.00018405914306640625}, "shared": {"value": false, "score": 4.172325134277344e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOO", "normalizedForm": "MOO", "offsetStart": 6, "offsetEnd": 9}, "context": "While MOO under numerical parameters has been studied in the optimization community [19], [8], we address the MOO problem specifically for designing a cloud analytics optimizer-our problem setting poses systems challenges such as sufficient coverage of the Pareto set under stringent time constraints.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0002689361572265625}, "created": {"value": false, "score": 0.02493607997894287}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": true, "score": 0.9999203085899353}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 19}, {"label": "[5]", "normalizedForm": "[5]", "refKey": 5}, {"label": "[8]", "normalizedForm": "[8]", "refKey": 8}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "UDAO", "normalizedForm": "UDAO", "offsetStart": 7, "offsetEnd": 11}, "context": "First, UDAO aims to support a broad set of analytic tasks beyond SQL.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0001533031463623047}, "created": {"value": true, "score": 0.8982637524604797}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999784827232361}, "created": {"value": true, "score": 0.9999300837516785}, "shared": {"value": false, "score": 1.806020736694336e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "UDAO", "normalizedForm": "UDAO", "offsetStart": 8, "offsetEnd": 12}, "context": "Second, UDAO takes as input an analytic task in the form of a dataflow program and a set of objectives, and produces as output a configuration with a suitable number of cores as well as other runtime parameters that best meet the task objectives.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00024950504302978516}, "created": {"value": false, "score": 0.00010389089584350586}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999784827232361}, "created": {"value": true, "score": 0.9999300837516785}, "shared": {"value": false, "score": 1.806020736694336e-05}}}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "software-name": {"rawForm": "Spark", "normalizedForm": "Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "offsetStart": 8, "offsetEnd": 13}, "context": "For the Spark platform, these runtime parameters include the number of executors, cores per executor, memory per executor, parallelism (for reducestyle transformations), Rdd compression (boolean), Memory fraction (of heap space), to name a few.", "mentionContextAttributes": {"used": {"value": false, "score": 0.11188101768493652}, "created": {"value": false, "score": 6.496906280517578e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9988607168197632}, "created": {"value": true, "score": 0.9999260306358337}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[36]", "normalizedForm": "[36]", "refKey": 36}]}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "software-name": {"rawForm": "Spark", "normalizedForm": "Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "offsetStart": 8, "offsetEnd": 13}, "context": "For the Spark platform, our model server takes a set of \u223c40 parameters and a list of objectives such as latency, throughput, IO load, cost in CPU cores, and cost in CPU-hour (the full list was given in \u00a7II-B).", "mentionContextAttributes": {"used": {"value": false, "score": 0.003134608268737793}, "created": {"value": false, "score": 0.07185471057891846}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9988607168197632}, "created": {"value": true, "score": 0.9999260306358337}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[36]", "normalizedForm": "[36]", "refKey": 36}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Ottertune", "normalizedForm": "Ottertune", "offsetStart": 9, "offsetEnd": 18}, "context": "Overall, Ottertune has more points (38 out of 120) that lead to PIR below 0%, performing worse than the Spark expert, than UDAO (16/120).", "mentionContextAttributes": {"used": {"value": false, "score": 0.04583996534347534}, "created": {"value": false, "score": 5.066394805908203e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999839663505554}, "created": {"value": false, "score": 0.009589076042175293}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[35]", "normalizedForm": "[35]", "refKey": 35}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOO", "normalizedForm": "MOO", "offsetStart": 11, "offsetEnd": 14}, "context": "Randomized MOO solutions such as Evolutional methods [8] cannot guarantee consistent Pareto frontiers and hence can lead to contradicting recommendations, as we reveal in evaluation, which is highly undesirable for a cloud optimizer.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00011330842971801758}, "created": {"value": false, "score": 0.00012153387069702148}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": true, "score": 0.9999203085899353}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 19}, {"label": "[5]", "normalizedForm": "[5]", "refKey": 5}, {"label": "[8]", "normalizedForm": "[8]", "refKey": 8}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "UDAO", "normalizedForm": "UDAO", "offsetStart": 11, "offsetEnd": 15}, "context": "Currently, UDAO offers a set of objectives for external requests to choose from, including: 1) average latency, for both batch and stream processing; 2) throughput for stream processing; 3) CPU utilization; 4) IO load; 5) network load; 6) resource cost in CPU cores; 7) resource cost in CPU-hour (latency x CPU cores); and 8) resource cost as a weighted combination of CPU-hour and IO cost (inspired by Severless DBs [2]), while more options can be added in the future as application needs arise.", "mentionContextAttributes": {"used": {"value": false, "score": 0.002334296703338623}, "created": {"value": false, "score": 8.165836334228516e-06}, "shared": {"value": false, "score": 2.4437904357910156e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999784827232361}, "created": {"value": true, "score": 0.9999300837516785}, "shared": {"value": false, "score": 1.806020736694336e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOO", "normalizedForm": "MOO", "offsetStart": 12, "offsetEnd": 15}, "context": "MOO. UDAO's MOO module is implemented in Java and invokes a solver for constrained optimization (CO).", "mentionContextAttributes": {"used": {"value": false, "score": 0.0004239678382873535}, "created": {"value": false, "score": 0.011603951454162598}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": true, "score": 0.9999203085899353}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 19}, {"label": "[5]", "normalizedForm": "[5]", "refKey": 5}, {"label": "[8]", "normalizedForm": "[8]", "refKey": 8}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MINLP", "normalizedForm": "MINLP", "offsetStart": 12, "offsetEnd": 17}, "context": "Most of the MINLP solvers [22] assume certain properties of the objective function, e.g., twice continuously differentiable (Bonmin [3]) or factorable into the sumproduct of univariate functions (Couenne [4]), which do not suit learned models such as Deep Neural Networks (DNNs). ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0029169321060180664}, "created": {"value": false, "score": 4.708766937255859e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.996951162815094}, "created": {"value": false, "score": 3.987550735473633e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22, "offsetStart": 28585, "offsetEnd": 28589}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Ottertune", "normalizedForm": "Ottertune", "offsetStart": 12, "offsetEnd": 21}, "context": "Compared to Ottertune, a state-of-the-art performance tuning system, UDAO recommends Spark configurations that yield 26%-49% reduction of running time of the TPCx-BB benchmark while adapting to different user preferences on multiple objectives.", "mentionContextAttributes": {"used": {"value": false, "score": 2.6404857635498047e-05}, "created": {"value": false, "score": 0.000244140625}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999839663505554}, "created": {"value": false, "score": 0.009589076042175293}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[35]", "normalizedForm": "[35]", "refKey": 35}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOGD", "normalizedForm": "MOGD", "offsetStart": 13, "offsetEnd": 17}, "context": "In contrast, MOGD with 16 threads takes 0.1-0.5 second while achieving the same or lower value of the target objective. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0017646551132202148}, "created": {"value": false, "score": 1.055002212524414e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997861385345459}, "created": {"value": true, "score": 0.9625383615493774}, "shared": {"value": false, "score": 1.0132789611816406e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "UDAO", "normalizedForm": "UDAO", "offsetStart": 13, "offsetEnd": 17}, "context": "We presented UDAO, a multi-objective optimizer that constructs Pareto-optimal job configurations for multiple task objectives, and recommends a new configuration to best meet them.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00010210275650024414}, "created": {"value": true, "score": 0.9999300837516785}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999784827232361}, "created": {"value": true, "score": 0.9999300837516785}, "shared": {"value": false, "score": 1.806020736694336e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOO", "normalizedForm": "MOO", "offsetStart": 15, "offsetEnd": 18}, "context": "Among existing MOO methods, Weighted Sum (WS) [19] is known to have poor coverage of the Pareto frontier [20].", "mentionContextAttributes": {"used": {"value": false, "score": 0.0001480579376220703}, "created": {"value": false, "score": 5.120038986206055e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": true, "score": 0.9999203085899353}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 19}, {"label": "[5]", "normalizedForm": "[5]", "refKey": 5}, {"label": "[8]", "normalizedForm": "[8]", "refKey": 8}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOO", "normalizedForm": "MOO", "offsetStart": 15, "offsetEnd": 18}, "context": "Note that most MOO algorithms suffer from exponential complexity in the number of the objectives, k.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00011008977890014648}, "created": {"value": false, "score": 7.528066635131836e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": true, "score": 0.9999203085899353}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 19}, {"label": "[5]", "normalizedForm": "[5]", "refKey": 5}, {"label": "[8]", "normalizedForm": "[8]", "refKey": 8}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "UDAO", "normalizedForm": "UDAO", "offsetStart": 15, "offsetEnd": 19}, "context": "At the core of UDAO is a principled multi-objective optimization (MOO) approach that takes multiple, possibly conflicting, objectives, computes a Paretooptimal set of configurations (i.e., not dominated by any other configuration in all objectives), and returns one from the set that best suits the objectives.", "mentionContextAttributes": {"used": {"value": false, "score": 7.265806198120117e-05}, "created": {"value": false, "score": 0.05517756938934326}, "shared": {"value": false, "score": 7.748603820800781e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999784827232361}, "created": {"value": true, "score": 0.9999300837516785}, "shared": {"value": false, "score": 1.806020736694336e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "UDAO", "normalizedForm": "UDAO", "offsetStart": 16, "offsetEnd": 20}, "context": "This is because UDAO adapts better to user preferences for latency and recommends configurations that are more likely to improve PIR.", "mentionContextAttributes": {"used": {"value": false, "score": 5.990266799926758e-05}, "created": {"value": false, "score": 0.00010675191879272461}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999784827232361}, "created": {"value": true, "score": 0.9999300837516785}, "shared": {"value": false, "score": 1.806020736694336e-05}}}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "software-name": {"rawForm": "Spark", "normalizedForm": "Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "offsetStart": 16, "offsetEnd": 21}, "context": "The goal of our Spark-based optimizer is: given a data flow program and a set of objectives, compute a job configuration that optimizes these objectives and adapt the configuration quickly if either the load or task objectives change.", "mentionContextAttributes": {"used": {"value": false, "score": 6.848573684692383e-05}, "created": {"value": true, "score": 0.9906676411628723}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9988607168197632}, "created": {"value": true, "score": 0.9999260306358337}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[36]", "normalizedForm": "[36]", "refKey": 36}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MINLP", "normalizedForm": "MINLP", "offsetStart": 17, "offsetEnd": 22}, "context": "The most general MINLP solver, Knitro [14], supports complex models but runs very slowly, e.g., 42 (17) minutes for solving a single oneobjective optimization problem based on a DNN (GP) model.", "mentionContextAttributes": {"used": {"value": false, "score": 3.343820571899414e-05}, "created": {"value": false, "score": 7.331371307373047e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.996951162815094}, "created": {"value": false, "score": 3.987550735473633e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MINLP", "normalizedForm": "MINLP", "offsetStart": 17, "offsetEnd": 22}, "context": "The most general MINLP solver, Knir learned models but very slowly, e.g., 42 g a single-objective optimization problem model is a DNN, or 17 minutes when the ian Process (GP). ", "mentionContextAttributes": {"used": {"value": false, "score": 0.005175113677978516}, "created": {"value": false, "score": 1.6033649444580078e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.996951162815094}, "created": {"value": false, "score": 3.987550735473633e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MINLP", "normalizedForm": "MINLP", "offsetStart": 17, "offsetEnd": 22}, "context": "The most general MINLP solver, Knir learned models but very slowly, e.g., 42 g a single-objective optimization problem model is a DNN, or 17 minutes when the an Process (GP).", "mentionContextAttributes": {"used": {"value": false, "score": 0.0036377906799316406}, "created": {"value": false, "score": 1.6033649444580078e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.996951162815094}, "created": {"value": false, "score": 3.987550735473633e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Ottertune", "normalizedForm": "Ottertune", "offsetStart": 17, "offsetEnd": 26}, "context": "When compared to Ottertune [35], a state-of-the-art performance tuning system, our approach recommends configurations that yield 26%-49% reduction of total running time of the TPCx-BB benchmark [32] while adapting to different application preferences on multiple objectives and accommodating a broader set of models.", "mentionContextAttributes": {"used": {"value": false, "score": 6.669759750366211e-05}, "created": {"value": false, "score": 0.009589076042175293}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999839663505554}, "created": {"value": false, "score": 0.009589076042175293}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[35]", "normalizedForm": "[35]", "refKey": 35, "offsetStart": 10244, "offsetEnd": 10248}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Ottertune", "normalizedForm": "Ottertune", "offsetStart": 17, "offsetEnd": 26}, "context": "For all 30 jobs, Ottertune recommends the smallest number of cores (4), favoring cost to latency.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0040885210037231445}, "created": {"value": false, "score": 4.07099723815918e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999839663505554}, "created": {"value": false, "score": 0.009589076042175293}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[35]", "normalizedForm": "[35]", "refKey": 35}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOO", "normalizedForm": "MOO", "offsetStart": 18, "offsetEnd": 21}, "context": "In this case, the MOO algorithm needs to recompute the Pareto frontier based on the updated model in order to recommend a new configuration that best suits the task objectives.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00100022554397583}, "created": {"value": false, "score": 0.0006542801856994629}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": true, "score": 0.9999203085899353}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 19}, {"label": "[5]", "normalizedForm": "[5]", "refKey": 5}, {"label": "[8]", "normalizedForm": "[8]", "refKey": 8}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOGD", "normalizedForm": "MOGD", "offsetStart": 18, "offsetEnd": 22}, "context": "Therefore, we use MOGD as the default solver in our sysyem.", "mentionContextAttributes": {"used": {"value": true, "score": 0.7265871167182922}, "created": {"value": false, "score": 4.6193599700927734e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997861385345459}, "created": {"value": true, "score": 0.9625383615493774}, "shared": {"value": false, "score": 1.0132789611816406e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MINLP", "normalizedForm": "MINLP", "offsetStart": 18, "offsetEnd": 23}, "context": "In fact, the SOTA MINLP solver, Knitro [14], also returns approximate solutions due to complex, non-convex properties of our objective functions, despite long running time.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0005066990852355957}, "created": {"value": false, "score": 2.7120113372802734e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.996951162815094}, "created": {"value": false, "score": 3.987550735473633e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Ottertune", "normalizedForm": "Ottertune", "offsetStart": 18, "offsetEnd": 27}, "context": "For w=(0.9, 0.1), Ottertune's recommendations vary only slightly from (0.5, 0.5), with 6% reduction of total running time, while our recommendations lead to 35% reduction.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0026890039443969727}, "created": {"value": false, "score": 1.531839370727539e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999839663505554}, "created": {"value": false, "score": 0.009589076042175293}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[35]", "normalizedForm": "[35]", "refKey": 35}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "UDAO", "normalizedForm": "UDAO", "offsetStart": 19, "offsetEnd": 23}, "context": "More specifically, UDAO's MOO algorithm works with complex learned models represented by Gaussian Processes (GPs) or Deep Neural Networks (DNNs), besides simple closedform regression functions, whereas the optimization methods in [35], [39] work only for the specific model (GP or DNN) of choice.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0017924308776855469}, "created": {"value": false, "score": 1.7583370208740234e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999784827232361}, "created": {"value": true, "score": 0.9999300837516785}, "shared": {"value": false, "score": 1.806020736694336e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "UDAO", "normalizedForm": "UDAO", "offsetStart": 20, "offsetEnd": 24}, "context": "This paper presents UDAO, a Spark-based Unified Data Analytics Optimizer that can automatically determine a cluster configuration with a suitable number of cores as well as other system parameters that best meet the task objectives.", "mentionContextAttributes": {"used": {"value": false, "score": 3.045797348022461e-05}, "created": {"value": true, "score": 0.9998080730438232}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999784827232361}, "created": {"value": true, "score": 0.9999300837516785}, "shared": {"value": false, "score": 1.806020736694336e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOGD", "normalizedForm": "MOGD", "offsetStart": 20, "offsetEnd": 24}, "context": "Our adient Descent (MOGD) solver ons to guide gradient descent to jective while satisfying a variety rget objective and constraints can s, e.g., using DNNs, GPs, or other s a base case, we consider single-F1(x) = 1(x), which is Part ion, we set the loss function simting from an initial configuration, ely adjust the configuration to a minimize the loss, until it reaches of steps allowed.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9971216320991516}, "created": {"value": false, "score": 4.708766937255859e-06}, "shared": {"value": false, "score": 7.748603820800781e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997861385345459}, "created": {"value": true, "score": 0.9625383615493774}, "shared": {"value": false, "score": 1.0132789611816406e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "UDAO", "normalizedForm": "UDAO", "offsetStart": 20, "offsetEnd": 24}, "context": "As Fig. 6(f) shows, UDAO outperforms Ottertune with 49% less total running time, and 48% increase of cost, which matches application's strong preference for latency.", "mentionContextAttributes": {"used": {"value": false, "score": 0.016849637031555176}, "created": {"value": false, "score": 1.806020736694336e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999784827232361}, "created": {"value": true, "score": 0.9999300837516785}, "shared": {"value": false, "score": 1.806020736694336e-05}}}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "software-name": {"rawForm": "Spark", "normalizedForm": "Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "offsetStart": 20, "offsetEnd": 25}, "context": "We assume that each Spark task has user-or provider-specified objectives, referred to as task objectives, that need to be optimized during execution.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0031998753547668457}, "created": {"value": false, "score": 0.0009579062461853027}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9988607168197632}, "created": {"value": true, "score": 0.9999260306358337}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[36]", "normalizedForm": "[36]", "refKey": 36}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOO", "normalizedForm": "MOO", "offsetStart": 21, "offsetEnd": 24}, "context": "For this reason, the MOO literature refers to optimization with up to 3 objectives as multi-objective optimization, whereas optimization with more than 3 objectives is called many-objective optimization and handled using different methods such as preference modeling [8] or fairness among different objectives [31].", "mentionContextAttributes": {"used": {"value": false, "score": 0.000569462776184082}, "created": {"value": false, "score": 9.638071060180664e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": true, "score": 0.9999203085899353}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 19}, {"label": "[5]", "normalizedForm": "[5]", "refKey": 5}, {"label": "[8]", "normalizedForm": "[8]", "refKey": 8}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Ottertune", "normalizedForm": "Ottertune", "offsetStart": 23, "offsetEnd": 32}, "context": "For 19 out of 30 jobs, Ottertune still recommends 4 cores as it is the solution returned even using the 0.9 weight for latency.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0009395480155944824}, "created": {"value": false, "score": 2.3543834686279297e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999839663505554}, "created": {"value": false, "score": 0.009589076042175293}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[35]", "normalizedForm": "[35]", "refKey": 35}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Ottertune", "normalizedForm": "Ottertune", "offsetStart": 23, "offsetEnd": 32}, "context": "Comparative results to Ottertune on single-objective and multi-objective optimization latency for all jobs with up to 63% reduction of latency.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999839663505554}, "created": {"value": false, "score": 1.3172626495361328e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999839663505554}, "created": {"value": false, "score": 0.009589076042175293}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[35]", "normalizedForm": "[35]", "refKey": 35}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "UDAO", "normalizedForm": "UDAO", "offsetStart": 24, "offsetEnd": 28}, "context": "Section V discusses how UDAO incorporates these models using the model server.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0031647682189941406}, "created": {"value": false, "score": 0.000577092170715332}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999784827232361}, "created": {"value": true, "score": 0.9999300837516785}, "shared": {"value": false, "score": 1.806020736694336e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "UDAO", "normalizedForm": "UDAO", "offsetStart": 24, "offsetEnd": 28}, "context": "For each test workload, UDAO runs the PF algorithm to compute the Pareto set and then the Weighted Utopia Nearest (WUN) strategy ( \u00a7V) to recommend a configuration from the set.", "mentionContextAttributes": {"used": {"value": true, "score": 0.974969208240509}, "created": {"value": false, "score": 8.761882781982422e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999784827232361}, "created": {"value": true, "score": 0.9999300837516785}, "shared": {"value": false, "score": 1.806020736694336e-05}}}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.5539, "software-name": {"rawForm": "Spark", "normalizedForm": "Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.5539, "offsetStart": 24, "offsetEnd": 29}, "context": "UDAO is built on top of Spark with three key modules: Model Server. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00542759895324707}, "created": {"value": false, "score": 0.059725821018218994}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9988607168197632}, "created": {"value": true, "score": 0.9999260306358337}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[36]", "normalizedForm": "[36]", "refKey": 36}]}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "software-name": {"rawForm": "Spark", "normalizedForm": "Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "offsetStart": 24, "offsetEnd": 29}, "context": "By way of designing our Spark-based optimizer, our paper makes the following contributions:", "mentionContextAttributes": {"used": {"value": false, "score": 4.106760025024414e-05}, "created": {"value": true, "score": 0.9998645782470703}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9988607168197632}, "created": {"value": true, "score": 0.9999260306358337}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[36]", "normalizedForm": "[36]", "refKey": 36}]}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "software-name": {"rawForm": "Spark", "normalizedForm": "Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "offsetStart": 24, "offsetEnd": 29}, "context": "As UDAO is designed for Spark workloads, various modeling options can be used to provide such models: (1) Handcrafted models: Domain knowledge and workload profiling were used to develop specific regression models for the Spark platform [36], where different hardware profiles can be collected to customize these models.", "mentionContextAttributes": {"used": {"value": false, "score": 0.14630085229873657}, "created": {"value": false, "score": 0.00013828277587890625}, "shared": {"value": false, "score": 1.1324882507324219e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9988607168197632}, "created": {"value": true, "score": 0.9999260306358337}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[36]", "normalizedForm": "[36]", "refKey": 36}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOO", "normalizedForm": "MOO", "offsetStart": 26, "offsetEnd": 29}, "context": "More specifically, UDAO's MOO algorithm works with complex learned models represented by Gaussian Processes (GPs) or Deep Neural Networks (DNNs), besides simple closedform regression functions, whereas the optimization methods in [35], [39] work only for the specific model (GP or DNN) of choice.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0017924308776855469}, "created": {"value": false, "score": 1.7583370208740234e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": true, "score": 0.9999203085899353}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 19}, {"label": "[5]", "normalizedForm": "[5]", "refKey": 5}, {"label": "[8]", "normalizedForm": "[8]", "refKey": 8}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOGD", "normalizedForm": "MOGD", "offsetStart": 27, "offsetEnd": 31}, "context": "For a given objective, our MOGD solver uses the model variance to obtain a more conservative estimate for use in optimization. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9145554900169373}, "created": {"value": false, "score": 0.04266732931137085}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997861385345459}, "created": {"value": true, "score": 0.9625383615493774}, "shared": {"value": false, "score": 1.0132789611816406e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "UDAO", "normalizedForm": "UDAO", "offsetStart": 27, "offsetEnd": 31}, "context": "Targeting cloud analytics, UDAO is designed with the following features:", "mentionContextAttributes": {"used": {"value": false, "score": 3.153085708618164e-05}, "created": {"value": true, "score": 0.9462730288505554}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999784827232361}, "created": {"value": true, "score": 0.9999300837516785}, "shared": {"value": false, "score": 1.806020736694336e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOGD", "normalizedForm": "MOGD", "offsetStart": 27, "offsetEnd": 31}, "context": "bjective Gradient Descent (MOGD) Solver.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9997861385345459}, "created": {"value": false, "score": 9.953975677490234e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997861385345459}, "created": {"value": true, "score": 0.9625383615493774}, "shared": {"value": false, "score": 1.0132789611816406e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOO", "normalizedForm": "MOO", "offsetStart": 28, "offsetEnd": 31}, "context": "It incrementally transforms MOO to a series of constrained single-objective optimization problems, which can be solved individually.", "mentionContextAttributes": {"used": {"value": false, "score": 5.02467155456543e-05}, "created": {"value": false, "score": 0.007000327110290527}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": true, "score": 0.9999203085899353}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 19}, {"label": "[5]", "normalizedForm": "[5]", "refKey": 5}, {"label": "[8]", "normalizedForm": "[8]", "refKey": 8}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "UDAO", "normalizedForm": "UDAO", "offsetStart": 28, "offsetEnd": 32}, "context": "This approach distinguishes UDAO from DBMS performance tuning systems [35], [39] that couple modeling and optimization steps in an online iterative tuning session, which takes 15-45 mins to run for each query workload.", "mentionContextAttributes": {"used": {"value": false, "score": 6.383657455444336e-05}, "created": {"value": false, "score": 2.2232532501220703e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999784827232361}, "created": {"value": true, "score": 0.9999300837516785}, "shared": {"value": false, "score": 1.806020736694336e-05}}}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "software-name": {"rawForm": "Spark", "normalizedForm": "Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "offsetStart": 28, "offsetEnd": 33}, "context": "This paper presents UDAO, a Spark-based Unified Data Analytics Optimizer that can automatically determine a cluster configuration with a suitable number of cores as well as other system parameters that best meet the task objectives.", "mentionContextAttributes": {"used": {"value": false, "score": 3.045797348022461e-05}, "created": {"value": true, "score": 0.9998080730438232}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9988607168197632}, "created": {"value": true, "score": 0.9999260306358337}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[36]", "normalizedForm": "[36]", "refKey": 36}]}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "software-name": {"rawForm": "Spark", "normalizedForm": "Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "offsetStart": 28, "offsetEnd": 33}, "context": "In this case, a database or Spark instance is turned off during idle periods, dynamically turned on when new queries arrive, and scaled up or down as the load changes over time.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0006538033485412598}, "created": {"value": false, "score": 4.9173831939697266e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9988607168197632}, "created": {"value": true, "score": 0.9999260306358337}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[36]", "normalizedForm": "[36]", "refKey": 36}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "BestConfig", "normalizedForm": "BestConfig", "offsetStart": 28, "offsetEnd": 43}, "context": "Among search-based methods, BestConfig [40] searches for good configurations by dividing high-dimensional configuration space into subspaces based on samples, but it cold-starts each tuning request. ", "mentionContextAttributes": {"used": {"value": false, "score": 4.678964614868164e-05}, "created": {"value": false, "score": 1.8477439880371094e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 4.678964614868164e-05}, "created": {"value": false, "score": 1.8477439880371094e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Ottertune", "normalizedForm": "Ottertune", "offsetStart": 29, "offsetEnd": 43}, "context": "Among learningbased methods, Ottertune [35] can learn flexible models from data. ", "mentionContextAttributes": {"used": {"value": false, "score": 2.3186206817626953e-05}, "created": {"value": false, "score": 6.139278411865234e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999839663505554}, "created": {"value": false, "score": 0.009589076042175293}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[35]", "normalizedForm": "[35]", "refKey": 35}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOO", "normalizedForm": "MOO", "offsetStart": 30, "offsetEnd": 33}, "context": "Multi-Objective Optimization (MOO).", "mentionContextAttributes": {"used": {"value": false, "score": 0.20435869693756104}, "created": {"value": false, "score": 9.006261825561523e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": true, "score": 0.9999203085899353}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 19}, {"label": "[5]", "normalizedForm": "[5]", "refKey": 5}, {"label": "[8]", "normalizedForm": "[8]", "refKey": 8}]}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "software-name": {"rawForm": "Spark", "normalizedForm": "Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "offsetStart": 30, "offsetEnd": 35}, "context": "In this paper, we introduce a Spark-based Unified Data Analytics Optimizer (UDAO) that can automate the task of determining an optimal configuration for each Spark task based on multiple task objectives.", "mentionContextAttributes": {"used": {"value": false, "score": 3.737211227416992e-05}, "created": {"value": true, "score": 0.9999260306358337}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9988607168197632}, "created": {"value": true, "score": 0.9999260306358337}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[36]", "normalizedForm": "[36]", "refKey": 36}]}, {"type": "software", "software-type": "software", "wikidataId": "Q6334372", "wikipediaExternalRef": 48659466, "lang": "en", "confidence": 0.4925, "software-name": {"rawForm": "Knitro", "normalizedForm": "Knitro", "wikidataId": "Q6334372", "wikipediaExternalRef": 48659466, "lang": "en", "confidence": 0.4925, "offsetStart": 30, "offsetEnd": 36}, "context": "To solve a single CO problem, Knitro with 16 threads takes 17 and 42 minutes to run on GP and DNN models, respectively. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.08566200733184814}, "created": {"value": false, "score": 5.662441253662109e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.08566200733184814}, "created": {"value": false, "score": 0.0721319317817688}, "shared": {"value": false, "score": 2.980232238769531e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "qEHVI", "normalizedForm": "qEHVI", "offsetStart": 31, "offsetEnd": 36}, "context": "We next compare PF-AP to PESM, qEHVI, and Evo in Fig. 4(d).", "mentionContextAttributes": {"used": {"value": true, "score": 0.9986871480941772}, "created": {"value": false, "score": 2.8431415557861328e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9986871480941772}, "created": {"value": false, "score": 0.00018405914306640625}, "shared": {"value": false, "score": 4.172325134277344e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q6334372", "wikipediaExternalRef": 48659466, "lang": "en", "confidence": 0.2934, "software-name": {"rawForm": "Knitro", "normalizedForm": "Knitro", "wikidataId": "Q6334372", "wikipediaExternalRef": 48659466, "lang": "en", "confidence": 0.2934, "offsetStart": 31, "offsetEnd": 41}, "context": "The most general MINLP solver, Knitro [14], supports complex models but runs very slowly, e.g., 42 (17) minutes for solving a single oneobjective optimization problem based on a DNN (GP) model.", "mentionContextAttributes": {"used": {"value": false, "score": 3.343820571899414e-05}, "created": {"value": false, "score": 7.331371307373047e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.08566200733184814}, "created": {"value": false, "score": 0.0721319317817688}, "shared": {"value": false, "score": 2.980232238769531e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOO", "normalizedForm": "MOO", "offsetStart": 32, "offsetEnd": 35}, "context": "In this section, we compare our MOO approach to popular MOO techniques [5], [10], [19], [8] and perform an endto-end comparison to a STOA performance tuning system, OtterTune [35].", "mentionContextAttributes": {"used": {"value": false, "score": 0.4622530937194824}, "created": {"value": false, "score": 6.258487701416016e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": true, "score": 0.9999203085899353}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 19}, {"label": "[5]", "normalizedForm": "[5]", "refKey": 5}, {"label": "[8]", "normalizedForm": "[8]", "refKey": 8}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "UDAO", "normalizedForm": "UDAO", "offsetStart": 32, "offsetEnd": 36}, "context": "Figure 1(a) shows the design of UDAO based on this architectural change, with Spark as the underlying analytics engine.", "mentionContextAttributes": {"used": {"value": true, "score": 0.5022230744361877}, "created": {"value": false, "score": 0.03573310375213623}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999784827232361}, "created": {"value": true, "score": 0.9999300837516785}, "shared": {"value": false, "score": 1.806020736694336e-05}}}, {"type": "software", "software-type": "software", "wikidataId": "Q6334372", "wikipediaExternalRef": 48659466, "lang": "en", "confidence": 0.2934, "software-name": {"rawForm": "Knitro", "normalizedForm": "Knitro", "wikidataId": "Q6334372", "wikipediaExternalRef": 48659466, "lang": "en", "confidence": 0.2934, "offsetStart": 32, "offsetEnd": 42}, "context": "In fact, the SOTA MINLP solver, Knitro [14], also returns approximate solutions due to complex, non-convex properties of our objective functions, despite long running time.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0005066990852355957}, "created": {"value": false, "score": 2.7120113372802734e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.08566200733184814}, "created": {"value": false, "score": 0.0721319317817688}, "shared": {"value": false, "score": 2.980232238769531e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOO", "normalizedForm": "MOO", "offsetStart": 33, "offsetEnd": 36}, "context": "None of the above work considers MOO like in our work.", "mentionContextAttributes": {"used": {"value": false, "score": 9.876489639282227e-05}, "created": {"value": false, "score": 0.09421902894973755}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": true, "score": 0.9999203085899353}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 19}, {"label": "[5]", "normalizedForm": "[5]", "refKey": 5}, {"label": "[8]", "normalizedForm": "[8]", "refKey": 8}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOO", "normalizedForm": "MOO", "offsetStart": 34, "offsetEnd": 37}, "context": "The trained models interface with MOO through network sockets.", "mentionContextAttributes": {"used": {"value": true, "score": 0.8234702348709106}, "created": {"value": false, "score": 3.510713577270508e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": true, "score": 0.9999203085899353}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 19}, {"label": "[5]", "normalizedForm": "[5]", "refKey": 5}, {"label": "[8]", "normalizedForm": "[8]", "refKey": 8}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOGD", "normalizedForm": "MOGD", "offsetStart": 34, "offsetEnd": 38}, "context": "Multi-Objective Gradient Descent (MOGD) Solver.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9983631372451782}, "created": {"value": false, "score": 1.1861324310302734e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997861385345459}, "created": {"value": true, "score": 0.9625383615493774}, "shared": {"value": false, "score": 1.0132789611816406e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOGD", "normalizedForm": "MOGD", "offsetStart": 34, "offsetEnd": 38}, "context": "Multi-Objective Gradient Descent (MOGD) Solver.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9983631372451782}, "created": {"value": false, "score": 1.1861324310302734e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997861385345459}, "created": {"value": true, "score": 0.9625383615493774}, "shared": {"value": false, "score": 1.0132789611816406e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOGD", "normalizedForm": "MOGD", "offsetStart": 34, "offsetEnd": 38}, "context": "Multi-Objective Gradient Descent (MOGD) Solver.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9983631372451782}, "created": {"value": false, "score": 1.1861324310302734e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997861385345459}, "created": {"value": true, "score": 0.9625383615493774}, "shared": {"value": false, "score": 1.0132789611816406e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOGD", "normalizedForm": "MOGD", "offsetStart": 34, "offsetEnd": 38}, "context": "Multi-Objective Gradient Descent (MOGD) Solver.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9983631372451782}, "created": {"value": false, "score": 1.1861324310302734e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997861385345459}, "created": {"value": true, "score": 0.9625383615493774}, "shared": {"value": false, "score": 1.0132789611816406e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOGD", "normalizedForm": "MOGD", "offsetStart": 34, "offsetEnd": 38}, "context": "Multi-Objective Gradient Descent (MOGD) Solver.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9983631372451782}, "created": {"value": false, "score": 1.1861324310302734e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997861385345459}, "created": {"value": true, "score": 0.9625383615493774}, "shared": {"value": false, "score": 1.0132789611816406e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOGD", "normalizedForm": "MOGD", "offsetStart": 34, "offsetEnd": 38}, "context": "Multi-Objective Gradient Descent (MOGD) Solver.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9983631372451782}, "created": {"value": false, "score": 1.1861324310302734e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997861385345459}, "created": {"value": true, "score": 0.9625383615493774}, "shared": {"value": false, "score": 1.0132789611816406e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOGD", "normalizedForm": "MOGD", "offsetStart": 34, "offsetEnd": 38}, "context": "We have several extensions of our MOGD solver.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0006342530250549316}, "created": {"value": true, "score": 0.6318970918655396}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997861385345459}, "created": {"value": true, "score": 0.9625383615493774}, "shared": {"value": false, "score": 1.0132789611816406e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "UDAO", "normalizedForm": "UDAO", "offsetStart": 34, "offsetEnd": 38}, "context": "In future work, we plan to extend UDAO to support a pipeline of analytic tasks, and incorporate more complex and robust models.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00020599365234375}, "created": {"value": true, "score": 0.9997661113739014}, "shared": {"value": false, "score": 7.748603820800781e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999784827232361}, "created": {"value": true, "score": 0.9999300837516785}, "shared": {"value": false, "score": 1.806020736694336e-05}}}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "software-name": {"rawForm": "Spark", "normalizedForm": "Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "offsetStart": 35, "offsetEnd": 40}, "context": "1. Infinite parameter space: Since Spark runtime parameters mix numerical and categorial parameters, there are potentially infinite configurations, only a small fraction of which belong to the Pareto set-most configurations are dominated by some Pareto optimal configuration for all objectives.", "mentionContextAttributes": {"used": {"value": false, "score": 0.010668039321899414}, "created": {"value": false, "score": 9.495019912719727e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9988607168197632}, "created": {"value": true, "score": 0.9999260306358337}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[36]", "normalizedForm": "[36]", "refKey": 36}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOO", "normalizedForm": "MOO", "offsetStart": 36, "offsetEnd": 39}, "context": "Since our focus in this paper is on MOO rather than modeling, we briefly discuss relevant modeling techniques here.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00018668174743652344}, "created": {"value": true, "score": 0.9988993406295776}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": true, "score": 0.9999203085899353}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 19}, {"label": "[5]", "normalizedForm": "[5]", "refKey": 5}, {"label": "[8]", "normalizedForm": "[8]", "refKey": 8}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOGD", "normalizedForm": "MOGD", "offsetStart": 37, "offsetEnd": 41}, "context": "We send these l k CO problems to our MOGD solver simultaneously. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9736574292182922}, "created": {"value": false, "score": 0.0009410977363586426}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997861385345459}, "created": {"value": true, "score": 0.9625383615493774}, "shared": {"value": false, "score": 1.0132789611816406e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q47509047", "wikipediaExternalRef": 54022970, "lang": "en", "confidence": 0.7826, "software-name": {"rawForm": "PyTorch", "normalizedForm": "PyTorch", "wikidataId": "Q47509047", "wikipediaExternalRef": 54022970, "lang": "en", "confidence": 0.7826, "offsetStart": 37, "offsetEnd": 44}, "context": "Our model sever is implemented using PyTorch. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0007897019386291504}, "created": {"value": true, "score": 0.98642498254776}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0007897019386291504}, "created": {"value": true, "score": 0.98642498254776}, "shared": {"value": false, "score": 4.172325134277344e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Ottertune", "normalizedForm": "Ottertune", "offsetStart": 37, "offsetEnd": 46}, "context": "As Fig. 6(f) shows, UDAO outperforms Ottertune with 49% less total running time, and 48% increase of cost, which matches application's strong preference for latency. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.016849637031555176}, "created": {"value": false, "score": 1.806020736694336e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999839663505554}, "created": {"value": false, "score": 0.009589076042175293}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[35]", "normalizedForm": "[35]", "refKey": 35}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Ottertune", "normalizedForm": "Ottertune", "offsetStart": 38, "offsetEnd": 47}, "context": "For the two long-running jobs (2,30), Ottertune reports better performance in prediction, but its model is way off and hence in actual running time it achieves much worse results. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.006360292434692383}, "created": {"value": false, "score": 3.463029861450195e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999839663505554}, "created": {"value": false, "score": 0.009589076042175293}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[35]", "normalizedForm": "[35]", "refKey": 35}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Ottertune", "normalizedForm": "Ottertune", "offsetStart": 38, "offsetEnd": 47}, "context": "Further, for 8 jobs, PF-WUN dominates Ottertune in both objectives, saving up to 33% of latency while using fewer cores-in this case, Ottertune's solution is not Pareto optimal.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0011827349662780762}, "created": {"value": false, "score": 9.196996688842773e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999839663505554}, "created": {"value": false, "score": 0.009589076042175293}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[35]", "normalizedForm": "[35]", "refKey": 35}]}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "software-name": {"rawForm": "Spark", "normalizedForm": "Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "offsetStart": 39, "offsetEnd": 44}, "context": "(3) We implement our algorithms into a Spark-based prototype.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00010782480239868164}, "created": {"value": true, "score": 0.9997868537902832}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9988607168197632}, "created": {"value": true, "score": 0.9999260306358337}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[36]", "normalizedForm": "[36]", "refKey": 36}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOO", "normalizedForm": "MOO", "offsetStart": 40, "offsetEnd": 43}, "context": "As we shall show in the paper, existing MOO methods such as Weighted Sum [19] often fail to provide sufficient coverage.", "mentionContextAttributes": {"used": {"value": false, "score": 7.706880569458008e-05}, "created": {"value": false, "score": 0.3508034348487854}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": true, "score": 0.9999203085899353}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 19}, {"label": "[5]", "normalizedForm": "[5]", "refKey": 5}, {"label": "[8]", "normalizedForm": "[8]", "refKey": 8}]}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "software-name": {"rawForm": "Spark", "normalizedForm": "Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "offsetStart": 40, "offsetEnd": 45}, "context": "Cloud providers now offer databases and Spark for serverless computing [2], [23].", "mentionContextAttributes": {"used": {"value": false, "score": 0.00012946128845214844}, "created": {"value": false, "score": 5.2034854888916016e-05}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9988607168197632}, "created": {"value": true, "score": 0.9999260306358337}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[36]", "normalizedForm": "[36]", "refKey": 36}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOO", "normalizedForm": "MOO", "offsetStart": 41, "offsetEnd": 44}, "context": "Since our focus is on systems aspects of MOO-driven cloud analytics, we present key concepts in brief and refer the reader to [29] for details and proofs.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00023651123046875}, "created": {"value": true, "score": 0.9713236689567566}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": true, "score": 0.9999203085899353}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 19}, {"label": "[5]", "normalizedForm": "[5]", "refKey": 5}, {"label": "[8]", "normalizedForm": "[8]", "refKey": 8}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOO", "normalizedForm": "MOO", "offsetStart": 41, "offsetEnd": 44}, "context": "We use DNN models as the default for the MOO experiments as they are among the most time consuming models, and use GP models in the comparison to OtterTune.", "mentionContextAttributes": {"used": {"value": true, "score": 0.974791944026947}, "created": {"value": false, "score": 3.236532211303711e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": true, "score": 0.9999203085899353}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 19}, {"label": "[5]", "normalizedForm": "[5]", "refKey": 5}, {"label": "[8]", "normalizedForm": "[8]", "refKey": 8}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOO", "normalizedForm": "MOO", "offsetStart": 42, "offsetEnd": 45}, "context": "In general, multi-objective optimization (MOO) leads to a set of solutions rather than a single optimal solution.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00010067224502563477}, "created": {"value": false, "score": 0.014081418514251709}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": true, "score": 0.9999203085899353}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 19}, {"label": "[5]", "normalizedForm": "[5]", "refKey": 5}, {"label": "[8]", "normalizedForm": "[8]", "refKey": 8}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOO", "normalizedForm": "MOO", "offsetStart": 42, "offsetEnd": 45}, "context": "Although Evo runs faster than other prior MOO methods, it still fails to generate the first Pareto set until after 2.6 seconds.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0005437135696411133}, "created": {"value": false, "score": 7.69495964050293e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": true, "score": 0.9999203085899353}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 19}, {"label": "[5]", "normalizedForm": "[5]", "refKey": 5}, {"label": "[8]", "normalizedForm": "[8]", "refKey": 8}]}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "software-name": {"rawForm": "Spark", "normalizedForm": "Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "offsetStart": 43, "offsetEnd": 48}, "context": "UDAO handles each request as follows: If a Spark task runs for the first time or is specified with new objectives, no predictive models are available for these objectives yet.", "mentionContextAttributes": {"used": {"value": false, "score": 0.000270843505859375}, "created": {"value": false, "score": 8.89897346496582e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9988607168197632}, "created": {"value": true, "score": 0.9999260306358337}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[36]", "normalizedForm": "[36]", "refKey": 36}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "UDAO", "normalizedForm": "UDAO", "offsetStart": 44, "offsetEnd": 48}, "context": "Notably, to run the full TPCx-BB benchmark, UDAO outperforms Ottertune with 26% savings on running time and 3% less cost.", "mentionContextAttributes": {"used": {"value": false, "score": 0.008715152740478516}, "created": {"value": false, "score": 1.4603137969970703e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999784827232361}, "created": {"value": true, "score": 0.9999300837516785}, "shared": {"value": false, "score": 1.806020736694336e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Ottertune", "normalizedForm": "Ottertune", "offsetStart": 47, "offsetEnd": 56}, "context": "For fair comparison, we use the GP models from Ottertune in both systems. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9985828399658203}, "created": {"value": false, "score": 1.3649463653564453e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999839663505554}, "created": {"value": false, "score": 0.009589076042175293}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[35]", "normalizedForm": "[35]", "refKey": 35}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MINLP", "normalizedForm": "MINLP", "offsetStart": 49, "offsetEnd": 54}, "context": "There are no general solvers that work for every MINLP problem [22].", "mentionContextAttributes": {"used": {"value": false, "score": 6.03795051574707e-05}, "created": {"value": false, "score": 3.987550735473633e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.996951162815094}, "created": {"value": false, "score": 3.987550735473633e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOGD", "normalizedForm": "MOGD", "offsetStart": 50, "offsetEnd": 54}, "context": "Our design of a Multi-Objective Gradient Descent (MOGD) solver uses carefullycrafted loss functions to guide gradient descent to find the minimum of a target objective while satisfying a variety of constraints, where both the target objective and constraints can be specified on complex models, e.g., DNNs and GPs.", "mentionContextAttributes": {"used": {"value": false, "score": 6.22868537902832e-05}, "created": {"value": true, "score": 0.9625383615493774}, "shared": {"value": false, "score": 6.556510925292969e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997861385345459}, "created": {"value": true, "score": 0.9625383615493774}, "shared": {"value": false, "score": 1.0132789611816406e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOGD", "normalizedForm": "MOGD", "offsetStart": 50, "offsetEnd": 54}, "context": "Our design of a Multi-Objective Gradient Descent (MOGD) solver uses carefully-crafted loss functions to guide gradient descent to find the minimum of a target objective while satisfying a variety of constraints, while both the target objective and constraints are specified over complex models, e.g., using DNNs, GPs, or other regression functions.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00012445449829101562}, "created": {"value": true, "score": 0.762760579586029}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997861385345459}, "created": {"value": true, "score": 0.9625383615493774}, "shared": {"value": false, "score": 1.0132789611816406e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOGD", "normalizedForm": "MOGD", "offsetStart": 50, "offsetEnd": 54}, "context": "Our design of a Multi-Objective Gradient Descent (MOGD) solver uses carefully-crafted loss functions to guide gradient descent to find the minimum of a target objective while satisfying a variety of constraints, while both the target objective and constraints are specified over complex models, e.g., using DNNs, GPs, or other regression functions.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00012445449829101562}, "created": {"value": true, "score": 0.762760579586029}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997861385345459}, "created": {"value": true, "score": 0.9625383615493774}, "shared": {"value": false, "score": 1.0132789611816406e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOGD", "normalizedForm": "MOGD", "offsetStart": 50, "offsetEnd": 54}, "context": "Our design of a Multi-Objective Gradient Descent (MOGD) solver uses carefully-crafted loss functions to guide gradient descent to find the minimum of a target objective while satisfying a variety of constraints, while both the target objective and constraints are specified over complex models, e.g., using DNNs, GPs, or other regression functions.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00012445449829101562}, "created": {"value": true, "score": 0.762760579586029}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997861385345459}, "created": {"value": true, "score": 0.9625383615493774}, "shared": {"value": false, "score": 1.0132789611816406e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOGD", "normalizedForm": "MOGD", "offsetStart": 50, "offsetEnd": 54}, "context": "Our design of a Multi-Objective Gradient Descent (MOGD) solver uses carefully-crafted loss functions to guide gradient descent to find the minimum of a target objective while satisfying a variety of constraints, while both the target objective and constraints are specified over complex models, e.g., using DNNs, GPs, or other regression functions.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00012445449829101562}, "created": {"value": true, "score": 0.762760579586029}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997861385345459}, "created": {"value": true, "score": 0.9625383615493774}, "shared": {"value": false, "score": 1.0132789611816406e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOGD", "normalizedForm": "MOGD", "offsetStart": 50, "offsetEnd": 54}, "context": "Our design of a Multi-Objective Gradient Descent (MOGD) solver uses carefully-crafted loss functions to guide gradient descent to find the minimum of a target objective while satisfying a variety of constraints, while both the target objective and constraints are specified over complex models, e.g., using DNNs, GPs, or other regression functions.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00012445449829101562}, "created": {"value": true, "score": 0.762760579586029}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997861385345459}, "created": {"value": true, "score": 0.9625383615493774}, "shared": {"value": false, "score": 1.0132789611816406e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOGD", "normalizedForm": "MOGD", "offsetStart": 50, "offsetEnd": 54}, "context": "Our design of a Multi-Objective Gradient Descent (MOGD) solver uses carefully-crafted loss functions to guide gradient descent to find the minimum of a target objective while satisfying a variety of constraints, while both the target objective and constraints are specified over complex models, e.g., using DNNs, GPs, or other regression functions.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00012445449829101562}, "created": {"value": true, "score": 0.762760579586029}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997861385345459}, "created": {"value": true, "score": 0.9625383615493774}, "shared": {"value": false, "score": 1.0132789611816406e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOGD", "normalizedForm": "MOGD", "offsetStart": 50, "offsetEnd": 54}, "context": "Our design of a Multi-Objective Gradient Descent (MOGD) solver uses carefully-crafted loss functions to guide gradient descent to find the minimum of a target objective while satisfying a variety of constraints, where both the target objective and constraints can be specified over complex models, e.g., using DNNs, GPs, or other regression functions.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00010973215103149414}, "created": {"value": true, "score": 0.8468315601348877}, "shared": {"value": false, "score": 1.0132789611816406e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997861385345459}, "created": {"value": true, "score": 0.9625383615493774}, "shared": {"value": false, "score": 1.0132789611816406e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MO-GD", "normalizedForm": "MO-GD", "offsetStart": 50, "offsetEnd": 55}, "language": {"rawForm": "Java", "normalizedForm": "Java", "wikidataId": "Q251", "offsetStart": 41, "offsetEnd": 45}, "context": "Our system supports several solvers including our MO-GD solver ( \u00a7IV-B) and the Knitro [14] solver. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00017404556274414062}, "created": {"value": false, "score": 0.0721319317817688}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00017404556274414062}, "created": {"value": false, "score": 0.0721319317817688}, "shared": {"value": false, "score": 1.7881393432617188e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "UDAO", "normalizedForm": "UDAO", "offsetStart": 52, "offsetEnd": 56}, "context": "Using batch and streaming workloads, we showed that UDAO outperforms existing MOO methods [19], [8], [5], [10] in both speed and coverage of the Pareto set, and outperforms Ottertune [35] by a 26%-49% reduction in running time of the TPCx-BB benchmark, while adapting to different application preferences on multiple objectives.", "mentionContextAttributes": {"used": {"value": true, "score": 0.8805475234985352}, "created": {"value": false, "score": 3.993511199951172e-06}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999784827232361}, "created": {"value": true, "score": 0.9999300837516785}, "shared": {"value": false, "score": 1.806020736694336e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "sysyem", "normalizedForm": "sysyem", "offsetStart": 52, "offsetEnd": 58}, "context": "Therefore, we use MOGD as the default solver in our sysyem.", "mentionContextAttributes": {"used": {"value": true, "score": 0.7265871167182922}, "created": {"value": false, "score": 4.6193599700927734e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.7265871167182922}, "created": {"value": false, "score": 4.6193599700927734e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "UDAO", "normalizedForm": "UDAO", "offsetStart": 54, "offsetEnd": 58}, "context": "The prediction and actual latency are more similar in UDAO, enabling better optimization results.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0005171895027160645}, "created": {"value": false, "score": 5.0961971282958984e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999784827232361}, "created": {"value": true, "score": 0.9999300837516785}, "shared": {"value": false, "score": 1.806020736694336e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOO", "normalizedForm": "MOO", "offsetStart": 55, "offsetEnd": 58}, "context": "Such systems constraints fundamentally distinguish our MOO work from the theoretical work in the optimization community [19], [8].", "mentionContextAttributes": {"used": {"value": false, "score": 7.861852645874023e-05}, "created": {"value": false, "score": 0.4117990732192993}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": true, "score": 0.9999203085899353}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 19}, {"label": "[5]", "normalizedForm": "[5]", "refKey": 5}, {"label": "[8]", "normalizedForm": "[8]", "refKey": 8}]}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "software-name": {"rawForm": "Spark", "normalizedForm": "Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "offsetStart": 55, "offsetEnd": 60}, "context": "Consider an enterprise user who wishes to run a mix of Spark analytic tasks in the cloud.", "mentionContextAttributes": {"used": {"value": false, "score": 8.314847946166992e-05}, "created": {"value": false, "score": 0.027196288108825684}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9988607168197632}, "created": {"value": true, "score": 0.9999260306358337}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[36]", "normalizedForm": "[36]", "refKey": 36}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOO", "normalizedForm": "MOO", "offsetStart": 56, "offsetEnd": 59}, "context": "In this section, we compare our MOO approach to popular MOO techniques [5], [10], [19], [8] and perform an endto-end comparison to a STOA performance tuning system, OtterTune [35].", "mentionContextAttributes": {"used": {"value": false, "score": 0.4622530937194824}, "created": {"value": false, "score": 6.258487701416016e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": true, "score": 0.9999203085899353}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 19}, {"label": "[5]", "normalizedForm": "[5]", "refKey": 5}, {"label": "[8]", "normalizedForm": "[8]", "refKey": 8}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOO", "normalizedForm": "MOO", "offsetStart": 58, "offsetEnd": 61}, "context": "Note that this leads to an approximate Pareto set for the MOO problem because each solution of a constrained optimization can be suboptimal as backpropogation is stuck at a local minima.", "mentionContextAttributes": {"used": {"value": false, "score": 0.010004997253417969}, "created": {"value": false, "score": 2.4616718292236328e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": true, "score": 0.9999203085899353}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 19}, {"label": "[5]", "normalizedForm": "[5]", "refKey": 5}, {"label": "[8]", "normalizedForm": "[8]", "refKey": 8}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOO", "normalizedForm": "MOO", "offsetStart": 58, "offsetEnd": 61}, "context": "Note that this leads to an approximate Pareto set for the MOO problem because each solution of a constrained optimization can be suboptimal as backpropogation is stuck at a local minima.", "mentionContextAttributes": {"used": {"value": false, "score": 0.010004997253417969}, "created": {"value": false, "score": 2.4616718292236328e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": true, "score": 0.9999203085899353}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 19}, {"label": "[5]", "normalizedForm": "[5]", "refKey": 5}, {"label": "[8]", "normalizedForm": "[8]", "refKey": 8}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOO", "normalizedForm": "MOO", "offsetStart": 58, "offsetEnd": 61}, "context": "Note that this leads to an approximate Pareto set for the MOO problem because each solution of a constrained optimization can be suboptimal as backpropogation is stuck at a local minima.", "mentionContextAttributes": {"used": {"value": false, "score": 0.010004997253417969}, "created": {"value": false, "score": 2.4616718292236328e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": true, "score": 0.9999203085899353}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 19}, {"label": "[5]", "normalizedForm": "[5]", "refKey": 5}, {"label": "[8]", "normalizedForm": "[8]", "refKey": 8}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOO", "normalizedForm": "MOO", "offsetStart": 58, "offsetEnd": 61}, "context": "TEMPO [31] addresses resource management for DBMSs in the MOO setting: when Service-Level Objectives (SLOs) cannot be all satisfied, it guarantees max-min fairness over SLOs; otherwise, it uses WS for returning a single solution.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00018262863159179688}, "created": {"value": false, "score": 4.26173210144043e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": true, "score": 0.9999203085899353}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 19}, {"label": "[5]", "normalizedForm": "[5]", "refKey": 5}, {"label": "[8]", "normalizedForm": "[8]", "refKey": 8}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "OtterTune", "normalizedForm": "OtterTune", "offsetStart": 58, "offsetEnd": 67}, "context": "UDAO can achieve 43%-56% reduction in latency compared to OtterTune while adapting to user preferences (which will be detailed in our performance study).", "mentionContextAttributes": {"used": {"value": false, "score": 7.31348991394043e-05}, "created": {"value": false, "score": 1.7344951629638672e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999018311500549}, "created": {"value": false, "score": 0.00010138750076293945}, "shared": {"value": false, "score": 2.205371856689453e-06}}, "references": [{"label": "[35]", "normalizedForm": "[35]", "refKey": 35}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOO", "normalizedForm": "MOO", "offsetStart": 60, "offsetEnd": 63}, "context": "The implications of this change are twofold: (i) It enables MOO to work with a range of models.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00015211105346679688}, "created": {"value": false, "score": 0.12131166458129883}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": true, "score": 0.9999203085899353}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 19}, {"label": "[5]", "normalizedForm": "[5]", "refKey": 5}, {"label": "[8]", "normalizedForm": "[8]", "refKey": 8}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOO", "normalizedForm": "MOO", "offsetStart": 60, "offsetEnd": 63}, "context": "MOO approaches for workflow scheduling [13] differ from our MOO in both the parameter space and the solution.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0006968975067138672}, "created": {"value": false, "score": 4.470348358154297e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": true, "score": 0.9999203085899353}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 19}, {"label": "[5]", "normalizedForm": "[5]", "refKey": 5}, {"label": "[8]", "normalizedForm": "[8]", "refKey": 8}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOO", "normalizedForm": "MOO", "offsetStart": 61, "offsetEnd": 64}, "context": "Detailed experiments using benchmark workloads show that our MOO techniques provide a 2-50x speedup over existing MOO methods, while offering good coverage of the Pareto frontier.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0022135376930236816}, "created": {"value": false, "score": 0.012670159339904785}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": true, "score": 0.9999203085899353}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 19}, {"label": "[5]", "normalizedForm": "[5]", "refKey": 5}, {"label": "[8]", "normalizedForm": "[8]", "refKey": 8}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MINLP", "normalizedForm": "MINLP", "offsetStart": 61, "offsetEnd": 66}, "context": "This problem reduces to mixed-integer nonlinear programming (MINLP) and is NP-hard [11].", "mentionContextAttributes": {"used": {"value": false, "score": 0.0003669857978820801}, "created": {"value": false, "score": 4.470348358154297e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.996951162815094}, "created": {"value": false, "score": 3.987550735473633e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Ottertune", "normalizedForm": "Ottertune", "offsetStart": 61, "offsetEnd": 70}, "context": "Notably, to run the full TPCx-BB benchmark, UDAO outperforms Ottertune with 26% savings on running time and 3% less cost. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.008715152740478516}, "created": {"value": false, "score": 1.4603137969970703e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999839663505554}, "created": {"value": false, "score": 0.009589076042175293}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[35]", "normalizedForm": "[35]", "refKey": 35}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOO", "normalizedForm": "MOO", "offsetStart": 62, "offsetEnd": 65}, "context": "We first compare our PF algorithms, PF-AS and PF-AP , to five MOO methods: Weighted Sum (WS) [19], Normalized Constraints (NC) [21], NSGA-II [6] suggested as the most relevant Evolutionary (Evo) method [8], PESM from the Spearmint library [10], and qEHVI from BoTorch [5].", "mentionContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": false, "score": 6.258487701416016e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": true, "score": 0.9999203085899353}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 19}, {"label": "[5]", "normalizedForm": "[5]", "refKey": 5}, {"label": "[8]", "normalizedForm": "[8]", "refKey": 8}]}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "software-name": {"rawForm": "Spark", "normalizedForm": "Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "offsetStart": 63, "offsetEnd": 68}, "context": "As noted before, serverless analytics using databases (DBs) or Spark are becoming common in cloud computing.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0002688169479370117}, "created": {"value": false, "score": 0.0004939436912536621}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9988607168197632}, "created": {"value": true, "score": 0.9999260306358337}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[36]", "normalizedForm": "[36]", "refKey": 36}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOO", "normalizedForm": "MOO", "offsetStart": 66, "offsetEnd": 69}, "context": "At the core of UDAO is a principled multi-objective optimization (MOO) approach that takes multiple, possibly conflicting, objectives, computes a Paretooptimal set of configurations (i.e., not dominated by any other configuration in all objectives), and returns one from the set that best suits the objectives.", "mentionContextAttributes": {"used": {"value": false, "score": 7.265806198120117e-05}, "created": {"value": false, "score": 0.05517756938934326}, "shared": {"value": false, "score": 7.748603820800781e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": true, "score": 0.9999203085899353}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 19}, {"label": "[5]", "normalizedForm": "[5]", "refKey": 5}, {"label": "[8]", "normalizedForm": "[8]", "refKey": 8}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOO", "normalizedForm": "MOO", "offsetStart": 66, "offsetEnd": 69}, "context": "We now present our Progressive Frontier framework for solving the MOO problem.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00016021728515625}, "created": {"value": true, "score": 0.9999203085899353}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": true, "score": 0.9999203085899353}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 19}, {"label": "[5]", "normalizedForm": "[5]", "refKey": 5}, {"label": "[8]", "normalizedForm": "[8]", "refKey": 8}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Ottertune", "normalizedForm": "Ottertune", "offsetStart": 67, "offsetEnd": 76}, "context": "In contrast, PF-WUN is more adaptive, achieving lower latency than Ottertune for all 30 jobs with up to 61% reduction.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0001652240753173828}, "created": {"value": false, "score": 5.3822994232177734e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999839663505554}, "created": {"value": false, "score": 0.009589076042175293}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[35]", "normalizedForm": "[35]", "refKey": 35}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOO", "normalizedForm": "MOO", "offsetStart": 68, "offsetEnd": 71}, "context": "At a core of our work is a principled multi-objective optimization (MOO) approach that computes a Pareto optimal set of configurations to reveal tradeoffs between different objectives, recommends a new Spark configuration that best explores such tradeoffs, and employs novel optimizations to enable such recommendations within a few seconds.", "mentionContextAttributes": {"used": {"value": false, "score": 7.396936416625977e-05}, "created": {"value": true, "score": 0.9996113181114197}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": true, "score": 0.9999203085899353}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 19}, {"label": "[5]", "normalizedForm": "[5]", "refKey": 5}, {"label": "[8]", "normalizedForm": "[8]", "refKey": 8}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "UDAO", "normalizedForm": "UDAO", "offsetStart": 69, "offsetEnd": 73}, "context": "Compared to Ottertune, a state-of-the-art performance tuning system, UDAO recommends Spark configurations that yield 26%-49% reduction of running time of the TPCx-BB benchmark while adapting to different user preferences on multiple objectives.", "mentionContextAttributes": {"used": {"value": false, "score": 2.6404857635498047e-05}, "created": {"value": false, "score": 0.000244140625}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999784827232361}, "created": {"value": true, "score": 0.9999300837516785}, "shared": {"value": false, "score": 1.806020736694336e-05}}}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "software-name": {"rawForm": "Spark", "normalizedForm": "Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "offsetStart": 70, "offsetEnd": 75}, "context": "Despite its wide adoption, current big data analytics systems such as Spark remain best effort in nature and typically lack the ability to take user objectives such as performance goals or cost constraints into account.", "mentionContextAttributes": {"used": {"value": false, "score": 6.455183029174805e-05}, "created": {"value": false, "score": 0.01185154914855957}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9988607168197632}, "created": {"value": true, "score": 0.9999260306358337}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[36]", "normalizedForm": "[36]", "refKey": 36}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOO", "normalizedForm": "MOO", "offsetStart": 72, "offsetEnd": 75}, "context": "using one server), which are all background processes and do not affect MOO for online jobs.", "mentionContextAttributes": {"used": {"value": false, "score": 0.023439884185791016}, "created": {"value": false, "score": 8.52346420288086e-06}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": true, "score": 0.9999203085899353}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 19}, {"label": "[5]", "normalizedForm": "[5]", "refKey": 5}, {"label": "[8]", "normalizedForm": "[8]", "refKey": 8}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "UDAO", "normalizedForm": "UDAO", "offsetStart": 76, "offsetEnd": 80}, "context": "In this paper, we introduce a Spark-based Unified Data Analytics Optimizer (UDAO) that can automate the task of determining an optimal configuration for each Spark task based on multiple task objectives.", "mentionContextAttributes": {"used": {"value": false, "score": 3.737211227416992e-05}, "created": {"value": true, "score": 0.9999260306358337}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999784827232361}, "created": {"value": true, "score": 0.9999300837516785}, "shared": {"value": false, "score": 1.806020736694336e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Ottertune", "normalizedForm": "Ottertune", "offsetStart": 76, "offsetEnd": 85}, "context": "Thus, cost2 is subject to 15% error using our DNN model and 34% error using Ottertune's GP model.", "mentionContextAttributes": {"used": {"value": false, "score": 0.06462997198104858}, "created": {"value": false, "score": 1.329183578491211e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999839663505554}, "created": {"value": false, "score": 0.009589076042175293}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[35]", "normalizedForm": "[35]", "refKey": 35}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOO", "normalizedForm": "MOO", "offsetStart": 77, "offsetEnd": 80}, "context": "When the analytic task runs the next time, the multi objective optimization (MOO) module will contact the model server and retrieve the task-specific predictive models.", "mentionContextAttributes": {"used": {"value": false, "score": 0.028400063514709473}, "created": {"value": false, "score": 4.941225051879883e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": true, "score": 0.9999203085899353}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 19}, {"label": "[5]", "normalizedForm": "[5]", "refKey": 5}, {"label": "[8]", "normalizedForm": "[8]", "refKey": 8}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOO", "normalizedForm": "MOO", "offsetStart": 78, "offsetEnd": 81}, "context": "Using batch and streaming workloads, we showed that UDAO outperforms existing MOO methods [19], [8], [5], [10] in both speed and coverage of the Pareto set, and outperforms Ottertune [35] by a 26%-49% reduction in running time of the TPCx-BB benchmark, while adapting to different application preferences on multiple objectives.", "mentionContextAttributes": {"used": {"value": true, "score": 0.8805475234985352}, "created": {"value": false, "score": 3.993511199951172e-06}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": true, "score": 0.9999203085899353}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 19, "offsetStart": 99391, "offsetEnd": 99395}, {"label": "[5]", "normalizedForm": "[5]", "refKey": 5, "offsetStart": 99402, "offsetEnd": 99405}, {"label": "[8]", "normalizedForm": "[8]", "refKey": 8, "offsetStart": 99397, "offsetEnd": 99400}]}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "software-name": {"rawForm": "Spark", "normalizedForm": "Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "offsetStart": 78, "offsetEnd": 83}, "context": "Figure 1(a) shows the design of UDAO based on this architectural change, with Spark as the underlying analytics engine.", "mentionContextAttributes": {"used": {"value": true, "score": 0.5022230744361877}, "created": {"value": false, "score": 0.03573310375213623}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9988607168197632}, "created": {"value": true, "score": 0.9999260306358337}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[36]", "normalizedForm": "[36]", "refKey": 36}]}, {"type": "software", "software-type": "software", "wikidataId": "Q6334372", "wikipediaExternalRef": 48659466, "lang": "en", "confidence": 0.4925, "software-name": {"rawForm": "Knitro", "normalizedForm": "Knitro", "wikidataId": "Q6334372", "wikipediaExternalRef": 48659466, "lang": "en", "confidence": 0.4925, "offsetStart": 80, "offsetEnd": 91}, "context": "Our system supports several solvers including our MO-GD solver ( \u00a7IV-B) and the Knitro [14] solver. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00017404556274414062}, "created": {"value": false, "score": 0.0721319317817688}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.08566200733184814}, "created": {"value": false, "score": 0.0721319317817688}, "shared": {"value": false, "score": 2.980232238769531e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOO", "normalizedForm": "MOO", "offsetStart": 82, "offsetEnd": 85}, "context": "Next we perform an end-to-end comparison of the configurations recommended by our MOO against Ottertune [35].", "mentionContextAttributes": {"used": {"value": true, "score": 0.994007408618927}, "created": {"value": false, "score": 7.921457290649414e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": true, "score": 0.9999203085899353}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 19}, {"label": "[5]", "normalizedForm": "[5]", "refKey": 5}, {"label": "[8]", "normalizedForm": "[8]", "refKey": 8}]}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "software-name": {"rawForm": "Spark", "normalizedForm": "Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "offsetStart": 85, "offsetEnd": 90}, "context": "Compared to Ottertune, a state-of-the-art performance tuning system, UDAO recommends Spark configurations that yield 26%-49% reduction of running time of the TPCx-BB benchmark while adapting to different user preferences on multiple objectives.", "mentionContextAttributes": {"used": {"value": false, "score": 2.6404857635498047e-05}, "created": {"value": false, "score": 0.000244140625}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9988607168197632}, "created": {"value": true, "score": 0.9999260306358337}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[36]", "normalizedForm": "[36]", "refKey": 36}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOGD", "normalizedForm": "MOGD", "offsetStart": 86, "offsetEnd": 90}, "context": "cus on the CO problem depicted in Figure X(a). of a Multi-Objective Gradient Descent (MOGD) carefully-crafted loss functions to guide gradient find the minimum of a target objective while satriety of constraints, while both the target objecnstraints are specified over complex models, e.g., s, GPs, or other regression functions.", "mentionContextAttributes": {"used": {"value": false, "score": 0.1113283634185791}, "created": {"value": false, "score": 3.993511199951172e-06}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997861385345459}, "created": {"value": true, "score": 0.9625383615493774}, "shared": {"value": false, "score": 1.0132789611816406e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "UDAO", "normalizedForm": "UDAO", "offsetStart": 88, "offsetEnd": 92}, "context": "For the example task in Figure 1(b), Figure 1(c) shows the effect of optimization using UDAO against OtterTune [35], where the application first specified (0.5, 0.5) weights for latency and cost and then later (0.9, 0.1) weights to favor latency to cost.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999018311500549}, "created": {"value": false, "score": 2.562999725341797e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999784827232361}, "created": {"value": true, "score": 0.9999300837516785}, "shared": {"value": false, "score": 1.806020736694336e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Ottertune", "normalizedForm": "Ottertune", "offsetStart": 94, "offsetEnd": 103}, "context": "Next we perform an end-to-end comparison of the configurations recommended by our MOO against Ottertune [35].", "mentionContextAttributes": {"used": {"value": true, "score": 0.994007408618927}, "created": {"value": false, "score": 7.921457290649414e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999839663505554}, "created": {"value": false, "score": 0.009589076042175293}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[35]", "normalizedForm": "[35]", "refKey": 35, "offsetStart": 89732, "offsetEnd": 89736}]}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "software-name": {"rawForm": "Spark", "normalizedForm": "Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "offsetStart": 95, "offsetEnd": 100}, "context": "We sample 100's configurations for each offline workload using (a) heuristic sampling based on Spark best practices and (b) Bayesian optimization [26] for exploring configurations that are likely to minimize latency.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9977765679359436}, "created": {"value": false, "score": 4.112720489501953e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9988607168197632}, "created": {"value": true, "score": 0.9999260306358337}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[36]", "normalizedForm": "[36]", "refKey": 36}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Ottertune", "normalizedForm": "Ottertune", "offsetStart": 95, "offsetEnd": 104}, "context": "In this experiment we use our DNN model to demonstrate the flexibility of our optimizer, while Ottertune can only use its GP model.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0766061544418335}, "created": {"value": false, "score": 0.0010759234428405762}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999839663505554}, "created": {"value": false, "score": 0.009589076042175293}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[35]", "normalizedForm": "[35]", "refKey": 35}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOO", "normalizedForm": "MOO", "offsetStart": 96, "offsetEnd": 99}, "context": "To meet stringent time constraints, we begin our system design by separating model learning and MOO into two asynchronous procedures: The time-consuming modeling process is performed offline by a model server whenever new training data becomes available.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0011168718338012695}, "created": {"value": true, "score": 0.9726161360740662}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": true, "score": 0.9999203085899353}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 19}, {"label": "[5]", "normalizedForm": "[5]", "refKey": 5}, {"label": "[8]", "normalizedForm": "[8]", "refKey": 8}]}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "software-name": {"rawForm": "Spark", "normalizedForm": "Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "offsetStart": 99, "offsetEnd": 104}, "context": "UDAO unifies all of them in the general paradigm of dataflow programs and is implemented on top of Spark, a well-known unified analytics engine with both onpremise and serverless offerings in the cloud (e.g., [23]).", "mentionContextAttributes": {"used": {"value": false, "score": 0.00018906593322753906}, "created": {"value": false, "score": 0.0009218454360961914}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9988607168197632}, "created": {"value": true, "score": 0.9999260306358337}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[36]", "normalizedForm": "[36]", "refKey": 36}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "OtterTune", "normalizedForm": "OtterTune", "offsetStart": 101, "offsetEnd": 114}, "context": "For the example task in Figure 1(b), Figure 1(c) shows the effect of optimization using UDAO against OtterTune [35], where the application first specified (0.5, 0.5) weights for latency and cost and then later (0.9, 0.1) weights to favor latency to cost. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999018311500549}, "created": {"value": false, "score": 2.562999725341797e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999018311500549}, "created": {"value": false, "score": 0.00010138750076293945}, "shared": {"value": false, "score": 2.205371856689453e-06}}, "references": [{"label": "[35]", "normalizedForm": "[35]", "refKey": 35}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "OtterTune", "normalizedForm": "OtterTune", "offsetStart": 101, "offsetEnd": 114}, "context": "In addition, it supports two automatic tools to learn models from runtime traces: (i) GP models from OtterTune [35]: we chose OtterTune [35] over other tools [7], [39] because it outperforms iTuned [7], another GP-based tool, due to the ability to map a new query against all past queries in model building, while CDBTune [39] cannot return a regression function explicitly for each objective as required by our system. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.08178448677062988}, "created": {"value": false, "score": 5.543231964111328e-06}, "shared": {"value": false, "score": 2.205371856689453e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999018311500549}, "created": {"value": false, "score": 0.00010138750076293945}, "shared": {"value": false, "score": 2.205371856689453e-06}}, "references": [{"label": "[35]", "normalizedForm": "[35]", "refKey": 35}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "UDAO", "normalizedForm": "UDAO", "offsetStart": 104, "offsetEnd": 108}, "context": "To quantify the impact of model accuracy on optimization, we collect 120 configurations, recommended by UDAO and Ottertune each, from Expt 4 where optimization was ran using w=(0.5,0.5) or w=(0.9,0.1),", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999784827232361}, "created": {"value": false, "score": 2.9265880584716797e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999784827232361}, "created": {"value": true, "score": 0.9999300837516785}, "shared": {"value": false, "score": 1.806020736694336e-05}}}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "software-name": {"rawForm": "Spark", "normalizedForm": "Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "offsetStart": 104, "offsetEnd": 109}, "context": "Overall, Ottertune has more points (38 out of 120) that lead to PIR below 0%, performing worse than the Spark expert, than UDAO (16/120).", "mentionContextAttributes": {"used": {"value": false, "score": 0.04583996534347534}, "created": {"value": false, "score": 5.066394805908203e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9988607168197632}, "created": {"value": true, "score": 0.9999260306358337}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[36]", "normalizedForm": "[36]", "refKey": 36}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOO", "normalizedForm": "MOO", "offsetStart": 105, "offsetEnd": 108}, "context": "Recent performance tuning systems are limited to singleobjective optimization and cannot support complex MOO problems.", "mentionContextAttributes": {"used": {"value": false, "score": 6.324052810668945e-05}, "created": {"value": false, "score": 0.0056299567222595215}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": true, "score": 0.9999203085899353}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 19}, {"label": "[5]", "normalizedForm": "[5]", "refKey": 5}, {"label": "[8]", "normalizedForm": "[8]", "refKey": 8}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOO", "normalizedForm": "MOO", "offsetStart": 105, "offsetEnd": 108}, "context": "ClassTune [41] solves the optimization problem by classification, which cannot be easily extended to the MOO setting.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0002824068069458008}, "created": {"value": false, "score": 6.020069122314453e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": true, "score": 0.9999203085899353}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 19}, {"label": "[5]", "normalizedForm": "[5]", "refKey": 5}, {"label": "[8]", "normalizedForm": "[8]", "refKey": 8}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOO", "normalizedForm": "MOO", "offsetStart": 109, "offsetEnd": 112}, "context": "(1) We address the infinite search space issue by presenting a new approach for incrementally transforming a MOO problem to a set of constrained optimization (CO) problems, where each CO problem can be solved individually to return a Pareto optimal point.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0001373291015625}, "created": {"value": true, "score": 0.9918988943099976}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": true, "score": 0.9999203085899353}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 19}, {"label": "[5]", "normalizedForm": "[5]", "refKey": 5}, {"label": "[8]", "normalizedForm": "[8]", "refKey": 8}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOO", "normalizedForm": "MOO", "offsetStart": 110, "offsetEnd": 113}, "context": "While MOO under numerical parameters has been studied in the optimization community [19], [8], we address the MOO problem specifically for designing a cloud analytics optimizer-our problem setting poses systems challenges such as sufficient coverage of the Pareto set under stringent time constraints.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0002689361572265625}, "created": {"value": false, "score": 0.02493607997894287}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": true, "score": 0.9999203085899353}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 19}, {"label": "[5]", "normalizedForm": "[5]", "refKey": 5}, {"label": "[8]", "normalizedForm": "[8]", "refKey": 8}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Ottertune", "normalizedForm": "Ottertune", "offsetStart": 113, "offsetEnd": 122}, "context": "To quantify the impact of model accuracy on optimization, we collect 120 configurations, recommended by UDAO and Ottertune each, from Expt 4 where optimization was ran using w=(0.5,0.5) or w=(0.9,0.1),", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999784827232361}, "created": {"value": false, "score": 2.9265880584716797e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999839663505554}, "created": {"value": false, "score": 0.009589076042175293}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[35]", "normalizedForm": "[35]", "refKey": 35}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOO", "normalizedForm": "MOO", "offsetStart": 114, "offsetEnd": 117}, "context": "Detailed experiments using benchmark workloads show that our MOO techniques provide a 2-50x speedup over existing MOO methods, while offering good coverage of the Pareto frontier.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0022135376930236816}, "created": {"value": false, "score": 0.012670159339904785}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": true, "score": 0.9999203085899353}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 19}, {"label": "[5]", "normalizedForm": "[5]", "refKey": 5}, {"label": "[8]", "normalizedForm": "[8]", "refKey": 8}]}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "software-name": {"rawForm": "Spark", "normalizedForm": "Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "offsetStart": 116, "offsetEnd": 121}, "context": "To the best of our knowledge, our work is the first to tackle MOObased performance tuning for big data systems like Spark. ", "mentionContextAttributes": {"used": {"value": false, "score": 8.255243301391602e-05}, "created": {"value": true, "score": 0.9998395442962646}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9988607168197632}, "created": {"value": true, "score": 0.9999260306358337}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[36]", "normalizedForm": "[36]", "refKey": 36}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "UDAO", "normalizedForm": "UDAO", "offsetStart": 123, "offsetEnd": 127}, "context": "Overall, Ottertune has more points (38 out of 120) that lead to PIR below 0%, performing worse than the Spark expert, than UDAO (16/120).", "mentionContextAttributes": {"used": {"value": false, "score": 0.04583996534347534}, "created": {"value": false, "score": 5.066394805908203e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999784827232361}, "created": {"value": true, "score": 0.9999300837516785}, "shared": {"value": false, "score": 1.806020736694336e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOO", "normalizedForm": "MOO", "offsetStart": 124, "offsetEnd": 127}, "context": "Upon the next run of the task, if updated models become available, the Pareto frontier will be recomputed by re-running the MOO and a new configuration will be recommended.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0002410411834716797}, "created": {"value": false, "score": 0.0006664395332336426}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": true, "score": 0.9999203085899353}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 19}, {"label": "[5]", "normalizedForm": "[5]", "refKey": 5}, {"label": "[8]", "normalizedForm": "[8]", "refKey": 8}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "UDAO", "normalizedForm": "UDAO", "offsetStart": 125, "offsetEnd": 129}, "context": "UDAO is designed to work for recurring workloads: for each scheduled job of a recurring task, once a user request is sent to UDAO, it recommends a configuration under a few seconds to improve job performance towards user-specified objectives.", "mentionContextAttributes": {"used": {"value": false, "score": 7.110834121704102e-05}, "created": {"value": false, "score": 0.26017606258392334}, "shared": {"value": false, "score": 1.6093254089355469e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999784827232361}, "created": {"value": true, "score": 0.9999300837516785}, "shared": {"value": false, "score": 1.806020736694336e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "OtterTune", "normalizedForm": "OtterTune", "offsetStart": 126, "offsetEnd": 140}, "context": "In addition, it supports two automatic tools to learn models from runtime traces: (i) GP models from OtterTune [35]: we chose OtterTune [35] over other tools [7], [39] because it outperforms iTuned [7], another GP-based tool, due to the ability to map a new query against all past queries in model building, while CDBTune [39] cannot return a regression function explicitly for each objective as required by our system. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.08178448677062988}, "created": {"value": false, "score": 5.543231964111328e-06}, "shared": {"value": false, "score": 2.205371856689453e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999018311500549}, "created": {"value": false, "score": 0.00010138750076293945}, "shared": {"value": false, "score": 2.205371856689453e-06}}, "references": [{"label": "[35]", "normalizedForm": "[35]", "refKey": 35}]}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "software-name": {"rawForm": "Spark", "normalizedForm": "Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "offsetStart": 129, "offsetEnd": 134}, "context": "These traces were used to train workload-specific models for latency, cost, etc. Feature selection resulted in 12 most important Spark parameters including the number of executors, number of cores per executor, memory per executor, shuffle compress, parallelism, etc. (see [29] for the full list).", "mentionContextAttributes": {"used": {"value": true, "score": 0.9988607168197632}, "created": {"value": false, "score": 1.8477439880371094e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9988607168197632}, "created": {"value": true, "score": 0.9999260306358337}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[36]", "normalizedForm": "[36]", "refKey": 36}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Ottertune", "normalizedForm": "Ottertune", "offsetStart": 134, "offsetEnd": 143}, "context": "Further, for 8 jobs, PF-WUN dominates Ottertune in both objectives, saving up to 33% of latency while using fewer cores-in this case, Ottertune's solution is not Pareto optimal.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0011827349662780762}, "created": {"value": false, "score": 9.196996688842773e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999839663505554}, "created": {"value": false, "score": 0.009589076042175293}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[35]", "normalizedForm": "[35]", "refKey": 35}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MINLP", "normalizedForm": "MINLP", "offsetStart": 140, "offsetEnd": 145}, "context": "k, where each model is ear and some variables among x can be inicted to a single objective, this problem is -integer nonlinear programming (MINLP) P-hard [6,15].", "mentionContextAttributes": {"used": {"value": false, "score": 0.0026793479919433594}, "created": {"value": false, "score": 5.662441253662109e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.996951162815094}, "created": {"value": false, "score": 3.987550735473633e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "references": [{"label": "[6,", "normalizedForm": "[6", "refKey": 6, "offsetStart": 40211, "offsetEnd": 40214}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MINLP", "normalizedForm": "MINLP", "offsetStart": 140, "offsetEnd": 145}, "context": "k, where each model is ear and some variables among x can be inicted to a single objective, this problem is -integer nonlinear programming (MINLP) P-hard [6,15].", "mentionContextAttributes": {"used": {"value": false, "score": 0.0026793479919433594}, "created": {"value": false, "score": 5.662441253662109e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.996951162815094}, "created": {"value": false, "score": 3.987550735473633e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOO", "normalizedForm": "MOO", "offsetStart": 142, "offsetEnd": 145}, "context": "For an analytic task, the Pareto Set (Frontier) F includes all the Pareto optimal points in the objective space \u03a6, and is the solution to the MOO problem.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0019681453704833984}, "created": {"value": false, "score": 8.362531661987305e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": true, "score": 0.9999203085899353}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 19}, {"label": "[5]", "normalizedForm": "[5]", "refKey": 5}, {"label": "[8]", "normalizedForm": "[8]", "refKey": 8}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "OtterTune", "normalizedForm": "OtterTune", "offsetStart": 146, "offsetEnd": 155}, "context": "We use DNN models as the default for the MOO experiments as they are among the most time consuming models, and use GP models in the comparison to OtterTune.", "mentionContextAttributes": {"used": {"value": true, "score": 0.974791944026947}, "created": {"value": false, "score": 3.236532211303711e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999018311500549}, "created": {"value": false, "score": 0.00010138750076293945}, "shared": {"value": false, "score": 2.205371856689453e-06}}, "references": [{"label": "[35]", "normalizedForm": "[35]", "refKey": 35}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOO", "normalizedForm": "MOO", "offsetStart": 149, "offsetEnd": 152}, "context": "Evaluation results using batch and stream analytics benchmarks show that our approach produces a Pareto frontier within 2.5 seconds, and outperforms MOO methods including Weighted Sum [19], Normal Constraints [19], Evolutional methods [8], and multi-objective Bayesian optimization [10], [5] with 2-50x speedup, while offering better coverage over the frontier and enabling exploration of tradeoffs such as cost-latency or latency-throughput.", "mentionContextAttributes": {"used": {"value": false, "score": 0.1140245795249939}, "created": {"value": false, "score": 1.519918441772461e-05}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": true, "score": 0.9999203085899353}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 19}, {"label": "[5]", "normalizedForm": "[5]", "refKey": 5}, {"label": "[8]", "normalizedForm": "[8]", "refKey": 8}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOO", "normalizedForm": "MOO", "offsetStart": 155, "offsetEnd": 158}, "context": "Therefore, we develop a new solver that uses a customized gradient descent (GD) approach to approximately solve constrained optimization (CO) problems for MOO (see Fig 3(a)).", "mentionContextAttributes": {"used": {"value": false, "score": 3.8683414459228516e-05}, "created": {"value": true, "score": 0.9998926520347595}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": true, "score": 0.9999203085899353}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 19}, {"label": "[5]", "normalizedForm": "[5]", "refKey": 5}, {"label": "[8]", "normalizedForm": "[8]", "refKey": 8}]}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "software-name": {"rawForm": "Spark", "normalizedForm": "Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "offsetStart": 158, "offsetEnd": 163}, "context": "In this paper, we introduce a Spark-based Unified Data Analytics Optimizer (UDAO) that can automate the task of determining an optimal configuration for each Spark task based on multiple task objectives.", "mentionContextAttributes": {"used": {"value": false, "score": 3.737211227416992e-05}, "created": {"value": true, "score": 0.9999260306358337}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9988607168197632}, "created": {"value": true, "score": 0.9999260306358337}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[36]", "normalizedForm": "[36]", "refKey": 36}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "OtterTune", "normalizedForm": "OtterTune", "offsetStart": 165, "offsetEnd": 174}, "context": "In this section, we compare our MOO approach to popular MOO techniques [5], [10], [19], [8] and perform an endto-end comparison to a STOA performance tuning system, OtterTune [35].", "mentionContextAttributes": {"used": {"value": false, "score": 0.4622530937194824}, "created": {"value": false, "score": 6.258487701416016e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999018311500549}, "created": {"value": false, "score": 0.00010138750076293945}, "shared": {"value": false, "score": 2.205371856689453e-06}}, "references": [{"label": "[35]", "normalizedForm": "[35]", "refKey": 35, "offsetStart": 82760, "offsetEnd": 82764}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Ottertune", "normalizedForm": "Ottertune", "offsetStart": 171, "offsetEnd": 180}, "context": "Since TPCx-BB workloads have 2 orders of magnitude difference in latency, we normalize the latency of each workload (x-axis) by treating the slower one between PF-WUN and Ottertune as 100% and the faster as a value less than 100%.", "mentionContextAttributes": {"used": {"value": false, "score": 0.13442349433898926}, "created": {"value": false, "score": 2.086162567138672e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999839663505554}, "created": {"value": false, "score": 0.009589076042175293}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[35]", "normalizedForm": "[35]", "refKey": 35}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Ottertune", "normalizedForm": "Ottertune", "offsetStart": 173, "offsetEnd": 182}, "context": "Using batch and streaming workloads, we showed that UDAO outperforms existing MOO methods [19], [8], [5], [10] in both speed and coverage of the Pareto set, and outperforms Ottertune [35] by a 26%-49% reduction in running time of the TPCx-BB benchmark, while adapting to different application preferences on multiple objectives.", "mentionContextAttributes": {"used": {"value": true, "score": 0.8805475234985352}, "created": {"value": false, "score": 3.993511199951172e-06}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999839663505554}, "created": {"value": false, "score": 0.009589076042175293}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[35]", "normalizedForm": "[35]", "refKey": 35, "offsetStart": 99484, "offsetEnd": 99488}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "UDAO", "normalizedForm": "UDAO", "offsetStart": 176, "offsetEnd": 180}, "context": "To meet real world analytics needs, we present two concrete use cases with their requirements from our discussions with analytic and cloud companies, and design our optimizer (UDAO) accordingly to support these use cases.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0002753734588623047}, "created": {"value": true, "score": 0.9983974099159241}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999784827232361}, "created": {"value": true, "score": 0.9999300837516785}, "shared": {"value": false, "score": 1.806020736694336e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOGD", "normalizedForm": "MOGD", "offsetStart": 176, "offsetEnd": 180}, "context": "2) Empirically, we do not observe DNN to be more susceptible to a long tail than GP, since our DNN model is regularized by the L2 loss and also considers variance when running MOGD.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0024203062057495117}, "created": {"value": false, "score": 0.00017070770263671875}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997861385345459}, "created": {"value": true, "score": 0.9625383615493774}, "shared": {"value": false, "score": 1.0132789611816406e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "qEHVI", "normalizedForm": "qEHVI", "offsetStart": 176, "offsetEnd": 181}, "context": "For each algorithm, we request it to generate increasingly more Pareto points (10,20,30,40,50,100,150,200), which are called probes, as more computing time is invested, except qEHVI that is shown to have best runtime when calling for one point at a time.", "mentionContextAttributes": {"used": {"value": false, "score": 0.39208340644836426}, "created": {"value": false, "score": 0.00018405914306640625}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9986871480941772}, "created": {"value": false, "score": 0.00018405914306640625}, "shared": {"value": false, "score": 4.172325134277344e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "qEHVI", "normalizedForm": "qEHVI", "offsetStart": 176, "offsetEnd": 181}, "context": "Regarding running time, Fig. 5(d) confirms that WS, NC, and PESM take long, e.g., 42, 36, and 308 seconds, respectively, to return the first Pareto set, while PF-AP , Evo, and qEHVI are more efficient, taking 1.1s, 2.7s, 11.5s, respectively, to produce the first Pareto set.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9746880531311035}, "created": {"value": false, "score": 2.562999725341797e-06}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9986871480941772}, "created": {"value": false, "score": 0.00018405914306640625}, "shared": {"value": false, "score": 4.172325134277344e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOGD", "normalizedForm": "MOGD", "offsetStart": 180, "offsetEnd": 184}, "context": "Approximate Sequential (PF-AS): The PF Approximate Sequential algorithm (PF-AS) implements SO optimization (Line 2 of Algorithm 1) and constrained optimization (Line 13) using our MOGD solver.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0035226941108703613}, "created": {"value": false, "score": 0.0028188228607177734}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9997861385345459}, "created": {"value": true, "score": 0.9625383615493774}, "shared": {"value": false, "score": 1.0132789611816406e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.5539, "software-name": {"rawForm": "Spark", "normalizedForm": "Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.5539, "offsetStart": 182, "offsetEnd": 191}, "context": "We model an analytic task as a dataflow program (a directed graph of data collections flowing between operations), which is used as the programming model in big data systems such as Spark [37]. ", "mentionContextAttributes": {"used": {"value": false, "score": 8.958578109741211e-05}, "created": {"value": false, "score": 0.008706331253051758}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9988607168197632}, "created": {"value": true, "score": 0.9999260306358337}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[36]", "normalizedForm": "[36]", "refKey": 36}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "iTuned", "normalizedForm": "iTuned", "offsetStart": 191, "offsetEnd": 200}, "context": "In addition, it supports two automatic tools to learn models from runtime traces: (i) GP models from OtterTune [35]: we chose OtterTune [35] over other tools [7], [39] because it outperforms iTuned [7], another GP-based tool, due to the ability to map a new query against all past queries in model building, while CDBTune [39] cannot return a regression function explicitly for each objective as required by our system. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.08178448677062988}, "created": {"value": false, "score": 5.543231964111328e-06}, "shared": {"value": false, "score": 2.205371856689453e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.08178448677062988}, "created": {"value": false, "score": 5.543231964111328e-06}, "shared": {"value": false, "score": 2.205371856689453e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MINLP", "normalizedForm": "MINLP", "offsetStart": 194, "offsetEnd": 199}, "context": "For example, many of the run because they assume certive function F , e.g., twice connmin [5]) or factorable into the nctions (Couenne [7]), which do e.g., represented as Deep Neural st general MINLP solver, Knimodels but very slowly, e.g., 42 -objective optimization problem DNN, or 17 minutes when the ss (GP). ", "mentionContextAttributes": {"used": {"value": true, "score": 0.996951162815094}, "created": {"value": false, "score": 3.039836883544922e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.996951162815094}, "created": {"value": false, "score": 3.987550735473633e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MINLP", "normalizedForm": "MINLP", "offsetStart": 194, "offsetEnd": 199}, "context": "For example, many of the run because they assume certive function F , e.g., twice connmin [5]) or factorable into the nctions (Couenne [7]), which do e.g., represented as Deep Neural st general MINLP solver, Knimodels but very slowly, e.g., 42 -objective optimization problem DNN, or 17 minutes when the ss (GP). ", "mentionContextAttributes": {"used": {"value": true, "score": 0.996951162815094}, "created": {"value": false, "score": 3.039836883544922e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.996951162815094}, "created": {"value": false, "score": 3.987550735473633e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "references": [{"label": "[22]", "normalizedForm": "[22]", "refKey": 22}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Ottertune", "normalizedForm": "Ottertune", "offsetStart": 196, "offsetEnd": 205}, "context": "As Ottertune supports only single-objective (SO) optimization, we apply a weighted method [39] that combines k objectives into a single objective, k i=1 w i \u03a8 i (x), with i w i = 1, and then call Ottertune to solve a SO problem.", "mentionContextAttributes": {"used": {"value": false, "score": 0.036486148834228516}, "created": {"value": false, "score": 0.0002447366714477539}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999839663505554}, "created": {"value": false, "score": 0.009589076042175293}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[35]", "normalizedForm": "[35]", "refKey": 35}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "UDAO", "normalizedForm": "UDAO", "offsetStart": 198, "offsetEnd": 202}, "context": "UDAO is designed to also support serverless workloads: whenever the cloud platform needs to launch a serverless analytic task or scale it to adapt to the load, the cloud platform sends a request to UDAO and within a few seconds receives a recommended configuration balancing latency and cost.", "mentionContextAttributes": {"used": {"value": false, "score": 5.942583084106445e-05}, "created": {"value": false, "score": 0.0030844807624816895}, "shared": {"value": false, "score": 1.806020736694336e-05}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999784827232361}, "created": {"value": true, "score": 0.9999300837516785}, "shared": {"value": false, "score": 1.806020736694336e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Ottertune", "normalizedForm": "Ottertune", "offsetStart": 200, "offsetEnd": 209}, "context": "Further, for TPCx-BB our DNN model [38] offers better latency estimates (20% error rate in Weighted Mean Absolute Percentage Error, where the percentage error is weighted by the objective value) than Ottertune's GP model (35% error rate).", "mentionContextAttributes": {"used": {"value": false, "score": 0.00474393367767334}, "created": {"value": false, "score": 1.8477439880371094e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999839663505554}, "created": {"value": false, "score": 0.009589076042175293}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[35]", "normalizedForm": "[35]", "refKey": 35}]}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "software-name": {"rawForm": "Spark", "normalizedForm": "Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "offsetStart": 202, "offsetEnd": 207}, "context": "At a core of our work is a principled multi-objective optimization (MOO) approach that computes a Pareto optimal set of configurations to reveal tradeoffs between different objectives, recommends a new Spark configuration that best explores such tradeoffs, and employs novel optimizations to enable such recommendations within a few seconds.", "mentionContextAttributes": {"used": {"value": false, "score": 7.396936416625977e-05}, "created": {"value": true, "score": 0.9996113181114197}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9988607168197632}, "created": {"value": true, "score": 0.9999260306358337}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[36]", "normalizedForm": "[36]", "refKey": 36}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Knimodels", "normalizedForm": "Knimodels", "offsetStart": 208, "offsetEnd": 217}, "context": "For example, many of the run because they assume certive function F , e.g., twice connmin [5]) or factorable into the nctions (Couenne [7]), which do e.g., represented as Deep Neural st general MINLP solver, Knimodels but very slowly, e.g., 42 -objective optimization problem DNN, or 17 minutes when the ss (GP). ", "mentionContextAttributes": {"used": {"value": true, "score": 0.996951162815094}, "created": {"value": false, "score": 3.039836883544922e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.996951162815094}, "created": {"value": false, "score": 3.039836883544922e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Knimodels", "normalizedForm": "Knimodels", "offsetStart": 208, "offsetEnd": 217}, "context": "For example, many of the run because they assume certive function F , e.g., twice connmin [5]) or factorable into the nctions (Couenne [7]), which do e.g., represented as Deep Neural st general MINLP solver, Knimodels but very slowly, e.g., 42 -objective optimization problem DNN, or 17 minutes when the ss (GP).", "mentionContextAttributes": {"used": {"value": true, "score": 0.996951162815094}, "created": {"value": false, "score": 3.039836883544922e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.996951162815094}, "created": {"value": false, "score": 3.039836883544922e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "software-name": {"rawForm": "Spark", "normalizedForm": "Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "offsetStart": 212, "offsetEnd": 217}, "context": "Batch Workloads: Our batch workloads use the TPCx-BB benchmark [32] with a scale factor 100G. TPCx-BB includes 30 templates, including 14 SQL queries, 11 SQL with UDF, and 5 ML tasks, which we modified to run on Spark.", "mentionContextAttributes": {"used": {"value": false, "score": 0.14495348930358887}, "created": {"value": false, "score": 7.092952728271484e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9988607168197632}, "created": {"value": true, "score": 0.9999260306358337}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[36]", "normalizedForm": "[36]", "refKey": 36}]}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "software-name": {"rawForm": "Spark", "normalizedForm": "Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "offsetStart": 222, "offsetEnd": 227}, "context": "As UDAO is designed for Spark workloads, various modeling options can be used to provide such models: (1) Handcrafted models: Domain knowledge and workload profiling were used to develop specific regression models for the Spark platform [36], where different hardware profiles can be collected to customize these models.", "mentionContextAttributes": {"used": {"value": false, "score": 0.14630085229873657}, "created": {"value": false, "score": 0.00013828277587890625}, "shared": {"value": false, "score": 1.1324882507324219e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9988607168197632}, "created": {"value": true, "score": 0.9999260306358337}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[36]", "normalizedForm": "[36]", "refKey": 36, "offsetStart": 18709, "offsetEnd": 18713}]}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.5539, "software-name": {"rawForm": "Spark", "normalizedForm": "Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.5539, "offsetStart": 226, "offsetEnd": 231}, "context": "Our optimizer assumes that a separate model server will collect traces during job execution, including (i) system-level metrics, e.g., time measurements of different steps, bytes read and written, and fetch wait time from the Spark engine; (ii) observed values of task objectives such as latency and cost. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.006348311901092529}, "created": {"value": false, "score": 0.02688831090927124}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9988607168197632}, "created": {"value": true, "score": 0.9999260306358337}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[36]", "normalizedForm": "[36]", "refKey": 36}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "qEHVI", "normalizedForm": "qEHVI", "offsetStart": 249, "offsetEnd": 254}, "context": "We first compare our PF algorithms, PF-AS and PF-AP , to five MOO methods: Weighted Sum (WS) [19], Normalized Constraints (NC) [21], NSGA-II [6] suggested as the most relevant Evolutionary (Evo) method [8], PESM from the Spearmint library [10], and qEHVI from BoTorch [5].", "mentionContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": false, "score": 6.258487701416016e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9986871480941772}, "created": {"value": false, "score": 0.00018405914306640625}, "shared": {"value": false, "score": 4.172325134277344e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "OtterTune", "normalizedForm": "OtterTune", "offsetStart": 256, "offsetEnd": 265}, "context": "2) Feature Engineering: We construct features from runtime traces by following standard ML steps: filtering features with a constant value; normalizing numerical features; one-hot encoding for categorical variables; and knob selection, for which we follow OtterTune's practice to select \u223c10 most important knobs (parameters) by mixing results from a LASSO-based selection method and Spark recommendations.", "mentionContextAttributes": {"used": {"value": false, "score": 0.11420315504074097}, "created": {"value": false, "score": 0.00010138750076293945}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999018311500549}, "created": {"value": false, "score": 0.00010138750076293945}, "shared": {"value": false, "score": 2.205371856689453e-06}}, "references": [{"label": "[35]", "normalizedForm": "[35]", "refKey": 35}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "BoTorch", "normalizedForm": "BoTorch", "offsetStart": 260, "offsetEnd": 270}, "context": "We first compare our PF algorithms, PF-AS and PF-AP , to five MOO methods: Weighted Sum (WS) [19], Normalized Constraints (NC) [21], NSGA-II [6] suggested as the most relevant Evolutionary (Evo) method [8], PESM from the Spearmint library [10], and qEHVI from BoTorch [5]. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": false, "score": 6.258487701416016e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": false, "score": 6.258487701416016e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MOO", "normalizedForm": "MOO", "offsetStart": 264, "offsetEnd": 267}, "context": "Approximate Sequential Algorithm (PF-AS): Wh plement single-objective optimization (Line 2 of Algorit constrained optimization (Line 13) using the above proce obtain a new algorithm called PF Approximate Sequen that this leads to an approximate Pareto set for the MOO because each solution of a constrained optimization can timal as backpropogation is stuck at a local minima.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9028408527374268}, "created": {"value": false, "score": 2.8014183044433594e-06}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9965837597846985}, "created": {"value": true, "score": 0.9999203085899353}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "references": [{"label": "[19]", "normalizedForm": "[19]", "refKey": 19}, {"label": "[5]", "normalizedForm": "[5]", "refKey": 5}, {"label": "[8]", "normalizedForm": "[8]", "refKey": 8}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CDBTune", "normalizedForm": "CDBTune", "offsetStart": 314, "offsetEnd": 326}, "context": "In addition, it supports two automatic tools to learn models from runtime traces: (i) GP models from OtterTune [35]: we chose OtterTune [35] over other tools [7], [39] because it outperforms iTuned [7], another GP-based tool, due to the ability to map a new query against all past queries in model building, while CDBTune [39] cannot return a regression function explicitly for each objective as required by our system. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.08178448677062988}, "created": {"value": false, "score": 5.543231964111328e-06}, "shared": {"value": false, "score": 2.205371856689453e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.08178448677062988}, "created": {"value": false, "score": 9.59634780883789e-06}, "shared": {"value": false, "score": 2.205371856689453e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "software-name": {"rawForm": "Spark", "normalizedForm": "Spark", "wikidataId": "Q7573619", "wikipediaExternalRef": 42164234, "lang": "en", "confidence": 0.4259, "offsetStart": 383, "offsetEnd": 388}, "context": "2) Feature Engineering: We construct features from runtime traces by following standard ML steps: filtering features with a constant value; normalizing numerical features; one-hot encoding for categorical variables; and knob selection, for which we follow OtterTune's practice to select \u223c10 most important knobs (parameters) by mixing results from a LASSO-based selection method and Spark recommendations.", "mentionContextAttributes": {"used": {"value": false, "score": 0.11420315504074097}, "created": {"value": false, "score": 0.00010138750076293945}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9988607168197632}, "created": {"value": true, "score": 0.9999260306358337}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[36]", "normalizedForm": "[36]", "refKey": 36}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Ottertune", "normalizedForm": "Ottertune", "offsetStart": 414, "offsetEnd": 423}, "context": "0.1), PF-WUN is more adaptive, achieving lower (a) Batch (0.5,0.5), latency vs cost, accurate models (b) Batch (0.9,0.1), latency vs cost, accurate models (c) Stream (0.5,0.5), latency vs throughput, accurate models (d) Stream (0.9,0.1), latency vs throughput, accurate models (e) Batch measured latency, inaccurate models (f) Batch (0.9,0.1), measured latency, inaccurate models (g) Performance improvement rate, Ottertune against Manual (h) Performance improvement rate, UDAO against Manual Fig. 6.", "mentionContextAttributes": {"used": {"value": false, "score": 0.13494884967803955}, "created": {"value": false, "score": 2.682209014892578e-06}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999839663505554}, "created": {"value": false, "score": 0.009589076042175293}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[35]", "normalizedForm": "[35]", "refKey": 35}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "UDAO", "normalizedForm": "UDAO", "offsetStart": 473, "offsetEnd": 477}, "context": "0.1), PF-WUN is more adaptive, achieving lower (a) Batch (0.5,0.5), latency vs cost, accurate models (b) Batch (0.9,0.1), latency vs cost, accurate models (c) Stream (0.5,0.5), latency vs throughput, accurate models (d) Stream (0.9,0.1), latency vs throughput, accurate models (e) Batch measured latency, inaccurate models (f) Batch (0.9,0.1), measured latency, inaccurate models (g) Performance improvement rate, Ottertune against Manual (h) Performance improvement rate, UDAO against Manual Fig. 6.", "mentionContextAttributes": {"used": {"value": false, "score": 0.13494884967803955}, "created": {"value": false, "score": 2.682209014892578e-06}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999784827232361}, "created": {"value": true, "score": 0.9999300837516785}, "shared": {"value": false, "score": 1.806020736694336e-05}}}], "references": [{"refKey": 19, "tei": "<biblStruct xml:id=\"b19\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">Survey of multi-objective optimization methods for engineering</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">R</forename><forename type=\"middle\">T</forename><surname>Marler</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">J</forename><forename type=\"middle\">S</forename><surname>Arora</surname></persName>\n\t\t</author>\n\t\t<idno type=\"DOI\">10.1007/s00158-003-0368-6</idno>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"j\">Structural and Multidisciplinary Optimization</title>\n\t\t<title level=\"j\" type=\"abbrev\">Structural and Multidisciplinary Optimization</title>\n\t\t<idno type=\"ISSN\">1615-147X</idno>\n\t\t<idno type=\"ISSNe\">1615-1488</idno>\n\t\t<imprint>\n\t\t\t<biblScope unit=\"volume\">26</biblScope>\n\t\t\t<biblScope unit=\"issue\">6</biblScope>\n\t\t\t<biblScope unit=\"page\" from=\"369\" to=\"395\" />\n\t\t\t<date type=\"published\" when=\"2004-04-01\">2004</date>\n\t\t\t<publisher>Springer Science and Business Media LLC</publisher>\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}, {"refKey": 5, "tei": "<biblStruct xml:id=\"b5\">\n\t<monogr>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">S</forename><surname>Daulton</surname></persName>\n\t\t</author>\n\t\t<idno>arXiv:2006.05078</idno>\n\t\t<title level=\"m\">Differentiable expected hypervolume improvement for parallel multi-objective Bayesian optimization</title>\n\t\t<imprint>\n\t\t\t<date>2020</date>\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}, {"refKey": 8, "tei": "<biblStruct xml:id=\"b8\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">A tutorial on multiobjective optimization: fundamentals and evolutionary methods</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Michael</forename><forename type=\"middle\">T M</forename><surname>Emmerich</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Andr\u00e9</forename><forename type=\"middle\">H</forename><surname>Deutz</surname></persName>\n\t\t</author>\n\t\t<idno type=\"DOI\">10.1007/s11047-018-9685-y</idno>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"j\">Natural Computing</title>\n\t\t<title level=\"j\" type=\"abbrev\">Nat Comput</title>\n\t\t<idno type=\"ISSN\">1567-7818</idno>\n\t\t<idno type=\"ISSNe\">1572-9796</idno>\n\t\t<imprint>\n\t\t\t<biblScope unit=\"volume\">17</biblScope>\n\t\t\t<biblScope unit=\"issue\">3</biblScope>\n\t\t\t<biblScope unit=\"page\" from=\"585\" to=\"609\" />\n\t\t\t<date type=\"published\" when=\"2018-05-31\">2018</date>\n\t\t\t<publisher>Springer Science and Business Media LLC</publisher>\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}, {"refKey": 35, "tei": "<biblStruct xml:id=\"b35\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">Automatic Database Management System Tuning Through Large-scale Machine Learning</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Dana</forename><surname>Van Aken</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Andrew</forename><surname>Pavlo</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Geoffrey</forename><forename type=\"middle\">J</forename><surname>Gordon</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Bohan</forename><surname>Zhang</surname></persName>\n\t\t</author>\n\t\t<idno type=\"DOI\">10.1145/3035918.3064029</idno>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"m\">Proceedings of the 2017 ACM International Conference on Management of Data</title>\n\t\t<meeting>the 2017 ACM International Conference on Management of Data</meeting>\n\t\t<imprint>\n\t\t\t<publisher>ACM</publisher>\n\t\t\t<date type=\"published\" when=\"2017-05-09\">2017</date>\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}, {"refKey": 36, "tei": "<biblStruct xml:id=\"b36\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">Efficient performance prediction for large-scale advanced analytics</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">S</forename><surname>Venkataraman</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Z</forename><surname>Yang</surname></persName>\n\t\t</author>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"m\">NSDI</title>\n\t\t<imprint>\n\t\t\t<date>2016</date>\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}, {"refKey": 22, "tei": "<biblStruct xml:id=\"b22\">\n\t<monogr>\n\t\t<title level=\"m\">Neos guide: Nonlinear programming software</title>\n\t\t<imprint/>\n\t</monogr>\n</biblStruct>\n"}, {"refKey": 6, "tei": "<biblStruct xml:id=\"b6\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">A fast and elitist multiobjective genetic algorithm: NSGA-II</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">K</forename><surname>Deb</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">A</forename><surname>Pratap</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">S</forename><surname>Agarwal</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">T</forename><surname>Meyarivan</surname></persName>\n\t\t</author>\n\t\t<idno type=\"DOI\">10.1109/4235.996017</idno>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"j\">IEEE Transactions on Evolutionary Computation</title>\n\t\t<title level=\"j\" type=\"abbrev\">IEEE Trans. Evol. Computat.</title>\n\t\t<idno type=\"ISSN\">1089-778X</idno>\n\t\t<imprint>\n\t\t\t<biblScope unit=\"volume\">6</biblScope>\n\t\t\t<biblScope unit=\"issue\">2</biblScope>\n\t\t\t<biblScope unit=\"page\" from=\"182\" to=\"197\" />\n\t\t\t<date type=\"published\" when=\"2002-04\">Apr. 2002</date>\n\t\t\t<publisher>Institute of Electrical and Electronics Engineers (IEEE)</publisher>\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}], "runtime": 92257, "id": "6e82a6f953643240dd45c2f2e1d3cad240fa029f", "metadata": {"id": "6e82a6f953643240dd45c2f2e1d3cad240fa029f"}, "original_file_path": "../../datalake/Samuel/SOFTware-Sync/data/xml_files/hal-02549758.grobid.tei.xml", "file_name": "hal-02549758.grobid.tei.xml"}