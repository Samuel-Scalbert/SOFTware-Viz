{"application": "software-mentions", "version": "0.8.0", "date": "2024-10-07T12:43+0000", "md5": "A74CCAE33D0836DEA311007DB87496CC", "mentions": [{"type": "software", "software-type": "software", "software-name": {"rawForm": "GLog", "normalizedForm": "GLog", "offsetStart": 0, "offsetEnd": 4}, "context": "GLog applies this technique by default to improve the performance, but our experiments show it outperforms the state of the art even without this optimization.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0001900792121887207}, "created": {"value": false, "score": 0.0048528313636779785}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.6689300537109375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GLog", "normalizedForm": "GLog", "offsetStart": 0, "offsetEnd": 4}, "context": "GLog is ran without the optimization from [33]. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00023812055587768555}, "created": {"value": false, "score": 0.001113593578338623}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.6689300537109375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GLog", "normalizedForm": "GLog", "offsetStart": 0, "offsetEnd": 4}, "context": "GLog is a fork of VLog [60] that shares the same code for handling the extensional relations while the code for reasoning is entirely novel.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0033885836601257324}, "created": {"value": false, "score": 8.976459503173828e-05}, "shared": {"value": false, "score": 1.0728836059570312e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.6689300537109375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RDFox", "normalizedForm": "RDFox", "offsetStart": 0, "offsetEnd": 5}, "context": "RDFox proposes a parallelization technique for Datalog materialization with mostly lock-free data insertion.", "mentionContextAttributes": {"used": {"value": false, "score": 6.258487701416016e-05}, "created": {"value": true, "score": 0.9982938170433044}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.9982938170433044}, "shared": {"value": true, "score": 0.9660741090774536}}, "references": [{"label": "[47]", "normalizedForm": "[47]", "refKey": 46}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "LogicBlox", "normalizedForm": "LogicBlox", "offsetStart": 0, "offsetEnd": 9}, "context": "LogicBlox and LinkedIn used Datalog to develop high-performance applications, or to compute analytics over its KG [3,46]. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9765888452529907}, "created": {"value": false, "score": 3.0994415283203125e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9765888452529907}, "created": {"value": false, "score": 3.0994415283203125e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ChaseBench", "normalizedForm": "ChaseBench", "offsetStart": 0, "offsetEnd": 10}, "context": "ChaseBench was introduced for evaluating the performance of chase engines [11].", "mentionContextAttributes": {"used": {"value": false, "score": 0.0001289844512939453}, "created": {"value": false, "score": 0.004028141498565674}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996144771575928}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 2.384185791015625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ChaseBench", "normalizedForm": "ChaseBench", "offsetStart": 0, "offsetEnd": 10}, "context": "ChaseBench scenarios.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0056340694427490234}, "created": {"value": false, "score": 1.8477439880371094e-05}, "shared": {"value": false, "score": 2.384185791015625e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996144771575928}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 2.384185791015625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ChaseFun", "normalizedForm": "ChaseFun", "offsetStart": 0, "offsetEnd": 13}, "context": "ChaseFun [15] proposes a new rule ordering technique that focuses on equality generating dependencies. ", "mentionContextAttributes": {"used": {"value": false, "score": 6.866455078125e-05}, "created": {"value": false, "score": 0.2626609206199646}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.14422106742858887}, "created": {"value": false, "score": 0.2626609206199646}, "shared": {"value": false, "score": 1.0728836059570312e-06}}, "references": [{"label": "[50]", "normalizedForm": "[50]", "refKey": 49}, {"label": "[50]", "normalizedForm": "[50]", "refKey": 49}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "VLog", "normalizedForm": "VLog", "offsetStart": 2, "offsetEnd": 6}, "context": "\u2022 VLog, as, to our knowledge, is the most efficient system both time-and memory-wise [58,60]; \u2022 the latest public release of RDFox from [1] as it outperforms all chase engines tested against ChaseBench [11]: ChaseFun, DEMo [50], LLunatic [27], PDQ [12] and Pegasus [43]; \u2022 the commercial state of the art chase engine COM (name is anonymized due to licensing restrictions); \u2022 Inferray, an RDFS reasoner that uses a columnar layout and that outperforms RDFox [54]; and \u2022 WebPIE, another high-performance RDFS reasoner that runs over Hadoop [59].", "mentionContextAttributes": {"used": {"value": false, "score": 0.14422106742858887}, "created": {"value": false, "score": 3.2186508178710938e-06}, "shared": {"value": false, "score": 1.0728836059570312e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.8014603853225708}, "shared": {"value": false, "score": 1.3709068298339844e-05}}, "references": [{"label": "[59]", "normalizedForm": "[59]", "refKey": 58}, {"label": "[59]", "normalizedForm": "[59]", "refKey": 58}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GLog", "normalizedForm": "GLog", "offsetStart": 3, "offsetEnd": 7}, "context": "In GLog, joins are executed more efficiently than in the other engines (GLog uses only merge joins), since the considered instances are smaller -recall that in TGs, the execution of a rule associated with a node v considers only the instances of the parents of v. Due to the above, the optimizations do not decrease the runtime considerably. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.017913341522216797}, "created": {"value": false, "score": 5.364418029785156e-06}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.6689300537109375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "VLog", "normalizedForm": "VLog", "offsetStart": 4, "offsetEnd": 8}, "context": "For VLog, this is the restricted chase, while for RDFox and COM this is the Skolem one [11].", "mentionContextAttributes": {"used": {"value": true, "score": 0.6679871678352356}, "created": {"value": false, "score": 3.933906555175781e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.8014603853225708}, "shared": {"value": false, "score": 1.3709068298339844e-05}}, "references": [{"label": "[59]", "normalizedForm": "[59]", "refKey": 58}, {"label": "[59]", "normalizedForm": "[59]", "refKey": 58}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "VLog", "normalizedForm": "VLog", "offsetStart": 7, "offsetEnd": 11}, "context": "We ran VLog, RDFox and the commercial chase engine COM using their most efficient chase implementations. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9998577833175659}, "created": {"value": true, "score": 0.8014603853225708}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.8014603853225708}, "shared": {"value": false, "score": 1.3709068298339844e-05}}, "references": [{"label": "[59]", "normalizedForm": "[59]", "refKey": 58}, {"label": "[59]", "normalizedForm": "[59]", "refKey": 58}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "minDatalog", "normalizedForm": "minDatalog", "offsetStart": 7, "offsetEnd": 17}, "context": "The EG minDatalog(G) is obtained from an EG G for a program P by exhaustively applying these steps: for each pair of nodes u and v such that (i) the depth of v is equal or larger than that of u, (ii) the predicates of head(rule(v)) and of head(rule(u)) are the same and (iii) the EG-rewriting of v is contained in the EG-rewriting of u: (a) remove the node v from \u03bd(G), and (b) add an edge u \u2192j w, for each edge v \u2192j w occurring in G.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9984176158905029}, "created": {"value": false, "score": 6.079673767089844e-06}, "shared": {"value": false, "score": 6.079673767089844e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998503923416138}, "created": {"value": false, "score": 5.340576171875e-05}, "shared": {"value": false, "score": 6.079673767089844e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RDFox", "normalizedForm": "RDFox", "offsetStart": 8, "offsetEnd": 13}, "context": "Running RDFox in multiple threads.", "mentionContextAttributes": {"used": {"value": false, "score": 0.478729784488678}, "created": {"value": false, "score": 0.00011909008026123047}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.9982938170433044}, "shared": {"value": true, "score": 0.9660741090774536}}, "references": [{"label": "[47]", "normalizedForm": "[47]", "refKey": 46}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "VLog", "normalizedForm": "VLog", "offsetStart": 10, "offsetEnd": 14}, "context": "With both VLog and GLog, the KBs are stored with the RDF engine Trident [57].", "mentionContextAttributes": {"used": {"value": false, "score": 0.39368098974227905}, "created": {"value": false, "score": 1.0967254638671875e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.8014603853225708}, "shared": {"value": false, "score": 1.3709068298339844e-05}}, "references": [{"label": "[59]", "normalizedForm": "[59]", "refKey": 58}, {"label": "[59]", "normalizedForm": "[59]", "refKey": 58}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ChaseBench", "normalizedForm": "ChaseBench", "offsetStart": 10, "offsetEnd": 20}, "context": "Last, the ChaseBench experiments allow us to compare against Vadalog.", "mentionContextAttributes": {"used": {"value": false, "score": 0.42299920320510864}, "created": {"value": false, "score": 0.0016681551933288574}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996144771575928}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 2.384185791015625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DBpedia", "normalizedForm": "DBpedia", "offsetStart": 11, "offsetEnd": 18}, "context": "AAAI/input/DBpedia/ttl/", "mentionContextAttributes": {"used": {"value": false, "score": 0.165860116481781}, "created": {"value": false, "score": 2.6226043701171875e-06}, "shared": {"value": false, "score": 9.72747802734375e-05}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": false, "score": 0.00031578540802001953}, "shared": {"value": false, "score": 9.72747802734375e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "XRewrite", "normalizedForm": "XRewrite", "offsetStart": 12, "offsetEnd": 20}, "context": "Notice that XRewrite also includes a factorization step, however, this step is only applicable in the presence of existential rules.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0005539059638977051}, "created": {"value": false, "score": 3.0875205993652344e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998759031295776}, "created": {"value": true, "score": 0.9183613061904907}, "shared": {"value": false, "score": 3.337860107421875e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GLog", "normalizedForm": "GLog", "offsetStart": 13, "offsetEnd": 17}, "context": "As rules for GLog, we translated the ontologies under the \u03c1DF semantics.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9966758489608765}, "created": {"value": false, "score": 0.008170902729034424}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.6689300537109375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RDFox", "normalizedForm": "RDFox", "offsetStart": 13, "offsetEnd": 18}, "context": "We ran VLog, RDFox and the commercial chase engine COM using their most efficient chase implementations. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9998577833175659}, "created": {"value": true, "score": 0.8014603853225708}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.9982938170433044}, "shared": {"value": true, "score": 0.9660741090774536}}, "references": [{"label": "[47]", "normalizedForm": "[47]", "refKey": 46}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RDFox", "normalizedForm": "RDFox", "offsetStart": 13, "offsetEnd": 18}, "context": "For example, RDFox proposes a parallelization technique for Datalog rules [47], while WebPIE [59] and Inferray [54] propose parallelization techniques for fixed RDFS rules.", "mentionContextAttributes": {"used": {"value": false, "score": 6.437301635742188e-05}, "created": {"value": false, "score": 0.00012934207916259766}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.9982938170433044}, "shared": {"value": true, "score": 0.9660741090774536}}, "references": [{"label": "[47]", "normalizedForm": "[47]", "refKey": 46}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "WebPIE", "normalizedForm": "WebPIE", "offsetStart": 13, "offsetEnd": 19}, "context": "For example, WebPIE encodes the materialization process into a set of MapReduce programs while Inferray executes each rule on a dedicated thread. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0006034374237060547}, "created": {"value": false, "score": 1.5497207641601562e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.14422106742858887}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "WebPIE", "normalizedForm": "WebPIE", "offsetStart": 15, "offsetEnd": 21}, "context": "In particular, WebPIE and more recently Inferray returned state-ofthe-art performance for \u03c1DF -a subset of RDFS that captures its essential semantics. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.005994439125061035}, "created": {"value": false, "score": 0.01349562406539917}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.14422106742858887}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GLog", "normalizedForm": "GLog", "offsetStart": 16, "offsetEnd": 20}, "context": "We can see that GLog is faster than both RDFS engines. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00025337934494018555}, "created": {"value": false, "score": 0.0005053281784057617}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.6689300537109375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GLog", "normalizedForm": "GLog", "offsetStart": 16, "offsetEnd": 20}, "context": "We can see that GLog can reason with up to 17B facts in less than 40 minutes without resorting to expensive hardware. ", "mentionContextAttributes": {"used": {"value": false, "score": 9.429454803466797e-05}, "created": {"value": false, "score": 0.00036847591400146484}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.6689300537109375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "VLog", "normalizedForm": "VLog", "offsetStart": 16, "offsetEnd": 20}, "context": "With regards to VLog, GLog is up to nine times faster in the Datalog scenarios (LUBM-LE) and up to two times faster in ChaseBench (ONT-256).", "mentionContextAttributes": {"used": {"value": false, "score": 0.03781485557556152}, "created": {"value": false, "score": 1.8835067749023438e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.8014603853225708}, "shared": {"value": false, "score": 1.3709068298339844e-05}}, "references": [{"label": "[59]", "normalizedForm": "[59]", "refKey": 58}, {"label": "[59]", "normalizedForm": "[59]", "refKey": 58}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RDFox", "normalizedForm": "RDFox", "offsetStart": 16, "offsetEnd": 21}, "context": "With regards to RDFox, GLog is up to 20 times faster in the Datalog scenarios (Claros-L) and up to 67 times faster in ChaseBench (ONT-256).", "mentionContextAttributes": {"used": {"value": false, "score": 0.025540053844451904}, "created": {"value": false, "score": 1.704692840576172e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.9982938170433044}, "shared": {"value": true, "score": 0.9660741090774536}}, "references": [{"label": "[47]", "normalizedForm": "[47]", "refKey": 46}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "WebPIE", "normalizedForm": "WebPIE", "offsetStart": 16, "offsetEnd": 22}, "context": "With regards to WebPIE, GLog is three orders of magnitude faster on LUBM and more than 32 times faster on YAGO. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.021832168102264404}, "created": {"value": false, "score": 1.4781951904296875e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.14422106742858887}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "XRewrite", "normalizedForm": "XRewrite", "offsetStart": 16, "offsetEnd": 24}, "context": "We describe how XRewrite(P, Q) works when P is Datalog. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.000794827938079834}, "created": {"value": false, "score": 0.0015864372253417969}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998759031295776}, "created": {"value": true, "score": 0.9183613061904907}, "shared": {"value": false, "score": 3.337860107421875e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "XRewrite", "normalizedForm": "XRewrite", "offsetStart": 16, "offsetEnd": 24}, "context": "At each step i, XRewrite computes a tree T i , where each node \u03ba is associated with a CQ denoted as query(\u03ba). ", "mentionContextAttributes": {"used": {"value": false, "score": 0.07617217302322388}, "created": {"value": false, "score": 9.298324584960938e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998759031295776}, "created": {"value": true, "score": 0.9183613061904907}, "shared": {"value": false, "score": 3.337860107421875e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Inferray", "normalizedForm": "Inferray", "offsetStart": 16, "offsetEnd": 24}, "context": "With regards to Inferray, GLog is two orders of magnitude faster on LUBM and more than four times faster on YAGO.", "mentionContextAttributes": {"used": {"value": false, "score": 0.005057871341705322}, "created": {"value": false, "score": 1.430511474609375e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.14422106742858887}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "VLog", "normalizedForm": "VLog", "offsetStart": 18, "offsetEnd": 22}, "context": "GLog is a fork of VLog [60] that shares the same code for handling the extensional relations while the code for reasoning is entirely novel.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0033885836601257324}, "created": {"value": false, "score": 8.976459503173828e-05}, "shared": {"value": false, "score": 1.0728836059570312e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.8014603853225708}, "shared": {"value": false, "score": 1.3709068298339844e-05}}, "references": [{"label": "[60]", "normalizedForm": "[60]", "refKey": 59, "offsetStart": 40679, "offsetEnd": 40683}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GLog", "normalizedForm": "GLog", "offsetStart": 19, "offsetEnd": 23}, "context": "With both VLog and GLog, the KBs are stored with the RDF engine Trident [57].", "mentionContextAttributes": {"used": {"value": false, "score": 0.39368098974227905}, "created": {"value": false, "score": 1.0967254638671875e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.6689300537109375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Vadalog", "normalizedForm": "Vadalog", "offsetStart": 19, "offsetEnd": 26}, "context": "According to [10], Vadalog is three times faster than RDFox on STB-128 and ONT-256.", "mentionContextAttributes": {"used": {"value": false, "score": 0.03454798460006714}, "created": {"value": false, "score": 8.940696716308594e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9991839528083801}, "created": {"value": false, "score": 0.0016681551933288574}, "shared": {"value": false, "score": 1.3709068298339844e-05}}, "references": [{"label": "[10]", "normalizedForm": "[10]", "refKey": 0}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "XRewrite", "normalizedForm": "XRewrite", "offsetStart": 19, "offsetEnd": 27}, "context": "Below, we describe XRewrite. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00020068883895874023}, "created": {"value": true, "score": 0.9158964157104492}, "shared": {"value": false, "score": 5.960464477539062e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998759031295776}, "created": {"value": true, "score": 0.9183613061904907}, "shared": {"value": false, "score": 3.337860107421875e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "XRewrite", "normalizedForm": "XRewrite", "offsetStart": 19, "offsetEnd": 27}, "context": "Furthermore, since XRewrite terminates and due to its correctness we have: R * (t) \u2208 Ch n (P * , B) iff t is an answer to XRewrite(P * , Q * ) on B.", "mentionContextAttributes": {"used": {"value": false, "score": 0.1153302788734436}, "created": {"value": false, "score": 8.225440979003906e-06}, "shared": {"value": false, "score": 5.960464477539062e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998759031295776}, "created": {"value": true, "score": 0.9183613061904907}, "shared": {"value": false, "score": 3.337860107421875e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GLog", "normalizedForm": "GLog", "offsetStart": 22, "offsetEnd": 26}, "context": "With regards to VLog, GLog is up to nine times faster in the Datalog scenarios (LUBM-LE) and up to two times faster in ChaseBench (ONT-256). ", "mentionContextAttributes": {"used": {"value": false, "score": 0.03781485557556152}, "created": {"value": false, "score": 1.8835067749023438e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.6689300537109375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "minLinear", "normalizedForm": "minLinear", "offsetStart": 22, "offsetEnd": 31}, "context": "In order to show that minLinear(G) is a TG for P , we need to show that the following property holds for each BCQ Q entailed by (P, B):", "mentionContextAttributes": {"used": {"value": true, "score": 0.9471806883811951}, "created": {"value": false, "score": 0.0001722574234008789}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9578635692596436}, "created": {"value": false, "score": 0.0004528164863586426}, "shared": {"value": false, "score": 4.410743713378906e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GLog", "normalizedForm": "GLog", "offsetStart": 23, "offsetEnd": 27}, "context": "With regards to RDFox, GLog is up to 20 times faster in the Datalog scenarios (Claros-L) and up to 67 times faster in ChaseBench (ONT-256). ", "mentionContextAttributes": {"used": {"value": false, "score": 0.025540053844451904}, "created": {"value": false, "score": 1.704692840576172e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.6689300537109375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GLog", "normalizedForm": "GLog", "offsetStart": 23, "offsetEnd": 27}, "context": "Impact on rewriting on GLog. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.005135834217071533}, "created": {"value": false, "score": 0.0009732246398925781}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.6689300537109375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GLog", "normalizedForm": "GLog", "offsetStart": 24, "offsetEnd": 28}, "context": "With regards to memory, GLog has similar memory requirements with VLog, while it is much more memory efficient than RDFox and the commercial engine COM. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00018352270126342773}, "created": {"value": false, "score": 6.365776062011719e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.6689300537109375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GLog", "normalizedForm": "GLog", "offsetStart": 24, "offsetEnd": 28}, "context": "With regards to WebPIE, GLog is three orders of magnitude faster on LUBM and more than 32 times faster on YAGO. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.021832168102264404}, "created": {"value": false, "score": 1.4781951904296875e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.6689300537109375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GLog", "normalizedForm": "GLog", "offsetStart": 24, "offsetEnd": 28}, "context": "With regards to memory, GLog is more memory efficient in all but one cases.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0001188516616821289}, "created": {"value": false, "score": 0.00016987323760986328}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.6689300537109375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GLog", "normalizedForm": "GLog", "offsetStart": 24, "offsetEnd": 28}, "context": "In the other scenarios, GLog is up to 7.8 times faster than RDFox (ONT-256).", "mentionContextAttributes": {"used": {"value": false, "score": 0.0004966259002685547}, "created": {"value": false, "score": 1.3709068298339844e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.6689300537109375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "minDatalog", "normalizedForm": "minDatalog", "offsetStart": 24, "offsetEnd": 34}, "context": "To assess the impact of minDatalog and ruleExec, the rule execution strategy from Definition 23, we ran TGmat as follows: without minDatalog or ruleExec, column No opt; with minDatalog, but without ruleExec, column m; with both minDatalog and ruleExec, column m+r.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9998503923416138}, "created": {"value": false, "score": 3.5762786865234375e-06}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998503923416138}, "created": {"value": false, "score": 5.340576171875e-05}, "shared": {"value": false, "score": 6.079673767089844e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GLog", "normalizedForm": "GLog", "offsetStart": 26, "offsetEnd": 30}, "context": "Our evaluation shows that GLog outperforms all its competitors in all benchmarks. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.4667043685913086}, "created": {"value": false, "score": 0.00015163421630859375}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.6689300537109375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GLog", "normalizedForm": "GLog", "offsetStart": 26, "offsetEnd": 30}, "context": "With regards to Inferray, GLog is two orders of magnitude faster on LUBM and more than four times faster on YAGO. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.005057871341705322}, "created": {"value": false, "score": 1.430511474609375e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.6689300537109375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GLog", "normalizedForm": "GLog", "offsetStart": 26, "offsetEnd": 30}, "context": "Our experiments show that GLog outperforms all these engines in a single-core scenario. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.44412440061569214}, "created": {"value": false, "score": 0.0053098201751708984}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.6689300537109375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ChaseBench", "normalizedForm": "ChaseBench", "offsetStart": 26, "offsetEnd": 36}, "context": "Table 4 shows results for ChaseBench while Table 5 shows the number of triggers for the Datalog scenarios for VLog and GLog (we could not extract this information for RDFox and COM).", "mentionContextAttributes": {"used": {"value": true, "score": 0.9996144771575928}, "created": {"value": false, "score": 1.0609626770019531e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996144771575928}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 2.384185791015625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "tglinear", "normalizedForm": "tglinear", "offsetStart": 27, "offsetEnd": 35}, "context": "5. By (2-4): the algorithm tglinear(P ) runs in double exponential in P .", "mentionContextAttributes": {"used": {"value": true, "score": 0.8807264566421509}, "created": {"value": false, "score": 2.002716064453125e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9921694397926331}, "created": {"value": false, "score": 4.363059997558594e-05}, "shared": {"value": false, "score": 4.410743713378906e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "tglinear", "normalizedForm": "tglinear", "offsetStart": 27, "offsetEnd": 35}, "context": "To show that the procedure tglinear(P ) runs in single exponential time when ( * ) the arity of the predicates in P is bounded, we can show that the size of Ch(P, {f }) is (single) exponential in P if ( * ).", "mentionContextAttributes": {"used": {"value": true, "score": 0.9921694397926331}, "created": {"value": false, "score": 5.245208740234375e-06}, "shared": {"value": false, "score": 9.5367431640625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9921694397926331}, "created": {"value": false, "score": 4.363059997558594e-05}, "shared": {"value": false, "score": 4.410743713378906e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GLog", "normalizedForm": "GLog", "offsetStart": 28, "offsetEnd": 32}, "context": "To asses the performance of GLog on linear and Datalog scenarios, we considered benchmarks previously used to evaluate the performance of reasoning engines including VLog and RDFox: LUBM [30] and UOBM [41] are synthetic benchmarks; DBpedia [14] (v2014, available online1 ) is a KG extracted from Wikipedia; Claros [51] and Reactome [22] are realworld ontologies2 . ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": false, "score": 2.7418136596679688e-06}, "shared": {"value": false, "score": 5.960464477539062e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.6689300537109375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GLog", "normalizedForm": "GLog", "offsetStart": 29, "offsetEnd": 33}, "context": "This is due to the fact that GLog does not eliminate redundancies right at their creation.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00030875205993652344}, "created": {"value": false, "score": 0.0004642009735107422}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.6689300537109375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Vadalog", "normalizedForm": "Vadalog", "offsetStart": 29, "offsetEnd": 36}, "context": "The warded chase (adopted by Vadalog) replaces homomorphism checks by isomorphism ones [10] and terminates, again, when no new fact is added.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0003072023391723633}, "created": {"value": false, "score": 9.059906005859375e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9991839528083801}, "created": {"value": false, "score": 0.0016681551933288574}, "shared": {"value": false, "score": 1.3709068298339844e-05}}, "references": [{"label": "[10]", "normalizedForm": "[10]", "refKey": 0}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "minLinear", "normalizedForm": "minLinear", "offsetStart": 31, "offsetEnd": 40}, "context": "Recall from Definition 14 that minLinear(G) results from G after applying the following step until reaching a fixpoint: (i) find a pair of nodes u and v with u being dominated by v; (ii) remove v from \u03bd(G); and (iii) add an edge v \u2192j u , for each edge u \u2192j u from (G).", "mentionContextAttributes": {"used": {"value": false, "score": 0.162969708442688}, "created": {"value": false, "score": 4.5299530029296875e-06}, "shared": {"value": false, "score": 2.384185791015625e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9578635692596436}, "created": {"value": false, "score": 0.0004528164863586426}, "shared": {"value": false, "score": 4.410743713378906e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GLog", "normalizedForm": "GLog", "offsetStart": 32, "offsetEnd": 36}, "context": "Even without any optimizations, GLog is faster than VLog, RDFox and COM in all but one case. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00022238492965698242}, "created": {"value": false, "score": 7.18832015991211e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.6689300537109375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GLog", "normalizedForm": "GLog", "offsetStart": 32, "offsetEnd": 36}, "context": "It is important to mention that GLog implements the technique in [33] for executing transitive and symmetric rules. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00027436017990112305}, "created": {"value": false, "score": 0.0003148317337036133}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.6689300537109375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GLog", "normalizedForm": "GLog", "offsetStart": 32, "offsetEnd": 36}, "context": "Our empirical results show that GLog brings more substantial runtime improvements: GLog is from 49 times to more than 67 times faster than RDFox in those scenarios.", "mentionContextAttributes": {"used": {"value": false, "score": 0.027736365795135498}, "created": {"value": false, "score": 0.00016605854034423828}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.6689300537109375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RDFox", "normalizedForm": "RDFox", "offsetStart": 34, "offsetEnd": 39}, "context": "https://www.cs.ox.ac.uk/isg/tools/RDFox/2014/", "mentionContextAttributes": {"used": {"value": false, "score": 0.00017058849334716797}, "created": {"value": false, "score": 2.1457672119140625e-05}, "shared": {"value": true, "score": 0.9660741090774536}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.9982938170433044}, "shared": {"value": true, "score": 0.9660741090774536}}, "references": [{"label": "[47]", "normalizedForm": "[47]", "refKey": 46}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Vadalog", "normalizedForm": "Vadalog", "offsetStart": 34, "offsetEnd": 41}, "context": "We could not obtain access to the Vadalog [10] binaries.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9991839528083801}, "created": {"value": false, "score": 8.225440979003906e-06}, "shared": {"value": false, "score": 1.0728836059570312e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9991839528083801}, "created": {"value": false, "score": 0.0016681551933288574}, "shared": {"value": false, "score": 1.3709068298339844e-05}}, "references": [{"label": "[10]", "normalizedForm": "[10]", "refKey": 0, "offsetStart": 41993, "offsetEnd": 41997}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GLog", "normalizedForm": "GLog", "offsetStart": 35, "offsetEnd": 39}, "context": "When all optimizations are enabled GLog outperforms the competitors in all cases.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0005579590797424316}, "created": {"value": false, "score": 6.890296936035156e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.6689300537109375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RDFox", "normalizedForm": "RDFox", "offsetStart": 35, "offsetEnd": 40}, "context": "Moreover, as we do compare against RDFox which was the top-performing chase engine in [11], we can use these two scenarios to indirectly compare against all the engines considered in [11].", "mentionContextAttributes": {"used": {"value": false, "score": 0.3775365352630615}, "created": {"value": false, "score": 4.0531158447265625e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.9982938170433044}, "shared": {"value": true, "score": 0.9660741090774536}}, "references": [{"label": "[47]", "normalizedForm": "[47]", "refKey": 46}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GLog", "normalizedForm": "GLog", "offsetStart": 36, "offsetEnd": 40}, "context": "When redundancies are filtered out, GLog still outperforms the other engines: it is multiple orders of magnitude faster than RDFox and COM and almost two times faster than VLog (Reactome-LI). ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0018987059593200684}, "created": {"value": false, "score": 2.8252601623535156e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.6689300537109375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "XRewrite", "normalizedForm": "XRewrite", "offsetStart": 36, "offsetEnd": 44}, "context": "Given a CQ Q and a set of rules P , XRewrite computes a rewriting Qr of Q so that for any null-free instance I, the answers to Qr on (P, I) coincide with the answers to Q on (P, I). ", "mentionContextAttributes": {"used": {"value": false, "score": 0.01846688985824585}, "created": {"value": false, "score": 3.612041473388672e-05}, "shared": {"value": false, "score": 5.960464477539062e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998759031295776}, "created": {"value": true, "score": 0.9183613061904907}, "shared": {"value": false, "score": 3.337860107421875e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "minLinear", "normalizedForm": "minLinear", "offsetStart": 36, "offsetEnd": 45}, "context": "For a TG G for a linear program P , minLinear(G) is a TG for P .", "mentionContextAttributes": {"used": {"value": false, "score": 0.0006590485572814941}, "created": {"value": false, "score": 0.0004528164863586426}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9578635692596436}, "created": {"value": false, "score": 0.0004528164863586426}, "shared": {"value": false, "score": 4.410743713378906e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "minLinear", "normalizedForm": "minLinear", "offsetStart": 36, "offsetEnd": 45}, "context": "For a TG G for a linear program P , minLinear(G) is a TG for P .", "mentionContextAttributes": {"used": {"value": false, "score": 0.0006590485572814941}, "created": {"value": false, "score": 0.0004528164863586426}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9578635692596436}, "created": {"value": false, "score": 0.0004528164863586426}, "shared": {"value": false, "score": 4.410743713378906e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GLog", "normalizedForm": "GLog", "offsetStart": 37, "offsetEnd": 41}, "context": "Moreover, in our largest experiment, GLog was able to materialize a KB with 17B facts in 37 minutes on commodity hardware.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9979348182678223}, "created": {"value": false, "score": 0.001969635486602783}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.6689300537109375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "tglinear", "normalizedForm": "tglinear", "offsetStart": 38, "offsetEnd": 46}, "context": "For any linear program P that is FES, tglinear(P ) is a TG for P .", "mentionContextAttributes": {"used": {"value": false, "score": 0.00036847591400146484}, "created": {"value": false, "score": 4.363059997558594e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9921694397926331}, "created": {"value": false, "score": 4.363059997558594e-05}, "shared": {"value": false, "score": 4.410743713378906e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "tglinear", "normalizedForm": "tglinear", "offsetStart": 38, "offsetEnd": 46}, "context": "For any linear program P that is FES, tglinear(P ) is a TG for P .", "mentionContextAttributes": {"used": {"value": false, "score": 0.00036847591400146484}, "created": {"value": false, "score": 4.363059997558594e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9921694397926331}, "created": {"value": false, "score": 4.363059997558594e-05}, "shared": {"value": false, "score": 4.410743713378906e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ruleExec", "normalizedForm": "ruleExec", "offsetStart": 39, "offsetEnd": 47}, "context": "To assess the impact of minDatalog and ruleExec, the rule execution strategy from Definition 23, we ran TGmat as follows: without minDatalog or ruleExec, column No opt; with minDatalog, but without ruleExec, column m; with both minDatalog and ruleExec, column m+r.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9998503923416138}, "created": {"value": false, "score": 3.5762786865234375e-06}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998503923416138}, "created": {"value": false, "score": 4.649162292480469e-06}, "shared": {"value": false, "score": 4.76837158203125e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Inferray", "normalizedForm": "Inferray", "offsetStart": 40, "offsetEnd": 48}, "context": "In particular, WebPIE and more recently Inferray returned state-ofthe-art performance for \u03c1DF -a subset of RDFS that captures its essential semantics.", "mentionContextAttributes": {"used": {"value": false, "score": 0.005994439125061035}, "created": {"value": false, "score": 0.01349562406539917}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.14422106742858887}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DBpedia", "normalizedForm": "DBpedia", "offsetStart": 41, "offsetEnd": 48}, "context": "Other improvements occur with UOBM-L and DBpedia-L (69% and 57% resp.).", "mentionContextAttributes": {"used": {"value": false, "score": 0.2597368359565735}, "created": {"value": false, "score": 1.9550323486328125e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": false, "score": 0.00031578540802001953}, "shared": {"value": false, "score": 9.72747802734375e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "XRewrite", "normalizedForm": "XRewrite", "offsetStart": 41, "offsetEnd": 49}, "context": "A direct consequence of Lemma 36 is that XRewrite terminates when provided with P * and Q * .", "mentionContextAttributes": {"used": {"value": false, "score": 0.0025377273559570312}, "created": {"value": false, "score": 2.491474151611328e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998759031295776}, "created": {"value": true, "score": 0.9183613061904907}, "shared": {"value": false, "score": 3.337860107421875e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "minDatalog", "normalizedForm": "minDatalog", "offsetStart": 41, "offsetEnd": 51}, "context": "Column m shows the total runtime cost of minDatalog, while column r shows the total runtime cost of ruleExec. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.955198347568512}, "created": {"value": false, "score": 1.3113021850585938e-06}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998503923416138}, "created": {"value": false, "score": 5.340576171875e-05}, "shared": {"value": false, "score": 6.079673767089844e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GLog", "normalizedForm": "GLog", "offsetStart": 42, "offsetEnd": 46}, "context": "In any case, even without this technique, GLog remains faster than its competitors in all cases.", "mentionContextAttributes": {"used": {"value": false, "score": 6.842613220214844e-05}, "created": {"value": false, "score": 0.00023514032363891602}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.6689300537109375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GLog", "normalizedForm": "GLog", "offsetStart": 42, "offsetEnd": 46}, "context": "We can see that the number of triggers in GLog is often higher than in VLog.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0005647540092468262}, "created": {"value": false, "score": 0.00011360645294189453}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.6689300537109375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "minLinear", "normalizedForm": "minLinear", "offsetStart": 43, "offsetEnd": 52}, "context": "For a TG G for a linear program P , the EG minLinear(G) is obtained by exhaustively applying the steps: (i) choose a pair of nodes v, v from G where v is dominated by v , (ii) remove v from \u03bd(G); and (iii) add an edge v \u21921 u, for each edge v \u21921 u from (G).", "mentionContextAttributes": {"used": {"value": true, "score": 0.8703793883323669}, "created": {"value": false, "score": 1.0371208190917969e-05}, "shared": {"value": false, "score": 4.410743713378906e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9578635692596436}, "created": {"value": false, "score": 0.0004528164863586426}, "shared": {"value": false, "score": 4.410743713378906e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "minDatalog", "normalizedForm": "minDatalog", "offsetStart": 44, "offsetEnd": 54}, "context": "If G is a TG for a Datalog program P , then minDatalog(G) is a minimum size TG for P .", "mentionContextAttributes": {"used": {"value": false, "score": 0.001851797103881836}, "created": {"value": false, "score": 5.340576171875e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998503923416138}, "created": {"value": false, "score": 5.340576171875e-05}, "shared": {"value": false, "score": 6.079673767089844e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GLog", "normalizedForm": "GLog", "offsetStart": 45, "offsetEnd": 49}, "context": "Even in this case though, the performance of GLog is still better than the performance of its competitors: it is twice as fast as VLog, RDFox and COM in most scenarios and more than an order of magnitude faster than RDFox and COM in Claros-L.", "mentionContextAttributes": {"used": {"value": false, "score": 0.002736330032348633}, "created": {"value": false, "score": 5.328655242919922e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.6689300537109375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "VLog", "normalizedForm": "VLog", "offsetStart": 46, "offsetEnd": 50}, "context": "For example, the restricted chase (adopted by VLog and RDFox) adds a fact if there exists no homomorphism from this fact into the KB and terminates when no new fact is added.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00044459104537963867}, "created": {"value": false, "score": 5.5670738220214844e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.8014603853225708}, "shared": {"value": false, "score": 1.3709068298339844e-05}}, "references": [{"label": "[59]", "normalizedForm": "[59]", "refKey": 58}, {"label": "[59]", "normalizedForm": "[59]", "refKey": 58}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GLog", "normalizedForm": "GLog", "offsetStart": 46, "offsetEnd": 50}, "context": "For completeness, we also copy the runtime of GLog using a single thread on the same scenarios from Tables 2, 3 and 4. We can see that the runtime of RDFox drops considerably when using 16 threads.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9754934906959534}, "created": {"value": false, "score": 9.298324584960938e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.6689300537109375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GLog", "normalizedForm": "GLog", "offsetStart": 48, "offsetEnd": 52}, "context": "It is interesting to compare the performance of GLog, which is a generic engine not optimized for RDFS rules, against such adhoc systems. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0004963874816894531}, "created": {"value": false, "score": 0.00012195110321044922}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.6689300537109375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GLog", "normalizedForm": "GLog", "offsetStart": 48, "offsetEnd": 52}, "context": "With regards to memory, the memory footprint of GLog again is comparable to that of VLog and it is lower than that of RDFox and of COM. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0163843035697937}, "created": {"value": false, "score": 3.325939178466797e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.6689300537109375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GLog", "normalizedForm": "GLog", "offsetStart": 48, "offsetEnd": 52}, "context": "However, it is still higher than the runtime of GLog in all cases except UOBM-L, where RDFox's runtime is 1.6s, while GLog's runtime is 2.6s.", "mentionContextAttributes": {"used": {"value": false, "score": 0.07242625951766968}, "created": {"value": false, "score": 2.002716064453125e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.6689300537109375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DBpedia", "normalizedForm": "DBpedia", "offsetStart": 48, "offsetEnd": 55}, "context": "Linear scenarios were created using LUBM, UOBM, DBpedia, Claros and Reactome.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9998706579208374}, "created": {"value": false, "score": 0.00031578540802001953}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": false, "score": 0.00031578540802001953}, "shared": {"value": false, "score": 9.72747802734375e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "minDatalog", "normalizedForm": "minDatalog", "offsetStart": 48, "offsetEnd": 58}, "context": "This hardness result supports the optimality of minDatalog in terms of complexity.", "mentionContextAttributes": {"used": {"value": false, "score": 0.014565825462341309}, "created": {"value": false, "score": 4.1365623474121094e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998503923416138}, "created": {"value": false, "score": 5.340576171875e-05}, "shared": {"value": false, "score": 6.079673767089844e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GLog", "normalizedForm": "GLog", "offsetStart": 49, "offsetEnd": 53}, "context": "Tables 9, 10 and 11 summarize the performance of GLog when disabling the optimization from [33]. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.8340247869491577}, "created": {"value": false, "score": 3.933906555175781e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.6689300537109375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DBpedia", "normalizedForm": "DBpedia", "offsetStart": 49, "offsetEnd": 56}, "context": "Datalog scenarios were created using LUBM, UOBM, DBpedia and Claros, as Reactome includes non-Datalog rules only.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9984873533248901}, "created": {"value": false, "score": 4.494190216064453e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": false, "score": 0.00031578540802001953}, "shared": {"value": false, "score": 9.72747802734375e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Yedalog", "normalizedForm": "Yedalog", "offsetStart": 49, "offsetEnd": 60}, "context": "Google developed their own Datalog engine called Yedalog [21]. ", "mentionContextAttributes": {"used": {"value": false, "score": 5.6743621826171875e-05}, "created": {"value": false, "score": 0.3957129120826721}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 5.6743621826171875e-05}, "created": {"value": false, "score": 0.3957129120826721}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RDFox", "normalizedForm": "RDFox", "offsetStart": 50, "offsetEnd": 55}, "context": "For VLog, this is the restricted chase, while for RDFox and COM this is the Skolem one [11].", "mentionContextAttributes": {"used": {"value": true, "score": 0.6679871678352356}, "created": {"value": false, "score": 3.933906555175781e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.9982938170433044}, "shared": {"value": true, "score": 0.9660741090774536}}, "references": [{"label": "[47]", "normalizedForm": "[47]", "refKey": 46}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "COM", "normalizedForm": "COM", "offsetStart": 51, "offsetEnd": 54}, "context": "We ran VLog, RDFox and the commercial chase engine COM using their most efficient chase implementations. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9998577833175659}, "created": {"value": true, "score": 0.8014603853225708}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998577833175659}, "created": {"value": true, "score": 0.8014603853225708}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Vadalog", "normalizedForm": "Vadalog", "offsetStart": 51, "offsetEnd": 58}, "context": "However, we perform an indirect comparison against Vadalog: we both compare against RDFox using the ChaseBench scenarios from [11]. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9838950037956238}, "created": {"value": false, "score": 2.1457672119140625e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9991839528083801}, "created": {"value": false, "score": 0.0016681551933288574}, "shared": {"value": false, "score": 1.3709068298339844e-05}}, "references": [{"label": "[10]", "normalizedForm": "[10]", "refKey": 0}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "VLog", "normalizedForm": "VLog", "offsetStart": 52, "offsetEnd": 56}, "context": "Even without any optimizations, GLog is faster than VLog, RDFox and COM in all but one case.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00022238492965698242}, "created": {"value": false, "score": 7.18832015991211e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.8014603853225708}, "shared": {"value": false, "score": 1.3709068298339844e-05}}, "references": [{"label": "[59]", "normalizedForm": "[59]", "refKey": 58}, {"label": "[59]", "normalizedForm": "[59]", "refKey": 58}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "minDatalog", "normalizedForm": "minDatalog", "offsetStart": 52, "offsetEnd": 62}, "context": "Let P be a Datalog program, G be a TG for P and \u0393 = minDatalog(G).", "mentionContextAttributes": {"used": {"value": false, "score": 0.012762188911437988}, "created": {"value": false, "score": 2.1576881408691406e-05}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998503923416138}, "created": {"value": false, "score": 5.340576171875e-05}, "shared": {"value": false, "score": 6.079673767089844e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RDFox", "normalizedForm": "RDFox", "offsetStart": 53, "offsetEnd": 58}, "context": "Tables 12, 13 and 14 show the runtime performance of RDFox when increasing the number of threads from 1 to 8 and 16.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9998595714569092}, "created": {"value": false, "score": 6.9141387939453125e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.9982938170433044}, "shared": {"value": true, "score": 0.9660741090774536}}, "references": [{"label": "[47]", "normalizedForm": "[47]", "refKey": 46}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "XRewrite", "normalizedForm": "XRewrite", "offsetStart": 53, "offsetEnd": 61}, "context": "In particular, Lemma 36 shows that Definition 17 and XRewrite result in the same rewritings modulo bijective variable renaming, when the latter is provided with P * and a rewriting of the characteristic query of v denoted as Q * .", "mentionContextAttributes": {"used": {"value": false, "score": 0.39169842004776}, "created": {"value": false, "score": 6.556510925292969e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998759031295776}, "created": {"value": true, "score": 0.9183613061904907}, "shared": {"value": false, "score": 3.337860107421875e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "XRewrite", "normalizedForm": "XRewrite", "offsetStart": 53, "offsetEnd": 61}, "context": "Since R * (t) \u2208 Ch n (P * , B) iff t is an answer to XRewrite(P * , Q * ) on B, it follows that R(t) \u2208 v(B) iff t is an answer to XRewrite(P * , Q * ) on B. Since t is an answer to XRewrite(P * , Q * ) on B iff t is an answer to rew(v) on B and due to the above, it follows that: t is an answer to rew(v) on B iff R(t) \u2208 v(B).", "mentionContextAttributes": {"used": {"value": true, "score": 0.9977134466171265}, "created": {"value": false, "score": 6.198883056640625e-06}, "shared": {"value": false, "score": 3.337860107421875e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998759031295776}, "created": {"value": true, "score": 0.9183613061904907}, "shared": {"value": false, "score": 3.337860107421875e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GLog", "normalizedForm": "GLog", "offsetStart": 54, "offsetEnd": 58}, "context": "We implemented our approach in a new reasoner, called GLog, and compared its performance versus multiple state-of-the-art chase and RDFS engines including RDFox, VLog, WebPIE [59] and Inferray [54], using well-established benchmarks, e.g., ChaseBench [11]. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0058135986328125}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.6689300537109375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RDFox", "normalizedForm": "RDFox", "offsetStart": 54, "offsetEnd": 59}, "context": "According to [10], Vadalog is three times faster than RDFox on STB-128 and ONT-256.", "mentionContextAttributes": {"used": {"value": false, "score": 0.03454798460006714}, "created": {"value": false, "score": 8.940696716308594e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.9982938170433044}, "shared": {"value": true, "score": 0.9660741090774536}}, "references": [{"label": "[47]", "normalizedForm": "[47]", "refKey": 46}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GLog", "normalizedForm": "GLog", "offsetStart": 55, "offsetEnd": 59}, "context": "5) and Algorithm 2 in a new opensource reasoner called GLog.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0002638697624206543}, "created": {"value": false, "score": 0.08142668008804321}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.6689300537109375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RDFox", "normalizedForm": "RDFox", "offsetStart": 55, "offsetEnd": 60}, "context": "For example, the restricted chase (adopted by VLog and RDFox) adds a fact if there exists no homomorphism from this fact into the KB and terminates when no new fact is added.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00044459104537963867}, "created": {"value": false, "score": 5.5670738220214844e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.9982938170433044}, "shared": {"value": true, "score": 0.9660741090774536}}, "references": [{"label": "[47]", "normalizedForm": "[47]", "refKey": 46}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RDFox", "normalizedForm": "RDFox", "offsetStart": 58, "offsetEnd": 63}, "context": "Even without any optimizations, GLog is faster than VLog, RDFox and COM in all but one case.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00022238492965698242}, "created": {"value": false, "score": 7.18832015991211e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.9982938170433044}, "shared": {"value": true, "score": 0.9660741090774536}}, "references": [{"label": "[47]", "normalizedForm": "[47]", "refKey": 46}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GLog", "normalizedForm": "GLog", "offsetStart": 59, "offsetEnd": 63}, "context": "Table 6 summarizes the results of the RDFS scenarios where GLog is configured with both optimizations enabled. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9960047602653503}, "created": {"value": false, "score": 7.033348083496094e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.6689300537109375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "COM", "normalizedForm": "COM", "offsetStart": 60, "offsetEnd": 63}, "context": "For VLog, this is the restricted chase, while for RDFox and COM this is the Skolem one [11].", "mentionContextAttributes": {"used": {"value": true, "score": 0.6679871678352356}, "created": {"value": false, "score": 3.933906555175781e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998577833175659}, "created": {"value": true, "score": 0.8014603853225708}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RDFox", "normalizedForm": "RDFox", "offsetStart": 60, "offsetEnd": 65}, "context": "In the other scenarios, GLog is up to 7.8 times faster than RDFox (ONT-256).", "mentionContextAttributes": {"used": {"value": false, "score": 0.0004966259002685547}, "created": {"value": false, "score": 1.3709068298339844e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.9982938170433044}, "shared": {"value": true, "score": 0.9660741090774536}}, "references": [{"label": "[47]", "normalizedForm": "[47]", "refKey": 46}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "LUBM-L", "normalizedForm": "LUBM-L", "offsetStart": 60, "offsetEnd": 66}, "context": "Table 7 summarizes the performance with the Datalog program LUBM-L. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9994577765464783}, "created": {"value": false, "score": 1.7762184143066406e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9994577765464783}, "created": {"value": false, "score": 1.7762184143066406e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "minDatalog", "normalizedForm": "minDatalog", "offsetStart": 60, "offsetEnd": 70}, "context": "Let G i be the EG at the beginning of the i-th iteration of minDatalog(G) with G 0 = G.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9737990498542786}, "created": {"value": false, "score": 6.67572021484375e-06}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998503923416138}, "created": {"value": false, "score": 5.340576171875e-05}, "shared": {"value": false, "score": 6.079673767089844e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Vadalog", "normalizedForm": "Vadalog", "offsetStart": 61, "offsetEnd": 68}, "context": "Last, the ChaseBench experiments allow us to compare against Vadalog.", "mentionContextAttributes": {"used": {"value": false, "score": 0.42299920320510864}, "created": {"value": false, "score": 0.0016681551933288574}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9991839528083801}, "created": {"value": false, "score": 0.0016681551933288574}, "shared": {"value": false, "score": 1.3709068298339844e-05}}, "references": [{"label": "[10]", "normalizedForm": "[10]", "refKey": 0}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "tglinear", "normalizedForm": "tglinear", "offsetStart": 62, "offsetEnd": 70}, "context": "Column Comp shows the time to compute and minimize a TG using tglinear and minLinear.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9358227849006653}, "created": {"value": false, "score": 3.0994415283203125e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9921694397926331}, "created": {"value": false, "score": 4.363059997558594e-05}, "shared": {"value": false, "score": 4.410743713378906e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Trident", "normalizedForm": "Trident", "offsetStart": 64, "offsetEnd": 75}, "context": "With both VLog and GLog, the KBs are stored with the RDF engine Trident [57].", "mentionContextAttributes": {"used": {"value": false, "score": 0.39368098974227905}, "created": {"value": false, "score": 1.0967254638671875e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.39368098974227905}, "created": {"value": false, "score": 1.0967254638671875e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "VLog", "normalizedForm": "VLog", "offsetStart": 65, "offsetEnd": 69}, "context": "Other approaches involve exploring columnar memory layouts as in VLog and Inferray to reduce memory consumption and to guarantee sequential access and efficient sort-merge join inference.", "mentionContextAttributes": {"used": {"value": false, "score": 7.486343383789062e-05}, "created": {"value": true, "score": 0.6166027784347534}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.8014603853225708}, "shared": {"value": false, "score": 1.3709068298339844e-05}}, "references": [{"label": "[59]", "normalizedForm": "[59]", "refKey": 58}, {"label": "[59]", "normalizedForm": "[59]", "refKey": 58}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ChaseBench", "normalizedForm": "ChaseBench", "offsetStart": 65, "offsetEnd": 75}, "context": "Recall that the optimizations in Section 6 are not applicable to ChaseBench as the rules have existential variables.", "mentionContextAttributes": {"used": {"value": false, "score": 0.09564822912216187}, "created": {"value": false, "score": 1.6570091247558594e-05}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996144771575928}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 2.384185791015625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "VLog", "normalizedForm": "VLog", "offsetStart": 66, "offsetEnd": 70}, "context": "With regards to memory, GLog has similar memory requirements with VLog, while it is much more memory efficient than RDFox and the commercial engine COM. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00018352270126342773}, "created": {"value": false, "score": 6.365776062011719e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.8014603853225708}, "shared": {"value": false, "score": 1.3709068298339844e-05}}, "references": [{"label": "[59]", "normalizedForm": "[59]", "refKey": 58}, {"label": "[59]", "normalizedForm": "[59]", "refKey": 58}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "XRewrite", "normalizedForm": "XRewrite", "offsetStart": 67, "offsetEnd": 75}, "context": ". Let T i be the tree computed at the end of the i-th iteration of XRewrite(P * , Q * ).", "mentionContextAttributes": {"used": {"value": true, "score": 0.9996007084846497}, "created": {"value": false, "score": 7.3909759521484375e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998759031295776}, "created": {"value": true, "score": 0.9183613061904907}, "shared": {"value": false, "score": 3.337860107421875e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "COM", "normalizedForm": "COM", "offsetStart": 68, "offsetEnd": 71}, "context": "Even without any optimizations, GLog is faster than VLog, RDFox and COM in all but one case.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00022238492965698242}, "created": {"value": false, "score": 7.18832015991211e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998577833175659}, "created": {"value": true, "score": 0.8014603853225708}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MapReduce", "normalizedForm": "MapReduce", "offsetStart": 70, "offsetEnd": 79}, "context": "For example, WebPIE encodes the materialization process into a set of MapReduce programs while Inferray executes each rule on a dedicated thread. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0006034374237060547}, "created": {"value": false, "score": 1.5497207641601562e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0006034374237060547}, "created": {"value": false, "score": 1.5497207641601562e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "VLog", "normalizedForm": "VLog", "offsetStart": 71, "offsetEnd": 75}, "context": "We can see that the number of triggers in GLog is often higher than in VLog.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0005647540092468262}, "created": {"value": false, "score": 0.00011360645294189453}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.8014603853225708}, "shared": {"value": false, "score": 1.3709068298339844e-05}}, "references": [{"label": "[59]", "normalizedForm": "[59]", "refKey": 58}, {"label": "[59]", "normalizedForm": "[59]", "refKey": 58}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GLog", "normalizedForm": "GLog", "offsetStart": 72, "offsetEnd": 76}, "context": "In GLog, joins are executed more efficiently than in the other engines (GLog uses only merge joins), since the considered instances are smaller -recall that in TGs, the execution of a rule associated with a node v considers only the instances of the parents of v. Due to the above, the optimizations do not decrease the runtime considerably. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.017913341522216797}, "created": {"value": false, "score": 5.364418029785156e-06}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.6689300537109375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "minDatalog", "normalizedForm": "minDatalog", "offsetStart": 73, "offsetEnd": 83}, "context": "The total runtime in the last two cases includes the runtime overhead of minDatalog and ruleExec.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9997848868370056}, "created": {"value": false, "score": 3.337860107421875e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998503923416138}, "created": {"value": false, "score": 5.340576171875e-05}, "shared": {"value": false, "score": 6.079673767089844e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Inferray", "normalizedForm": "Inferray", "offsetStart": 74, "offsetEnd": 82}, "context": "Other approaches involve exploring columnar memory layouts as in VLog and Inferray to reduce memory consumption and to guarantee sequential access and efficient sort-merge join inference.", "mentionContextAttributes": {"used": {"value": false, "score": 7.486343383789062e-05}, "created": {"value": true, "score": 0.6166027784347534}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.14422106742858887}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "XRewrite", "normalizedForm": "XRewrite", "offsetStart": 75, "offsetEnd": 83}, "context": "From Lemma 36 and since rew n+1 (v) includes only EDP-atoms, we have that: XRewrite(P * , Q * ) terminates after n + 1 iterations.", "mentionContextAttributes": {"used": {"value": false, "score": 0.12209123373031616}, "created": {"value": false, "score": 3.0994415283203125e-06}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998759031295776}, "created": {"value": true, "score": 0.9183613061904907}, "shared": {"value": false, "score": 3.337860107421875e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "minLinear", "normalizedForm": "minLinear", "offsetStart": 75, "offsetEnd": 84}, "context": "Column Comp shows the time to compute and minimize a TG using tglinear and minLinear.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9358227849006653}, "created": {"value": false, "score": 3.0994415283203125e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9578635692596436}, "created": {"value": false, "score": 0.0004528164863586426}, "shared": {"value": false, "score": 4.410743713378906e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Skolem", "normalizedForm": "Skolem", "offsetStart": 76, "offsetEnd": 82}, "context": "For VLog, this is the restricted chase, while for RDFox and COM this is the Skolem one [11]. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.6679871678352356}, "created": {"value": false, "score": 3.933906555175781e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.6679871678352356}, "created": {"value": false, "score": 3.933906555175781e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "VLog", "normalizedForm": "VLog", "offsetStart": 77, "offsetEnd": 81}, "context": "This is due to the different approaches employed to filter out redundancies: VLog filters out redundancies right after the execution of each rule [58], while GLog performs this filtering after each round. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.002935945987701416}, "created": {"value": false, "score": 2.8848648071289062e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.8014603853225708}, "shared": {"value": false, "score": 1.3709068298339844e-05}}, "references": [{"label": "[59]", "normalizedForm": "[59]", "refKey": 58}, {"label": "[59]", "normalizedForm": "[59]", "refKey": 58}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GLog", "normalizedForm": "GLog", "offsetStart": 81, "offsetEnd": 85}, "context": "As we will explain later, in the case of linear rules, the memory consumption in GLog is the same both with and without filtering out redundant facts. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0012312531471252441}, "created": {"value": false, "score": 0.0002563595771789551}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.6689300537109375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GLog", "normalizedForm": "GLog", "offsetStart": 83, "offsetEnd": 87}, "context": "Our empirical results show that GLog brings more substantial runtime improvements: GLog is from 49 times to more than 67 times faster than RDFox in those scenarios.", "mentionContextAttributes": {"used": {"value": false, "score": 0.027736365795135498}, "created": {"value": false, "score": 0.00016605854034423828}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.6689300537109375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "VLog", "normalizedForm": "VLog", "offsetStart": 84, "offsetEnd": 88}, "context": "With regards to memory, the memory footprint of GLog again is comparable to that of VLog and it is lower than that of RDFox and of COM. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0163843035697937}, "created": {"value": false, "score": 3.325939178466797e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.8014603853225708}, "shared": {"value": false, "score": 1.3709068298339844e-05}}, "references": [{"label": "[59]", "normalizedForm": "[59]", "refKey": 58}, {"label": "[59]", "normalizedForm": "[59]", "refKey": 58}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Linux", "normalizedForm": "Linux", "offsetStart": 84, "offsetEnd": 89}, "context": "All experiments except the ones on scalability (Section 7.5) ran on an Ubuntu 16.04 Linux PC with Intel i7 64-bit CPU and 94.1 GiB RAM. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.999971866607666}, "created": {"value": false, "score": 2.872943878173828e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999971866607666}, "created": {"value": false, "score": 2.872943878173828e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RDFox", "normalizedForm": "RDFox", "offsetStart": 84, "offsetEnd": 89}, "context": "However, we perform an indirect comparison against Vadalog: we both compare against RDFox using the ChaseBench scenarios from [11].", "mentionContextAttributes": {"used": {"value": true, "score": 0.9838950037956238}, "created": {"value": false, "score": 2.1457672119140625e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.9982938170433044}, "shared": {"value": true, "score": 0.9660741090774536}}, "references": [{"label": "[47]", "normalizedForm": "[47]", "refKey": 46}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "XRewrite", "normalizedForm": "XRewrite", "offsetStart": 84, "offsetEnd": 92}, "context": "Then, we establish the relationship between the rewv and the rewritings computed by XRewrite.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9919113516807556}, "created": {"value": true, "score": 0.8279033899307251}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998759031295776}, "created": {"value": true, "score": 0.9183613061904907}, "shared": {"value": false, "score": 3.337860107421875e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "XRewrite", "normalizedForm": "XRewrite", "offsetStart": 84, "offsetEnd": 92}, "context": ", where R * = \u03c0( ), (ii) the correspondence between the rewriting steps (1)-( 3) of XRewrite and the rewriting process of Definition 17 and (iii) Corollary 35.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9998393058776855}, "created": {"value": false, "score": 1.6808509826660156e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998759031295776}, "created": {"value": true, "score": 0.9183613061904907}, "shared": {"value": false, "score": 3.337860107421875e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "XRewrite", "normalizedForm": "XRewrite", "offsetStart": 85, "offsetEnd": 93}, "context": "Below, we establish the relationship between the rewv and the rewritings computed by XRewrite.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9998494386672974}, "created": {"value": true, "score": 0.9183613061904907}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998759031295776}, "created": {"value": true, "score": 0.9183613061904907}, "shared": {"value": false, "score": 3.337860107421875e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "WebPIE", "normalizedForm": "WebPIE", "offsetStart": 86, "offsetEnd": 97}, "context": "For example, RDFox proposes a parallelization technique for Datalog rules [47], while WebPIE [59] and Inferray [54] propose parallelization techniques for fixed RDFS rules. ", "mentionContextAttributes": {"used": {"value": false, "score": 6.437301635742188e-05}, "created": {"value": false, "score": 0.00012934207916259766}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.14422106742858887}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RDFox", "normalizedForm": "RDFox", "offsetStart": 87, "offsetEnd": 92}, "context": "However, it is still higher than the runtime of GLog in all cases except UOBM-L, where RDFox's runtime is 1.6s, while GLog's runtime is 2.6s.", "mentionContextAttributes": {"used": {"value": false, "score": 0.07242625951766968}, "created": {"value": false, "score": 2.002716064453125e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.9982938170433044}, "shared": {"value": true, "score": 0.9660741090774536}}, "references": [{"label": "[47]", "normalizedForm": "[47]", "refKey": 46}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ruleExec", "normalizedForm": "ruleExec", "offsetStart": 88, "offsetEnd": 96}, "context": "The total runtime in the last two cases includes the runtime overhead of minDatalog and ruleExec.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9997848868370056}, "created": {"value": false, "score": 3.337860107421875e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998503923416138}, "created": {"value": false, "score": 4.649162292480469e-06}, "shared": {"value": false, "score": 4.76837158203125e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Inferray", "normalizedForm": "Inferray", "offsetStart": 95, "offsetEnd": 103}, "context": "For example, WebPIE encodes the materialization process into a set of MapReduce programs while Inferray executes each rule on a dedicated thread. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0006034374237060547}, "created": {"value": false, "score": 1.5497207641601562e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.14422106742858887}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DBpedia", "normalizedForm": "DBpedia", "offsetStart": 96, "offsetEnd": 103}, "context": "When the optimizations are enabled, the number of triggers further decreases: in the best case (DBpedia-L), GLog computes 1.69 times fewer triggers (79M/47M).", "mentionContextAttributes": {"used": {"value": false, "score": 0.008319675922393799}, "created": {"value": false, "score": 1.7642974853515625e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": false, "score": 0.00031578540802001953}, "shared": {"value": false, "score": 9.72747802734375e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "minDatalog", "normalizedForm": "minDatalog", "offsetStart": 98, "offsetEnd": 108}, "context": "The last three columns report the number of nodes, edges, and depth of the computed TGs when both minDatalog or ruleExec are employed.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9254717230796814}, "created": {"value": false, "score": 4.649162292480469e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998503923416138}, "created": {"value": false, "score": 5.340576171875e-05}, "shared": {"value": false, "score": 6.079673767089844e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ruleExec", "normalizedForm": "ruleExec", "offsetStart": 100, "offsetEnd": 108}, "context": "Column m shows the total runtime cost of minDatalog, while column r shows the total runtime cost of ruleExec. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.955198347568512}, "created": {"value": false, "score": 1.3113021850585938e-06}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998503923416138}, "created": {"value": false, "score": 4.649162292480469e-06}, "shared": {"value": false, "score": 4.76837158203125e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ChaseBench", "normalizedForm": "ChaseBench", "offsetStart": 100, "offsetEnd": 110}, "context": "However, we perform an indirect comparison against Vadalog: we both compare against RDFox using the ChaseBench scenarios from [11]. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9838950037956238}, "created": {"value": false, "score": 2.1457672119140625e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996144771575928}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 2.384185791015625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Inferray", "normalizedForm": "Inferray", "offsetStart": 102, "offsetEnd": 115}, "context": "For example, RDFox proposes a parallelization technique for Datalog rules [47], while WebPIE [59] and Inferray [54] propose parallelization techniques for fixed RDFS rules. ", "mentionContextAttributes": {"used": {"value": false, "score": 6.437301635742188e-05}, "created": {"value": false, "score": 0.00012934207916259766}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.14422106742858887}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "tglinear", "normalizedForm": "tglinear", "offsetStart": 107, "offsetEnd": 115}, "context": "We can see that two different patternisomorphic facts will have the same linear rules executed Algorithm 1 tglinear(P ) 1: Let G be an empty EG 2: for each f \u2208 H(P ) do 3: \u0393 is an empty EG; \u00b5 is the empty mapping 4: for each f1 \u2192r f2 \u2208 chaseGraph(P, {f }) do 5: add a fresh node u to \u03bd(\u0393) with rule(u)", "mentionContextAttributes": {"used": {"value": true, "score": 0.801827609539032}, "created": {"value": false, "score": 5.7220458984375e-06}, "shared": {"value": false, "score": 4.410743713378906e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9921694397926331}, "created": {"value": false, "score": 4.363059997558594e-05}, "shared": {"value": false, "score": 4.410743713378906e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GLog", "normalizedForm": "GLog", "offsetStart": 108, "offsetEnd": 112}, "context": "When the optimizations are enabled, the number of triggers further decreases: in the best case (DBpedia-L), GLog computes 1.69 times fewer triggers (79M/47M).", "mentionContextAttributes": {"used": {"value": false, "score": 0.008319675922393799}, "created": {"value": false, "score": 1.7642974853515625e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.6689300537109375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "VLog", "normalizedForm": "VLog", "offsetStart": 110, "offsetEnd": 114}, "context": "Table 4 shows results for ChaseBench while Table 5 shows the number of triggers for the Datalog scenarios for VLog and GLog (we could not extract this information for RDFox and COM).", "mentionContextAttributes": {"used": {"value": true, "score": 0.9996144771575928}, "created": {"value": false, "score": 1.0609626770019531e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.8014603853225708}, "shared": {"value": false, "score": 1.3709068298339844e-05}}, "references": [{"label": "[59]", "normalizedForm": "[59]", "refKey": 58}, {"label": "[59]", "normalizedForm": "[59]", "refKey": 58}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ruleExec", "normalizedForm": "ruleExec", "offsetStart": 112, "offsetEnd": 120}, "context": "The last three columns report the number of nodes, edges, and depth of the computed TGs when both minDatalog or ruleExec are employed.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9254717230796814}, "created": {"value": false, "score": 4.649162292480469e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998503923416138}, "created": {"value": false, "score": 4.649162292480469e-06}, "shared": {"value": false, "score": 4.76837158203125e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GLog", "normalizedForm": "GLog", "offsetStart": 113, "offsetEnd": 117}, "context": "The above, along with the fact that the facts (redundant or not) are not explicitly materialized in memory makes GLog very efficient time-wise.", "mentionContextAttributes": {"used": {"value": false, "score": 9.357929229736328e-05}, "created": {"value": false, "score": 0.0004203915596008301}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.6689300537109375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "tglinear", "normalizedForm": "tglinear", "offsetStart": 114, "offsetEnd": 122}, "context": "Recall that when a program is linear and FES it admits a finite TG which can be computed prior to reasoning using tglinear (Algorithm 1) and minimized using minLinear from Definition 14. Columns two to seven show the runtime and the peak memory consumption for VLog, RDFox and the commercial engine COM.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9578635692596436}, "created": {"value": false, "score": 1.5497207641601562e-06}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9921694397926331}, "created": {"value": false, "score": 4.363059997558594e-05}, "shared": {"value": false, "score": 4.410743713378906e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RDFox", "normalizedForm": "RDFox", "offsetStart": 116, "offsetEnd": 121}, "context": "With regards to memory, GLog has similar memory requirements with VLog, while it is much more memory efficient than RDFox and the commercial engine COM.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00018352270126342773}, "created": {"value": false, "score": 6.365776062011719e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.9982938170433044}, "shared": {"value": true, "score": 0.9660741090774536}}, "references": [{"label": "[47]", "normalizedForm": "[47]", "refKey": 46}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "minLinear", "normalizedForm": "minLinear", "offsetStart": 116, "offsetEnd": 125}, "context": "The minimization procedure described in Definition 14 is correct: given a TG for a linear program P , the output of minLinear is still a TG for P .", "mentionContextAttributes": {"used": {"value": false, "score": 0.01249629259109497}, "created": {"value": false, "score": 1.1682510375976562e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9578635692596436}, "created": {"value": false, "score": 0.0004528164863586426}, "shared": {"value": false, "score": 4.410743713378906e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GLog", "normalizedForm": "GLog", "offsetStart": 118, "offsetEnd": 122}, "context": "However, it is still higher than the runtime of GLog in all cases except UOBM-L, where RDFox's runtime is 1.6s, while GLog's runtime is 2.6s.", "mentionContextAttributes": {"used": {"value": false, "score": 0.07242625951766968}, "created": {"value": false, "score": 2.002716064453125e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.6689300537109375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RDFox", "normalizedForm": "RDFox", "offsetStart": 118, "offsetEnd": 123}, "context": "With regards to memory, the memory footprint of GLog again is comparable to that of VLog and it is lower than that of RDFox and of COM.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0163843035697937}, "created": {"value": false, "score": 3.325939178466797e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.9982938170433044}, "shared": {"value": true, "score": 0.9660741090774536}}, "references": [{"label": "[47]", "normalizedForm": "[47]", "refKey": 46}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ChaseBench", "normalizedForm": "ChaseBench", "offsetStart": 118, "offsetEnd": 128}, "context": "With regards to RDFox, GLog is up to 20 times faster in the Datalog scenarios (Claros-L) and up to 67 times faster in ChaseBench (ONT-256). ", "mentionContextAttributes": {"used": {"value": false, "score": 0.025540053844451904}, "created": {"value": false, "score": 1.704692840576172e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996144771575928}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 2.384185791015625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GLog", "normalizedForm": "GLog", "offsetStart": 119, "offsetEnd": 123}, "context": "Table 4 shows results for ChaseBench while Table 5 shows the number of triggers for the Datalog scenarios for VLog and GLog (we could not extract this information for RDFox and COM).", "mentionContextAttributes": {"used": {"value": true, "score": 0.9996144771575928}, "created": {"value": false, "score": 1.0609626770019531e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.6689300537109375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ChaseBench", "normalizedForm": "ChaseBench", "offsetStart": 119, "offsetEnd": 129}, "context": "With regards to VLog, GLog is up to nine times faster in the Datalog scenarios (LUBM-LE) and up to two times faster in ChaseBench (ONT-256). ", "mentionContextAttributes": {"used": {"value": false, "score": 0.03781485557556152}, "created": {"value": false, "score": 1.8835067749023438e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996144771575928}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 2.384185791015625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "XRewrite", "normalizedForm": "XRewrite", "offsetStart": 122, "offsetEnd": 130}, "context": "Furthermore, since XRewrite terminates and due to its correctness we have: R * (t) \u2208 Ch n (P * , B) iff t is an answer to XRewrite(P * , Q * ) on B.", "mentionContextAttributes": {"used": {"value": false, "score": 0.1153302788734436}, "created": {"value": false, "score": 8.225440979003906e-06}, "shared": {"value": false, "score": 5.960464477539062e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998759031295776}, "created": {"value": true, "score": 0.9183613061904907}, "shared": {"value": false, "score": 3.337860107421875e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RDFox", "normalizedForm": "RDFox", "offsetStart": 125, "offsetEnd": 130}, "context": "\u2022 VLog, as, to our knowledge, is the most efficient system both time-and memory-wise [58,60]; \u2022 the latest public release of RDFox from [1] as it outperforms all chase engines tested against ChaseBench [11]: ChaseFun, DEMo [50], LLunatic [27], PDQ [12] and Pegasus [43]; \u2022 the commercial state of the art chase engine COM (name is anonymized due to licensing restrictions); \u2022 Inferray, an RDFS reasoner that uses a columnar layout and that outperforms RDFox [54]; and \u2022 WebPIE, another high-performance RDFS reasoner that runs over Hadoop [59].", "mentionContextAttributes": {"used": {"value": false, "score": 0.14422106742858887}, "created": {"value": false, "score": 3.2186508178710938e-06}, "shared": {"value": false, "score": 1.0728836059570312e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.9982938170433044}, "shared": {"value": true, "score": 0.9660741090774536}}, "references": [{"label": "[1]", "normalizedForm": "[1]", "refKey": 61, "offsetStart": 41305, "offsetEnd": 41308}, {"label": "[1]", "normalizedForm": "[1]", "refKey": 61, "offsetStart": 41305, "offsetEnd": 41308}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RDFox", "normalizedForm": "RDFox", "offsetStart": 125, "offsetEnd": 130}, "context": "When redundancies are filtered out, GLog still outperforms the other engines: it is multiple orders of magnitude faster than RDFox and COM and almost two times faster than VLog (Reactome-LI).", "mentionContextAttributes": {"used": {"value": false, "score": 0.0018987059593200684}, "created": {"value": false, "score": 2.8252601623535156e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.9982938170433044}, "shared": {"value": true, "score": 0.9660741090774536}}, "references": [{"label": "[47]", "normalizedForm": "[47]", "refKey": 46}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "VLog", "normalizedForm": "VLog", "offsetStart": 130, "offsetEnd": 134}, "context": "Even in this case though, the performance of GLog is still better than the performance of its competitors: it is twice as fast as VLog, RDFox and COM in most scenarios and more than an order of magnitude faster than RDFox and COM in Claros-L.", "mentionContextAttributes": {"used": {"value": false, "score": 0.002736330032348633}, "created": {"value": false, "score": 5.328655242919922e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.8014603853225708}, "shared": {"value": false, "score": 1.3709068298339844e-05}}, "references": [{"label": "[59]", "normalizedForm": "[59]", "refKey": 58}, {"label": "[59]", "normalizedForm": "[59]", "refKey": 58}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "XRewrite", "normalizedForm": "XRewrite", "offsetStart": 130, "offsetEnd": 138}, "context": "Since R * (t) \u2208 Ch n (P * , B) iff t is an answer to XRewrite(P * , Q * ) on B, it follows that R(t) \u2208 v(B) iff t is an answer to XRewrite(P * , Q * ) on B. Since t is an answer to XRewrite(P * , Q * ) on B iff t is an answer to rew(v) on B and due to the above, it follows that: t is an answer to rew(v) on B iff R(t) \u2208 v(B).", "mentionContextAttributes": {"used": {"value": true, "score": 0.9977134466171265}, "created": {"value": false, "score": 6.198883056640625e-06}, "shared": {"value": false, "score": 3.337860107421875e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998759031295776}, "created": {"value": true, "score": 0.9183613061904907}, "shared": {"value": false, "score": 3.337860107421875e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "minDatalog", "normalizedForm": "minDatalog", "offsetStart": 130, "offsetEnd": 140}, "context": "To assess the impact of minDatalog and ruleExec, the rule execution strategy from Definition 23, we ran TGmat as follows: without minDatalog or ruleExec, column No opt; with minDatalog, but without ruleExec, column m; with both minDatalog and ruleExec, column m+r.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9998503923416138}, "created": {"value": false, "score": 3.5762786865234375e-06}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998503923416138}, "created": {"value": false, "score": 5.340576171875e-05}, "shared": {"value": false, "score": 6.079673767089844e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "COM", "normalizedForm": "COM", "offsetStart": 131, "offsetEnd": 134}, "context": "With regards to memory, the memory footprint of GLog again is comparable to that of VLog and it is lower than that of RDFox and of COM.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0163843035697937}, "created": {"value": false, "score": 3.325939178466797e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998577833175659}, "created": {"value": true, "score": 0.8014603853225708}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "VLog", "normalizedForm": "VLog", "offsetStart": 133, "offsetEnd": 137}, "context": "When redundancies are discarded, the vast improvements are attributed to structure sharing, a technique which is also implemented in VLog.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0005998611450195312}, "created": {"value": false, "score": 0.009755611419677734}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.8014603853225708}, "shared": {"value": false, "score": 1.3709068298339844e-05}}, "references": [{"label": "[59]", "normalizedForm": "[59]", "refKey": 58}, {"label": "[59]", "normalizedForm": "[59]", "refKey": 58}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "minDatalog", "normalizedForm": "minDatalog", "offsetStart": 133, "offsetEnd": 143}, "context": "Continuing with the optimizations, their runtime overhead is very low: it is 9% of the total runtime (LUBM-L), while the overhead of minDatalog is less than 1% of the total runtime (detailed results are in the appendix). ", "mentionContextAttributes": {"used": {"value": false, "score": 0.29856908321380615}, "created": {"value": false, "score": 9.655952453613281e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998503923416138}, "created": {"value": false, "score": 5.340576171875e-05}, "shared": {"value": false, "score": 6.079673767089844e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "COM", "normalizedForm": "COM", "offsetStart": 135, "offsetEnd": 138}, "context": "When redundancies are filtered out, GLog still outperforms the other engines: it is multiple orders of magnitude faster than RDFox and COM and almost two times faster than VLog (Reactome-LI). ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0018987059593200684}, "created": {"value": false, "score": 2.8252601623535156e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998577833175659}, "created": {"value": true, "score": 0.8014603853225708}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RDFox", "normalizedForm": "RDFox", "offsetStart": 136, "offsetEnd": 141}, "context": "Even in this case though, the performance of GLog is still better than the performance of its competitors: it is twice as fast as VLog, RDFox and COM in most scenarios and more than an order of magnitude faster than RDFox and COM in Claros-L.", "mentionContextAttributes": {"used": {"value": false, "score": 0.002736330032348633}, "created": {"value": false, "score": 5.328655242919922e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.9982938170433044}, "shared": {"value": true, "score": 0.9660741090774536}}, "references": [{"label": "[47]", "normalizedForm": "[47]", "refKey": 46}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RDFox", "normalizedForm": "RDFox", "offsetStart": 139, "offsetEnd": 144}, "context": "Our empirical results show that GLog brings more substantial runtime improvements: GLog is from 49 times to more than 67 times faster than RDFox in those scenarios.", "mentionContextAttributes": {"used": {"value": false, "score": 0.027736365795135498}, "created": {"value": false, "score": 0.00016605854034423828}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.9982938170433044}, "shared": {"value": true, "score": 0.9660741090774536}}, "references": [{"label": "[47]", "normalizedForm": "[47]", "refKey": 46}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ruleExec", "normalizedForm": "ruleExec", "offsetStart": 144, "offsetEnd": 152}, "context": "To assess the impact of minDatalog and ruleExec, the rule execution strategy from Definition 23, we ran TGmat as follows: without minDatalog or ruleExec, column No opt; with minDatalog, but without ruleExec, column m; with both minDatalog and ruleExec, column m+r.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9998503923416138}, "created": {"value": false, "score": 3.5762786865234375e-06}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998503923416138}, "created": {"value": false, "score": 4.649162292480469e-06}, "shared": {"value": false, "score": 4.76837158203125e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "XRewrite", "normalizedForm": "XRewrite", "offsetStart": 144, "offsetEnd": 152}, "context": "The proof is based on (i) the correspondence between the rewriting process of Definition 17 and the query rewriting algorithm from [29], called XRewrite and (ii) the correctness of XRewrite.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9998759031295776}, "created": {"value": false, "score": 1.5854835510253906e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998759031295776}, "created": {"value": true, "score": 0.9183613061904907}, "shared": {"value": false, "score": 3.337860107421875e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "COM", "normalizedForm": "COM", "offsetStart": 146, "offsetEnd": 149}, "context": "Even in this case though, the performance of GLog is still better than the performance of its competitors: it is twice as fast as VLog, RDFox and COM in most scenarios and more than an order of magnitude faster than RDFox and COM in Claros-L.", "mentionContextAttributes": {"used": {"value": false, "score": 0.002736330032348633}, "created": {"value": false, "score": 5.328655242919922e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998577833175659}, "created": {"value": true, "score": 0.8014603853225708}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "COM", "normalizedForm": "COM", "offsetStart": 148, "offsetEnd": 151}, "context": "With regards to memory, GLog has similar memory requirements with VLog, while it is much more memory efficient than RDFox and the commercial engine COM. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00018352270126342773}, "created": {"value": false, "score": 6.365776062011719e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998577833175659}, "created": {"value": true, "score": 0.8014603853225708}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "LLunatic", "normalizedForm": "LLunatic", "offsetStart": 148, "offsetEnd": 160}, "context": "To optimize the execution of the rules themselves, most chase engines rely on external DBMSs or employ state of the art query execution algorithms: LLunatic [27], PDQ and ChaseFun run on top of PostgreSQL; RDFox and VLog implement their own in-memory rule execution engine. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0016704201698303223}, "created": {"value": false, "score": 2.3245811462402344e-05}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.14422106742858887}, "created": {"value": false, "score": 2.3245811462402344e-05}, "shared": {"value": false, "score": 1.0728836059570312e-06}}, "references": [{"label": "[12]", "normalizedForm": "[12]", "refKey": 11}, {"label": "[12]", "normalizedForm": "[12]", "refKey": 11}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RDFox", "normalizedForm": "RDFox", "offsetStart": 150, "offsetEnd": 155}, "context": "For completeness, we also copy the runtime of GLog using a single thread on the same scenarios from Tables 2, 3 and 4. We can see that the runtime of RDFox drops considerably when using 16 threads.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9754934906959534}, "created": {"value": false, "score": 9.298324584960938e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.9982938170433044}, "shared": {"value": true, "score": 0.9660741090774536}}, "references": [{"label": "[47]", "normalizedForm": "[47]", "refKey": 46}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RDFox", "normalizedForm": "RDFox", "offsetStart": 155, "offsetEnd": 160}, "context": "We implemented our approach in a new reasoner, called GLog, and compared its performance versus multiple state-of-the-art chase and RDFS engines including RDFox, VLog, WebPIE [59] and Inferray [54], using well-established benchmarks, e.g., ChaseBench [11].", "mentionContextAttributes": {"used": {"value": false, "score": 0.0058135986328125}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.9982938170433044}, "shared": {"value": true, "score": 0.9660741090774536}}, "references": [{"label": "[47]", "normalizedForm": "[47]", "refKey": 46}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "VLog", "normalizedForm": "VLog", "offsetStart": 157, "offsetEnd": 161}, "context": "Table 5 shows that the total number of triggers and, hence, the amount of redundant computations, is considerably lower than the total number of triggers in VLog even when the optimizations are disabled. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.015104055404663086}, "created": {"value": false, "score": 3.421306610107422e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.8014603853225708}, "shared": {"value": false, "score": 1.3709068298339844e-05}}, "references": [{"label": "[59]", "normalizedForm": "[59]", "refKey": 58}, {"label": "[59]", "normalizedForm": "[59]", "refKey": 58}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "minLinear", "normalizedForm": "minLinear", "offsetStart": 157, "offsetEnd": 166}, "context": "Recall that when a program is linear and FES it admits a finite TG which can be computed prior to reasoning using tglinear (Algorithm 1) and minimized using minLinear from Definition 14. Columns two to seven show the runtime and the peak memory consumption for VLog, RDFox and the commercial engine COM. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9578635692596436}, "created": {"value": false, "score": 1.5497207641601562e-06}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9578635692596436}, "created": {"value": false, "score": 0.0004528164863586426}, "shared": {"value": false, "score": 4.410743713378906e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GLog", "normalizedForm": "GLog", "offsetStart": 158, "offsetEnd": 162}, "context": "This is due to the different approaches employed to filter out redundancies: VLog filters out redundancies right after the execution of each rule [58], while GLog performs this filtering after each round. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.002935945987701416}, "created": {"value": false, "score": 2.8848648071289062e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.6689300537109375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "VLog", "normalizedForm": "VLog", "offsetStart": 162, "offsetEnd": 166}, "context": "We implemented our approach in a new reasoner, called GLog, and compared its performance versus multiple state-of-the-art chase and RDFS engines including RDFox, VLog, WebPIE [59] and Inferray [54], using well-established benchmarks, e.g., ChaseBench [11]. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0058135986328125}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.8014603853225708}, "shared": {"value": false, "score": 1.3709068298339844e-05}}, "references": [{"label": "[59]", "normalizedForm": "[59]", "refKey": 58, "offsetStart": 8358, "offsetEnd": 8362}, {"label": "[59]", "normalizedForm": "[59]", "refKey": 58, "offsetStart": 8358, "offsetEnd": 8362}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PDQ", "normalizedForm": "PDQ", "offsetStart": 163, "offsetEnd": 166}, "context": "To optimize the execution of the rules themselves, most chase engines rely on external DBMSs or employ state of the art query execution algorithms: LLunatic [27], PDQ and ChaseFun run on top of PostgreSQL; RDFox and VLog implement their own in-memory rule execution engine.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0016704201698303223}, "created": {"value": false, "score": 2.3245811462402344e-05}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.14422106742858887}, "created": {"value": false, "score": 2.3245811462402344e-05}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "VLog", "normalizedForm": "VLog", "offsetStart": 166, "offsetEnd": 170}, "context": "To asses the performance of GLog on linear and Datalog scenarios, we considered benchmarks previously used to evaluate the performance of reasoning engines including VLog and RDFox: LUBM [30] and UOBM [41] are synthetic benchmarks; DBpedia [14] (v2014, available online1 ) is a KG extracted from Wikipedia; Claros [51] and Reactome [22] are realworld ontologies2 .", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": false, "score": 2.7418136596679688e-06}, "shared": {"value": false, "score": 5.960464477539062e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.8014603853225708}, "shared": {"value": false, "score": 1.3709068298339844e-05}}, "references": [{"label": "[59]", "normalizedForm": "[59]", "refKey": 58}, {"label": "[59]", "normalizedForm": "[59]", "refKey": 58}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RDFox", "normalizedForm": "RDFox", "offsetStart": 167, "offsetEnd": 172}, "context": "Table 4 shows results for ChaseBench while Table 5 shows the number of triggers for the Datalog scenarios for VLog and GLog (we could not extract this information for RDFox and COM).", "mentionContextAttributes": {"used": {"value": true, "score": 0.9996144771575928}, "created": {"value": false, "score": 1.0609626770019531e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.9982938170433044}, "shared": {"value": true, "score": 0.9660741090774536}}, "references": [{"label": "[47]", "normalizedForm": "[47]", "refKey": 46}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "WebPIE", "normalizedForm": "WebPIE", "offsetStart": 168, "offsetEnd": 179}, "context": "We implemented our approach in a new reasoner, called GLog, and compared its performance versus multiple state-of-the-art chase and RDFS engines including RDFox, VLog, WebPIE [59] and Inferray [54], using well-established benchmarks, e.g., ChaseBench [11]. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0058135986328125}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.14422106742858887}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ChaseFun", "normalizedForm": "ChaseFun", "offsetStart": 171, "offsetEnd": 179}, "context": "To optimize the execution of the rules themselves, most chase engines rely on external DBMSs or employ state of the art query execution algorithms: LLunatic [27], PDQ and ChaseFun run on top of PostgreSQL; RDFox and VLog implement their own in-memory rule execution engine. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0016704201698303223}, "created": {"value": false, "score": 2.3245811462402344e-05}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.14422106742858887}, "created": {"value": false, "score": 0.2626609206199646}, "shared": {"value": false, "score": 1.0728836059570312e-06}}, "references": [{"label": "[50]", "normalizedForm": "[50]", "refKey": 49}, {"label": "[50]", "normalizedForm": "[50]", "refKey": 49}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "VLog", "normalizedForm": "VLog", "offsetStart": 172, "offsetEnd": 176}, "context": "When redundancies are filtered out, GLog still outperforms the other engines: it is multiple orders of magnitude faster than RDFox and COM and almost two times faster than VLog (Reactome-LI).", "mentionContextAttributes": {"used": {"value": false, "score": 0.0018987059593200684}, "created": {"value": false, "score": 2.8252601623535156e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.8014603853225708}, "shared": {"value": false, "score": 1.3709068298339844e-05}}, "references": [{"label": "[59]", "normalizedForm": "[59]", "refKey": 58}, {"label": "[59]", "normalizedForm": "[59]", "refKey": 58}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "XRewrite", "normalizedForm": "XRewrite", "offsetStart": 173, "offsetEnd": 181}, "context": "When i > 0, then T i is computed as follows: for each leaf node \u03ba in \u03bd(T i-1 ), each atom \u03b2 occurring in the body of query(\u03ba) and each rule r \u2208 P whose head unifies with \u03b2, XRewrite: ---\u2192 \u03ba to T i .", "mentionContextAttributes": {"used": {"value": true, "score": 0.9934112429618835}, "created": {"value": false, "score": 3.933906555175781e-06}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998759031295776}, "created": {"value": true, "score": 0.9183613061904907}, "shared": {"value": false, "score": 3.337860107421875e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "minDatalog", "normalizedForm": "minDatalog", "offsetStart": 174, "offsetEnd": 184}, "context": "To assess the impact of minDatalog and ruleExec, the rule execution strategy from Definition 23, we ran TGmat as follows: without minDatalog or ruleExec, column No opt; with minDatalog, but without ruleExec, column m; with both minDatalog and ruleExec, column m+r.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9998503923416138}, "created": {"value": false, "score": 3.5762786865234375e-06}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998503923416138}, "created": {"value": false, "score": 5.340576171875e-05}, "shared": {"value": false, "score": 6.079673767089844e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RDFox", "normalizedForm": "RDFox", "offsetStart": 175, "offsetEnd": 180}, "context": "To asses the performance of GLog on linear and Datalog scenarios, we considered benchmarks previously used to evaluate the performance of reasoning engines including VLog and RDFox: LUBM [30] and UOBM [41] are synthetic benchmarks; DBpedia [14] (v2014, available online1 ) is a KG extracted from Wikipedia; Claros [51] and Reactome [22] are realworld ontologies2 .", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": false, "score": 2.7418136596679688e-06}, "shared": {"value": false, "score": 5.960464477539062e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.9982938170433044}, "shared": {"value": true, "score": 0.9660741090774536}}, "references": [{"label": "[30]", "normalizedForm": "[30]", "refKey": 29, "offsetStart": 42339, "offsetEnd": 42343}, {"label": "[41]", "normalizedForm": "[41]", "refKey": 40, "offsetStart": 42353, "offsetEnd": 42357}, {"label": "[30]", "normalizedForm": "[30]", "refKey": 29, "offsetStart": 42339, "offsetEnd": 42343}, {"label": "[41]", "normalizedForm": "[41]", "refKey": 40, "offsetStart": 42353, "offsetEnd": 42357}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "COM", "normalizedForm": "COM", "offsetStart": 177, "offsetEnd": 180}, "context": "Table 4 shows results for ChaseBench while Table 5 shows the number of triggers for the Datalog scenarios for VLog and GLog (we could not extract this information for RDFox and COM).", "mentionContextAttributes": {"used": {"value": true, "score": 0.9996144771575928}, "created": {"value": false, "score": 1.0609626770019531e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998577833175659}, "created": {"value": true, "score": 0.8014603853225708}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "XRewrite", "normalizedForm": "XRewrite", "offsetStart": 181, "offsetEnd": 189}, "context": "The proof is based on (i) the correspondence between the rewriting process of Definition 17 and the query rewriting algorithm from [29], called XRewrite and (ii) the correctness of XRewrite.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9998759031295776}, "created": {"value": false, "score": 1.5854835510253906e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998759031295776}, "created": {"value": true, "score": 0.9183613061904907}, "shared": {"value": false, "score": 3.337860107421875e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "XRewrite", "normalizedForm": "XRewrite", "offsetStart": 181, "offsetEnd": 189}, "context": "Since R * (t) \u2208 Ch n (P * , B) iff t is an answer to XRewrite(P * , Q * ) on B, it follows that R(t) \u2208 v(B) iff t is an answer to XRewrite(P * , Q * ) on B. Since t is an answer to XRewrite(P * , Q * ) on B iff t is an answer to rew(v) on B and due to the above, it follows that: t is an answer to rew(v) on B iff R(t) \u2208 v(B).", "mentionContextAttributes": {"used": {"value": true, "score": 0.9977134466171265}, "created": {"value": false, "score": 6.198883056640625e-06}, "shared": {"value": false, "score": 3.337860107421875e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998759031295776}, "created": {"value": true, "score": 0.9183613061904907}, "shared": {"value": false, "score": 3.337860107421875e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Inferray", "normalizedForm": "Inferray", "offsetStart": 184, "offsetEnd": 196}, "context": "We implemented our approach in a new reasoner, called GLog, and compared its performance versus multiple state-of-the-art chase and RDFS engines including RDFox, VLog, WebPIE [59] and Inferray [54], using well-established benchmarks, e.g., ChaseBench [11]. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0058135986328125}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.14422106742858887}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "VLog", "normalizedForm": "VLog", "offsetStart": 189, "offsetEnd": 193}, "context": "The chase, which was introduced in 1979 by Maier et al. [42], has been the most popular materialization technique and has been adopted by several commercial and open source engines such as VLog [58], RDFox [47] and Vadalog [10].", "mentionContextAttributes": {"used": {"value": false, "score": 0.0005093812942504883}, "created": {"value": false, "score": 0.00022405385971069336}, "shared": {"value": false, "score": 1.3709068298339844e-05}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.8014603853225708}, "shared": {"value": false, "score": 1.3709068298339844e-05}}, "references": [{"label": "[58]", "normalizedForm": "[58]", "refKey": 57, "offsetStart": 3652, "offsetEnd": 3656}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ChaseBench", "normalizedForm": "ChaseBench", "offsetStart": 191, "offsetEnd": 205}, "context": "\u2022 VLog, as, to our knowledge, is the most efficient system both time-and memory-wise [58,60]; \u2022 the latest public release of RDFox from [1] as it outperforms all chase engines tested against ChaseBench [11]: ChaseFun, DEMo [50], LLunatic [27], PDQ [12] and Pegasus [43]; \u2022 the commercial state of the art chase engine COM (name is anonymized due to licensing restrictions); \u2022 Inferray, an RDFS reasoner that uses a columnar layout and that outperforms RDFox [54]; and \u2022 WebPIE, another high-performance RDFS reasoner that runs over Hadoop [59]. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.14422106742858887}, "created": {"value": false, "score": 3.2186508178710938e-06}, "shared": {"value": false, "score": 1.0728836059570312e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996144771575928}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 2.384185791015625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PostgreSQL", "normalizedForm": "PostgreSQL", "offsetStart": 194, "offsetEnd": 204}, "context": "To optimize the execution of the rules themselves, most chase engines rely on external DBMSs or employ state of the art query execution algorithms: LLunatic [27], PDQ and ChaseFun run on top of PostgreSQL; RDFox and VLog implement their own in-memory rule execution engine. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0016704201698303223}, "created": {"value": false, "score": 2.3245811462402344e-05}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0016704201698303223}, "created": {"value": false, "score": 2.3245811462402344e-05}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ruleExec", "normalizedForm": "ruleExec", "offsetStart": 198, "offsetEnd": 206}, "context": "To assess the impact of minDatalog and ruleExec, the rule execution strategy from Definition 23, we ran TGmat as follows: without minDatalog or ruleExec, column No opt; with minDatalog, but without ruleExec, column m; with both minDatalog and ruleExec, column m+r.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9998503923416138}, "created": {"value": false, "score": 3.5762786865234375e-06}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998503923416138}, "created": {"value": false, "score": 4.649162292480469e-06}, "shared": {"value": false, "score": 4.76837158203125e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RDFox", "normalizedForm": "RDFox", "offsetStart": 200, "offsetEnd": 205}, "context": "The chase, which was introduced in 1979 by Maier et al. [42], has been the most popular materialization technique and has been adopted by several commercial and open source engines such as VLog [58], RDFox [47] and Vadalog [10].", "mentionContextAttributes": {"used": {"value": false, "score": 0.0005093812942504883}, "created": {"value": false, "score": 0.00022405385971069336}, "shared": {"value": false, "score": 1.3709068298339844e-05}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.9982938170433044}, "shared": {"value": true, "score": 0.9660741090774536}}, "references": [{"label": "[47]", "normalizedForm": "[47]", "refKey": 46, "offsetStart": 3664, "offsetEnd": 3668}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RDFox", "normalizedForm": "RDFox", "offsetStart": 206, "offsetEnd": 211}, "context": "To optimize the execution of the rules themselves, most chase engines rely on external DBMSs or employ state of the art query execution algorithms: LLunatic [27], PDQ and ChaseFun run on top of PostgreSQL; RDFox and VLog implement their own in-memory rule execution engine.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0016704201698303223}, "created": {"value": false, "score": 2.3245811462402344e-05}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.9982938170433044}, "shared": {"value": true, "score": 0.9660741090774536}}, "references": [{"label": "[47]", "normalizedForm": "[47]", "refKey": 46}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ChaseFun", "normalizedForm": "ChaseFun", "offsetStart": 208, "offsetEnd": 216}, "context": "\u2022 VLog, as, to our knowledge, is the most efficient system both time-and memory-wise [58,60]; \u2022 the latest public release of RDFox from [1] as it outperforms all chase engines tested against ChaseBench [11]: ChaseFun, DEMo [50], LLunatic [27], PDQ [12] and Pegasus [43]; \u2022 the commercial state of the art chase engine COM (name is anonymized due to licensing restrictions); \u2022 Inferray, an RDFS reasoner that uses a columnar layout and that outperforms RDFox [54]; and \u2022 WebPIE, another high-performance RDFS reasoner that runs over Hadoop [59]. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.14422106742858887}, "created": {"value": false, "score": 3.2186508178710938e-06}, "shared": {"value": false, "score": 1.0728836059570312e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.14422106742858887}, "created": {"value": false, "score": 0.2626609206199646}, "shared": {"value": false, "score": 1.0728836059570312e-06}}, "references": [{"label": "[50]", "normalizedForm": "[50]", "refKey": 49, "offsetStart": 41392, "offsetEnd": 41396}, {"label": "[50]", "normalizedForm": "[50]", "refKey": 49, "offsetStart": 41392, "offsetEnd": 41396}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Vadalog", "normalizedForm": "Vadalog", "offsetStart": 215, "offsetEnd": 222}, "context": "The chase, which was introduced in 1979 by Maier et al. [42], has been the most popular materialization technique and has been adopted by several commercial and open source engines such as VLog [58], RDFox [47] and Vadalog [10].", "mentionContextAttributes": {"used": {"value": false, "score": 0.0005093812942504883}, "created": {"value": false, "score": 0.00022405385971069336}, "shared": {"value": false, "score": 1.3709068298339844e-05}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9991839528083801}, "created": {"value": false, "score": 0.0016681551933288574}, "shared": {"value": false, "score": 1.3709068298339844e-05}}, "references": [{"label": "[10]", "normalizedForm": "[10]", "refKey": 0, "offsetStart": 3681, "offsetEnd": 3685}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "VLog", "normalizedForm": "VLog", "offsetStart": 216, "offsetEnd": 220}, "context": "To optimize the execution of the rules themselves, most chase engines rely on external DBMSs or employ state of the art query execution algorithms: LLunatic [27], PDQ and ChaseFun run on top of PostgreSQL; RDFox and VLog implement their own in-memory rule execution engine.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0016704201698303223}, "created": {"value": false, "score": 2.3245811462402344e-05}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.8014603853225708}, "shared": {"value": false, "score": 1.3709068298339844e-05}}, "references": [{"label": "[59]", "normalizedForm": "[59]", "refKey": 58}, {"label": "[59]", "normalizedForm": "[59]", "refKey": 58}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RDFox", "normalizedForm": "RDFox", "offsetStart": 216, "offsetEnd": 221}, "context": "Even in this case though, the performance of GLog is still better than the performance of its competitors: it is twice as fast as VLog, RDFox and COM in most scenarios and more than an order of magnitude faster than RDFox and COM in Claros-L.", "mentionContextAttributes": {"used": {"value": false, "score": 0.002736330032348633}, "created": {"value": false, "score": 5.328655242919922e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.9982938170433044}, "shared": {"value": true, "score": 0.9660741090774536}}, "references": [{"label": "[47]", "normalizedForm": "[47]", "refKey": 46}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DEMo", "normalizedForm": "DEMo", "offsetStart": 218, "offsetEnd": 226}, "context": "\u2022 VLog, as, to our knowledge, is the most efficient system both time-and memory-wise [58,60]; \u2022 the latest public release of RDFox from [1] as it outperforms all chase engines tested against ChaseBench [11]: ChaseFun, DEMo [50], LLunatic [27], PDQ [12] and Pegasus [43]; \u2022 the commercial state of the art chase engine COM (name is anonymized due to licensing restrictions); \u2022 Inferray, an RDFS reasoner that uses a columnar layout and that outperforms RDFox [54]; and \u2022 WebPIE, another high-performance RDFS reasoner that runs over Hadoop [59]. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.14422106742858887}, "created": {"value": false, "score": 3.2186508178710938e-06}, "shared": {"value": false, "score": 1.0728836059570312e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.14422106742858887}, "created": {"value": false, "score": 3.2186508178710938e-06}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "VLog", "normalizedForm": "VLog", "offsetStart": 222, "offsetEnd": 226}, "context": "Instead of creating different S-and R-facts, we can simply add a pointer from the first column of R to the second column of S and a pointer from the second column of R to the first column of S. When a rule is linear, both VLog and GLog perform structure sharing and, hence, do not allocate extra memory to store the derived facts.", "mentionContextAttributes": {"used": {"value": false, "score": 0.034266531467437744}, "created": {"value": false, "score": 7.867813110351562e-06}, "shared": {"value": false, "score": 1.430511474609375e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.8014603853225708}, "shared": {"value": false, "score": 1.3709068298339844e-05}}, "references": [{"label": "[59]", "normalizedForm": "[59]", "refKey": 58}, {"label": "[59]", "normalizedForm": "[59]", "refKey": 58}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "COM", "normalizedForm": "COM", "offsetStart": 226, "offsetEnd": 229}, "context": "Even in this case though, the performance of GLog is still better than the performance of its competitors: it is twice as fast as VLog, RDFox and COM in most scenarios and more than an order of magnitude faster than RDFox and COM in Claros-L.", "mentionContextAttributes": {"used": {"value": false, "score": 0.002736330032348633}, "created": {"value": false, "score": 5.328655242919922e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998577833175659}, "created": {"value": true, "score": 0.8014603853225708}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "minDatalog", "normalizedForm": "minDatalog", "offsetStart": 228, "offsetEnd": 238}, "context": "To assess the impact of minDatalog and ruleExec, the rule execution strategy from Definition 23, we ran TGmat as follows: without minDatalog or ruleExec, column No opt; with minDatalog, but without ruleExec, column m; with both minDatalog and ruleExec, column m+r.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9998503923416138}, "created": {"value": false, "score": 3.5762786865234375e-06}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998503923416138}, "created": {"value": false, "score": 5.340576171875e-05}, "shared": {"value": false, "score": 6.079673767089844e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "LLunatic", "normalizedForm": "LLunatic", "offsetStart": 229, "offsetEnd": 241}, "context": "\u2022 VLog, as, to our knowledge, is the most efficient system both time-and memory-wise [58,60]; \u2022 the latest public release of RDFox from [1] as it outperforms all chase engines tested against ChaseBench [11]: ChaseFun, DEMo [50], LLunatic [27], PDQ [12] and Pegasus [43]; \u2022 the commercial state of the art chase engine COM (name is anonymized due to licensing restrictions); \u2022 Inferray, an RDFS reasoner that uses a columnar layout and that outperforms RDFox [54]; and \u2022 WebPIE, another high-performance RDFS reasoner that runs over Hadoop [59]. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.14422106742858887}, "created": {"value": false, "score": 3.2186508178710938e-06}, "shared": {"value": false, "score": 1.0728836059570312e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.14422106742858887}, "created": {"value": false, "score": 2.3245811462402344e-05}, "shared": {"value": false, "score": 1.0728836059570312e-06}}, "references": [{"label": "[12]", "normalizedForm": "[12]", "refKey": 11, "offsetStart": 41417, "offsetEnd": 41421}, {"label": "[12]", "normalizedForm": "[12]", "refKey": 11, "offsetStart": 41417, "offsetEnd": 41421}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GLog", "normalizedForm": "GLog", "offsetStart": 231, "offsetEnd": 235}, "context": "Instead of creating different S-and R-facts, we can simply add a pointer from the first column of R to the second column of S and a pointer from the second column of R to the first column of S. When a rule is linear, both VLog and GLog perform structure sharing and, hence, do not allocate extra memory to store the derived facts. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.034266531467437744}, "created": {"value": false, "score": 7.867813110351562e-06}, "shared": {"value": false, "score": 1.430511474609375e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.6689300537109375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DBpedia", "normalizedForm": "DBpedia", "offsetStart": 232, "offsetEnd": 244}, "context": "To asses the performance of GLog on linear and Datalog scenarios, we considered benchmarks previously used to evaluate the performance of reasoning engines including VLog and RDFox: LUBM [30] and UOBM [41] are synthetic benchmarks; DBpedia [14] (v2014, available online1 ) is a KG extracted from Wikipedia; Claros [51] and Reactome [22] are realworld ontologies2 . ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": false, "score": 2.7418136596679688e-06}, "shared": {"value": false, "score": 5.960464477539062e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": false, "score": 0.00031578540802001953}, "shared": {"value": false, "score": 9.72747802734375e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Claros-L", "normalizedForm": "Claros-L", "offsetStart": 233, "offsetEnd": 241}, "context": "Even in this case though, the performance of GLog is still better than the performance of its competitors: it is twice as fast as VLog, RDFox and COM in most scenarios and more than an order of magnitude faster than RDFox and COM in Claros-L.", "mentionContextAttributes": {"used": {"value": false, "score": 0.002736330032348633}, "created": {"value": false, "score": 5.328655242919922e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.002736330032348633}, "created": {"value": false, "score": 5.328655242919922e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ChaseBench", "normalizedForm": "ChaseBench", "offsetStart": 240, "offsetEnd": 254}, "context": "We implemented our approach in a new reasoner, called GLog, and compared its performance versus multiple state-of-the-art chase and RDFS engines including RDFox, VLog, WebPIE [59] and Inferray [54], using well-established benchmarks, e.g., ChaseBench [11]. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0058135986328125}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996144771575928}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 2.384185791015625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ruleExec", "normalizedForm": "ruleExec", "offsetStart": 243, "offsetEnd": 251}, "context": "To assess the impact of minDatalog and ruleExec, the rule execution strategy from Definition 23, we ran TGmat as follows: without minDatalog or ruleExec, column No opt; with minDatalog, but without ruleExec, column m; with both minDatalog and ruleExec, column m+r.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9998503923416138}, "created": {"value": false, "score": 3.5762786865234375e-06}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998503923416138}, "created": {"value": false, "score": 4.649162292480469e-06}, "shared": {"value": false, "score": 4.76837158203125e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PDQ", "normalizedForm": "PDQ", "offsetStart": 244, "offsetEnd": 252}, "context": "\u2022 VLog, as, to our knowledge, is the most efficient system both time-and memory-wise [58,60]; \u2022 the latest public release of RDFox from [1] as it outperforms all chase engines tested against ChaseBench [11]: ChaseFun, DEMo [50], LLunatic [27], PDQ [12] and Pegasus [43]; \u2022 the commercial state of the art chase engine COM (name is anonymized due to licensing restrictions); \u2022 Inferray, an RDFS reasoner that uses a columnar layout and that outperforms RDFox [54]; and \u2022 WebPIE, another high-performance RDFS reasoner that runs over Hadoop [59]. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.14422106742858887}, "created": {"value": false, "score": 3.2186508178710938e-06}, "shared": {"value": false, "score": 1.0728836059570312e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.14422106742858887}, "created": {"value": false, "score": 2.3245811462402344e-05}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Pegasus", "normalizedForm": "Pegasus", "offsetStart": 257, "offsetEnd": 268}, "context": "\u2022 VLog, as, to our knowledge, is the most efficient system both time-and memory-wise [58,60]; \u2022 the latest public release of RDFox from [1] as it outperforms all chase engines tested against ChaseBench [11]: ChaseFun, DEMo [50], LLunatic [27], PDQ [12] and Pegasus [43]; \u2022 the commercial state of the art chase engine COM (name is anonymized due to licensing restrictions); \u2022 Inferray, an RDFS reasoner that uses a columnar layout and that outperforms RDFox [54]; and \u2022 WebPIE, another high-performance RDFS reasoner that runs over Hadoop [59]. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.14422106742858887}, "created": {"value": false, "score": 3.2186508178710938e-06}, "shared": {"value": false, "score": 1.0728836059570312e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.14422106742858887}, "created": {"value": false, "score": 3.2186508178710938e-06}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "VLog", "normalizedForm": "VLog", "offsetStart": 261, "offsetEnd": 265}, "context": "Recall that when a program is linear and FES it admits a finite TG which can be computed prior to reasoning using tglinear (Algorithm 1) and minimized using minLinear from Definition 14. Columns two to seven show the runtime and the peak memory consumption for VLog, RDFox and the commercial engine COM. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9578635692596436}, "created": {"value": false, "score": 1.5497207641601562e-06}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.8014603853225708}, "shared": {"value": false, "score": 1.3709068298339844e-05}}, "references": [{"label": "[59]", "normalizedForm": "[59]", "refKey": 58}, {"label": "[59]", "normalizedForm": "[59]", "refKey": 58}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RDFox", "normalizedForm": "RDFox", "offsetStart": 267, "offsetEnd": 272}, "context": "Recall that when a program is linear and FES it admits a finite TG which can be computed prior to reasoning using tglinear (Algorithm 1) and minimized using minLinear from Definition 14. Columns two to seven show the runtime and the peak memory consumption for VLog, RDFox and the commercial engine COM. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9578635692596436}, "created": {"value": false, "score": 1.5497207641601562e-06}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.9982938170433044}, "shared": {"value": true, "score": 0.9660741090774536}}, "references": [{"label": "[47]", "normalizedForm": "[47]", "refKey": 46}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "COM", "normalizedForm": "COM", "offsetStart": 299, "offsetEnd": 302}, "context": "Recall that when a program is linear and FES it admits a finite TG which can be computed prior to reasoning using tglinear (Algorithm 1) and minimized using minLinear from Definition 14. Columns two to seven show the runtime and the peak memory consumption for VLog, RDFox and the commercial engine COM. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9578635692596436}, "created": {"value": false, "score": 1.5497207641601562e-06}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998577833175659}, "created": {"value": true, "score": 0.8014603853225708}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "COM", "normalizedForm": "COM", "offsetStart": 318, "offsetEnd": 321}, "context": "\u2022 VLog, as, to our knowledge, is the most efficient system both time-and memory-wise [58,60]; \u2022 the latest public release of RDFox from [1] as it outperforms all chase engines tested against ChaseBench [11]: ChaseFun, DEMo [50], LLunatic [27], PDQ [12] and Pegasus [43]; \u2022 the commercial state of the art chase engine COM (name is anonymized due to licensing restrictions); \u2022 Inferray, an RDFS reasoner that uses a columnar layout and that outperforms RDFox [54]; and \u2022 WebPIE, another high-performance RDFS reasoner that runs over Hadoop [59].", "mentionContextAttributes": {"used": {"value": false, "score": 0.14422106742858887}, "created": {"value": false, "score": 3.2186508178710938e-06}, "shared": {"value": false, "score": 1.0728836059570312e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998577833175659}, "created": {"value": true, "score": 0.8014603853225708}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Inferray", "normalizedForm": "Inferray", "offsetStart": 376, "offsetEnd": 384}, "context": "\u2022 VLog, as, to our knowledge, is the most efficient system both time-and memory-wise [58,60]; \u2022 the latest public release of RDFox from [1] as it outperforms all chase engines tested against ChaseBench [11]: ChaseFun, DEMo [50], LLunatic [27], PDQ [12] and Pegasus [43]; \u2022 the commercial state of the art chase engine COM (name is anonymized due to licensing restrictions); \u2022 Inferray, an RDFS reasoner that uses a columnar layout and that outperforms RDFox [54]; and \u2022 WebPIE, another high-performance RDFS reasoner that runs over Hadoop [59].", "mentionContextAttributes": {"used": {"value": false, "score": 0.14422106742858887}, "created": {"value": false, "score": 3.2186508178710938e-06}, "shared": {"value": false, "score": 1.0728836059570312e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.14422106742858887}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RDFox", "normalizedForm": "RDFox", "offsetStart": 452, "offsetEnd": 457}, "context": "\u2022 VLog, as, to our knowledge, is the most efficient system both time-and memory-wise [58,60]; \u2022 the latest public release of RDFox from [1] as it outperforms all chase engines tested against ChaseBench [11]: ChaseFun, DEMo [50], LLunatic [27], PDQ [12] and Pegasus [43]; \u2022 the commercial state of the art chase engine COM (name is anonymized due to licensing restrictions); \u2022 Inferray, an RDFS reasoner that uses a columnar layout and that outperforms RDFox [54]; and \u2022 WebPIE, another high-performance RDFS reasoner that runs over Hadoop [59].", "mentionContextAttributes": {"used": {"value": false, "score": 0.14422106742858887}, "created": {"value": false, "score": 3.2186508178710938e-06}, "shared": {"value": false, "score": 1.0728836059570312e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.9982938170433044}, "shared": {"value": true, "score": 0.9660741090774536}}, "references": [{"label": "[54]", "normalizedForm": "[54]", "refKey": 53, "offsetStart": 41627, "offsetEnd": 41631}, {"label": "[54]", "normalizedForm": "[54]", "refKey": 53, "offsetStart": 41627, "offsetEnd": 41631}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "WebPIE", "normalizedForm": "WebPIE", "offsetStart": 470, "offsetEnd": 476}, "context": "\u2022 VLog, as, to our knowledge, is the most efficient system both time-and memory-wise [58,60]; \u2022 the latest public release of RDFox from [1] as it outperforms all chase engines tested against ChaseBench [11]: ChaseFun, DEMo [50], LLunatic [27], PDQ [12] and Pegasus [43]; \u2022 the commercial state of the art chase engine COM (name is anonymized due to licensing restrictions); \u2022 Inferray, an RDFS reasoner that uses a columnar layout and that outperforms RDFox [54]; and \u2022 WebPIE, another high-performance RDFS reasoner that runs over Hadoop [59]. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.14422106742858887}, "created": {"value": false, "score": 3.2186508178710938e-06}, "shared": {"value": false, "score": 1.0728836059570312e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.14422106742858887}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Hadoop", "normalizedForm": "Hadoop", "offsetStart": 532, "offsetEnd": 542}, "context": "\u2022 VLog, as, to our knowledge, is the most efficient system both time-and memory-wise [58,60]; \u2022 the latest public release of RDFox from [1] as it outperforms all chase engines tested against ChaseBench [11]: ChaseFun, DEMo [50], LLunatic [27], PDQ [12] and Pegasus [43]; \u2022 the commercial state of the art chase engine COM (name is anonymized due to licensing restrictions); \u2022 Inferray, an RDFS reasoner that uses a columnar layout and that outperforms RDFox [54]; and \u2022 WebPIE, another high-performance RDFS reasoner that runs over Hadoop [59]. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.14422106742858887}, "created": {"value": false, "score": 3.2186508178710938e-06}, "shared": {"value": false, "score": 1.0728836059570312e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.14422106742858887}, "created": {"value": false, "score": 3.2186508178710938e-06}, "shared": {"value": false, "score": 1.0728836059570312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GLog", "normalizedForm": "GLog", "offsetStart": 543, "offsetEnd": 547}, "context": "\u2022 (New idea) We propose a new reasoning technique based on traversing acyclic graphs, called TGs, to tackle multiple sources of inefficiency of the chase; \u2022 (New theoretical contribution) We study the class of programs admitting finite instance-independent TGs and its relationship with other known classes; \u2022 (New algorithms) We propose techniques for computing minimal instance-independent TGs for linear programs, and techniques for computing minimal instance-dependent TGs for Datalog programs; \u2022 (New system) We introduce a new reasoner, GLog, which has competitive performance, often superior to the state-of-the-art, and has good scalability. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0008190274238586426}, "created": {"value": false, "score": 0.03072589635848999}, "shared": {"value": false, "score": 1.6689300537109375e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999258518218994}, "created": {"value": true, "score": 0.7316622138023376}, "shared": {"value": false, "score": 1.6689300537109375e-06}}}], "references": [{"refKey": 46, "tei": "<biblStruct xml:id=\"b46\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">RDFox: A Highly-Scalable RDF Store</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Y</forename><surname>Nenov</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">R</forename><surname>Piro</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">B</forename><surname>Motik</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">I</forename><surname>Horrocks</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Z</forename><surname>Wu</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">J</forename><surname>Banerjee</surname></persName>\n\t\t</author>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"m\">ISWC</title>\n\t\t<imprint>\n\t\t\t<date>2015</date>\n\t\t\t<biblScope unit=\"page\">20</biblScope>\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}, {"refKey": 49, "tei": "<biblStruct xml:id=\"b49\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">DEMo: Data Exchange Modeling Tool</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">R</forename><surname>Pichler</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">V</forename><surname>Savenkov</surname></persName>\n\t\t</author>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"m\">VLDB</title>\n\t\t<imprint>\n\t\t\t<date>2009</date>\n\t\t\t<biblScope unit=\"page\">1609</biblScope>\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}, {"refKey": 58, "tei": "<biblStruct xml:id=\"b58\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">OWL Reasoning with WebPIE: Calculating the Closure of 100 Billion Triples</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">J</forename><surname>Urbani</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">S</forename><surname>Kotoulas</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">J</forename><surname>Maassen</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">F</forename><surname>Van Harmelen</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">H</forename><surname>Bal</surname></persName>\n\t\t</author>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"m\">ESWC</title>\n\t\t<imprint>\n\t\t\t<date>2010</date>\n\t\t\t<biblScope unit=\"page\">227</biblScope>\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}, {"refKey": 59, "tei": "<biblStruct xml:id=\"b59\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">Efficient Model Construction for Horn Logic with VLog</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">J</forename><surname>Urbani</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">M</forename><surname>Kr\u00f6tzsch</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">C</forename><surname>Jacobs</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">I</forename><surname>Dragoste</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">D</forename><surname>Carral</surname></persName>\n\t\t</author>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"m\">IJCAR</title>\n\t\t<imprint>\n\t\t\t<date>2018</date>\n\t\t\t<biblScope unit=\"page\">688</biblScope>\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}, {"refKey": 0, "tei": "<biblStruct xml:id=\"b0\">\n\t<monogr>\n\t\t<title level=\"m\" type=\"main\">Materializing Knowledge Bases via Trigger Graphs (Technical Report)</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Efthymia</forename><surname>Tsamoura</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">David</forename><surname>Carral</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Enrico</forename><surname>Malizia</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Jacopo</forename><surname>Urbani</surname></persName>\n\t\t</author>\n\t\t<idno type=\"DOI\">10.14778/xxxxxxx.xxxxxxx</idno>\n\t\t<idno>1BAF1FE285A9EE81C93F0D504FA2DF3D</idno>\n\t\t<imprint/>\n\t</monogr>\n</biblStruct>\n"}, {"refKey": 61, "tei": "<biblStruct xml:id=\"b61\">\n\t<monogr>\n\t\t<title level=\"m\">Assume that P is (a) FOR and</title>\n\t\t<imprint>\n\t\t\t<publisher>TDB</publisher>\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}, {"refKey": 11, "tei": "<biblStruct xml:id=\"b11\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">PDQ: Proof-driven query answering over web-based data</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">M</forename><surname>Benedikt</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">J</forename><surname>Leblay</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">E</forename><surname>Tsamoura</surname></persName>\n\t\t</author>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"m\">VLDB</title>\n\t\t<imprint>\n\t\t\t<date>2014</date>\n\t\t\t<biblScope unit=\"page\">1556</biblScope>\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}, {"refKey": 29, "tei": "<biblStruct xml:id=\"b29\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">LUBM: A benchmark for OWL knowledge base systems</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Y</forename><surname>Guo</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Z</forename><surname>Pan</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">J</forename><surname>Heflin</surname></persName>\n\t\t</author>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"j\">Journal of Web Semantics</title>\n\t\t<imprint>\n\t\t\t<biblScope unit=\"volume\">3</biblScope>\n\t\t\t<biblScope unit=\"issue\">2-3</biblScope>\n\t\t\t<date>2011</date>\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}, {"refKey": 40, "tei": "<biblStruct xml:id=\"b40\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">Towards a complete OWL Ontology Benchmark</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">L</forename><surname>Ma</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Y</forename><surname>Yang</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Z</forename><surname>Qiu</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">G</forename><surname>Xie</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Y</forename><surname>Pan</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">S</forename><surname>Liu</surname></persName>\n\t\t</author>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"m\">ESWC</title>\n\t\t<imprint>\n\t\t\t<date>2006</date>\n\t\t\t<biblScope unit=\"page\">139</biblScope>\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}, {"refKey": 57, "tei": "<biblStruct xml:id=\"b57\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">Column-Oriented Datalog Materialization for Large Knowledge Graphs</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">J</forename><surname>Urbani</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">C</forename><surname>Jacobs</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">M</forename><surname>Kr\u00f6tzsch</surname></persName>\n\t\t</author>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"m\">AAAI</title>\n\t\t<imprint>\n\t\t\t<date>2016</date>\n\t\t\t<biblScope unit=\"page\">264</biblScope>\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}, {"refKey": 53, "tei": "<biblStruct xml:id=\"b53\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">Inferray: Fast in-Memory RDF Inference</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">J</forename><surname>Subercaze</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">C</forename><surname>Gravier</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">J</forename><surname>Chevalier</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">F</forename><surname>Laforest</surname></persName>\n\t\t</author>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"m\">Proceedings of the VLDB Endowment</title>\n\t\t<meeting>the VLDB Endowment</meeting>\n\t\t<imprint>\n\t\t\t<date>2016</date>\n\t\t\t<biblScope unit=\"volume\">9</biblScope>\n\t\t\t<biblScope unit=\"page\">479</biblScope>\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}], "runtime": 50082, "id": "fcf9f998dea5879f91e936dd8959631cda2e656f", "metadata": {"id": "fcf9f998dea5879f91e936dd8959631cda2e656f"}, "original_file_path": "../../datalake/Samuel/SOFTware-Sync/downloads/xml/lirmm-03344217.grobid.tei.xml", "file_name": "lirmm-03344217.grobid.tei.xml"}