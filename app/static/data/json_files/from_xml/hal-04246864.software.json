{"application": "software-mentions", "version": "0.8.0", "date": "2024-10-07T11:53+0000", "md5": "E45EF61186A1F38FF640FFA31124A237", "mentions": [{"type": "software", "software-type": "software", "software-name": {"rawForm": "CONNOR", "normalizedForm": "CONNOR", "offsetStart": 0, "offsetEnd": 6}, "context": "CONNOR, a Java implementation of this method on RDF graphs, has been presented, and is available as open-source code. ", "mentionContextAttributes": {"used": {"value": false, "score": 5.793571472167969e-05}, "created": {"value": false, "score": 0.13663578033447266}, "shared": {"value": false, "score": 0.1550806164741516}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9464208483695984}, "created": {"value": true, "score": 0.9998681545257568}, "shared": {"value": true, "score": 0.9950475692749023}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NodeEnum", "normalizedForm": "NodeEnum", "offsetStart": 0, "offsetEnd": 8}, "context": "NodeEnum does the opposite by enumerating RDF nodes, and computing the least common subsumer between the query and the node description [48]. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0003973841667175293}, "created": {"value": false, "score": 1.5497207641601562e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.8860138654708862}, "created": {"value": false, "score": 0.018577933311462402}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NodeEnum", "normalizedForm": "NodeEnum", "offsetStart": 0, "offsetEnd": 8}, "context": "NodeEnum looks insensitive to the query complexity, but does not scale well with the number of nodes. ", "mentionContextAttributes": {"used": {"value": false, "score": 9.620189666748047e-05}, "created": {"value": false, "score": 4.887580871582031e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.8860138654708862}, "created": {"value": false, "score": 0.018577933311462402}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RelaxEnum", "normalizedForm": "RelaxEnum", "offsetStart": 0, "offsetEnd": 9}, "context": "RelaxEnum is sensitive to the query complexity, in particular to multivalued properties. ", "mentionContextAttributes": {"used": {"value": false, "score": 5.233287811279297e-05}, "created": {"value": false, "score": 3.3736228942871094e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9650395512580872}, "created": {"value": false, "score": 0.0039452314376831055}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RelaxEnum", "normalizedForm": "RelaxEnum", "offsetStart": 0, "offsetEnd": 9}, "context": "RelaxEnum is the classical approach of query relaxation, that enumerates relaxed queries and computes their answers.", "mentionContextAttributes": {"used": {"value": false, "score": 4.494190216064453e-05}, "created": {"value": false, "score": 0.0039452314376831055}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9650395512580872}, "created": {"value": false, "score": 0.0039452314376831055}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "lubm", "normalizedForm": "lubm", "offsetStart": 3, "offsetEnd": 7}, "context": "On lubm10, PartitionLJ is typically one order of magnitude more efficient than RelaxEnum.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00032508373260498047}, "created": {"value": false, "score": 3.337860107421875e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9988753199577332}, "created": {"value": false, "score": 1.2636184692382812e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "lubm", "normalizedForm": "lubm", "offsetStart": 11, "offsetEnd": 15}, "context": "Over the 7 lubm10 queries, there are in total 59 C-Ns out of 2899 RQs, hence a 50-fold decrease.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9354195594787598}, "created": {"value": false, "score": 1.2636184692382812e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9988753199577332}, "created": {"value": false, "score": 1.2636184692382812e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NoLimit", "normalizedForm": "NoLimit", "offsetStart": 11, "offsetEnd": 18}, "context": "Results in NoLimit mode. Figure 5 compares the runtime (log scale) of all algorithms on all queries of Mondial and lubm10 in NoLimit mode.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9887825846672058}, "created": {"value": false, "score": 5.4836273193359375e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9887825846672058}, "created": {"value": false, "score": 0.004835963249206543}, "shared": {"value": false, "score": 1.1920928955078125e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PartitionLJ", "normalizedForm": "PartitionLJ", "offsetStart": 11, "offsetEnd": 22}, "context": "On lubm10, PartitionLJ is typically one order of magnitude more efficient than RelaxEnum. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00032508373260498047}, "created": {"value": false, "score": 3.337860107421875e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9650395512580872}, "created": {"value": false, "score": 0.018577933311462402}, "shared": {"value": false, "score": 3.5762786865234375e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PartitionLJ", "normalizedForm": "PartitionLJ", "offsetStart": 12, "offsetEnd": 23}, "context": "In summary, PartitionLJ scales very well with the number of relaxations, while RelaxEnum does not.", "mentionContextAttributes": {"used": {"value": false, "score": 0.02095860242843628}, "created": {"value": false, "score": 5.0067901611328125e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9650395512580872}, "created": {"value": false, "score": 0.018577933311462402}, "shared": {"value": false, "score": 3.5762786865234375e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PartitionLJ", "normalizedForm": "PartitionLJ", "offsetStart": 14, "offsetEnd": 25}, "context": "Partition and PartitionLJ are always more efficient -or equally efficient -and the use of lazy joins generally makes it even more efficient. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00017958879470825195}, "created": {"value": false, "score": 1.5735626220703125e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9650395512580872}, "created": {"value": false, "score": 0.018577933311462402}, "shared": {"value": false, "score": 3.5762786865234375e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PartitionLJ", "normalizedForm": "PartitionLJ", "offsetStart": 14, "offsetEnd": 25}, "context": "Partition and PartitionLJ are our two variants, and differ in that only the latter uses lazy joins for computing concept extensions.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0028241872787475586}, "created": {"value": false, "score": 0.0006645321846008301}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9650395512580872}, "created": {"value": false, "score": 0.018577933311462402}, "shared": {"value": false, "score": 3.5762786865234375e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CONNOR", "normalizedForm": "CONNOR", "offsetStart": 16, "offsetEnd": 22}, "context": "We also present CONNOR, an implementation as a Java library (Section 5.3).", "mentionContextAttributes": {"used": {"value": false, "score": 0.0002346634864807129}, "created": {"value": true, "score": 0.9998681545257568}, "shared": {"value": false, "score": 1.0728836059570312e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9464208483695984}, "created": {"value": true, "score": 0.9998681545257568}, "shared": {"value": true, "score": 0.9950475692749023}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RelaxEnum", "normalizedForm": "RelaxEnum", "offsetStart": 18, "offsetEnd": 27}, "context": "Figure 6 compares RelaxEnum and PartitionLJ on lubm10 queries for increasing values of maximal relaxation distance, here from 1 to 7 relaxations.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9650395512580872}, "created": {"value": false, "score": 2.7418136596679688e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9650395512580872}, "created": {"value": false, "score": 0.0039452314376831055}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Gprune", "normalizedForm": "Gprune", "offsetStart": 21, "offsetEnd": 32}, "context": "Some of them such as Gprune [30] rely on the user for specifying constraints on the patterns, others choose to select specific subsets of the frequent patterns, such as SPIN [28] for the maximal patterns and CloseGraph [31] for the closed patterns. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0016040205955505371}, "created": {"value": false, "score": 8.344650268554688e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0016040205955505371}, "created": {"value": false, "score": 8.344650268554688e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "AnyBURL", "normalizedForm": "AnyBURL", "offsetStart": 21, "offsetEnd": 32}, "context": "Like this is done in AnyBURL [56], we use a constant \u03bb \u2265 0 as an additive Laplace smoothing, in order to favor rules with larger support. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.03632843494415283}, "created": {"value": false, "score": 3.4570693969726562e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9793376922607422}, "created": {"value": false, "score": 5.137920379638672e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "references": [{"label": "[56]", "normalizedForm": "[56]", "refKey": 56}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CONNOR", "normalizedForm": "CONNOR", "offsetStart": 23, "offsetEnd": 29}, "context": "A full presentation of CONNOR with usage examples can be found in [15].", "mentionContextAttributes": {"used": {"value": false, "score": 0.00022107362747192383}, "created": {"value": false, "score": 6.54458999633789e-05}, "shared": {"value": false, "score": 1.1920928955078125e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9464208483695984}, "created": {"value": true, "score": 0.9998681545257568}, "shared": {"value": true, "score": 0.9950475692749023}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CONNOR", "normalizedForm": "CONNOR", "offsetStart": 28, "offsetEnd": 34}, "context": "This is the case handled by CONNOR: graph contexts are represented as RDF graphs and handled with the Jena library.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9464208483695984}, "created": {"value": false, "score": 1.4901161193847656e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9464208483695984}, "created": {"value": true, "score": 0.9998681545257568}, "shared": {"value": true, "score": 0.9950475692749023}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PartitionLJ", "normalizedForm": "PartitionLJ", "offsetStart": 29, "offsetEnd": 40}, "context": "It can also be observed that PartitionLJ scales well with data size because from Mondial to lubm10, a 100-fold increase in number of triples, the median runtime also follows a 100-fold increase, from 0.01-0.1s to 1-10s. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.011559128761291504}, "created": {"value": false, "score": 8.821487426757812e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9650395512580872}, "created": {"value": false, "score": 0.018577933311462402}, "shared": {"value": false, "score": 3.5762786865234375e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NodeEnum", "normalizedForm": "NodeEnum", "offsetStart": 31, "offsetEnd": 39}, "context": "A few runtimes are missing for NodeEnum on lubm10, and for RelaxEnum and Partition on Q6 of Mondial because they are much higher than other runtimes. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.8860138654708862}, "created": {"value": false, "score": 1.0371208190917969e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.8860138654708862}, "created": {"value": false, "score": 0.018577933311462402}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PartitionLJ", "normalizedForm": "PartitionLJ", "offsetStart": 32, "offsetEnd": 43}, "context": "Figure 6 compares RelaxEnum and PartitionLJ on lubm10 queries for increasing values of maximal relaxation distance, here from 1 to 7 relaxations.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9650395512580872}, "created": {"value": false, "score": 2.7418136596679688e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9650395512580872}, "created": {"value": false, "score": 0.018577933311462402}, "shared": {"value": false, "score": 3.5762786865234375e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PartitionLJ", "normalizedForm": "PartitionLJ", "offsetStart": 32, "offsetEnd": 43}, "context": "On the contrary, the runtime of PartitionLJ grows more quickly for 1-4 relaxations, and then almost flattens in most cases.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0004302859306335449}, "created": {"value": false, "score": 3.3020973205566406e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9650395512580872}, "created": {"value": false, "score": 0.018577933311462402}, "shared": {"value": false, "score": 3.5762786865234375e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PartitionLJ", "normalizedForm": "PartitionLJ", "offsetStart": 32, "offsetEnd": 43}, "context": "The efficiency of Partition and PartitionLJ is better understood when comparing the number of concepts of neighbors (C-N) to the number of relaxed queries (RQ).", "mentionContextAttributes": {"used": {"value": false, "score": 0.010354220867156982}, "created": {"value": false, "score": 9.179115295410156e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9650395512580872}, "created": {"value": false, "score": 0.018577933311462402}, "shared": {"value": false, "score": 3.5762786865234375e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NoLimit", "normalizedForm": "NoLimit", "offsetStart": 33, "offsetEnd": 40}, "context": "We consider two execution modes: NoLimit for complete computations; and MaxRelax for a limit to relaxation distance (not applicable to NodeEnum). ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00033545494079589844}, "created": {"value": false, "score": 0.004835963249206543}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9887825846672058}, "created": {"value": false, "score": 0.004835963249206543}, "shared": {"value": false, "score": 1.1920928955078125e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "lubm", "normalizedForm": "lubm", "offsetStart": 35, "offsetEnd": 39}, "context": "This linear scaling is verified on lubm100 (not shown) where the runtimes are all 10 times higher.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9988753199577332}, "created": {"value": false, "score": 4.291534423828125e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9988753199577332}, "created": {"value": false, "score": 1.2636184692382812e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "lubm", "normalizedForm": "lubm", "offsetStart": 43, "offsetEnd": 47}, "context": "A few runtimes are missing for NodeEnum on lubm10, and for RelaxEnum and Partition on Q6 of Mondial because they are much higher than other runtimes.", "mentionContextAttributes": {"used": {"value": true, "score": 0.8860138654708862}, "created": {"value": false, "score": 1.0371208190917969e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9988753199577332}, "created": {"value": false, "score": 1.2636184692382812e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "AnyBURL", "normalizedForm": "AnyBURL", "offsetStart": 46, "offsetEnd": 53}, "context": "It is noteworthy that C-N is competitive with AnyBURL because, whereas AnyBURL rules are computed in a supervised manner (knowing the target relation r), C-N concepts are computed in an unsupervised manner (i.e,", "mentionContextAttributes": {"used": {"value": false, "score": 0.02531445026397705}, "created": {"value": false, "score": 2.2411346435546875e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9793376922607422}, "created": {"value": false, "score": 5.137920379638672e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "references": [{"label": "[56]", "normalizedForm": "[56]", "refKey": 56}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "lubm", "normalizedForm": "lubm", "offsetStart": 47, "offsetEnd": 51}, "context": "Figure 6 compares RelaxEnum and PartitionLJ on lubm10 queries for increasing values of maximal relaxation distance, here from 1 to 7 relaxations.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9650395512580872}, "created": {"value": false, "score": 2.7418136596679688e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9988753199577332}, "created": {"value": false, "score": 1.2636184692382812e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CONNOR", "normalizedForm": "CONNOR", "offsetStart": 47, "offsetEnd": 53}, "context": "The main implementation of those algorithms is CONNOR, a Java library for the computation of concepts of neighbors.", "mentionContextAttributes": {"used": {"value": false, "score": 2.5033950805664062e-05}, "created": {"value": true, "score": 0.9752680063247681}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9464208483695984}, "created": {"value": true, "score": 0.9998681545257568}, "shared": {"value": true, "score": 0.9950475692749023}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CONNOR", "normalizedForm": "CONNOR", "offsetStart": 48, "offsetEnd": 54}, "context": "Accessible here: https://gitlab.inria.fr/hayats/CONNOR", "mentionContextAttributes": {"used": {"value": false, "score": 8.952617645263672e-05}, "created": {"value": false, "score": 4.9233436584472656e-05}, "shared": {"value": true, "score": 0.9950475692749023}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9464208483695984}, "created": {"value": true, "score": 0.9998681545257568}, "shared": {"value": true, "score": 0.9950475692749023}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "gSpan", "normalizedForm": "gSpan", "offsetStart": 54, "offsetEnd": 63}, "context": "The most classic ones, such as AGM [27], FFSM [28] or gSpan [29], are complete approaches, mining all patterns over a given frequency. ", "mentionContextAttributes": {"used": {"value": false, "score": 6.73532485961914e-05}, "created": {"value": false, "score": 3.6954879760742188e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 6.73532485961914e-05}, "created": {"value": false, "score": 3.6954879760742188e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "AnyBURL", "normalizedForm": "AnyBURL", "offsetStart": 55, "offsetEnd": 62}, "context": "Those rules are similar in nature to those of AMIE+ or AnyBURL except that only rules that are matched by the head entity u are generated.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0013785362243652344}, "created": {"value": false, "score": 2.288818359375e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9793376922607422}, "created": {"value": false, "score": 5.137920379638672e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "references": [{"label": "[56]", "normalizedForm": "[56]", "refKey": 56}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "AnyBURL", "normalizedForm": "AnyBURL", "offsetStart": 57, "offsetEnd": 68}, "context": "We reuse the Maximum Confidence (MC) score introduced in AnyBURL [56]. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9793376922607422}, "created": {"value": false, "score": 5.137920379638672e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9793376922607422}, "created": {"value": false, "score": 5.137920379638672e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "references": [{"label": "[56]", "normalizedForm": "[56]", "refKey": 56}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RelaxEnum", "normalizedForm": "RelaxEnum", "offsetStart": 59, "offsetEnd": 68}, "context": "A few runtimes are missing for NodeEnum on lubm10, and for RelaxEnum and Partition on Q6 of Mondial because they are much higher than other runtimes. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.886013925075531}, "created": {"value": false, "score": 1.0371208190917969e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9650395512580872}, "created": {"value": false, "score": 0.0039452314376831055}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Apache Jena", "normalizedForm": "Apache Jena", "offsetStart": 60, "offsetEnd": 72}, "language": {"rawForm": "Java", "normalizedForm": "Java", "wikidataId": "Q251", "offsetStart": 57, "offsetEnd": 61}, "context": "This library is a free and open-source software3 , based on Apache Jena4 , a well-known Java library for representing and reasoning on the RDF graphs of the Semantic Web. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0008313655853271484}, "created": {"value": false, "score": 0.022561967372894287}, "shared": {"value": false, "score": 0.0034426450729370117}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0008313655853271484}, "created": {"value": false, "score": 0.022561967372894287}, "shared": {"value": false, "score": 0.0034426450729370117}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NodeEnum", "normalizedForm": "NodeEnum", "offsetStart": 68, "offsetEnd": 76}, "context": "We compare four algorithms: two baseline algorithms, Relax-Enum and NodeEnum, and two variants of our algorithm, Partition and PartitionLJ.", "mentionContextAttributes": {"used": {"value": false, "score": 0.1567591428756714}, "created": {"value": false, "score": 0.018577933311462402}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.8860138654708862}, "created": {"value": false, "score": 0.018577933311462402}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "AnyBURL", "normalizedForm": "AnyBURL", "offsetStart": 71, "offsetEnd": 78}, "context": "It is noteworthy that C-N is competitive with AnyBURL because, whereas AnyBURL rules are computed in a supervised manner (knowing the target relation r), C-N concepts are computed in an unsupervised manner (i.e,", "mentionContextAttributes": {"used": {"value": false, "score": 0.025314509868621826}, "created": {"value": false, "score": 2.2411346435546875e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9793376922607422}, "created": {"value": false, "score": 5.137920379638672e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "references": [{"label": "[56]", "normalizedForm": "[56]", "refKey": 56}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "AnyBURL", "normalizedForm": "AnyBURL", "offsetStart": 76, "offsetEnd": 83}, "context": "On FB15k-237, the MRR delta is -0.074 with ComplEx-N3, but only -0.004 with AnyBURL, the best rule-based approach.", "mentionContextAttributes": {"used": {"value": true, "score": 0.8917717337608337}, "created": {"value": false, "score": 1.430511474609375e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9793376922607422}, "created": {"value": false, "score": 5.137920379638672e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "references": [{"label": "[56]", "normalizedForm": "[56]", "refKey": 56}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RelaxEnum", "normalizedForm": "RelaxEnum", "offsetStart": 79, "offsetEnd": 88}, "context": "On lubm10, PartitionLJ is typically one order of magnitude more efficient than RelaxEnum. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00032508373260498047}, "created": {"value": false, "score": 3.337860107421875e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9650395512580872}, "created": {"value": false, "score": 0.0039452314376831055}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RelaxEnum", "normalizedForm": "RelaxEnum", "offsetStart": 79, "offsetEnd": 88}, "context": "In summary, PartitionLJ scales very well with the number of relaxations, while RelaxEnum does not.", "mentionContextAttributes": {"used": {"value": false, "score": 0.02095860242843628}, "created": {"value": false, "score": 5.0067901611328125e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9650395512580872}, "created": {"value": false, "score": 0.0039452314376831055}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Mondial", "normalizedForm": "Mondial", "offsetStart": 81, "offsetEnd": 88}, "context": "It can also be observed that PartitionLJ scales well with data size because from Mondial to lubm10, a 100-fold increase in number of triples, the median runtime also follows a 100-fold increase, from 0.01-0.1s to 1-10s. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.011559128761291504}, "created": {"value": false, "score": 8.821487426757812e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9887825846672058}, "created": {"value": false, "score": 1.0371208190917969e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "lubm", "normalizedForm": "lubm", "offsetStart": 92, "offsetEnd": 96}, "context": "It can also be observed that PartitionLJ scales well with data size because from Mondial to lubm10, a 100-fold increase in number of triples, the median runtime also follows a 100-fold increase, from 0.01-0.1s to 1-10s. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.011559128761291504}, "created": {"value": false, "score": 8.821487426757812e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9988753199577332}, "created": {"value": false, "score": 1.2636184692382812e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Mondial", "normalizedForm": "Mondial", "offsetStart": 92, "offsetEnd": 99}, "context": "A few runtimes are missing for NodeEnum on lubm10, and for RelaxEnum and Partition on Q6 of Mondial because they are much higher than other runtimes. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.886013925075531}, "created": {"value": false, "score": 1.0371208190917969e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9887825846672058}, "created": {"value": false, "score": 1.0371208190917969e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Jena", "normalizedForm": "Jena", "offsetStart": 102, "offsetEnd": 106}, "context": "This is the case handled by CONNOR: graph contexts are represented as RDF graphs and handled with the Jena library. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9464208483695984}, "created": {"value": false, "score": 1.4901161193847656e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9464208483695984}, "created": {"value": false, "score": 1.4901161193847656e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Mondial", "normalizedForm": "Mondial", "offsetStart": 103, "offsetEnd": 110}, "context": "Results in NoLimit mode. Figure 5 compares the runtime (log scale) of all algorithms on all queries of Mondial and lubm10 in NoLimit mode. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9887825846672058}, "created": {"value": false, "score": 5.4836273193359375e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9887825846672058}, "created": {"value": false, "score": 1.0371208190917969e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CONNOR", "normalizedForm": "CONNOR", "offsetStart": 107, "offsetEnd": 113}, "context": "The modeling is made as an RDF graph, because this formalism is flexible, permits type relaxation, and the CONNOR library (see 5.3) has been developed for computing concepts of neighbors in RDF graphs.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0006604790687561035}, "created": {"value": false, "score": 0.0032323598861694336}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9464208483695984}, "created": {"value": true, "score": 0.9998681545257568}, "shared": {"value": true, "score": 0.9950475692749023}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "lubm", "normalizedForm": "lubm", "offsetStart": 115, "offsetEnd": 119}, "context": "Results in NoLimit mode. Figure 5 compares the runtime (log scale) of all algorithms on all queries of Mondial and lubm10 in NoLimit mode. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9887825846672058}, "created": {"value": false, "score": 5.4836273193359375e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9988753199577332}, "created": {"value": false, "score": 1.2636184692382812e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NoLimit", "normalizedForm": "NoLimit", "offsetStart": 125, "offsetEnd": 132}, "context": "Results in NoLimit mode. Figure 5 compares the runtime (log scale) of all algorithms on all queries of Mondial and lubm10 in NoLimit mode.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9887825846672058}, "created": {"value": false, "score": 5.4836273193359375e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9887825846672058}, "created": {"value": false, "score": 0.004835963249206543}, "shared": {"value": false, "score": 1.1920928955078125e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PartitionLJ", "normalizedForm": "PartitionLJ", "offsetStart": 127, "offsetEnd": 138}, "context": "We compare four algorithms: two baseline algorithms, Relax-Enum and NodeEnum, and two variants of our algorithm, Partition and PartitionLJ.", "mentionContextAttributes": {"used": {"value": false, "score": 0.1567591428756714}, "created": {"value": false, "score": 0.018577933311462402}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9650395512580872}, "created": {"value": false, "score": 0.018577933311462402}, "shared": {"value": false, "score": 3.5762786865234375e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NodeEnum", "normalizedForm": "NodeEnum", "offsetStart": 135, "offsetEnd": 143}, "context": "We consider two execution modes: NoLimit for complete computations; and MaxRelax for a limit to relaxation distance (not applicable to NodeEnum). ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00033545494079589844}, "created": {"value": false, "score": 0.004835963249206543}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.8860138654708862}, "created": {"value": false, "score": 0.018577933311462402}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "AMIE 3", "normalizedForm": "AMIE 3", "offsetStart": 162, "offsetEnd": 173}, "context": "Concerning knowledge graph mining, specific approaches have been developed, such as SWApriori [34] for complete pattern mining, or rule mining approaches such as AMIE 3 [35] that aims to generate useful rules for tasks such as knowledge graph completion. ", "mentionContextAttributes": {"used": {"value": false, "score": 9.083747863769531e-05}, "created": {"value": false, "score": 0.014227688312530518}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00019234418869018555}, "created": {"value": false, "score": 0.014227688312530518}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "references": [{"label": "[35]", "normalizedForm": "[35]", "refKey": 35}, {"label": "[56]", "normalizedForm": "[56]", "refKey": 56}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "AMIE 3", "normalizedForm": "AMIE 3", "offsetStart": 166, "offsetEnd": 172}, "context": "Graph feature models, also called observed feature models, make inferences directly from the observed edges in the KG: e.g., Random walk inference [55], Horn clauses AMIE 3 [35], AnyBURL [56].", "mentionContextAttributes": {"used": {"value": false, "score": 0.00019234418869018555}, "created": {"value": false, "score": 3.612041473388672e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00019234418869018555}, "created": {"value": false, "score": 0.014227688312530518}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "references": [{"label": "[35]", "normalizedForm": "[35]", "refKey": 35, "offsetStart": 59666, "offsetEnd": 59670}, {"label": "[56]", "normalizedForm": "[56]", "refKey": 56, "offsetStart": 59680, "offsetEnd": 59684}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GraphMDL+", "normalizedForm": "GraphMDL+", "offsetStart": 172, "offsetEnd": 185}, "context": "More recently, ideas from information theory have been used to drastically reduce the amount of mined patterns: e.g., the Minimum Description Length (MDL) principle (e.g., GraphMDL+ [32]) or the maximum entropy [33]. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00045943260192871094}, "created": {"value": false, "score": 0.0015805959701538086}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00045943260192871094}, "created": {"value": false, "score": 0.0015805959701538086}, "shared": {"value": false, "score": 3.5762786865234375e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "AnyBURL", "normalizedForm": "AnyBURL", "offsetStart": 179, "offsetEnd": 186}, "context": "Graph feature models, also called observed feature models, make inferences directly from the observed edges in the KG: e.g., Random walk inference [55], Horn clauses AMIE 3 [35], AnyBURL [56].", "mentionContextAttributes": {"used": {"value": false, "score": 0.00019234418869018555}, "created": {"value": false, "score": 3.612041473388672e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9793376922607422}, "created": {"value": false, "score": 5.137920379638672e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "references": [{"label": "[56]", "normalizedForm": "[56]", "refKey": 56, "offsetStart": 59680, "offsetEnd": 59684}]}], "references": [{"refKey": 56, "tei": "<biblStruct xml:id=\"b56\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">Anytime Bottom-Up Rule Learning for Knowledge Graph Completion</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Christian</forename><surname>Meilicke</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Melisachew</forename><forename type=\"middle\">Wudage</forename><surname>Chekol</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Daniel</forename><surname>Ruffinelli</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Heiner</forename><surname>Stuckenschmidt</surname></persName>\n\t\t</author>\n\t\t<idno type=\"DOI\">10.24963/ijcai.2019/435</idno>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"m\">Proceedings of the Twenty-Eighth International Joint Conference on Artificial Intelligence</title>\n\t\t<meeting>the Twenty-Eighth International Joint Conference on Artificial Intelligence</meeting>\n\t\t<imprint>\n\t\t\t<publisher>International Joint Conferences on Artificial Intelligence Organization</publisher>\n\t\t\t<date type=\"published\" when=\"2019-08\">2019</date>\n\t\t\t<biblScope unit=\"page\" from=\"3137\" to=\"3143\" />\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}, {"refKey": 35, "tei": "<biblStruct xml:id=\"b35\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">Fast and Exact Rule Mining with AMIE 3</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Jonathan</forename><surname>Lajus</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Luis</forename><surname>Gal\u00e1rraga</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Fabian</forename><surname>Suchanek</surname></persName>\n\t\t</author>\n\t\t<idno type=\"DOI\">10.1007/978-3-030-49461-2_3</idno>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"m\">Lecture Notes in Computer Science</title>\n\t\t<title level=\"s\">Lecture Notes in Computer Science</title>\n\t\t<imprint>\n\t\t\t<publisher>Springer International Publishing</publisher>\n\t\t\t<date type=\"published\" when=\"2020\">2020</date>\n\t\t\t<biblScope unit=\"page\" from=\"36\" to=\"52\" />\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}], "runtime": 23276, "id": "843658b615ab369a7a396ad3ca02328646039b1e", "metadata": {"id": "843658b615ab369a7a396ad3ca02328646039b1e"}, "original_file_path": "../../datalake/Samuel/SOFTware-Sync/downloads/xml/hal-04246864.grobid.tei.xml", "file_name": "hal-04246864.grobid.tei.xml"}