{"application": "software-mentions", "version": "0.8.0", "date": "2024-04-12T16:05+0000", "md5": "7C4CB75CF5DDD926B8F972614CD8B483", "mentions": [{"type": "software", "software-type": "software", "software-name": {"rawForm": "RotatE", "normalizedForm": "RotatE", "offsetStart": 0, "offsetEnd": 6}, "context": "RotatE [20] combines translation and rotation.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00027120113372802734}, "created": {"value": false, "score": 5.304813385009766e-06}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9665851593017578}, "created": {"value": true, "score": 0.9469097256660461}, "shared": {"value": false, "score": 4.470348358154297e-06}}, "references": [{"label": "[20]", "normalizedForm": "[20]", "refKey": 20, "offsetStart": 7468, "offsetEnd": 7472}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RotatE", "normalizedForm": "RotatE", "offsetStart": 0, "offsetEnd": 6}, "context": "RotatE [20] similarly, formulates the relations with a rotation and reduction in v h \u2022 v r -v t , however RotatE models rotation in the complex space.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00023889541625976562}, "created": {"value": false, "score": 1.4901161193847656e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9665851593017578}, "created": {"value": true, "score": 0.9469097256660461}, "shared": {"value": false, "score": 4.470348358154297e-06}}, "references": [{"label": "[20]", "normalizedForm": "[20]", "refKey": 20, "offsetStart": 23512, "offsetEnd": 23516}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RotatE", "normalizedForm": "RotatE", "offsetStart": 4, "offsetEnd": 10}, "context": "For RotatE, we report its best results with self-adversarial negative sampling, and for QuatE, we report the results with N3 regularization.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9665851593017578}, "created": {"value": false, "score": 4.351139068603516e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9665851593017578}, "created": {"value": true, "score": 0.9469097256660461}, "shared": {"value": false, "score": 4.470348358154297e-06}}, "references": [{"label": "[20]", "normalizedForm": "[20]", "refKey": 20}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RotatE", "normalizedForm": "RotatE", "offsetStart": 22, "offsetEnd": 28}, "context": "Our baselines include RotatE [20], TuckER [1], ComplEx-N3 [11], QuatE [36], MDE [17] and the recent graph neural network CompGCN [25].", "mentionContextAttributes": {"used": {"value": false, "score": 0.0025124549865722656}, "created": {"value": false, "score": 6.633996963500977e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9665851593017578}, "created": {"value": true, "score": 0.9469097256660461}, "shared": {"value": false, "score": 4.470348358154297e-06}}, "references": [{"label": "[20]", "normalizedForm": "[20]", "refKey": 20, "offsetStart": 31046, "offsetEnd": 31050}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RotatE", "normalizedForm": "RotatE", "offsetStart": 80, "offsetEnd": 86}, "context": "For our model, we use the same self-adversarial negative sampling introduced in RotatE.", "mentionContextAttributes": {"used": {"value": false, "score": 0.15307551622390747}, "created": {"value": true, "score": 0.9469097256660461}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9665851593017578}, "created": {"value": true, "score": 0.9469097256660461}, "shared": {"value": false, "score": 4.470348358154297e-06}}, "references": [{"label": "[20]", "normalizedForm": "[20]", "refKey": 20}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RotatE", "normalizedForm": "RotatE", "offsetStart": 106, "offsetEnd": 112}, "context": "RotatE [20] similarly, formulates the relations with a rotation and reduction in v h \u2022 v r -v t , however RotatE models rotation in the complex space.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00023889541625976562}, "created": {"value": false, "score": 1.4901161193847656e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9665851593017578}, "created": {"value": true, "score": 0.9469097256660461}, "shared": {"value": false, "score": 4.470348358154297e-06}}, "references": [{"label": "[20]", "normalizedForm": "[20]", "refKey": 20}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RotatE", "normalizedForm": "RotatE", "offsetStart": 136, "offsetEnd": 146}, "context": "Thus, many approaches have been proposed ranging from translation methods, e.g., Trans* family [3,13,29]; Rotation-based methods, e.g., RotatE [20]; Graph Convolutional methods, e.g., R-GCN [19], COMPGCN [25], and TransGCN [4]; and Walk-based methods , e.g., RDF2Vec [16]. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.000538945198059082}, "created": {"value": false, "score": 2.8073787689208984e-05}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9665851593017578}, "created": {"value": true, "score": 0.9469097256660461}, "shared": {"value": false, "score": 4.470348358154297e-06}}, "references": [{"label": "[20]", "normalizedForm": "[20]", "refKey": 20}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RotatE", "normalizedForm": "RotatE", "offsetStart": 312, "offsetEnd": 318}, "context": "Structure-based Embedding: A KG embedding z i = f : E, R \u2192 Z is attentive to network structure if it is a function of entities and relations such that it models the existence of a neighborhood of an entity e i using relations r i and other entities e j \u2208 E. Most Knowledge Graph embedding methods like QuatE and RotatE compute embeddings using the information describing connections between entities and, therefore, structure-based.", "mentionContextAttributes": {"used": {"value": false, "score": 0.007667243480682373}, "created": {"value": false, "score": 1.138448715209961e-05}, "shared": {"value": false, "score": 4.470348358154297e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9665851593017578}, "created": {"value": true, "score": 0.9469097256660461}, "shared": {"value": false, "score": 4.470348358154297e-06}}, "references": [{"label": "[20]", "normalizedForm": "[20]", "refKey": 20}]}], "references": [{"refKey": 20, "tei": "<biblStruct xml:id=\"b20\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">RotatE: Knowledge graph embedding by relational rotation in complex space</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Z</forename><surname>Sun</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Z</forename><forename type=\"middle\">H</forename><surname>Deng</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">J</forename><forename type=\"middle\">Y</forename><surname>Nie</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">J</forename><surname>Tang</surname></persName>\n\t\t</author>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"m\">ICLR</title>\n\t\t<imprint>\n\t\t\t<date>2019</date>\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}], "runtime": 80261, "id": "545e0d568f4678aae49513015f07d640e6f7c97a", "metadata": {"id": "545e0d568f4678aae49513015f07d640e6f7c97a"}, "original_file_path": "../../datalake/Samuel/SOFTware-Sync/data/xml_files/hal-03516350.grobid.tei.xml", "file_name": "hal-03516350.grobid.tei.xml"}