{"application": "software-mentions", "version": "0.8.0", "date": "2024-10-07T12:42+0000", "md5": "F3EB43F3E5E0D41FD429BF45E3B19A03", "mentions": [{"type": "software", "software-type": "software", "software-name": {"rawForm": "Kepler", "normalizedForm": "Kepler", "offsetStart": 0, "offsetEnd": 10}, "context": "Kepler [2] manages a persistent cache of intermediate data in the cloud, but does not take data transfers from remote servers into account. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0013613104820251465}, "created": {"value": false, "score": 2.288818359375e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0013613104820251465}, "created": {"value": false, "score": 2.288818359375e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Phenomenal", "normalizedForm": "Phenomenal", "offsetStart": 0, "offsetEnd": 10}, "context": "Phenomenal provides fully automatic workflows dedicated to 3D reconstruction, segmentation and tracking of plant organs, and light interception to estimate plant biomass in various scenarios of climatic change [15].", "mentionContextAttributes": {"used": {"value": false, "score": 3.4332275390625e-05}, "created": {"value": false, "score": 0.0003819465637207031}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9993667006492615}, "created": {"value": true, "score": 0.9842274785041809}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Phenomenal", "normalizedForm": "Phenomenal", "offsetStart": 0, "offsetEnd": 10}, "context": "Phenomenal is continuously evolving with new state-of-the-art methods that are added, thus yielding new biological insights (see Figure 1).", "mentionContextAttributes": {"used": {"value": false, "score": 0.0002345442771911621}, "created": {"value": false, "score": 0.05792635679244995}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9993667006492615}, "created": {"value": true, "score": 0.9842274785041809}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "VisTrails", "normalizedForm": "VisTrails", "offsetStart": 0, "offsetEnd": 13}, "context": "VisTrails [4] automatically makes the intermediate data persistent with the workflow definition. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0010786056518554688}, "created": {"value": false, "score": 2.0265579223632812e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0010786056518554688}, "created": {"value": false, "score": 2.7179718017578125e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "OpenAlea", "normalizedForm": "OpenAlea", "offsetStart": 3, "offsetEnd": 11}, "context": "In OpenAlea, this is provided by a lazy evaluation technique, i.e. the intermediate data is simply kept in memory after the execution of a workflow. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00048291683197021484}, "created": {"value": false, "score": 0.00011813640594482422}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.6281793713569641}, "created": {"value": true, "score": 0.9994321465492249}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Phenomenal", "normalizedForm": "Phenomenal", "offsetStart": 19, "offsetEnd": 29}, "context": "We implemented the Phenomenal workflow (see Section 2) using OpenAlea and deployed it on the different nodes using the Conda multi-OS package manager.", "mentionContextAttributes": {"used": {"value": true, "score": 0.6281793713569641}, "created": {"value": false, "score": 0.44193774461746216}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9993667006492615}, "created": {"value": true, "score": 0.9842274785041809}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "VisTrails", "normalizedForm": "VisTrails", "offsetStart": 20, "offsetEnd": 29}, "context": "With a plugin [20], VisTrails allows SWf execution in HPC environments, but does not benefit from reusing intermediate data. ", "mentionContextAttributes": {"used": {"value": false, "score": 4.565715789794922e-05}, "created": {"value": false, "score": 2.7179718017578125e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0010786056518554688}, "created": {"value": false, "score": 2.7179718017578125e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Phenomenal", "normalizedForm": "Phenomenal", "offsetStart": 24, "offsetEnd": 34}, "context": "We use a version of the Phenomenal workflow composed of 9 main activities.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9517061114311218}, "created": {"value": false, "score": 1.9788742065429688e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9993667006492615}, "created": {"value": true, "score": 0.9842274785041809}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "OpenAlea", "normalizedForm": "OpenAlea", "offsetStart": 35, "offsetEnd": 43}, "context": "We implemented our solution in the OpenAlea system and performed extensive experiments on real data with the Phenomenal workflow, with 11 Terabytes of raw data. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.04384487867355347}, "created": {"value": true, "score": 0.9842274785041809}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.6281793713569641}, "created": {"value": true, "score": 0.9994321465492249}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "OpenAlea Phenomenal", "normalizedForm": "OpenAlea Phenomenal", "offsetStart": 36, "offsetEnd": 55}, "context": "For this purpose, we developped the OpenAlea Phenomenal software package [3]. ", "mentionContextAttributes": {"used": {"value": false, "score": 7.104873657226562e-05}, "created": {"value": true, "score": 0.9999175071716309}, "shared": {"value": false, "score": 1.4662742614746094e-05}}, "documentContextAttributes": {"used": {"value": false, "score": 7.104873657226562e-05}, "created": {"value": true, "score": 0.9999175071716309}, "shared": {"value": false, "score": 1.4662742614746094e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ssh", "normalizedForm": "ssh", "offsetStart": 48, "offsetEnd": 51}, "context": "File transfer between nodes is implemented with ssh.", "mentionContextAttributes": {"used": {"value": false, "score": 0.004498302936553955}, "created": {"value": false, "score": 0.0067557692527771}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.004498302936553955}, "created": {"value": false, "score": 0.0067557692527771}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "OpenAlea", "normalizedForm": "OpenAlea", "offsetStart": 48, "offsetEnd": 56}, "context": "We evaluated our solution by implementing it in OpenAlea and performing extensive experiments on real data with a complex data-intensive application in plant phenotyping.", "mentionContextAttributes": {"used": {"value": false, "score": 0.08290290832519531}, "created": {"value": true, "score": 0.9994321465492249}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.6281793713569641}, "created": {"value": true, "score": 0.9994321465492249}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Phenomenal", "normalizedForm": "Phenomenal", "offsetStart": 49, "offsetEnd": 59}, "context": "We also conducted other experiments based on the Phenomenal use case, typical of practical situations.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9993667006492615}, "created": {"value": false, "score": 0.4174814224243164}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9993667006492615}, "created": {"value": true, "score": 0.9842274785041809}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Phenomenal", "normalizedForm": "Phenomenal", "offsetStart": 51, "offsetEnd": 61}, "context": "Figure 4 illustrates the preprocessing step on the Phenomenal SWf.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9720942974090576}, "created": {"value": false, "score": 3.8623809814453125e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9993667006492615}, "created": {"value": true, "score": 0.9842274785041809}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "OpenAlea", "normalizedForm": "OpenAlea", "offsetStart": 52, "offsetEnd": 60}, "context": "We evaluated our solution by implementing it in the OpenAlea system and performing extensive experiments on real data with a data-intensive application in plant phenotyping. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.15725356340408325}, "created": {"value": true, "score": 0.9985740184783936}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.6281793713569641}, "created": {"value": true, "score": 0.9994321465492249}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "OpenAlea", "normalizedForm": "OpenAlea", "offsetStart": 61, "offsetEnd": 69}, "context": "We implemented the Phenomenal workflow (see Section 2) using OpenAlea and deployed it on the different nodes using the Conda multi-OS package manager. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.6281793713569641}, "created": {"value": false, "score": 0.44193774461746216}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.6281793713569641}, "created": {"value": true, "score": 0.9994321465492249}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Cassandra", "normalizedForm": "Cassandra", "offsetStart": 69, "offsetEnd": 78}, "url": {"rawForm": "https://cassandra.apache. org", "normalizedForm": "https://cassandra.apache. org"}, "context": "The metadata repositories are stored on the same node (N2) using the Cassandra key-value store.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9269948601722717}, "created": {"value": false, "score": 3.5762786865234375e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9269948601722717}, "created": {"value": false, "score": 0.01324230432510376}, "shared": {"value": false, "score": 0.0011295676231384277}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "OpenAlea", "normalizedForm": "OpenAlea", "offsetStart": 73, "offsetEnd": 81}, "context": "Some examples of such SWfMS are Swift/T, Pegasus, SciCumulus, Kepler and OpenAlea, the latter being widely used in plant science for simulation and analysis.", "mentionContextAttributes": {"used": {"value": false, "score": 7.033348083496094e-05}, "created": {"value": false, "score": 0.0003522634506225586}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.6281793713569641}, "created": {"value": true, "score": 0.9994321465492249}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CacheScore", "normalizedForm": "CacheScore", "offsetStart": 77, "offsetEnd": 87}, "context": "Based on this data compression ratio, a cache provisioning score, denoted by CacheScore, is defined. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.07234090566635132}, "created": {"value": false, "score": 1.811981201171875e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.488284707069397}, "created": {"value": false, "score": 1.811981201171875e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Lustre", "normalizedForm": "Lustre", "offsetStart": 79, "offsetEnd": 85}, "context": "Files for raw and cached data are shared between the different nodes using the Lustre file system. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.8893843293190002}, "created": {"value": false, "score": 2.0384788513183594e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.8893843293190002}, "created": {"value": false, "score": 0.0004468560218811035}, "shared": {"value": false, "score": 0.0569615364074707}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Lustre", "normalizedForm": "Lustre", "offsetStart": 84, "offsetEnd": 90}, "context": "A good solution to store these files in a cluster is a distributed file system like Lustre (http://lustre.org) ", "mentionContextAttributes": {"used": {"value": false, "score": 4.374980926513672e-05}, "created": {"value": false, "score": 0.0004468560218811035}, "shared": {"value": false, "score": 0.0569615364074707}}, "documentContextAttributes": {"used": {"value": true, "score": 0.8893843293190002}, "created": {"value": false, "score": 0.0004468560218811035}, "shared": {"value": false, "score": 0.0569615364074707}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CacheScore", "normalizedForm": "CacheScore", "offsetStart": 88, "offsetEnd": 98}, "context": "Then, during each task t execution, the task manager calls the cache manager to compute CacheScore(t).", "mentionContextAttributes": {"used": {"value": false, "score": 0.488284707069397}, "created": {"value": false, "score": 1.4901161193847656e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.488284707069397}, "created": {"value": false, "score": 1.811981201171875e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Cassandra", "normalizedForm": "Cassandra", "offsetStart": 98, "offsetEnd": 107}, "url": {"rawForm": "https://cassandra.apache. org", "normalizedForm": "https://cassandra.apache. org", "offsetStart": 109, "offsetEnd": 138}, "context": "A good solution for implementing these metadata repositories is a modern key-value store, such as Cassandra (https://cassandra.apache. org), which provides efficient key-based access, scalability and fault-tolerance through replication in a shared-nothing cluster.", "mentionContextAttributes": {"used": {"value": false, "score": 4.184246063232422e-05}, "created": {"value": false, "score": 0.01324230432510376}, "shared": {"value": false, "score": 0.0011295676231384277}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9269948601722717}, "created": {"value": false, "score": 0.01324230432510376}, "shared": {"value": false, "score": 0.0011295676231384277}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Phenomenal", "normalizedForm": "Phenomenal", "offsetStart": 109, "offsetEnd": 119}, "context": "We implemented our solution in the OpenAlea system and performed extensive experiments on real data with the Phenomenal workflow, with 11 Terabytes of raw data.", "mentionContextAttributes": {"used": {"value": false, "score": 0.04384487867355347}, "created": {"value": true, "score": 0.9842274785041809}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9993667006492615}, "created": {"value": true, "score": 0.9842274785041809}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Conda", "normalizedForm": "Conda", "offsetStart": 119, "offsetEnd": 124}, "context": "We implemented the Phenomenal workflow (see Section 2) using OpenAlea and deployed it on the different nodes using the Conda multi-OS package manager. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.6281793713569641}, "created": {"value": false, "score": 0.44193774461746216}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.6281793713569641}, "created": {"value": false, "score": 0.44193774461746216}, "shared": {"value": false, "score": 1.1920928955078125e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Yarn", "normalizedForm": "Yarn", "offsetStart": 159, "offsetEnd": 163}, "context": "There are three kinds of nodes, master, compute and data nodes, which are all mapped to cluster nodes at configuration time, e.g. using a cluster manager like Yarn ( http://hadoop.apache.org). ", "mentionContextAttributes": {"used": {"value": false, "score": 0.004040539264678955}, "created": {"value": false, "score": 0.00014317035675048828}, "shared": {"value": false, "score": 7.987022399902344e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.004040539264678955}, "created": {"value": false, "score": 0.00014317035675048828}, "shared": {"value": false, "score": 7.987022399902344e-06}}}], "references": [], "runtime": 27424, "id": "9ec122c67f4881ecf45d810fa37e4fd922a3262c", "metadata": {"id": "9ec122c67f4881ecf45d810fa37e4fd922a3262c"}, "original_file_path": "../../datalake/Samuel/SOFTware-Sync/downloads/xml/hal-02174445.grobid.tei.xml", "file_name": "hal-02174445.grobid.tei.xml"}