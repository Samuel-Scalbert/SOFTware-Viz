{"application": "software-mentions", "version": "0.8.0", "date": "2024-10-07T11:54+0000", "md5": "726803027915F1F488DB169776AAC48C", "mentions": [{"type": "software", "software-type": "software", "software-name": {"rawForm": "TwoStack", "normalizedForm": "TwoStack", "offsetStart": 0, "offsetEnd": 8}, "context": "TwoStack pushes pairs of a partial aggregation and a streaming value into a back stack and pops such pairs from a front stack. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0009565949440002441}, "created": {"value": false, "score": 6.9141387939453125e-06}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9962450861930847}, "created": {"value": false, "score": 0.0005012750625610352}, "shared": {"value": false, "score": 1.3113021850585938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TwoStack", "normalizedForm": "TwoStack", "offsetStart": 0, "offsetEnd": 8}, "context": "TwoStack requires moving all elements of one stack to another one periodically, and the corresponding cost is linearly increasing w.r.t to the window size.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0004165768623352051}, "created": {"value": false, "score": 9.894371032714844e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9962450861930847}, "created": {"value": false, "score": 0.0005012750625610352}, "shared": {"value": false, "score": 1.3113021850585938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SlideSide", "normalizedForm": "SlideSide", "offsetStart": 0, "offsetEnd": 9}, "context": "SlideSide (Non-Inv) uses two stacks to ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0013079047203063965}, "created": {"value": false, "score": 2.1338462829589844e-05}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.010730564594268799}, "created": {"value": false, "score": 0.0005012750625610352}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SlickDeque", "normalizedForm": "SlickDeque", "offsetStart": 0, "offsetEnd": 10}, "context": "SlickDeque (Non-Inv) uses a deque to store streaming values, and not every streaming value will be added into the deque. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0002632737159729004}, "created": {"value": false, "score": 3.1948089599609375e-05}, "shared": {"value": false, "score": 5.960464477539062e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9962450861930847}, "created": {"value": false, "score": 0.0005012750625610352}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SlickDeque", "normalizedForm": "SlickDeque", "offsetStart": 0, "offsetEnd": 10}, "context": "SlickDeque shows the best performance in terms of throughput and latency [26] while TwoStack is slightly worse than SlickDeque but behaves better than the others [26,27,29].", "mentionContextAttributes": {"used": {"value": false, "score": 0.0751839280128479}, "created": {"value": false, "score": 8.58306884765625e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9962450861930847}, "created": {"value": false, "score": 0.0005012750625610352}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FlatFIT", "normalizedForm": "FlatFIT", "offsetStart": 0, "offsetEnd": 12}, "context": "FlatFIT [25] only recalculates window aggregation one time per \ud835\udc5b + 1 slides. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.013151168823242188}, "created": {"value": false, "score": 1.5497207641601562e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.013151168823242188}, "created": {"value": false, "score": 0.0005012750625610352}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "[25]", "normalizedForm": "[25]", "refKey": 23}, {"label": "[25]", "normalizedForm": "[25]", "refKey": 23}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SlickDeque", "normalizedForm": "SlickDeque", "offsetStart": 3, "offsetEnd": 13}, "context": "In SlickDeque, the deque needs to be traversed in the worst case.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0002757906913757324}, "created": {"value": false, "score": 2.3484230041503906e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9962450861930847}, "created": {"value": false, "score": 0.0005012750625610352}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Flink", "normalizedForm": "Flink", "offsetStart": 7, "offsetEnd": 12}, "context": "We use Flink 1.10.0 and Java 8 in this experiment.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9951704144477844}, "created": {"value": false, "score": 1.0728836059570312e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999512434005737}, "created": {"value": true, "score": 0.9751214385032654}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "references": [{"label": "6]", "normalizedForm": "6]", "refKey": 4}, {"label": "[3,", "normalizedForm": "[3", "refKey": 2}, {"label": "6]", "normalizedForm": "6]", "refKey": 4}, {"label": "[3,", "normalizedForm": "[3", "refKey": 2}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SlickDeque", "normalizedForm": "SlickDeque", "offsetStart": 16, "offsetEnd": 26}, "context": "However, unlike SlickDeque, PBA runs in constant time, which is also experimentally demonstrated in Section 5.1.1.", "mentionContextAttributes": {"used": {"value": false, "score": 0.000780940055847168}, "created": {"value": false, "score": 2.6226043701171875e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9962450861930847}, "created": {"value": false, "score": 0.0005012750625610352}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Apache Flink", "normalizedForm": "Apache Flink", "offsetStart": 16, "offsetEnd": 33}, "context": "For example, in Apache Flink [3,6], one can transform a DataStream into a KeyedStream with disjoint partitions, where a key will be assigned to a specific partition. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00013053417205810547}, "created": {"value": false, "score": 1.823902130126953e-05}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.001374363899230957}, "created": {"value": true, "score": 0.9983829259872437}, "shared": {"value": false, "score": 4.76837158203125e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TwoStack", "normalizedForm": "TwoStack", "offsetStart": 17, "offsetEnd": 25}, "context": "For instance, in TwoStack, the two stacks are interdependent.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0003134012222290039}, "created": {"value": false, "score": 0.00010824203491210938}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9962450861930847}, "created": {"value": false, "score": 0.0005012750625610352}, "shared": {"value": false, "score": 1.3113021850585938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TwoStack", "normalizedForm": "TwoStack", "offsetStart": 20, "offsetEnd": 28}, "context": "DABA [27] leverages TwoStack to gradually perform the flipping operation of TwoStack which amortizes its time to \ud835\udc42 (1).", "mentionContextAttributes": {"used": {"value": false, "score": 0.01314079761505127}, "created": {"value": false, "score": 2.7418136596679688e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9962450861930847}, "created": {"value": false, "score": 0.0005012750625610352}, "shared": {"value": false, "score": 1.3113021850585938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TwoStack", "normalizedForm": "TwoStack", "offsetStart": 20, "offsetEnd": 28}, "context": "As shown in Fig. 7, TwoStack has latency spikes periodically, and thus TwoStack does not perform well in terms of Max and Std.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0006057024002075195}, "created": {"value": false, "score": 2.8371810913085938e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9962450861930847}, "created": {"value": false, "score": 0.0005012750625610352}, "shared": {"value": false, "score": 1.3113021850585938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Apache", "normalizedForm": "Apache", "offsetStart": 22, "offsetEnd": 28}, "context": "We integrate PBA into Apache Flink [3,6], denoted as FPBA. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.025285661220550537}, "created": {"value": false, "score": 3.814697265625e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.025285661220550537}, "created": {"value": true, "score": 0.9751214385032654}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "references": [{"label": "6]", "normalizedForm": "6]", "refKey": 4, "offsetStart": 38311, "offsetEnd": 38313}, {"label": "[3,", "normalizedForm": "[3", "refKey": 2, "offsetStart": 38308, "offsetEnd": 38311}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Flink", "normalizedForm": "Flink", "offsetStart": 23, "offsetEnd": 28}, "context": "PBA is integrated into Flink through KeyedProcessFunction, i.e., a lowlevel operator in Flink. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0072498321533203125}, "created": {"value": false, "score": 5.5909156799316406e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999512434005737}, "created": {"value": true, "score": 0.9751214385032654}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "references": [{"label": "6]", "normalizedForm": "6]", "refKey": 4}, {"label": "[3,", "normalizedForm": "[3", "refKey": 2}, {"label": "6]", "normalizedForm": "6]", "refKey": 4}, {"label": "[3,", "normalizedForm": "[3", "refKey": 2}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TwoStack", "normalizedForm": "TwoStack", "offsetStart": 23, "offsetEnd": 35}, "context": "To our best knowledge, TwoStack [27], DABA [27], FlatFIT [25], SlickDeque (Non-Inv) [26] and SlideSide (Non-Inv) [29] are the most efficient state-of-the-art algorithms for computing non-invertible aggregations over FIFO windows. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00046050548553466797}, "created": {"value": false, "score": 0.0005012750625610352}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9962450861930847}, "created": {"value": false, "score": 0.0005012750625610352}, "shared": {"value": false, "score": 1.3113021850585938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SlickDeque", "normalizedForm": "SlickDeque", "offsetStart": 29, "offsetEnd": 39}, "context": "The worst time complexity of SlickDeque is \ud835\udc42 (\ud835\udc5b) while its amortized time is less than 2 because a new value will never be compared more than twice. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.011283516883850098}, "created": {"value": false, "score": 7.641315460205078e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9962450861930847}, "created": {"value": false, "score": 0.0005012750625610352}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Flink", "normalizedForm": "Flink", "offsetStart": 29, "offsetEnd": 39}, "context": "We integrate PBA into Apache Flink [3,6], denoted as FPBA. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.025285661220550537}, "created": {"value": false, "score": 3.814697265625e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999512434005737}, "created": {"value": true, "score": 0.9751214385032654}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "references": [{"label": "6]", "normalizedForm": "6]", "refKey": 4}, {"label": "[3,", "normalizedForm": "[3", "refKey": 2}, {"label": "6]", "normalizedForm": "6]", "refKey": 4}, {"label": "[3,", "normalizedForm": "[3", "refKey": 2}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TwoStack", "normalizedForm": "TwoStack", "offsetStart": 30, "offsetEnd": 38}, "context": "Specifically, [27] shows that TwoStack outperforms Recal, except in the case of very small window sizes, and TwoStack is always faster, up to 6\u00d7, than FlatFAT.", "mentionContextAttributes": {"used": {"value": false, "score": 0.027461767196655273}, "created": {"value": false, "score": 6.794929504394531e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9962450861930847}, "created": {"value": false, "score": 0.0005012750625610352}, "shared": {"value": false, "score": 1.3113021850585938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FlatFAT", "normalizedForm": "FlatFAT", "offsetStart": 31, "offsetEnd": 38}, "context": "Eager slicing of Scotty (using FlatFAT for merging) shows up to two orders of magnitudes reduction of latency, compared to lazy slicing (with Recal as the merging algorithm).", "mentionContextAttributes": {"used": {"value": false, "score": 0.026971280574798584}, "created": {"value": false, "score": 6.794929504394531e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.027461767196655273}, "created": {"value": false, "score": 0.2957446575164795}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "references": [{"label": "[28]", "normalizedForm": "[28]", "refKey": 26}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TwoStack", "normalizedForm": "TwoStack", "offsetStart": 31, "offsetEnd": 39}, "context": "In this experiment, we compare TwoStack, SlickDeque, SBA and PBA. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9943714737892151}, "created": {"value": false, "score": 0.0002905726432800293}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9962450861930847}, "created": {"value": false, "score": 0.0005012750625610352}, "shared": {"value": false, "score": 1.3113021850585938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Apache Flink", "normalizedForm": "Apache Flink", "offsetStart": 32, "offsetEnd": 44}, "context": "Moreover, we integrate PBA into Apache Flink and present the corresponding improvement in local cluster modes, respectively.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0013331174850463867}, "created": {"value": true, "score": 0.9983829259872437}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.001374363899230957}, "created": {"value": true, "score": 0.9983829259872437}, "shared": {"value": false, "score": 4.76837158203125e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TwoStack", "normalizedForm": "TwoStack", "offsetStart": 33, "offsetEnd": 41}, "context": "store partial aggregations, like TwoStack, but shares values between them.", "mentionContextAttributes": {"used": {"value": false, "score": 9.357929229736328e-05}, "created": {"value": false, "score": 9.417533874511719e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9962450861930847}, "created": {"value": false, "score": 0.0005012750625610352}, "shared": {"value": false, "score": 1.3113021850585938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SlickDeque", "normalizedForm": "SlickDeque", "offsetStart": 35, "offsetEnd": 45}, "context": "On the whole, we observe that both SlickDeque and PBA do not have latency spikes, and PBA performs better than SlickDeque.", "mentionContextAttributes": {"used": {"value": false, "score": 0.09755975008010864}, "created": {"value": false, "score": 0.00017327070236206055}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9962450861930847}, "created": {"value": false, "score": 0.0005012750625610352}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Flink", "normalizedForm": "Flink", "offsetStart": 36, "offsetEnd": 41}, "context": "We report the median throughput for Flink and FPBA.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999512434005737}, "created": {"value": false, "score": 2.7894973754882812e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999512434005737}, "created": {"value": true, "score": 0.9751214385032654}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "references": [{"label": "6]", "normalizedForm": "6]", "refKey": 4}, {"label": "[3,", "normalizedForm": "[3", "refKey": 2}, {"label": "6]", "normalizedForm": "6]", "refKey": 4}, {"label": "[3,", "normalizedForm": "[3", "refKey": 2}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TwoStack", "normalizedForm": "TwoStack", "offsetStart": 40, "offsetEnd": 48}, "context": "However, when the front stack is empty, TwoStack flips all items in the back stack onto the front stack requiring \ud835\udc42 (\ud835\udc5b) time. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0042906999588012695}, "created": {"value": false, "score": 3.230571746826172e-05}, "shared": {"value": false, "score": 1.3113021850585938e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9962450861930847}, "created": {"value": false, "score": 0.0005012750625610352}, "shared": {"value": false, "score": 1.3113021850585938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TwoStack", "normalizedForm": "TwoStack", "offsetStart": 40, "offsetEnd": 48}, "context": "This is why the periodical red spike of TwoStack for the case of 16384 is higher than the corresponding one for case of 8192, and similar for time-based window with a range of 2 hours compared to a range of 1 hour.", "mentionContextAttributes": {"used": {"value": true, "score": 0.6021375060081482}, "created": {"value": false, "score": 1.1682510375976562e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9962450861930847}, "created": {"value": false, "score": 0.0005012750625610352}, "shared": {"value": false, "score": 1.3113021850585938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SlickDeque", "normalizedForm": "SlickDeque", "offsetStart": 41, "offsetEnd": 51}, "context": "In this experiment, we compare TwoStack, SlickDeque, SBA and PBA. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9943714737892151}, "created": {"value": false, "score": 0.0002905726432800293}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9962450861930847}, "created": {"value": false, "score": 0.0005012750625610352}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Apache", "normalizedForm": "Apache", "offsetStart": 46, "offsetEnd": 52}, "context": "In addition, FPBA, an integration of PBA into Apache Flink, shows significant improvement in both local mode and cluster mode.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0004665851593017578}, "created": {"value": false, "score": 8.225440979003906e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.025285661220550537}, "created": {"value": true, "score": 0.9751214385032654}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "references": [{"label": "6]", "normalizedForm": "6]", "refKey": 4}, {"label": "[3,", "normalizedForm": "[3", "refKey": 2}, {"label": "6]", "normalizedForm": "6]", "refKey": 4}, {"label": "[3,", "normalizedForm": "[3", "refKey": 2}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TwoStack", "normalizedForm": "TwoStack", "offsetStart": 47, "offsetEnd": 55}, "context": "While, an operation similar to the flipping in TwoStack is still required, resulting in \ud835\udc42 (\ud835\udc5b) worst-case time.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00019282102584838867}, "created": {"value": false, "score": 0.0002887845039367676}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9962450861930847}, "created": {"value": false, "score": 0.0005012750625610352}, "shared": {"value": false, "score": 1.3113021850585938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FlatFIT", "normalizedForm": "FlatFIT", "offsetStart": 49, "offsetEnd": 56}, "context": "To our best knowledge, TwoStack [27], DABA [27], FlatFIT [25], SlickDeque (Non-Inv) [26] and SlideSide (Non-Inv) [29] are the most efficient state-of-the-art algorithms for computing non-invertible aggregations over FIFO windows.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00046050548553466797}, "created": {"value": false, "score": 0.0005012750625610352}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.013151168823242188}, "created": {"value": false, "score": 0.0005012750625610352}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "[25]", "normalizedForm": "[25]", "refKey": 23, "offsetStart": 11237, "offsetEnd": 11241}, {"label": "[25]", "normalizedForm": "[25]", "refKey": 23, "offsetStart": 11237, "offsetEnd": 11241}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Flink", "normalizedForm": "Flink", "offsetStart": 52, "offsetEnd": 57}, "context": "In Fig. 8 (a), we observe the throughput of FPBA or Flink linearly increases up to 3 parallel instances (called parallelism in Flink).", "mentionContextAttributes": {"used": {"value": true, "score": 0.5185089111328125}, "created": {"value": false, "score": 2.193450927734375e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999512434005737}, "created": {"value": true, "score": 0.9751214385032654}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "references": [{"label": "6]", "normalizedForm": "6]", "refKey": 4}, {"label": "[3,", "normalizedForm": "[3", "refKey": 2}, {"label": "6]", "normalizedForm": "6]", "refKey": 4}, {"label": "[3,", "normalizedForm": "[3", "refKey": 2}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Flink", "normalizedForm": "Flink", "offsetStart": 53, "offsetEnd": 58}, "context": "In addition, FPBA, an integration of PBA into Apache Flink, shows significant improvement in both local mode and cluster mode.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0004665851593017578}, "created": {"value": false, "score": 8.225440979003906e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999512434005737}, "created": {"value": true, "score": 0.9751214385032654}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "references": [{"label": "6]", "normalizedForm": "6]", "refKey": 4}, {"label": "[3,", "normalizedForm": "[3", "refKey": 2}, {"label": "6]", "normalizedForm": "6]", "refKey": 4}, {"label": "[3,", "normalizedForm": "[3", "refKey": 2}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Flink", "normalizedForm": "Flink", "offsetStart": 53, "offsetEnd": 58}, "context": "Experiment Setup: We run the cluster experiment at a Flink cluster having 1 master node and 6 worker nodes running Ubuntu server 16.01.3", "mentionContextAttributes": {"used": {"value": true, "score": 0.9966272711753845}, "created": {"value": false, "score": 0.00732266902923584}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999512434005737}, "created": {"value": true, "score": 0.9751214385032654}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "references": [{"label": "6]", "normalizedForm": "6]", "refKey": 4}, {"label": "[3,", "normalizedForm": "[3", "refKey": 2}, {"label": "6]", "normalizedForm": "6]", "refKey": 4}, {"label": "[3,", "normalizedForm": "[3", "refKey": 2}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Flink", "normalizedForm": "Flink", "offsetStart": 53, "offsetEnd": 58}, "context": "In Fig. 8 (b), we observe the throughput of FPBA and Flink linearly scale up w.r.t more nodes used in a cluster.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9844478368759155}, "created": {"value": false, "score": 4.410743713378906e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999512434005737}, "created": {"value": true, "score": 0.9751214385032654}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "references": [{"label": "6]", "normalizedForm": "6]", "refKey": 4}, {"label": "[3,", "normalizedForm": "[3", "refKey": 2}, {"label": "6]", "normalizedForm": "6]", "refKey": 4}, {"label": "[3,", "normalizedForm": "[3", "refKey": 2}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SlickDeque", "normalizedForm": "SlickDeque", "offsetStart": 54, "offsetEnd": 64}, "context": "For example, when computing max over sliding windows, SlickDeque continuously replaces the end of a deque \ud835\udc63 \u2032 using a new value \ud835\udc63 if \ud835\udc63 > \ud835\udc63 \u2032 . ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0021009445190429688}, "created": {"value": false, "score": 1.4424324035644531e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9962450861930847}, "created": {"value": false, "score": 0.0005012750625610352}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Flink", "normalizedForm": "Flink", "offsetStart": 59, "offsetEnd": 64}, "context": "We run the local experiment only at the master node of the Flink cluster.", "mentionContextAttributes": {"used": {"value": true, "score": 0.8982461094856262}, "created": {"value": true, "score": 0.5464661717414856}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999512434005737}, "created": {"value": true, "score": 0.9751214385032654}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "references": [{"label": "6]", "normalizedForm": "6]", "refKey": 4}, {"label": "[3,", "normalizedForm": "[3", "refKey": 2}, {"label": "6]", "normalizedForm": "6]", "refKey": 4}, {"label": "[3,", "normalizedForm": "[3", "refKey": 2}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Flink", "normalizedForm": "Flink", "offsetStart": 61, "offsetEnd": 66}, "context": "Each parallel instance of the execution pipeline of FPBA, or Flink, contains 2 tasks, i.e., reading data and computing SWAG.", "mentionContextAttributes": {"used": {"value": false, "score": 0.009891152381896973}, "created": {"value": false, "score": 3.981590270996094e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999512434005737}, "created": {"value": true, "score": 0.9751214385032654}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "references": [{"label": "6]", "normalizedForm": "6]", "refKey": 4}, {"label": "[3,", "normalizedForm": "[3", "refKey": 2}, {"label": "6]", "normalizedForm": "6]", "refKey": 4}, {"label": "[3,", "normalizedForm": "[3", "refKey": 2}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SlickDeque", "normalizedForm": "SlickDeque", "offsetStart": 63, "offsetEnd": 73}, "context": "To our best knowledge, TwoStack [27], DABA [27], FlatFIT [25], SlickDeque (Non-Inv) [26] and SlideSide (Non-Inv) [29] are the most efficient state-of-the-art algorithms for computing non-invertible aggregations over FIFO windows.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00046050548553466797}, "created": {"value": false, "score": 0.0005012750625610352}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9962450861930847}, "created": {"value": false, "score": 0.0005012750625610352}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TwoStack", "normalizedForm": "TwoStack", "offsetStart": 67, "offsetEnd": 75}, "context": "When \ud835\udc5f \u2a7e 2 15 , the throughput of PBA is 2.5\u00d7 higher than that of TwoStack and 4\u00d7 higher than that SlickDeque.", "mentionContextAttributes": {"used": {"value": false, "score": 0.1413644552230835}, "created": {"value": false, "score": 2.86102294921875e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9962450861930847}, "created": {"value": false, "score": 0.0005012750625610352}, "shared": {"value": false, "score": 1.3113021850585938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Flink", "normalizedForm": "Flink", "offsetStart": 70, "offsetEnd": 75}, "context": "To support parallel tasks of PBA, a thread pool for each task slot in Flink is launched, which will be used to compute the \ud835\udc59\ud835\udc50\ud835\udc60 buffers for all key-value pairs associated with the corresponding task slot. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.025933265686035156}, "created": {"value": false, "score": 0.0031589269638061523}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999512434005737}, "created": {"value": true, "score": 0.9751214385032654}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "references": [{"label": "6]", "normalizedForm": "6]", "refKey": 4}, {"label": "[3,", "normalizedForm": "[3", "refKey": 2}, {"label": "6]", "normalizedForm": "6]", "refKey": 4}, {"label": "[3,", "normalizedForm": "[3", "refKey": 2}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TwoStack", "normalizedForm": "TwoStack", "offsetStart": 71, "offsetEnd": 79}, "context": "As shown in Fig. 7, TwoStack has latency spikes periodically, and thus TwoStack does not perform well in terms of Max and Std.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0006057024002075195}, "created": {"value": false, "score": 2.8371810913085938e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9962450861930847}, "created": {"value": false, "score": 0.0005012750625610352}, "shared": {"value": false, "score": 1.3113021850585938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TwoStack", "normalizedForm": "TwoStack", "offsetStart": 76, "offsetEnd": 84}, "context": "DABA [27] leverages TwoStack to gradually perform the flipping operation of TwoStack which amortizes its time to \ud835\udc42 (1). ", "mentionContextAttributes": {"used": {"value": false, "score": 0.01314079761505127}, "created": {"value": false, "score": 2.7418136596679688e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9962450861930847}, "created": {"value": false, "score": 0.0005012750625610352}, "shared": {"value": false, "score": 1.3113021850585938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TwoStack", "normalizedForm": "TwoStack", "offsetStart": 84, "offsetEnd": 92}, "context": "SlickDeque shows the best performance in terms of throughput and latency [26] while TwoStack is slightly worse than SlickDeque but behaves better than the others [26,27,29].", "mentionContextAttributes": {"used": {"value": false, "score": 0.0751839280128479}, "created": {"value": false, "score": 8.58306884765625e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9962450861930847}, "created": {"value": false, "score": 0.0005012750625610352}, "shared": {"value": false, "score": 1.3113021850585938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Flink", "normalizedForm": "Flink", "offsetStart": 86, "offsetEnd": 91}, "context": "Our empirical evaluation shows that FPBA scales well as increasing the parallelism of Flink in both local and cluster modes.", "mentionContextAttributes": {"used": {"value": false, "score": 0.48023736476898193}, "created": {"value": false, "score": 0.00014793872833251953}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999512434005737}, "created": {"value": true, "score": 0.9751214385032654}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "references": [{"label": "6]", "normalizedForm": "6]", "refKey": 4}, {"label": "[3,", "normalizedForm": "[3", "refKey": 2}, {"label": "6]", "normalizedForm": "6]", "refKey": 4}, {"label": "[3,", "normalizedForm": "[3", "refKey": 2}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Flink", "normalizedForm": "Flink", "offsetStart": 88, "offsetEnd": 93}, "context": "PBA is integrated into Flink through KeyedProcessFunction, i.e., a lowlevel operator in Flink. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0072498321533203125}, "created": {"value": false, "score": 5.5909156799316406e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999512434005737}, "created": {"value": true, "score": 0.9751214385032654}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "references": [{"label": "6]", "normalizedForm": "6]", "refKey": 4}, {"label": "[3,", "normalizedForm": "[3", "refKey": 2}, {"label": "6]", "normalizedForm": "6]", "refKey": 4}, {"label": "[3,", "normalizedForm": "[3", "refKey": 2}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "AthenaX", "normalizedForm": "AthenaX", "offsetStart": 92, "offsetEnd": 99}, "url": {"rawForm": "https://eng.uber.com/athenax", "normalizedForm": "https://eng.uber.com/athenax", "offsetStart": 141, "offsetEnd": 169}, "context": "In particular, aggregations [23], having the inherent property of summarizing information 1 AthenaX: SQL-based streaming analytics platform, https://eng.uber.com/athenax ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00048410892486572266}, "created": {"value": false, "score": 7.62939453125e-06}, "shared": {"value": false, "score": 0.007478177547454834}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00048410892486572266}, "created": {"value": false, "score": 7.62939453125e-06}, "shared": {"value": false, "score": 0.007478177547454834}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SlideSide", "normalizedForm": "SlideSide", "offsetStart": 93, "offsetEnd": 102}, "context": "To our best knowledge, TwoStack [27], DABA [27], FlatFIT [25], SlickDeque (Non-Inv) [26] and SlideSide (Non-Inv) [29] are the most efficient state-of-the-art algorithms for computing non-invertible aggregations over FIFO windows.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00046050548553466797}, "created": {"value": false, "score": 0.0005012750625610352}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.010730564594268799}, "created": {"value": false, "score": 0.0005012750625610352}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MomentSketch", "normalizedForm": "MomentSketch", "offsetStart": 95, "offsetEnd": 107}, "context": "To further study the latency of different algorithms, we also test a more complex aggregation, MomentSketch = (\ud835\udc5a\ud835\udc56\ud835\udc5b, \ud835\udc5a\ud835\udc4e\ud835\udc65, \ud835\udc60\ud835\udc62\ud835\udc5a, \ud835\udc50\ud835\udc5c\ud835\udc62\ud835\udc5b\ud835\udc61, \u00cd \ud835\udc65 \ud835\udc56 , ... [9] with \ud835\udc59 = 10, which can approximate percentiles. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.34891802072525024}, "created": {"value": false, "score": 2.562999725341797e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.34891802072525024}, "created": {"value": false, "score": 2.562999725341797e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SlickDeque", "normalizedForm": "SlickDeque", "offsetStart": 100, "offsetEnd": 110}, "context": "When \ud835\udc5f \u2a7e 2 15 , the throughput of PBA is 2.5\u00d7 higher than that of TwoStack and 4\u00d7 higher than that SlickDeque.", "mentionContextAttributes": {"used": {"value": false, "score": 0.1413644552230835}, "created": {"value": false, "score": 2.86102294921875e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9962450861930847}, "created": {"value": false, "score": 0.0005012750625610352}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Apache Flink", "normalizedForm": "Apache Flink", "offsetStart": 101, "offsetEnd": 116}, "context": "The other is the continuous processing model, where streaming values are processed one by one, e.g., Apache Flink [3]. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.001374363899230957}, "created": {"value": false, "score": 7.033348083496094e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.001374363899230957}, "created": {"value": true, "score": 0.9983829259872437}, "shared": {"value": false, "score": 4.76837158203125e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Flink", "normalizedForm": "Flink", "offsetStart": 105, "offsetEnd": 110}, "context": "The master node has 6 virtual CPU cores of Intel XEON 3GHz, and 16GB main memory, and the job manager of Flink is configured with 6GB of memory. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.043527841567993164}, "created": {"value": false, "score": 0.00011718273162841797}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999512434005737}, "created": {"value": true, "score": 0.9751214385032654}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "references": [{"label": "6]", "normalizedForm": "6]", "refKey": 4}, {"label": "[3,", "normalizedForm": "[3", "refKey": 2}, {"label": "6]", "normalizedForm": "6]", "refKey": 4}, {"label": "[3,", "normalizedForm": "[3", "refKey": 2}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Apache", "normalizedForm": "Apache", "offsetStart": 106, "offsetEnd": 112}, "context": "\u2022 To show the benefit of our approach in modern streamprocessing frameworks, we implemented PBA on top of Apache Flink [3,6], called FPBA. ", "mentionContextAttributes": {"used": {"value": false, "score": 9.40561294555664e-05}, "created": {"value": true, "score": 0.9751214385032654}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.025285661220550537}, "created": {"value": true, "score": 0.9751214385032654}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "references": [{"label": "6]", "normalizedForm": "6]", "refKey": 4, "offsetStart": 6914, "offsetEnd": 6916}, {"label": "[3,", "normalizedForm": "[3", "refKey": 2, "offsetStart": 6911, "offsetEnd": 6914}, {"label": "6]", "normalizedForm": "6]", "refKey": 4, "offsetStart": 6914, "offsetEnd": 6916}, {"label": "[3,", "normalizedForm": "[3", "refKey": 2, "offsetStart": 6911, "offsetEnd": 6914}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Flink", "normalizedForm": "Flink", "offsetStart": 107, "offsetEnd": 112}, "context": "Every worker node has 4 virtual CPU cores of Intel XEON 3GHz, and 8GB main memory, and the task manager of Flink is configured with 6GB of memory. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.022055864334106445}, "created": {"value": false, "score": 0.00010669231414794922}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999512434005737}, "created": {"value": true, "score": 0.9751214385032654}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "references": [{"label": "6]", "normalizedForm": "6]", "refKey": 4}, {"label": "[3,", "normalizedForm": "[3", "refKey": 2}, {"label": "6]", "normalizedForm": "6]", "refKey": 4}, {"label": "[3,", "normalizedForm": "[3", "refKey": 2}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TwoStack", "normalizedForm": "TwoStack", "offsetStart": 109, "offsetEnd": 117}, "context": "Specifically, [27] shows that TwoStack outperforms Recal, except in the case of very small window sizes, and TwoStack is always faster, up to 6\u00d7, than FlatFAT.", "mentionContextAttributes": {"used": {"value": false, "score": 0.027461767196655273}, "created": {"value": false, "score": 6.794929504394531e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9962450861930847}, "created": {"value": false, "score": 0.0005012750625610352}, "shared": {"value": false, "score": 1.3113021850585938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SlickDeque", "normalizedForm": "SlickDeque", "offsetStart": 111, "offsetEnd": 121}, "context": "On the whole, we observe that both SlickDeque and PBA do not have latency spikes, and PBA performs better than SlickDeque.", "mentionContextAttributes": {"used": {"value": false, "score": 0.09755975008010864}, "created": {"value": false, "score": 0.00017327070236206055}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9962450861930847}, "created": {"value": false, "score": 0.0005012750625610352}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Flink", "normalizedForm": "Flink", "offsetStart": 113, "offsetEnd": 118}, "context": "\u2022 To show the benefit of our approach in modern streamprocessing frameworks, we implemented PBA on top of Apache Flink [3,6], called FPBA.", "mentionContextAttributes": {"used": {"value": false, "score": 9.40561294555664e-05}, "created": {"value": true, "score": 0.9751214385032654}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999512434005737}, "created": {"value": true, "score": 0.9751214385032654}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "references": [{"label": "6]", "normalizedForm": "6]", "refKey": 4, "offsetStart": 6914, "offsetEnd": 6916}, {"label": "[3,", "normalizedForm": "[3", "refKey": 2, "offsetStart": 6911, "offsetEnd": 6914}, {"label": "6]", "normalizedForm": "6]", "refKey": 4, "offsetStart": 6914, "offsetEnd": 6916}, {"label": "[3,", "normalizedForm": "[3", "refKey": 2, "offsetStart": 6911, "offsetEnd": 6914}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SlickDeque", "normalizedForm": "SlickDeque", "offsetStart": 113, "offsetEnd": 127}, "context": "The real-world dataset is the DEBS12 Grand Challenge Manufacturing Equipment Dataset [15], which is also used by SlickDeque [26]. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.823982298374176}, "created": {"value": false, "score": 7.510185241699219e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9962450861930847}, "created": {"value": false, "score": 0.0005012750625610352}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SlickDeque", "normalizedForm": "SlickDeque", "offsetStart": 116, "offsetEnd": 126}, "context": "SlickDeque shows the best performance in terms of throughput and latency [26] while TwoStack is slightly worse than SlickDeque but behaves better than the others [26,27,29].", "mentionContextAttributes": {"used": {"value": false, "score": 0.0751839280128479}, "created": {"value": false, "score": 8.58306884765625e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9962450861930847}, "created": {"value": false, "score": 0.0005012750625610352}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SlickDeque", "normalizedForm": "SlickDeque", "offsetStart": 120, "offsetEnd": 130}, "context": "State-of-the-Art Algorithms: In our experimental evaluation we compare PBA to the two best state-of-the-art algorithms: SlickDeque [26] and TwoStack [27].", "mentionContextAttributes": {"used": {"value": true, "score": 0.5839062333106995}, "created": {"value": false, "score": 0.0002967715263366699}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9962450861930847}, "created": {"value": false, "score": 0.0005012750625610352}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FlatFAT", "normalizedForm": "FlatFAT", "offsetStart": 126, "offsetEnd": 133}, "context": "First of all, latency can be reduced, as demonstrated in Cutty and Scotty through combining their slicing techniques with the FlatFAT [28] merging algorithm.", "mentionContextAttributes": {"used": {"value": false, "score": 9.644031524658203e-05}, "created": {"value": false, "score": 5.602836608886719e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.027461767196655273}, "created": {"value": false, "score": 0.2957446575164795}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "references": [{"label": "[28]", "normalizedForm": "[28]", "refKey": 26, "offsetStart": 15327, "offsetEnd": 15331}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Flink", "normalizedForm": "Flink", "offsetStart": 127, "offsetEnd": 132}, "context": "We compute \ud835\udc5a\ud835\udc4e\ud835\udc65 over count-based sliding windows with a slide of 1 and a window size of 2 10 , and capture the throughput of Flink and FPBA by using a different degree of parallelism in local mode, and a different number of nodes in cluster mode. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9907317757606506}, "created": {"value": false, "score": 7.62939453125e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999512434005737}, "created": {"value": true, "score": 0.9751214385032654}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "references": [{"label": "6]", "normalizedForm": "6]", "refKey": 4}, {"label": "[3,", "normalizedForm": "[3", "refKey": 2}, {"label": "6]", "normalizedForm": "6]", "refKey": 4}, {"label": "[3,", "normalizedForm": "[3", "refKey": 2}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Flink", "normalizedForm": "Flink", "offsetStart": 127, "offsetEnd": 132}, "context": "In Fig. 8 (a), we observe the throughput of FPBA or Flink linearly increases up to 3 parallel instances (called parallelism in Flink).", "mentionContextAttributes": {"used": {"value": true, "score": 0.5185089111328125}, "created": {"value": false, "score": 2.193450927734375e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999512434005737}, "created": {"value": true, "score": 0.9751214385032654}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "references": [{"label": "6]", "normalizedForm": "6]", "refKey": 4}, {"label": "[3,", "normalizedForm": "[3", "refKey": 2}, {"label": "6]", "normalizedForm": "6]", "refKey": 4}, {"label": "[3,", "normalizedForm": "[3", "refKey": 2}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Apache Spark", "normalizedForm": "Apache Spark", "offsetStart": 128, "offsetEnd": 143}, "context": "One is the micro-batch processing model, where a micro batch containing a finite subset of values is processed at a time, e.g., Apache Spark [4]. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00023180246353149414}, "created": {"value": false, "score": 2.5272369384765625e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00023180246353149414}, "created": {"value": false, "score": 2.5272369384765625e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TwoStack", "normalizedForm": "TwoStack", "offsetStart": 134, "offsetEnd": 142}, "context": "PBA shows the overall best throughput with large window sizes, and SBA (the sequential version of PBA) shows a higher throughput than TwoStack and SlickDeque.", "mentionContextAttributes": {"used": {"value": false, "score": 0.01729220151901245}, "created": {"value": false, "score": 8.463859558105469e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9962450861930847}, "created": {"value": false, "score": 0.0005012750625610352}, "shared": {"value": false, "score": 1.3113021850585938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TwoStack", "normalizedForm": "TwoStack", "offsetStart": 137, "offsetEnd": 145}, "context": "In addition to its low time and space complexities, one of the main advantages of PBA compared to the state-of-the-art algorithms, e.g., TwoStack [27], DABA [27], FlatFIT [25], SlickDeque (Non-Inv) [26], and SlideSide (Non-Inv) [29], is that the latter algorithms cannot use additional threads to get performance gains, i.e., computing intermediate results in parallel.", "mentionContextAttributes": {"used": {"value": false, "score": 0.010730564594268799}, "created": {"value": false, "score": 9.298324584960938e-06}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9962450861930847}, "created": {"value": false, "score": 0.0005012750625610352}, "shared": {"value": false, "score": 1.3113021850585938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SlickDeque", "normalizedForm": "SlickDeque", "offsetStart": 137, "offsetEnd": 147}, "context": "Note that, although DABA [27] has a constant time complexity in the worst case, it does not show a better performance result compared to SlickDeque in terms of throughput and latency [26], or TwoStack in terms of throughput [27]. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.013668656349182129}, "created": {"value": false, "score": 7.867813110351562e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9962450861930847}, "created": {"value": false, "score": 0.0005012750625610352}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TwoStack", "normalizedForm": "TwoStack", "offsetStart": 140, "offsetEnd": 148}, "context": "State-of-the-Art Algorithms: In our experimental evaluation we compare PBA to the two best state-of-the-art algorithms: SlickDeque [26] and TwoStack [27].", "mentionContextAttributes": {"used": {"value": true, "score": 0.5839064717292786}, "created": {"value": false, "score": 0.0002967715263366699}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9962450861930847}, "created": {"value": false, "score": 0.0005012750625610352}, "shared": {"value": false, "score": 1.3113021850585938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SlickDeque", "normalizedForm": "SlickDeque", "offsetStart": 147, "offsetEnd": 157}, "context": "PBA shows the overall best throughput with large window sizes, and SBA (the sequential version of PBA) shows a higher throughput than TwoStack and SlickDeque.", "mentionContextAttributes": {"used": {"value": false, "score": 0.01729220151901245}, "created": {"value": false, "score": 8.463859558105469e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9962450861930847}, "created": {"value": false, "score": 0.0005012750625610352}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FlatFAT", "normalizedForm": "FlatFAT", "offsetStart": 151, "offsetEnd": 158}, "context": "Specifically, [27] shows that TwoStack outperforms Recal, except in the case of very small window sizes, and TwoStack is always faster, up to 6\u00d7, than FlatFAT.", "mentionContextAttributes": {"used": {"value": false, "score": 0.027461767196655273}, "created": {"value": false, "score": 6.794929504394531e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.027461767196655273}, "created": {"value": false, "score": 0.2957446575164795}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "references": [{"label": "[28]", "normalizedForm": "[28]", "refKey": 26}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FlatFIT", "normalizedForm": "FlatFIT", "offsetStart": 163, "offsetEnd": 170}, "context": "In addition to its low time and space complexities, one of the main advantages of PBA compared to the state-of-the-art algorithms, e.g., TwoStack [27], DABA [27], FlatFIT [25], SlickDeque (Non-Inv) [26], and SlideSide (Non-Inv) [29], is that the latter algorithms cannot use additional threads to get performance gains, i.e., computing intermediate results in parallel.", "mentionContextAttributes": {"used": {"value": false, "score": 0.010730564594268799}, "created": {"value": false, "score": 9.298324584960938e-06}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.013151168823242188}, "created": {"value": false, "score": 0.0005012750625610352}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "[25]", "normalizedForm": "[25]", "refKey": 23, "offsetStart": 13921, "offsetEnd": 13925}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SlickDeque", "normalizedForm": "SlickDeque", "offsetStart": 163, "offsetEnd": 173}, "context": "As shown in Table 1, which contains complexity analysis of PBA described in Section 4.4, PBA is the best for time and space complexity, except the comparison with SlickDeque in amortized time.", "mentionContextAttributes": {"used": {"value": false, "score": 0.003645658493041992}, "created": {"value": false, "score": 9.417533874511719e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9962450861930847}, "created": {"value": false, "score": 0.0005012750625610352}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SlickDeque", "normalizedForm": "SlickDeque", "offsetStart": 177, "offsetEnd": 187}, "context": "In addition to its low time and space complexities, one of the main advantages of PBA compared to the state-of-the-art algorithms, e.g., TwoStack [27], DABA [27], FlatFIT [25], SlickDeque (Non-Inv) [26], and SlideSide (Non-Inv) [29], is that the latter algorithms cannot use additional threads to get performance gains, i.e., computing intermediate results in parallel.", "mentionContextAttributes": {"used": {"value": false, "score": 0.010730564594268799}, "created": {"value": false, "score": 9.298324584960938e-06}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9962450861930847}, "created": {"value": false, "score": 0.0005012750625610352}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TwoStack", "normalizedForm": "TwoStack", "offsetStart": 184, "offsetEnd": 192}, "context": "Our throughput results for this case are shown in Fig. 4. PBA shows the best throughput with large window sizes, and SBA (the sequential version of PBA) shows a higher throughput than TwoStack and SlickDeque, even for small window sizes.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9962450861930847}, "created": {"value": false, "score": 6.67572021484375e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9962450861930847}, "created": {"value": false, "score": 0.0005012750625610352}, "shared": {"value": false, "score": 1.3113021850585938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MomentSketch", "normalizedForm": "MomentSketch", "offsetStart": 184, "offsetEnd": 196}, "context": "The workload consists in: (i) computing the aggregation Max over count-based windows with a slide of 1 and ranges of 2 13 and 2 14 respectively, and (ii) computing the aggregation MS (MomentSketch) over time-based windows with a slide of 1 second (containing around 100 streaming values) and ranges of 1 and 2 hours respectively.", "mentionContextAttributes": {"used": {"value": false, "score": 0.1893591284751892}, "created": {"value": false, "score": 1.430511474609375e-06}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.34891802072525024}, "created": {"value": false, "score": 2.562999725341797e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TwoStack", "normalizedForm": "TwoStack", "offsetStart": 192, "offsetEnd": 200}, "context": "Note that, although DABA [27] has a constant time complexity in the worst case, it does not show a better performance result compared to SlickDeque in terms of throughput and latency [26], or TwoStack in terms of throughput [27]. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.013668656349182129}, "created": {"value": false, "score": 7.867813110351562e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9962450861930847}, "created": {"value": false, "score": 0.0005012750625610352}, "shared": {"value": false, "score": 1.3113021850585938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SlickDeque", "normalizedForm": "SlickDeque", "offsetStart": 197, "offsetEnd": 207}, "context": "Our throughput results for this case are shown in Fig. 4. PBA shows the best throughput with large window sizes, and SBA (the sequential version of PBA) shows a higher throughput than TwoStack and SlickDeque, even for small window sizes.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9962450861930847}, "created": {"value": false, "score": 6.67572021484375e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9962450861930847}, "created": {"value": false, "score": 0.0005012750625610352}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SlickDeque", "normalizedForm": "SlickDeque", "offsetStart": 202, "offsetEnd": 212}, "context": "As it can be observed, PBA has the overall best latency results in terms of all statistical summaries, especially for the Max and Std metrics shown in Table 2 and3, which corresponds to the worst case  SlickDeque has almost the same latency as TwoStack for Avg, but much better than TwoStack for Max and Std.", "mentionContextAttributes": {"used": {"value": false, "score": 0.31415629386901855}, "created": {"value": false, "score": 2.6226043701171875e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9962450861930847}, "created": {"value": false, "score": 0.0005012750625610352}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SlideSide", "normalizedForm": "SlideSide", "offsetStart": 208, "offsetEnd": 217}, "context": "In addition to its low time and space complexities, one of the main advantages of PBA compared to the state-of-the-art algorithms, e.g., TwoStack [27], DABA [27], FlatFIT [25], SlickDeque (Non-Inv) [26], and SlideSide (Non-Inv) [29], is that the latter algorithms cannot use additional threads to get performance gains, i.e., computing intermediate results in parallel.", "mentionContextAttributes": {"used": {"value": false, "score": 0.010730564594268799}, "created": {"value": false, "score": 9.298324584960938e-06}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.010730564594268799}, "created": {"value": false, "score": 0.0005012750625610352}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TwoStack", "normalizedForm": "TwoStack", "offsetStart": 244, "offsetEnd": 252}, "context": "As it can be observed, PBA has the overall best latency results in terms of all statistical summaries, especially for the Max and Std metrics shown in Table 2 and3, which corresponds to the worst case  SlickDeque has almost the same latency as TwoStack for Avg, but much better than TwoStack for Max and Std.", "mentionContextAttributes": {"used": {"value": false, "score": 0.31415629386901855}, "created": {"value": false, "score": 2.6226043701171875e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9962450861930847}, "created": {"value": false, "score": 0.0005012750625610352}, "shared": {"value": false, "score": 1.3113021850585938e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FlatFAT", "normalizedForm": "FlatFAT", "offsetStart": 275, "offsetEnd": 282}, "context": "The idea is to replace the array structure of \ud835\udc59\ud835\udc50\ud835\udc60 buffers with a tree structure, where each leaf node stores a slice aggregation and any intermediate node stores partial aggregation of all its children (e.g., in the spirit of the array-based binary heap implementation of FlatFAT). ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00015938282012939453}, "created": {"value": false, "score": 0.2957446575164795}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.027461767196655273}, "created": {"value": false, "score": 0.2957446575164795}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "references": [{"label": "[28]", "normalizedForm": "[28]", "refKey": 26}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TwoStack", "normalizedForm": "TwoStack", "offsetStart": 283, "offsetEnd": 291}, "context": "As it can be observed, PBA has the overall best latency results in terms of all statistical summaries, especially for the Max and Std metrics shown in Table 2 and3, which corresponds to the worst case  SlickDeque has almost the same latency as TwoStack for Avg, but much better than TwoStack for Max and Std.", "mentionContextAttributes": {"used": {"value": false, "score": 0.31415629386901855}, "created": {"value": false, "score": 2.6226043701171875e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9962450861930847}, "created": {"value": false, "score": 0.0005012750625610352}, "shared": {"value": false, "score": 1.3113021850585938e-06}}}], "references": [{"refKey": 23, "tei": "<biblStruct xml:id=\"b23\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">FlatFIT: Accelerated Incremental Sliding-Window Aggregation For Real-Time Analytics</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">U</forename><surname>Anatoli</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Panos</forename><forename type=\"middle\">K</forename><surname>Shein</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Alexandros</forename><surname>Chrysanthis</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><surname>Labrinidis</surname></persName>\n\t\t</author>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"m\">SSDBM</title>\n\t\t<imprint>\n\t\t\t<date>2017</date>\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}, {"refKey": 4, "tei": "<biblStruct xml:id=\"b4\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">State management in Apache Flink\u00ae</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Paris</forename><surname>Carbone</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Stephan</forename><surname>Ewen</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Gyula</forename><surname>F\u00f3ra</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Seif</forename><surname>Haridi</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Stefan</forename><surname>Richter</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Kostas</forename><surname>Tzoumas</surname></persName>\n\t\t</author>\n\t\t<idno type=\"DOI\">10.14778/3137765.3137777</idno>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"j\">Proceedings of the VLDB Endowment</title>\n\t\t<title level=\"j\" type=\"abbrev\">Proc. VLDB Endow.</title>\n\t\t<idno type=\"ISSN\">2150-8097</idno>\n\t\t<imprint>\n\t\t\t<biblScope unit=\"volume\">10</biblScope>\n\t\t\t<biblScope unit=\"issue\">12</biblScope>\n\t\t\t<biblScope unit=\"page\" from=\"1718\" to=\"1729\" />\n\t\t\t<date type=\"published\" when=\"2017-08\">2015. 2015</date>\n\t\t\t<publisher>Association for Computing Machinery (ACM)</publisher>\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}, {"refKey": 2, "tei": "<biblStruct xml:id=\"b2\">\n\t<monogr>\n\t\t<title/>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Apache</forename><surname>Flink</surname></persName>\n\t\t</author>\n\t\t<imprint>\n\t\t\t<date>2019</date>\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}, {"refKey": 26, "tei": "<biblStruct xml:id=\"b26\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">General incremental sliding-window aggregation</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Kanat</forename><surname>Tangwongsan</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Martin</forename><surname>Hirzel</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Scott</forename><surname>Schneider</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Kun-Lung</forename><surname>Wu</surname></persName>\n\t\t</author>\n\t\t<idno type=\"DOI\">10.14778/2752939.2752940</idno>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"j\">Proceedings of the VLDB Endowment</title>\n\t\t<title level=\"j\" type=\"abbrev\">Proc. VLDB Endow.</title>\n\t\t<idno type=\"ISSN\">2150-8097</idno>\n\t\t<imprint>\n\t\t\t<biblScope unit=\"volume\">8</biblScope>\n\t\t\t<biblScope unit=\"issue\">7</biblScope>\n\t\t\t<biblScope unit=\"page\" from=\"702\" to=\"713\" />\n\t\t\t<date type=\"published\" when=\"2015-02\">2015. 2015</date>\n\t\t\t<publisher>Association for Computing Machinery (ACM)</publisher>\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}], "runtime": 11499, "id": "ceb3a971db3001129310bf81d1be3b7c80c24db5", "metadata": {"id": "ceb3a971db3001129310bf81d1be3b7c80c24db5"}, "original_file_path": "../../datalake/Samuel/SOFTware-Sync/downloads/xml/lirmm-03468587.grobid.tei.xml", "file_name": "lirmm-03468587.grobid.tei.xml"}