{"application": "software-mentions", "version": "0.8.0", "date": "2024-10-07T11:53+0000", "md5": "8A1419305710CD364B34C4848165812F", "mentions": [{"type": "software", "software-type": "software", "software-name": {"rawForm": "SciDB", "normalizedForm": "SciDB", "offsetStart": 0, "offsetEnd": 5}, "version": {"rawForm": ".9", "normalizedForm": ".9"}, "context": "SciDB provides support to sparse arrays, but since it splits an array into chunks (equally sized subarrays), it is very hard to define a balanced partitioning scheme, because data can be distributed very irregularly. ", "mentionContextAttributes": {"used": {"value": false, "score": 2.8133392333984375e-05}, "created": {"value": false, "score": 0.00013136863708496094}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999349117279053}, "created": {"value": true, "score": 0.9990279674530029}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "[38]", "normalizedForm": "[38]", "refKey": 38}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SciDB", "normalizedForm": "SciDB", "offsetStart": 0, "offsetEnd": 5}, "version": {"rawForm": ".9", "normalizedForm": ".9"}, "context": "SciDB takes a few seconds in most cases, while SAVIME takes on average 1 second.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00070953369140625}, "created": {"value": false, "score": 3.933906555175781e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999349117279053}, "created": {"value": true, "score": 0.9990279674530029}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "[38]", "normalizedForm": "[38]", "refKey": 38}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SciDB", "normalizedForm": "SciDB", "offsetStart": 0, "offsetEnd": 5}, "version": {"rawForm": ".9", "normalizedForm": ".9"}, "context": "SciDB seems to be more sensible to tiling granularity, requiring fine-grained tiles that match the window query to have a performance similar to the NetCDF approach.", "mentionContextAttributes": {"used": {"value": false, "score": 3.6597251892089844e-05}, "created": {"value": false, "score": 4.4226646423339844e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999349117279053}, "created": {"value": true, "score": 0.9990279674530029}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "[38]", "normalizedForm": "[38]", "refKey": 38}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 0, "offsetEnd": 6}, "context": "SAVIME also supports a functional DML with operators similar to the ones implemented in SciDB, for operations such as filtering data based on predicates, calculating derived values, joins and aggregations. ", "mentionContextAttributes": {"used": {"value": false, "score": 3.0875205993652344e-05}, "created": {"value": false, "score": 0.0024244189262390137}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 0, "offsetEnd": 6}, "context": "SAVIME is able to generate VTK data files to be directed imported by Paraview, or even to execute Catalyst analytical scripts. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00024253129959106445}, "created": {"value": false, "score": 0.00024253129959106445}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 0, "offsetEnd": 6}, "context": "SAVIME utilizes the Tensorflow Extended platform, a tool for invoking ML models in the form of services. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00046384334564208984}, "created": {"value": false, "score": 0.0011731982231140137}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 0, "offsetEnd": 6}, "context": "SAVIME has a similar goal to ease data ingestion, however, it does so by enabling seamless data ingestion considering many different array data source by supporting a SDL and a flexible data model, which makes it different from ArrayBridge. ", "mentionContextAttributes": {"used": {"value": false, "score": 4.7087669372558594e-05}, "created": {"value": false, "score": 0.0002803206443786621}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 0, "offsetEnd": 6}, "context": "SAVIME also offers its own DML, while ChronosDB makes use of existing applications to process data. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00013971328735351562}, "created": {"value": false, "score": 0.00020140409469604492}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 0, "offsetEnd": 6}, "context": "SAVIME is also different from TileDB [28], which is not exactly a DBMS with a declarative query language, but a library that deals with array data. ", "mentionContextAttributes": {"used": {"value": false, "score": 5.6743621826171875e-05}, "created": {"value": false, "score": 6.4373016357421875e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 0, "offsetEnd": 6}, "context": "SAVIME is an in-memory DBMS designed to analyze complex multidimensional datasets produced by simulations.", "mentionContextAttributes": {"used": {"value": false, "score": 2.2649765014648438e-05}, "created": {"value": true, "score": 0.7670918703079224}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 0, "offsetEnd": 6}, "context": "SAVIME can be coupled to simulations for analysis running in post-processing and in-transit modes [34].", "mentionContextAttributes": {"used": {"value": false, "score": 6.0558319091796875e-05}, "created": {"value": false, "score": 6.198883056640625e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 0, "offsetEnd": 6}, "context": "SAVIME's DDL supports operators to define TARS and Datasets.", "mentionContextAttributes": {"used": {"value": false, "score": 0.000440061092376709}, "created": {"value": false, "score": 0.00027483701705932617}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 0, "offsetEnd": 6}, "context": "SAVIME operates TARs as a subTARs stream pipelined across operators.", "mentionContextAttributes": {"used": {"value": false, "score": 0.003103494644165039}, "created": {"value": false, "score": 0.00017434358596801758}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NetCDF", "normalizedForm": "NetCDF", "offsetStart": 0, "offsetEnd": 6}, "context": "NetCDF lacks the ability to natively represent sparse data, thus we indexed the x, y, and z values and represented them as a single dimension and stored coordinate values as variables.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9931967258453369}, "created": {"value": false, "score": 1.5616416931152344e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999349117279053}, "created": {"value": false, "score": 0.3298248052597046}, "shared": {"value": false, "score": 2.6226043701171875e-06}}, "references": [{"label": "[31]", "normalizedForm": "[31]", "refKey": 31}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NetCDF", "normalizedForm": "NetCDF", "offsetStart": 0, "offsetEnd": 6}, "context": "NetCDF is the most efficient in this scenario, retrieving desired data in less than a second.", "mentionContextAttributes": {"used": {"value": false, "score": 6.973743438720703e-05}, "created": {"value": false, "score": 3.9577484130859375e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999349117279053}, "created": {"value": false, "score": 0.3298248052597046}, "shared": {"value": false, "score": 2.6226043701171875e-06}}, "references": [{"label": "[31]", "normalizedForm": "[31]", "refKey": 31}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 0, "offsetEnd": 6}, "context": "SAVIME is available at github.com/dexllab/Savime.", "mentionContextAttributes": {"used": {"value": false, "score": 4.7326087951660156e-05}, "created": {"value": false, "score": 8.511543273925781e-05}, "shared": {"value": true, "score": 0.9861605167388916}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RasDaMan", "normalizedForm": "RasDaMan", "offsetStart": 0, "offsetEnd": 8}, "context": "RasDaMan requires either the creation of a script or the generation of compatible file formats for data ingestion. ", "mentionContextAttributes": {"used": {"value": false, "score": 4.7326087951660156e-05}, "created": {"value": false, "score": 0.07288479804992676}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 8.356571197509766e-05}, "created": {"value": false, "score": 0.07288479804992676}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RasDaMan", "normalizedForm": "RasDaMan", "offsetStart": 0, "offsetEnd": 8}, "context": "RasDaMan is more flexible in this aspect and allows arrays to be split into tiles or chunks with variable sizes.", "mentionContextAttributes": {"used": {"value": false, "score": 2.467632293701172e-05}, "created": {"value": false, "score": 0.0009605288505554199}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 8.356571197509766e-05}, "created": {"value": false, "score": 0.07288479804992676}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 2, "offsetEnd": 8}, "context": "A SAVIME client communicates with the SAVIME server by using a simple protocol that allows both ends to exchange messages, queries, and datasets.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0018267631530761719}, "created": {"value": false, "score": 0.00018841028213500977}, "shared": {"value": false, "score": 1.9073486328125e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SciDB", "normalizedForm": "SciDB", "offsetStart": 3, "offsetEnd": 8}, "version": {"rawForm": ".9", "normalizedForm": ".9"}, "context": "In SciDB for instance, it might be necessary to preload multidimensional data into a unidimensional array and then rearrange it during data loading. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0006088018417358398}, "created": {"value": false, "score": 6.079673767089844e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999349117279053}, "created": {"value": true, "score": 0.9990279674530029}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "[38]", "normalizedForm": "[38]", "refKey": 38}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 3, "offsetEnd": 9}, "context": "In SAVIME, the idiosyncrasies of simulation data are captured through the usage of specially defined arrays with associated semantical annotations. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.07379072904586792}, "created": {"value": false, "score": 2.658367156982422e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Ras-DaMan", "normalizedForm": "Ras-DaMan", "offsetStart": 3, "offsetEnd": 12}, "context": "In Ras-DaMan, ML models must be implemented as UDFs within the system, being invoked as rasQL queries. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00011599063873291016}, "created": {"value": false, "score": 0.0003134012222290039}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00011599063873291016}, "created": {"value": false, "score": 0.0003134012222290039}, "shared": {"value": false, "score": 1.1920928955078125e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 4, "offsetEnd": 10}, "context": "The SAVIME system SAVIME has a component-based architecture common to other DBMSs, containing modules such as an optimizer, a parser, and a query processing engine, along with auxiliary modules to manage connections, metadata and storage. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0007647275924682617}, "created": {"value": false, "score": 0.001329183578491211}, "shared": {"value": false, "score": 1.5497207641601562e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 4, "offsetEnd": 10}, "context": "The SAVIME characteristic presented as an advantage (3) in Section 1 is directly related to this feature implemented in SAVIME.", "mentionContextAttributes": {"used": {"value": false, "score": 0.20780187845230103}, "created": {"value": false, "score": 0.00235670804977417}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 4, "offsetEnd": 10}, "context": "The SAVIME IN-SITU approach uses the same computational resources used by the simulation code.", "mentionContextAttributes": {"used": {"value": false, "score": 0.003691256046295166}, "created": {"value": false, "score": 5.0067901611328125e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NetCDF", "normalizedForm": "NetCDF", "offsetStart": 4, "offsetEnd": 10}, "context": "and NetCDF [31].", "mentionContextAttributes": {"used": {"value": true, "score": 0.9994939565658569}, "created": {"value": false, "score": 2.5033950805664062e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999349117279053}, "created": {"value": false, "score": 0.3298248052597046}, "shared": {"value": false, "score": 2.6226043701171875e-06}}, "references": [{"label": "[31]", "normalizedForm": "[31]", "refKey": 31, "offsetStart": 44812, "offsetEnd": 44816}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "scripts", "normalizedForm": "scripts", "offsetStart": 4, "offsetEnd": 11}, "context": "All scripts, applications, and queries used in our evaluation are available at github.com/hllustosa/savime-testing.", "mentionContextAttributes": {"used": {"value": true, "score": 0.8456658720970154}, "created": {"value": false, "score": 0.005414247512817383}, "shared": {"value": false, "score": 0.21542882919311523}}, "documentContextAttributes": {"used": {"value": true, "score": 0.8456658720970154}, "created": {"value": false, "score": 0.005414247512817383}, "shared": {"value": false, "score": 0.21542882919311523}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 6, "offsetEnd": 12}, "context": "Also, SAVIME incorporates the Paraview Catalyst library, which enables powerful visualization of simulation results, a fundamental tasks performed during scientific simulations.", "mentionContextAttributes": {"used": {"value": false, "score": 4.076957702636719e-05}, "created": {"value": false, "score": 0.0008903145790100098}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 6, "offsetEnd": 12}, "context": "Since SAVIME treats the ML prediction as an operator of the query plan, there is a vast opportunity for optimizations that can be implemented in the system, e.g.", "mentionContextAttributes": {"used": {"value": false, "score": 5.0902366638183594e-05}, "created": {"value": false, "score": 0.0010004639625549316}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Catalyst", "normalizedForm": "Catalyst", "offsetStart": 6, "offsetEnd": 14}, "context": "Since Catalyst is embedded in SAVIME, it is possible to create visualization files and even run scripts with data harvested directly from SAVIME's memory space.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00017911195755004883}, "created": {"value": false, "score": 0.0010356903076171875}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.5072364807128906}, "created": {"value": false, "score": 0.0010356903076171875}, "shared": {"value": false, "score": 2.6226043701171875e-06}}, "references": [{"label": "[2]", "normalizedForm": "[2]", "refKey": 2}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SciDB", "normalizedForm": "SciDB", "offsetStart": 9, "offsetEnd": 14}, "version": {"rawForm": ".9", "normalizedForm": ".9"}, "context": "However, SciDB shows poorer performance, being up to 8 times slower.", "mentionContextAttributes": {"used": {"value": false, "score": 0.02644592523574829}, "created": {"value": false, "score": 1.5854835510253906e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999349117279053}, "created": {"value": true, "score": 0.9990279674530029}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "[38]", "normalizedForm": "[38]", "refKey": 38}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TFX", "normalizedForm": "TFX", "offsetStart": 10, "offsetEnd": 13}, "context": "To invoke TFX, the models' input must first be converted to a JSON format and sent to the server. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.7853479981422424}, "created": {"value": false, "score": 3.898143768310547e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.7853479981422424}, "created": {"value": true, "score": 0.5602536201477051}, "shared": {"value": false, "score": 3.5762786865234375e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 12, "offsetEnd": 18}, "context": "To do that, SAVIME counts with a DML operator that receives as input a set of data in an existing TAR and returns as a response, in the form of a new TAR, the result of the execution of a given ML model.", "mentionContextAttributes": {"used": {"value": false, "score": 0.02355724573135376}, "created": {"value": false, "score": 2.193450927734375e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 12, "offsetEnd": 18}, "context": "We compared SAVIME with SciDB and a baseline approach using the NetCDF platform.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999349117279053}, "created": {"value": false, "score": 1.9311904907226562e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 13, "offsetEnd": 19}, "context": "In addition, SAVIME is a specialized in-memory solution, while the rest of these systems are usually more disk oriented solutions Another issue is related to the impedance mismatch problem. ", "mentionContextAttributes": {"used": {"value": false, "score": 7.128715515136719e-05}, "created": {"value": false, "score": 0.0008861422538757324}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NetCDF", "normalizedForm": "NetCDF", "offsetStart": 13, "offsetEnd": 19}, "context": "We provide a NetCDF comparison only as a baseline, since it does not offer all benefits that a DBMS does (see Section 5).", "mentionContextAttributes": {"used": {"value": false, "score": 0.0007823705673217773}, "created": {"value": false, "score": 6.568431854248047e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999349117279053}, "created": {"value": false, "score": 0.3298248052597046}, "shared": {"value": false, "score": 2.6226043701171875e-06}}, "references": [{"label": "[31]", "normalizedForm": "[31]", "refKey": 31}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 13, "offsetEnd": 19}, "context": "In contrast, SAVIME does not alter or index the data during the process of data ingestion, therefore the loading process is computationally much cheaper.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0002022385597229004}, "created": {"value": false, "score": 2.372264862060547e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 14, "offsetEnd": 20}, "context": "In this case, SAVIME would have to recreate it.", "mentionContextAttributes": {"used": {"value": true, "score": 0.6434499621391296}, "created": {"value": false, "score": 7.224082946777344e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 14, "offsetEnd": 20}, "context": "We showed how SAVIME, by implementing the TARS data model, does not impose the huge overhead present in current database solutions for data ingestion, while also being able to take advantage of preexisting data layouts to answer queries efficiently.", "mentionContextAttributes": {"used": {"value": true, "score": 0.6034495830535889}, "created": {"value": true, "score": 0.9942448735237122}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SciDB", "normalizedForm": "SciDB", "offsetStart": 15, "offsetEnd": 20}, "version": {"rawForm": ".9", "normalizedForm": ".9"}, "context": "In the case of SciDB, the user needs to implement the algorithm using the linear algebra operators provided by the system, but there's no way to easily integrate pre-built ML models as part of the system.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00047779083251953125}, "created": {"value": false, "score": 0.0006695985794067383}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999349117279053}, "created": {"value": true, "score": 0.9990279674530029}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "[38]", "normalizedForm": "[38]", "refKey": 38}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 15, "offsetEnd": 21}, "context": "We also showed SAVIME's ML support, demonstrating how it is a viable tool on the ML process.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9998539686203003}, "created": {"value": false, "score": 0.31763577461242676}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 15, "offsetEnd": 21}, "context": "We showed that SAVIME can also match the performance of NetCDF for loading and querying dense arrays while providing the benefits of a query language processing layer.", "mentionContextAttributes": {"used": {"value": false, "score": 0.28569144010543823}, "created": {"value": false, "score": 2.2530555725097656e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 15, "offsetEnd": 21}, "context": "We also assess SAVIME's performance when integrating with simulation code.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999511241912842}, "created": {"value": false, "score": 4.5180320739746094e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 16, "offsetEnd": 22}, "context": "Even though the SAVIME IN-SITU approach is slightly slower than the baseline approach, we see that both are able to scale similarly.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0077231526374816895}, "created": {"value": false, "score": 1.704692840576172e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SciDB", "normalizedForm": "SciDB", "offsetStart": 17, "offsetEnd": 22}, "version": {"rawForm": ".9", "normalizedForm": ".9"}, "context": "Array DBMSs like SciDB or RasDaMan, in their current versions, do not support this kind of functionality.", "mentionContextAttributes": {"used": {"value": false, "score": 6.818771362304688e-05}, "created": {"value": false, "score": 0.0001074075698852539}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999349117279053}, "created": {"value": true, "score": 0.9990279674530029}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "[38]", "normalizedForm": "[38]", "refKey": 38}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 17, "offsetEnd": 23}, "context": "Visualization in SAVIME is done with the use of a special purpose operator named CATALYZE, shown in Figure 2, which gets the resulting TARs of a query, converts it to the VTK structures and optionally executes a Catalyst script with the query output. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.08838236331939697}, "created": {"value": false, "score": 7.43865966796875e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 17, "offsetEnd": 23}, "context": "In this context, SAVIME provides means for fast data ingestion free from costly data conversions common to other array DBMSs.", "mentionContextAttributes": {"used": {"value": false, "score": 2.7298927307128906e-05}, "created": {"value": false, "score": 0.006493091583251953}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 18, "offsetEnd": 24}, "context": "The SAVIME system SAVIME has a component-based architecture common to other DBMSs, containing modules such as an optimizer, a parser, and a query processing engine, along with auxiliary modules to manage connections, metadata and storage. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0007647275924682617}, "created": {"value": false, "score": 0.001329183578491211}, "shared": {"value": false, "score": 1.5497207641601562e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 18, "offsetEnd": 24}, "context": "First, we compare SAVIME with SciDB and evaluate how SAVIME affects the performance of the actual simulation code.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9996395111083984}, "created": {"value": false, "score": 2.276897430419922e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 19, "offsetEnd": 25}, "context": "To demonstrate how SAVIME is a viable alternative in terms of performance when applied to the ML process, we compared the execution time of a prediction query run in the system with the equivalent procedure invoking Tensorflow Extended from a Python environment using only NumPy arrays.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9998973608016968}, "created": {"value": false, "score": 3.159046173095703e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "library", "normalizedForm": "library", "offsetStart": 20, "offsetEnd": 27}, "context": "This interface is a library, written in Python and Cython, that allows the execution of queries in the DBMS from a Python environment. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00015842914581298828}, "created": {"value": true, "score": 0.9749465584754944}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9987775683403015}, "created": {"value": true, "score": 0.9998506307601929}, "shared": {"value": false, "score": 5.9604644775390625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Tensorflow", "normalizedForm": "Tensorflow", "offsetStart": 20, "offsetEnd": 30}, "context": "SAVIME utilizes the Tensorflow Extended platform, a tool for invoking ML models in the form of services.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00046384334564208984}, "created": {"value": false, "score": 0.0011731982231140137}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998973608016968}, "created": {"value": true, "score": 0.5602536201477051}, "shared": {"value": false, "score": 3.5762786865234375e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 21, "offsetEnd": 27}, "context": "To further integrate SAVIME into this process, we have also developed a library that allows the execution of SAVIME queries from the Python environment.", "mentionContextAttributes": {"used": {"value": false, "score": 2.9206275939941406e-05}, "created": {"value": true, "score": 0.9998506307601929}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 22, "offsetEnd": 28}, "context": "It is noticeable that SAVIME either outperforms SciDB or is as efficient as it in all scenarios.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00011801719665527344}, "created": {"value": false, "score": 6.008148193359375e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SciDB", "normalizedForm": "SciDB", "offsetStart": 23, "offsetEnd": 28}, "version": {"rawForm": ".9", "normalizedForm": ".9"}, "context": "It is very likely that SciDB needs to process cells outside of the window of interest depending on the compression technique and the storage layout adopted.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00016021728515625}, "created": {"value": false, "score": 3.814697265625e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999349117279053}, "created": {"value": true, "score": 0.9990279674530029}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "[38]", "normalizedForm": "[38]", "refKey": 38}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SciDB", "normalizedForm": "SciDB", "offsetStart": 23, "offsetEnd": 28}, "version": {"rawForm": ".9", "normalizedForm": ".9"}, "context": "ArrayBridge works over SciDB, and gives it the ability to work directly with HDF5 files.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00042742490768432617}, "created": {"value": false, "score": 0.002321183681488037}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999349117279053}, "created": {"value": true, "score": 0.9990279674530029}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "[38]", "normalizedForm": "[38]", "refKey": 38}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 23, "offsetEnd": 29}, "context": "In the third approach, SAVIME is not used, but instead, the data is stored in ENSIGHT files (the standard file format used by MHM), and analyzes are performed by an ad-hoc Message Passing Interface application in Python. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.05615949630737305}, "created": {"value": false, "score": 2.467632293701172e-05}, "shared": {"value": false, "score": 9.5367431640625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 23, "offsetEnd": 29}, "context": "Such extension enables SAVIME to evaluate any ML algorithm supported by TFX.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0023195743560791016}, "created": {"value": false, "score": 0.0129317045211792}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 23, "offsetEnd": 29}, "context": "Thus, the extension of SAVIME towards Machine Learning supports any ML algorithm that can be run in the background framework.", "mentionContextAttributes": {"used": {"value": false, "score": 6.16312026977539e-05}, "created": {"value": false, "score": 0.0074364542961120605}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 23, "offsetEnd": 29}, "context": "In the first approach, SAVIME is used IN-TRANSIT, in a single node (fatnode) while the simulation code runs in a different set of nodes, and thus data needs to be transferred.", "mentionContextAttributes": {"used": {"value": false, "score": 0.008353650569915771}, "created": {"value": false, "score": 6.079673767089844e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SciDB", "normalizedForm": "SciDB", "offsetStart": 24, "offsetEnd": 29}, "version": {"rawForm": ".9", "normalizedForm": ".9"}, "context": "We compared SAVIME with SciDB and a baseline approach using the NetCDF platform.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999349117279053}, "created": {"value": false, "score": 1.9311904907226562e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999349117279053}, "created": {"value": true, "score": 0.9990279674530029}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "[38]", "normalizedForm": "[38]", "refKey": 38}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 24, "offsetEnd": 30}, "context": "In the second approach, SAVIME is used IN-SITU, with individual SAVIME instances running on each node, the same used by the simulation code. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.030922532081604004}, "created": {"value": false, "score": 5.9604644775390625e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 24, "offsetEnd": 30}, "context": "We also demonstrate how SAVIME can be easily integrated into the ML process, by presenting a library for communication from a Python environment, and a performance comparison with NumPy arrays.", "mentionContextAttributes": {"used": {"value": false, "score": 0.33397430181503296}, "created": {"value": true, "score": 0.7288393378257751}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 24, "offsetEnd": 30}, "context": "In Section 3 we present SAVIME, its execution model and its DDL, SDL and DML, along with visualization and ML support.", "mentionContextAttributes": {"used": {"value": false, "score": 0.002477109432220459}, "created": {"value": true, "score": 0.9996986389160156}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 24, "offsetEnd": 30}, "context": "Then we demonstrate how SAVIME can be a feasible tool integrated into the ML process by comparing its execution time with the equivalent procedure using NumPy arrays.", "mentionContextAttributes": {"used": {"value": true, "score": 0.796538770198822}, "created": {"value": false, "score": 0.001495957374572754}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RasDaMan", "normalizedForm": "RasDaMan", "offsetStart": 26, "offsetEnd": 34}, "context": "Array DBMSs like SciDB or RasDaMan, in their current versions, do not support this kind of functionality.", "mentionContextAttributes": {"used": {"value": false, "score": 6.818771362304688e-05}, "created": {"value": false, "score": 0.0001074075698852539}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 8.356571197509766e-05}, "created": {"value": false, "score": 0.07288479804992676}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NumPy", "normalizedForm": "NumPy", "offsetStart": 27, "offsetEnd": 32}, "version": {"rawForm": "3.6.9", "normalizedForm": "3.6.9", "offsetStart": 68, "offsetEnd": 73}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "In our experiment, we used NumPy version 1.18.5, and Python version 3.6.9. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999715089797974}, "created": {"value": false, "score": 5.030632019042969e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.7288393378257751}, "shared": {"value": false, "score": 7.152557373046875e-07}}, "references": [{"label": "[27]", "normalizedForm": "[27]", "refKey": 27}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 28, "offsetEnd": 34}, "context": "In this section, we compare SAVIME, SciDB (version 16.9), and a third approach based on the usage of NetCDF files (version 4.0). ", "mentionContextAttributes": {"used": {"value": true, "score": 0.7752876281738281}, "created": {"value": false, "score": 6.9141387939453125e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 28, "offsetEnd": 34}, "context": "In this article, we present SAVIME and the TARS data model, along with a performance evaluation in which we compare SAVIME with SciDB [38], the state-of-the-art array DBMS.", "mentionContextAttributes": {"used": {"value": false, "score": 0.13062399625778198}, "created": {"value": true, "score": 0.9990279674530029}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SciDB", "normalizedForm": "SciDB", "offsetStart": 30, "offsetEnd": 35}, "version": {"rawForm": ".9", "normalizedForm": ".9"}, "context": "First, we compare SAVIME with SciDB and evaluate how SAVIME affects the performance of the actual simulation code. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9996395111083984}, "created": {"value": false, "score": 2.276897430419922e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999349117279053}, "created": {"value": true, "score": 0.9990279674530029}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "[38]", "normalizedForm": "[38]", "refKey": 38}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 30, "offsetEnd": 36}, "context": "Since Catalyst is embedded in SAVIME, it is possible to create visualization files and even run scripts with data harvested directly from SAVIME's memory space. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00017911195755004883}, "created": {"value": false, "score": 0.0010356903076171875}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Paraview", "normalizedForm": "Paraview", "offsetStart": 30, "offsetEnd": 38}, "context": "Also, SAVIME incorporates the Paraview Catalyst library, which enables powerful visualization of simulation results, a fundamental tasks performed during scientific simulations.", "mentionContextAttributes": {"used": {"value": false, "score": 4.076957702636719e-05}, "created": {"value": false, "score": 0.0008903145790100098}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00024253129959106445}, "created": {"value": false, "score": 0.0008903145790100098}, "shared": {"value": false, "score": 2.6226043701171875e-06}}, "references": [{"label": "[2]", "normalizedForm": "[2]", "refKey": 2}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 31, "offsetEnd": 37}, "context": "TARS structures are created in SAVIME with the use of the supported SDL and DDL. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.06205308437347412}, "created": {"value": false, "score": 0.0019572973251342773}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RasDaMan", "normalizedForm": "RasDaMan", "offsetStart": 31, "offsetEnd": 42}, "context": "The oldest known array DBMS is RasDaMan [5], which adds complete array queries capabilities on top of a relational DBMS. ", "mentionContextAttributes": {"used": {"value": false, "score": 8.356571197509766e-05}, "created": {"value": false, "score": 4.9233436584472656e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 8.356571197509766e-05}, "created": {"value": false, "score": 0.07288479804992676}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SciDB", "normalizedForm": "SciDB", "offsetStart": 33, "offsetEnd": 38}, "version": {"rawForm": ".9", "normalizedForm": ".9"}, "context": "We used a sparse 4D array/TAR in SciDB and SAVIME, and a 2D dense array in NetCDF.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9998692274093628}, "created": {"value": false, "score": 8.58306884765625e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999349117279053}, "created": {"value": true, "score": 0.9990279674530029}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "[38]", "normalizedForm": "[38]", "refKey": 38}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SciDB", "normalizedForm": "SciDB", "offsetStart": 35, "offsetEnd": 40}, "version": {"rawForm": ".9", "normalizedForm": ".9"}, "context": "The experimental results show that SciDB suffers from the aforementioned problems, not being an ideal alternative and that SAVIME enables faster data ingestion while maintaining similar performance during window queries execution.", "mentionContextAttributes": {"used": {"value": true, "score": 0.8134169578552246}, "created": {"value": false, "score": 5.459785461425781e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999349117279053}, "created": {"value": true, "score": 0.9990279674530029}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "[38]", "normalizedForm": "[38]", "refKey": 38}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 35, "offsetEnd": 41}, "context": "We highlight the fact that because SAVIME only executes trained models, the task of model training must be delegated to other specialized frameworks such as Tensorflow or Pytorch.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0004494786262512207}, "created": {"value": false, "score": 0.0005103349685668945}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SciDB", "normalizedForm": "SciDB", "offsetStart": 36, "offsetEnd": 41}, "version": {"rawForm": ".9", "normalizedForm": ".9", "offsetStart": 53, "offsetEnd": 55}, "context": "In this section, we compare SAVIME, SciDB (version 16.9), and a third approach based on the usage of NetCDF files (version 4.0). ", "mentionContextAttributes": {"used": {"value": true, "score": 0.7752876281738281}, "created": {"value": false, "score": 6.9141387939453125e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999349117279053}, "created": {"value": true, "score": 0.9990279674530029}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "[38]", "normalizedForm": "[38]", "refKey": 38}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 36, "offsetEnd": 42}, "context": "To evaluate the integration between SAVIME and a simulation tool based on the MHM solver, we use a 2D transport problem over a mesh with 1.9 million points.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999269247055054}, "created": {"value": false, "score": 1.2278556823730469e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 37, "offsetEnd": 43}, "context": "Compared to the current array DBMSs, SAVIME brings the following advantages:", "mentionContextAttributes": {"used": {"value": false, "score": 5.3882598876953125e-05}, "created": {"value": false, "score": 0.00015246868133544922}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "application", "normalizedForm": "application", "offsetStart": 37, "offsetEnd": 48}, "context": "This problem is common in scientific application domains.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00038760900497436523}, "created": {"value": false, "score": 0.00047707557678222656}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9995059967041016}, "created": {"value": true, "score": 0.5702955722808838}, "shared": {"value": false, "score": 5.9604644775390625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 38, "offsetEnd": 44}, "context": "Listing 2 is an example of a query in SAVIME. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0005595088005065918}, "created": {"value": false, "score": 3.600120544433594e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 38, "offsetEnd": 44}, "context": "A SAVIME client communicates with the SAVIME server by using a simple protocol that allows both ends to exchange messages, queries, and datasets.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0018267631530761719}, "created": {"value": false, "score": 0.00018841028213500977}, "shared": {"value": false, "score": 1.9073486328125e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Catalyst", "normalizedForm": "Catalyst", "offsetStart": 39, "offsetEnd": 47}, "context": "Also, SAVIME incorporates the Paraview Catalyst library, which enables powerful visualization of simulation results, a fundamental tasks performed during scientific simulations.", "mentionContextAttributes": {"used": {"value": false, "score": 4.076957702636719e-05}, "created": {"value": false, "score": 0.0008903145790100098}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.5072364807128906}, "created": {"value": false, "score": 0.0010356903076171875}, "shared": {"value": false, "score": 2.6226043701171875e-06}}, "references": [{"label": "[2]", "normalizedForm": "[2]", "refKey": 2}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 40, "offsetEnd": 46}, "context": "In this context, to provide ML support, SAVIME allows multiple trained models to be registered and used for a given problem.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00017189979553222656}, "created": {"value": false, "score": 0.002119004726409912}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 40, "offsetEnd": 46}, "context": "As presented in the previous section, a SAVIME query contains a series of nested operators.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0012752413749694824}, "created": {"value": false, "score": 0.001402437686920166}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 40, "offsetEnd": 46}, "context": "From the point of view of the effect of SAVIME on simulation scalability, the storage of data in SAVIME does not impair the capability of the simulation code to scale up to 16 cores.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0003808736801147461}, "created": {"value": false, "score": 9.906291961669922e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 41, "offsetEnd": 47}, "context": "The multidimensional array data model of SAVIME is an adequate representation for modern machine learning (ML) based applications.", "mentionContextAttributes": {"used": {"value": false, "score": 3.2901763916015625e-05}, "created": {"value": false, "score": 0.012358427047729492}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RasDaMan", "normalizedForm": "RasDaMan", "offsetStart": 42, "offsetEnd": 50}, "context": "However, both array models implemented of RasDaMan and SciDB have limitations that hamper the representation of scientific datasets, like those originated by simulations.", "mentionContextAttributes": {"used": {"value": false, "score": 6.008148193359375e-05}, "created": {"value": false, "score": 0.0027120113372802734}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 8.356571197509766e-05}, "created": {"value": false, "score": 0.07288479804992676}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NumPy", "normalizedForm": "NumPy", "offsetStart": 43, "offsetEnd": 48}, "version": {"rawForm": "3.6.9", "normalizedForm": "3.6.9"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "Once executed, its result is returned as a NumPy array, as illustrated in Figure 4, to the right.", "mentionContextAttributes": {"used": {"value": false, "score": 0.26288342475891113}, "created": {"value": false, "score": 0.0003921389579772949}, "shared": {"value": false, "score": 7.152557373046875e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.7288393378257751}, "shared": {"value": false, "score": 7.152557373046875e-07}}, "references": [{"label": "[27]", "normalizedForm": "[27]", "refKey": 27}]}, {"type": "software", "software-type": "implicit", "software-name": {"rawForm": "script", "normalizedForm": "script", "offsetStart": 43, "offsetEnd": 49}, "context": "RasDaMan requires either the creation of a script or the generation of compatible file formats for data ingestion. ", "mentionContextAttributes": {"used": {"value": false, "score": 4.7326087951660156e-05}, "created": {"value": false, "score": 0.07288479804992676}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.08838236331939697}, "created": {"value": false, "score": 0.07288479804992676}, "shared": {"value": false, "score": 3.5762786865234375e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 43, "offsetEnd": 49}, "context": "We used a sparse 4D array/TAR in SciDB and SAVIME, and a 2D dense array in NetCDF.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9998692274093628}, "created": {"value": false, "score": 8.58306884765625e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 47, "offsetEnd": 53}, "context": "SciDB takes a few seconds in most cases, while SAVIME takes on average 1 second.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00070953369140625}, "created": {"value": false, "score": 3.933906555175781e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SciDB", "normalizedForm": "SciDB", "offsetStart": 48, "offsetEnd": 53}, "version": {"rawForm": ".9", "normalizedForm": ".9"}, "context": "It is noticeable that SAVIME either outperforms SciDB or is as efficient as it in all scenarios.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00011801719665527344}, "created": {"value": false, "score": 6.008148193359375e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999349117279053}, "created": {"value": true, "score": 0.9990279674530029}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "[38]", "normalizedForm": "[38]", "refKey": 38}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "library", "normalizedForm": "library", "offsetStart": 48, "offsetEnd": 55}, "context": "Also, SAVIME incorporates the Paraview Catalyst library, which enables powerful visualization of simulation results, a fundamental tasks performed during scientific simulations.", "mentionContextAttributes": {"used": {"value": false, "score": 4.076957702636719e-05}, "created": {"value": false, "score": 0.0008903145790100098}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9987775683403015}, "created": {"value": true, "score": 0.9998506307601929}, "shared": {"value": false, "score": 5.9604644775390625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PySAVIME", "normalizedForm": "PySAVIME", "offsetStart": 49, "offsetEnd": 57}, "context": "The operator subset command is defined using the PySAVIME class Operator. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.5213862657546997}, "created": {"value": false, "score": 6.794929504394531e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.677758514881134}, "created": {"value": true, "score": 0.9993971586227417}, "shared": {"value": false, "score": 4.76837158203125e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 50, "offsetEnd": 56}, "context": "All data is held in a single 4D structure (TAR in SAVIME, array in SciDB and in a single NetCDF file) containing the X, Y, and Z dimensions, and an extra trial dimension to represent all 500 trials.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9299317002296448}, "created": {"value": false, "score": 6.0558319091796875e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 50, "offsetEnd": 56}, "context": "This part is either done by a special operator in SAVIME, or by an AD-HOC MPI Python application using the Catalyst library (baseline), depending on the approach being run.", "mentionContextAttributes": {"used": {"value": true, "score": 0.5072364807128906}, "created": {"value": false, "score": 8.571147918701172e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "environment", "software-name": {"rawForm": "Cython", "normalizedForm": "Cython", "offsetStart": 51, "offsetEnd": 57}, "context": "This interface is a library, written in Python and Cython, that allows the execution of queries in the DBMS from a Python environment. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00015842914581298828}, "created": {"value": true, "score": 0.9749465584754944}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00015842914581298828}, "created": {"value": true, "score": 0.9749465584754944}, "shared": {"value": false, "score": 3.5762786865234375e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "OpenMP", "normalizedForm": "OpenMP", "offsetStart": 51, "offsetEnd": 57}, "context": "SubTARs are processed serially or in parallel with OpenMP constructs.", "mentionContextAttributes": {"used": {"value": false, "score": 0.008265137672424316}, "created": {"value": false, "score": 2.3126602172851562e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9995059967041016}, "created": {"value": false, "score": 0.3298248052597046}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 51, "offsetEnd": 57}, "context": "In this evaluation, we showed that storing data in SAVIME does not impair the scalability of the solver.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9994795918464661}, "created": {"value": false, "score": 0.005666375160217285}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 52, "offsetEnd": 58}, "context": "We ran a series of experiments in order to validate SAVIME as an efficient system for simulation data management.", "mentionContextAttributes": {"used": {"value": false, "score": 0.018661141395568848}, "created": {"value": true, "score": 0.9989408850669861}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 52, "offsetEnd": 58}, "context": "The execution times considering 100 or 500 tiles in SAVIME and NetCDF are in accordance with this premise.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9939671754837036}, "created": {"value": false, "score": 7.62939453125e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PARAVIEW", "normalizedForm": "PARAVIEW", "offsetStart": 52, "offsetEnd": 60}, "context": "Once data has been generated, it is analyzed with a PARAVIEW pipeline that carries out the computation of the gradient of the displacement field of the solution. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9724342823028564}, "created": {"value": false, "score": 0.00045931339263916016}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9724342823028564}, "created": {"value": false, "score": 0.00045931339263916016}, "shared": {"value": false, "score": 1.1920928955078125e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 53, "offsetEnd": 59}, "context": "First, we compare SAVIME with SciDB and evaluate how SAVIME affects the performance of the actual simulation code.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9996395111083984}, "created": {"value": false, "score": 2.276897430419922e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 53, "offsetEnd": 59}, "context": "The difference observed in performance between using SAVIME and coding a specialized application becomes less significant as we increase the number of cores being used during the analysis phase.", "mentionContextAttributes": {"used": {"value": false, "score": 0.000316619873046875}, "created": {"value": false, "score": 1.990795135498047e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SciDB", "normalizedForm": "SciDB", "offsetStart": 55, "offsetEnd": 60}, "version": {"rawForm": ".9", "normalizedForm": ".9"}, "context": "However, both array models implemented of RasDaMan and SciDB have limitations that hamper the representation of scientific datasets, like those originated by simulations.", "mentionContextAttributes": {"used": {"value": false, "score": 6.008148193359375e-05}, "created": {"value": false, "score": 0.0027120113372802734}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999349117279053}, "created": {"value": true, "score": 0.9990279674530029}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "[38]", "normalizedForm": "[38]", "refKey": 38}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SciDB", "normalizedForm": "SciDB", "offsetStart": 56, "offsetEnd": 61}, "version": {"rawForm": ".9", "normalizedForm": ".9"}, "context": "Nowadays, the most popular array DBMS implementation is SciDB [13].", "mentionContextAttributes": {"used": {"value": false, "score": 0.0005252957344055176}, "created": {"value": false, "score": 0.00013399124145507812}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999349117279053}, "created": {"value": true, "score": 0.9990279674530029}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "[13]", "normalizedForm": "[13]", "refKey": 13, "offsetStart": 43034, "offsetEnd": 43038}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 56, "offsetEnd": 62}, "context": "In order to implement this operator and visualize data, SAVIME needs to be aware of which parts of the dataset represent the geometry and the topology of the mesh, and how the field data is laid out in this schema and then create the respective VTK structures. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.005013465881347656}, "created": {"value": false, "score": 0.0031818151473999023}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NetCDF", "normalizedForm": "NetCDF", "offsetStart": 56, "offsetEnd": 62}, "context": "Therefore, scientific file formats such as HDF [39] and NetCDF [31], special libraries, such as Paraview Catalyst [2] and I/O interfaces, such as ADIOS [19] and GLEAN [40] are preferred for maintaining and analyzing scientific datasets.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00011646747589111328}, "created": {"value": false, "score": 1.7404556274414062e-05}, "shared": {"value": false, "score": 2.6226043701171875e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999349117279053}, "created": {"value": false, "score": 0.3298248052597046}, "shared": {"value": false, "score": 2.6226043701171875e-06}}, "references": [{"label": "[31]", "normalizedForm": "[31]", "refKey": 31, "offsetStart": 1939, "offsetEnd": 1943}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NetCDF", "normalizedForm": "NetCDF", "offsetStart": 56, "offsetEnd": 62}, "context": "We showed that SAVIME can also match the performance of NetCDF for loading and querying dense arrays while providing the benefits of a query language processing layer.", "mentionContextAttributes": {"used": {"value": false, "score": 0.28569144010543823}, "created": {"value": false, "score": 2.2530555725097656e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999349117279053}, "created": {"value": false, "score": 0.3298248052597046}, "shared": {"value": false, "score": 2.6226043701171875e-06}}, "references": [{"label": "[31]", "normalizedForm": "[31]", "refKey": 31}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SciDB", "normalizedForm": "SciDB", "offsetStart": 57, "offsetEnd": 67}, "version": {"rawForm": ".9", "normalizedForm": ".9"}, "context": "However, current array data model implementations, e.g., SciDB [38] and RasDaMan [4], have limitations, preventing an efficient representation of simulation datasets. ", "mentionContextAttributes": {"used": {"value": false, "score": 3.9458274841308594e-05}, "created": {"value": false, "score": 0.0022254586219787598}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999349117279053}, "created": {"value": true, "score": 0.9990279674530029}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "[38]", "normalizedForm": "[38]", "refKey": 38}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Paraview", "normalizedForm": "Paraview", "offsetStart": 58, "offsetEnd": 66}, "context": "In this context, viz tools and libraries, such as VTK and Paraview Catalyst [2] are widely used to allow researchers to gain insights about scientific datasets.", "mentionContextAttributes": {"used": {"value": false, "score": 4.0650367736816406e-05}, "created": {"value": false, "score": 0.000536501407623291}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00024253129959106445}, "created": {"value": false, "score": 0.0008903145790100098}, "shared": {"value": false, "score": 2.6226043701171875e-06}}, "references": [{"label": "[2]", "normalizedForm": "[2]", "refKey": 2, "offsetStart": 19495, "offsetEnd": 19498}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 59, "offsetEnd": 65}, "context": "In Section 2 we discuss the TARS data model implemented in SAVIME.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0021806955337524414}, "created": {"value": true, "score": 0.9986796975135803}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 59, "offsetEnd": 65}, "context": "Without such support, users would need to move data out of SAVIME's memory space and convert it before being able to visualize it, which is very inefficient.", "mentionContextAttributes": {"used": {"value": false, "score": 0.008480966091156006}, "created": {"value": false, "score": 8.249282836914062e-05}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NetCDF", "normalizedForm": "NetCDF", "offsetStart": 59, "offsetEnd": 65}, "context": "The main difference is that for achieving this result with NetCDF, an OpenMP application needed to be written, while the same result could be obtained with a one-line query in SAVIME and SciDB.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9995059967041016}, "created": {"value": false, "score": 4.5418739318847656e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999349117279053}, "created": {"value": false, "score": 0.3298248052597046}, "shared": {"value": false, "score": 2.6226043701171875e-06}}, "references": [{"label": "[31]", "normalizedForm": "[31]", "refKey": 31}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 61, "offsetEnd": 67}, "context": "Figure 8: Detailed execution time of the prediction query in SAVIME for three different models While the process using SAVIME still incurs some overhead when compared to the same process when using NumPy arrays, this overhead can be compensated by different optimizations that become possible by integrating the ML model as part of the DBMS. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.012358307838439941}, "created": {"value": false, "score": 3.5762786865234375e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 61, "offsetEnd": 67}, "context": "In Section 4 we show the results of our evaluation comparing SAVIME and SciDB and embedding SAVIME with a real application, and we also present experiments relating to the ML functionality.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9970912933349609}, "created": {"value": true, "score": 0.5702955722808838}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NumPy", "normalizedForm": "NumPy", "offsetStart": 62, "offsetEnd": 67}, "version": {"rawForm": "3.6.9", "normalizedForm": "3.6.9"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "These queries results are returned as multidimensional arrays NumPy [27], which are popular structures widely used in scientific data analysis as well as supported by ML libraries and frameworks like PyTorch, scikit-learn, and Tensorflow.", "mentionContextAttributes": {"used": {"value": false, "score": 0.04579442739486694}, "created": {"value": false, "score": 7.62939453125e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.7288393378257751}, "shared": {"value": false, "score": 7.152557373046875e-07}}, "references": [{"label": "[27]", "normalizedForm": "[27]", "refKey": 27, "offsetStart": 4877, "offsetEnd": 4881}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SciDB", "normalizedForm": "SciDB", "offsetStart": 62, "offsetEnd": 67}, "version": {"rawForm": ".9", "normalizedForm": ".9"}, "context": "Our conclusion is that the regular chunking scheme imposed by SciDB not only slows down the ingestion process significantly as it has no real impact in improving performance for simple operations as SAVIME using a more flexible data model can solve similar queries presenting a compatible performance.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00020927190780639648}, "created": {"value": false, "score": 0.004015684127807617}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999349117279053}, "created": {"value": true, "score": 0.9990279674530029}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "[38]", "normalizedForm": "[38]", "refKey": 38}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 63, "offsetEnd": 69}, "context": "We emphasize that the focus of this work is to briefly present SAVIME along with its data model and Machine Learning support.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0001373291015625}, "created": {"value": true, "score": 0.9998847246170044}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NetCDF", "normalizedForm": "NetCDF", "offsetStart": 63, "offsetEnd": 69}, "context": "The execution times considering 100 or 500 tiles in SAVIME and NetCDF are in accordance with this premise.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9939671754837036}, "created": {"value": false, "score": 7.62939453125e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999349117279053}, "created": {"value": false, "score": 0.3298248052597046}, "shared": {"value": false, "score": 2.6226043701171875e-06}}, "references": [{"label": "[31]", "normalizedForm": "[31]", "refKey": 31}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 63, "offsetEnd": 69}, "context": "In addition, results also show that it is possible to retrieve SAVIME data and generate viz files efficiently by using the special purpose visualization operator.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9421701431274414}, "created": {"value": false, "score": 5.316734313964844e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SciDB", "normalizedForm": "SciDB", "offsetStart": 64, "offsetEnd": 69}, "version": {"rawForm": ".9", "normalizedForm": ".9"}, "context": "However, under an impedance mismatch scenario, as observed with SciDB, the loading time would be significant, impacting on the simulation cost.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9314321875572205}, "created": {"value": false, "score": 8.344650268554688e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999349117279053}, "created": {"value": true, "score": 0.9990279674530029}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "[38]", "normalizedForm": "[38]", "refKey": 38}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 64, "offsetEnd": 70}, "context": "In the second approach, SAVIME is used IN-SITU, with individual SAVIME instances running on each node, the same used by the simulation code.", "mentionContextAttributes": {"used": {"value": false, "score": 0.030922532081604004}, "created": {"value": false, "score": 5.9604644775390625e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NetCDF", "normalizedForm": "NetCDF", "offsetStart": 64, "offsetEnd": 70}, "context": "We compared SAVIME with SciDB and a baseline approach using the NetCDF platform.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999349117279053}, "created": {"value": false, "score": 1.9311904907226562e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999349117279053}, "created": {"value": false, "score": 0.3298248052597046}, "shared": {"value": false, "score": 2.6226043701171875e-06}}, "references": [{"label": "[31]", "normalizedForm": "[31]", "refKey": 31}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SciDB", "normalizedForm": "SciDB", "offsetStart": 67, "offsetEnd": 72}, "version": {"rawForm": ".9", "normalizedForm": ".9"}, "context": "All data is held in a single 4D structure (TAR in SAVIME, array in SciDB and in a single NetCDF file) containing the X, Y, and Z dimensions, and an extra trial dimension to represent all 500 trials.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9299317002296448}, "created": {"value": false, "score": 6.0558319091796875e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999349117279053}, "created": {"value": true, "score": 0.9990279674530029}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "[38]", "normalizedForm": "[38]", "refKey": 38}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Catalyst", "normalizedForm": "Catalyst", "offsetStart": 67, "offsetEnd": 75}, "context": "In this context, viz tools and libraries, such as VTK and Paraview Catalyst [2] are widely used to allow researchers to gain insights about scientific datasets.", "mentionContextAttributes": {"used": {"value": false, "score": 4.0650367736816406e-05}, "created": {"value": false, "score": 0.000536501407623291}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.5072364807128906}, "created": {"value": false, "score": 0.0010356903076171875}, "shared": {"value": false, "score": 2.6226043701171875e-06}}, "references": [{"label": "[2]", "normalizedForm": "[2]", "refKey": 2, "offsetStart": 19495, "offsetEnd": 19498}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "application", "normalizedForm": "application", "offsetStart": 68, "offsetEnd": 79}, "context": "The same is true for the baseline approach, meaning that the AD-HOC application also uses the same number of cores the simulation code uses.", "mentionContextAttributes": {"used": {"value": false, "score": 0.15709763765335083}, "created": {"value": false, "score": 1.609325408935547e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9995059967041016}, "created": {"value": true, "score": 0.5702955722808838}, "shared": {"value": false, "score": 5.9604644775390625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 69, "offsetEnd": 75}, "context": "We run the simulation up to the 100th time step, and store either in SAVIME (approaches 1 and 2) or in an ENSIGHT file (approach 3), data from 50% of all the computed time steps. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9980475902557373}, "created": {"value": false, "score": 3.516674041748047e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Paraview", "normalizedForm": "Paraview", "offsetStart": 69, "offsetEnd": 77}, "context": "SAVIME is able to generate VTK data files to be directed imported by Paraview, or even to execute Catalyst analytical scripts. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00024253129959106445}, "created": {"value": false, "score": 0.00024253129959106445}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00024253129959106445}, "created": {"value": false, "score": 0.0008903145790100098}, "shared": {"value": false, "score": 2.6226043701171875e-06}}, "references": [{"label": "[2]", "normalizedForm": "[2]", "refKey": 2}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "OpenMP", "normalizedForm": "OpenMP", "offsetStart": 70, "offsetEnd": 76}, "context": "The main difference is that for achieving this result with NetCDF, an OpenMP application needed to be written, while the same result could be obtained with a one-line query in SAVIME and SciDB.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9995059967041016}, "created": {"value": false, "score": 4.5418739318847656e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9995059967041016}, "created": {"value": false, "score": 0.3298248052597046}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 71, "offsetEnd": 77}, "context": "TAR dimensions indexes form a domain of values that are represented in SAVIME in two main forms.", "mentionContextAttributes": {"used": {"value": false, "score": 0.016112029552459717}, "created": {"value": false, "score": 2.086162567138672e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TFX", "normalizedForm": "TFX", "offsetStart": 72, "offsetEnd": 75}, "context": "Such extension enables SAVIME to evaluate any ML algorithm supported by TFX.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0023195743560791016}, "created": {"value": false, "score": 0.0129317045211792}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.7853479981422424}, "created": {"value": true, "score": 0.5602536201477051}, "shared": {"value": false, "score": 3.5762786865234375e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SciDB", "normalizedForm": "SciDB", "offsetStart": 72, "offsetEnd": 77}, "version": {"rawForm": ".9", "normalizedForm": ".9"}, "context": "In Section 4 we show the results of our evaluation comparing SAVIME and SciDB and embedding SAVIME with a real application, and we also present experiments relating to the ML functionality.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9970912933349609}, "created": {"value": true, "score": 0.5702955722808838}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999349117279053}, "created": {"value": true, "score": 0.9990279674530029}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "[38]", "normalizedForm": "[38]", "refKey": 38}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "library", "normalizedForm": "library", "offsetStart": 72, "offsetEnd": 79}, "context": "To further integrate SAVIME into this process, we have also developed a library that allows the execution of SAVIME queries from the Python environment.", "mentionContextAttributes": {"used": {"value": false, "score": 2.9206275939941406e-05}, "created": {"value": true, "score": 0.9998506307601929}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9987775683403015}, "created": {"value": true, "score": 0.9998506307601929}, "shared": {"value": false, "score": 5.9604644775390625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RasDaMan", "normalizedForm": "RasDaMan", "offsetStart": 72, "offsetEnd": 83}, "context": "However, current array data model implementations, e.g., SciDB [38] and RasDaMan [4], have limitations, preventing an efficient representation of simulation datasets. ", "mentionContextAttributes": {"used": {"value": false, "score": 3.9458274841308594e-05}, "created": {"value": false, "score": 0.0022254586219787598}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 8.356571197509766e-05}, "created": {"value": false, "score": 0.07288479804992676}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SciDB", "normalizedForm": "SciDB", "offsetStart": 73, "offsetEnd": 78}, "version": {"rawForm": ".9", "normalizedForm": ".9"}, "context": "As we can see in Figure 5 on the left graph, the ingestion time taken by SciDB is almost 20 times longer than the time taken by SAVIME, due to costly rearrangements needed on data to make it conform with the underlying storage configuration.", "mentionContextAttributes": {"used": {"value": false, "score": 0.21095985174179077}, "created": {"value": false, "score": 2.0503997802734375e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999349117279053}, "created": {"value": true, "score": 0.9990279674530029}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "[38]", "normalizedForm": "[38]", "refKey": 38}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 74, "offsetEnd": 80}, "context": "In the example depicted in Listing 3, initially, a model is registered in SAVIME Listing 3: Using SAVIME query language to register and invoke a ML model by using the REGISTER_MODEL operator, which receives a model identifier on the system, the input and output dimensions, and a target attribute.", "mentionContextAttributes": {"used": {"value": false, "score": 0.131763756275177}, "created": {"value": false, "score": 1.7881393432617188e-06}, "shared": {"value": false, "score": 7.152557373046875e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 75, "offsetEnd": 81}, "context": "We refer the interested reader to the work of [20] where the details about SAVIME operators and internals are described.", "mentionContextAttributes": {"used": {"value": false, "score": 0.07807666063308716}, "created": {"value": true, "score": 0.9798352718353271}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NetCDF", "normalizedForm": "NetCDF", "offsetStart": 75, "offsetEnd": 81}, "context": "We used a sparse 4D array/TAR in SciDB and SAVIME, and a 2D dense array in NetCDF.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9998692274093628}, "created": {"value": false, "score": 8.58306884765625e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999349117279053}, "created": {"value": false, "score": 0.3298248052597046}, "shared": {"value": false, "score": 2.6226043701171875e-06}}, "references": [{"label": "[31]", "normalizedForm": "[31]", "refKey": 31}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "application", "normalizedForm": "application", "offsetStart": 77, "offsetEnd": 88}, "context": "The main difference is that for achieving this result with NetCDF, an OpenMP application needed to be written, while the same result could be obtained with a one-line query in SAVIME and SciDB.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9995059967041016}, "created": {"value": false, "score": 4.5418739318847656e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9995059967041016}, "created": {"value": true, "score": 0.5702955722808838}, "shared": {"value": false, "score": 5.9604644775390625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ENSIGHT", "normalizedForm": "ENSIGHT", "offsetStart": 78, "offsetEnd": 85}, "context": "In the third approach, SAVIME is not used, but instead, the data is stored in ENSIGHT files (the standard file format used by MHM), and analyzes are performed by an ad-hoc Message Passing Interface application in Python.", "mentionContextAttributes": {"used": {"value": false, "score": 0.05615949630737305}, "created": {"value": false, "score": 2.467632293701172e-05}, "shared": {"value": false, "score": 9.5367431640625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9980475902557373}, "created": {"value": false, "score": 4.017353057861328e-05}, "shared": {"value": false, "score": 9.5367431640625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CATALYZE", "normalizedForm": "CATALYZE", "offsetStart": 81, "offsetEnd": 89}, "context": "Visualization in SAVIME is done with the use of a special purpose operator named CATALYZE, shown in Figure 2, which gets the resulting TARs of a query, converts it to the VTK structures and optionally executes a Catalyst script with the query output. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.08838236331939697}, "created": {"value": false, "score": 7.43865966796875e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.08838236331939697}, "created": {"value": false, "score": 7.43865966796875e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SciDB", "normalizedForm": "SciDB", "offsetStart": 84, "offsetEnd": 89}, "version": {"rawForm": ".9", "normalizedForm": ".9"}, "context": "Besides, there is an extra overhead during the lightweight data compression done by SciDB, which makes the dataset roughly 50% smaller when stored but increased loading time prohibitively.", "mentionContextAttributes": {"used": {"value": false, "score": 0.2002233862876892}, "created": {"value": false, "score": 2.1457672119140625e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999349117279053}, "created": {"value": true, "score": 0.9990279674530029}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "[38]", "normalizedForm": "[38]", "refKey": 38}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "application", "normalizedForm": "application", "offsetStart": 85, "offsetEnd": 96}, "context": "This part is either done by a special operator in SAVIME, or by an AD-HOC MPI Python application using the Catalyst library (baseline), depending on the approach being run.", "mentionContextAttributes": {"used": {"value": true, "score": 0.5072364807128906}, "created": {"value": false, "score": 8.571147918701172e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9995059967041016}, "created": {"value": true, "score": 0.5702955722808838}, "shared": {"value": false, "score": 5.9604644775390625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "application", "normalizedForm": "application", "offsetStart": 85, "offsetEnd": 96}, "context": "The difference observed in performance between using SAVIME and coding a specialized application becomes less significant as we increase the number of cores being used during the analysis phase.", "mentionContextAttributes": {"used": {"value": false, "score": 0.000316619873046875}, "created": {"value": false, "score": 1.990795135498047e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9995059967041016}, "created": {"value": true, "score": 0.5702955722808838}, "shared": {"value": false, "score": 5.9604644775390625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 86, "offsetEnd": 92}, "context": "The most important observation is that, even without any previous data preprocessing, SAVIME is able to simply take advantage of the existing data structure to answer the queries efficiently, which validates the model as a feasible alternative to existing implementations. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00028949975967407227}, "created": {"value": false, "score": 0.0014986991882324219}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "application", "normalizedForm": "application", "offsetStart": 87, "offsetEnd": 98}, "context": "A mesh geometry can change or evolve during the same trial, in a scenario in which the application domain is deformable, or a different mesh can be used for every simulation run.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0002442002296447754}, "created": {"value": false, "score": 8.046627044677734e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9995059967041016}, "created": {"value": true, "score": 0.5702955722808838}, "shared": {"value": false, "score": 5.9604644775390625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SciDB", "normalizedForm": "SciDB", "offsetStart": 88, "offsetEnd": 93}, "version": {"rawForm": ".9", "normalizedForm": ".9"}, "context": "SAVIME also supports a functional DML with operators similar to the ones implemented in SciDB, for operations such as filtering data based on predicates, calculating derived values, joins and aggregations. ", "mentionContextAttributes": {"used": {"value": false, "score": 3.0875205993652344e-05}, "created": {"value": false, "score": 0.0024244189262390137}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999349117279053}, "created": {"value": true, "score": 0.9990279674530029}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "[38]", "normalizedForm": "[38]", "refKey": 38}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 88, "offsetEnd": 94}, "context": "Therefore, this shows that, for large enough problems, it is possible to load data into SAVIME without compromising the simulation code performance.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0025929808616638184}, "created": {"value": false, "score": 0.0001722574234008789}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NetCDF", "normalizedForm": "NetCDF", "offsetStart": 89, "offsetEnd": 95}, "context": "All data is held in a single 4D structure (TAR in SAVIME, array in SciDB and in a single NetCDF file) containing the X, Y, and Z dimensions, and an extra trial dimension to represent all 500 trials.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9299317002296448}, "created": {"value": false, "score": 6.0558319091796875e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999349117279053}, "created": {"value": false, "score": 0.3298248052597046}, "shared": {"value": false, "score": 2.6226043701171875e-06}}, "references": [{"label": "[31]", "normalizedForm": "[31]", "refKey": 31}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 89, "offsetEnd": 95}, "context": "In Figure 7, we can see that the total execution time of the prediction query when using SAVIME is 1.8, 1.85, and 1.4 times the total execution time of the equivalent operation when using NumPy, for models A, B, and C respectively.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9731576442718506}, "created": {"value": false, "score": 1.3709068298339844e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 89, "offsetEnd": 95}, "context": "Furthermore, as already demonstrated in previous sections, the ingestion time when using SAVIME is very much faster than using other array DBMSs, being only a subset of the dataset necessary to run the query.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0013432502746582031}, "created": {"value": false, "score": 1.9788742065429688e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 91, "offsetEnd": 97}, "context": "Moreover, as the Simulation Only run shows, the overhead introduced by storing the data in SAVIME or as an ENSIGHT file is negligible, which confirms the claim that SAVIME can be introduced into the simulation process without incurring in extra overhead.", "mentionContextAttributes": {"used": {"value": false, "score": 0.024771571159362793}, "created": {"value": false, "score": 4.017353057861328e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 91, "offsetEnd": 97}, "context": "This approach offers some extra overhead and contention since all data is sent to a single SAVIME instance, but this enables posterior analysis that transverse the entire dataset without requiring further data transfers.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00010395050048828125}, "created": {"value": false, "score": 8.571147918701172e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 92, "offsetEnd": 98}, "context": "In Section 4 we show the results of our evaluation comparing SAVIME and SciDB and embedding SAVIME with a real application, and we also present experiments relating to the ML functionality.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9970912933349609}, "created": {"value": true, "score": 0.5702955722808838}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NumPy", "normalizedForm": "NumPy", "offsetStart": 93, "offsetEnd": 98}, "version": {"rawForm": "3.6.9", "normalizedForm": "3.6.9"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "The results of these queries are returned to the environment in the form of multidimensional NumPy arrays.", "mentionContextAttributes": {"used": {"value": true, "score": 0.6759039163589478}, "created": {"value": false, "score": 9.000301361083984e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.7288393378257751}, "shared": {"value": false, "score": 7.152557373046875e-07}}, "references": [{"label": "[27]", "normalizedForm": "[27]", "refKey": 27}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "library", "normalizedForm": "library", "offsetStart": 93, "offsetEnd": 100}, "context": "We also demonstrate how SAVIME can be easily integrated into the ML process, by presenting a library for communication from a Python environment, and a performance comparison with NumPy arrays.", "mentionContextAttributes": {"used": {"value": false, "score": 0.33397430181503296}, "created": {"value": true, "score": 0.7288393378257751}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9987775683403015}, "created": {"value": true, "score": 0.9998506307601929}, "shared": {"value": false, "score": 5.9604644775390625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 94, "offsetEnd": 100}, "context": "In this scenario, the data does not need to be transferred, since it is maintained in a local SAVIME instance that shares the same computational resources used by the simulation code.", "mentionContextAttributes": {"used": {"value": false, "score": 0.025061726570129395}, "created": {"value": false, "score": 1.71661376953125e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "implicit", "software-name": {"rawForm": "scripts", "normalizedForm": "scripts", "offsetStart": 96, "offsetEnd": 103}, "context": "Since Catalyst is embedded in SAVIME, it is possible to create visualization files and even run scripts with data harvested directly from SAVIME's memory space. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00017911195755004883}, "created": {"value": false, "score": 0.0010356903076171875}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.8456658720970154}, "created": {"value": false, "score": 0.005414247512817383}, "shared": {"value": false, "score": 0.21542882919311523}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Paraview", "normalizedForm": "Paraview", "offsetStart": 96, "offsetEnd": 104}, "context": "Therefore, scientific file formats such as HDF [39] and NetCDF [31], special libraries, such as Paraview Catalyst [2] and I/O interfaces, such as ADIOS [19] and GLEAN [40] are preferred for maintaining and analyzing scientific datasets.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00011646747589111328}, "created": {"value": false, "score": 1.7404556274414062e-05}, "shared": {"value": false, "score": 2.6226043701171875e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00024253129959106445}, "created": {"value": false, "score": 0.0008903145790100098}, "shared": {"value": false, "score": 2.6226043701171875e-06}}, "references": [{"label": "[2]", "normalizedForm": "[2]", "refKey": 2, "offsetStart": 1990, "offsetEnd": 1993}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 97, "offsetEnd": 103}, "context": "A dataset is a collection of data values of the same type, like a column in a column-store DBMS (SAVIME uses vertical partitioning). ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0004152655601501465}, "created": {"value": false, "score": 1.1920928955078125e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 97, "offsetEnd": 103}, "context": "From the point of view of the effect of SAVIME on simulation scalability, the storage of data in SAVIME does not impair the capability of the simulation code to scale up to 16 cores.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0003808736801147461}, "created": {"value": false, "score": 9.906291961669922e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 98, "offsetEnd": 104}, "context": "2. Implementation of a data model that offers an elegant representation for array data and allows SAVIME to take advantage of the preexisting data partitioning and sorting to process queries efficiently 3. Incorporation of the library Paraview Catalyst, which enables the analysis and visualization code to harvest data directly from SAVIME's memory space, avoiding the overhead of creating a separate application to query the DBMS and convert query results to the visualization file format.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0006592869758605957}, "created": {"value": false, "score": 0.26740431785583496}, "shared": {"value": false, "score": 5.9604644775390625e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 98, "offsetEnd": 104}, "context": "In the example depicted in Listing 3, initially, a model is registered in SAVIME Listing 3: Using SAVIME query language to register and invoke a ML model by using the REGISTER_MODEL operator, which receives a model identifier on the system, the input and output dimensions, and a target attribute.", "mentionContextAttributes": {"used": {"value": false, "score": 0.131763756275177}, "created": {"value": false, "score": 1.7881393432617188e-06}, "shared": {"value": false, "score": 7.152557373046875e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Catalyst", "normalizedForm": "Catalyst", "offsetStart": 98, "offsetEnd": 106}, "context": "SAVIME is able to generate VTK data files to be directed imported by Paraview, or even to execute Catalyst analytical scripts. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00024253129959106445}, "created": {"value": false, "score": 0.00024253129959106445}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.5072364807128906}, "created": {"value": false, "score": 0.0010356903076171875}, "shared": {"value": false, "score": 2.6226043701171875e-06}}, "references": [{"label": "[2]", "normalizedForm": "[2]", "refKey": 2}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NetCDF", "normalizedForm": "NetCDF", "offsetStart": 101, "offsetEnd": 107}, "context": "In this section, we compare SAVIME, SciDB (version 16.9), and a third approach based on the usage of NetCDF files (version 4.0).", "mentionContextAttributes": {"used": {"value": true, "score": 0.7752876281738281}, "created": {"value": false, "score": 6.9141387939453125e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999349117279053}, "created": {"value": false, "score": 0.3298248052597046}, "shared": {"value": false, "score": 2.6226043701171875e-06}}, "references": [{"label": "[31]", "normalizedForm": "[31]", "refKey": 31}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 104, "offsetEnd": 110}, "context": "We performed the experiments 10 times and evaluated the average runtime of each of these steps, both in SAVIME and by using NumPy arrays.", "mentionContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": false, "score": 2.1696090698242188e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 105, "offsetEnd": 111}, "context": "Therefore, to cope with the growing need for ML support in scientific research, we have implemented into SAVIME an ML extension through communication with the Tensorflow Extended (TFX) platform [6], integrating the ML process into the DBMS.", "mentionContextAttributes": {"used": {"value": false, "score": 0.000932157039642334}, "created": {"value": true, "score": 0.5602536201477051}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 105, "offsetEnd": 111}, "context": "In this section, we evaluate the amount of overhead imposed on the simulation code when integrating with SAVIME.", "mentionContextAttributes": {"used": {"value": false, "score": 0.4888969659805298}, "created": {"value": false, "score": 0.000756382942199707}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Catalyst", "normalizedForm": "Catalyst", "offsetStart": 105, "offsetEnd": 113}, "context": "Therefore, scientific file formats such as HDF [39] and NetCDF [31], special libraries, such as Paraview Catalyst [2] and I/O interfaces, such as ADIOS [19] and GLEAN [40] are preferred for maintaining and analyzing scientific datasets.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00011646747589111328}, "created": {"value": false, "score": 1.7404556274414062e-05}, "shared": {"value": false, "score": 2.6226043701171875e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.5072364807128906}, "created": {"value": false, "score": 0.0010356903076171875}, "shared": {"value": false, "score": 2.6226043701171875e-06}}, "references": [{"label": "[2]", "normalizedForm": "[2]", "refKey": 2, "offsetStart": 1990, "offsetEnd": 1993}]}, {"type": "software", "software-type": "implicit", "software-name": {"rawForm": "interface", "normalizedForm": "interface", "offsetStart": 105, "offsetEnd": 114}, "language": {"rawForm": "Python", "normalizedForm": "Python", "wikidataId": "Q28865", "offsetStart": 98, "offsetEnd": 104}, "context": "To provide an easy integration between popular ML analysis tools and SAV-IME, we also developed a Python interface named PySAVIME. ", "mentionContextAttributes": {"used": {"value": false, "score": 2.562999725341797e-05}, "created": {"value": true, "score": 0.9993971586227417}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 2.562999725341797e-05}, "created": {"value": true, "score": 0.9993971586227417}, "shared": {"value": false, "score": 4.76837158203125e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 106, "offsetEnd": 112}, "context": "Preliminarily, we start the evaluation by measuring the overhead of loading data in a remote node running SAVIME.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9390775561332703}, "created": {"value": true, "score": 0.839181125164032}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ENSIGHT", "normalizedForm": "ENSIGHT", "offsetStart": 106, "offsetEnd": 113}, "context": "We run the simulation up to the 100th time step, and store either in SAVIME (approaches 1 and 2) or in an ENSIGHT file (approach 3), data from 50% of all the computed time steps. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9980475902557373}, "created": {"value": false, "score": 3.516674041748047e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9980475902557373}, "created": {"value": false, "score": 4.017353057861328e-05}, "shared": {"value": false, "score": 9.5367431640625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ENSIGHT", "normalizedForm": "ENSIGHT", "offsetStart": 107, "offsetEnd": 114}, "context": "Moreover, as the Simulation Only run shows, the overhead introduced by storing the data in SAVIME or as an ENSIGHT file is negligible, which confirms the claim that SAVIME can be introduced into the simulation process without incurring in extra overhead.", "mentionContextAttributes": {"used": {"value": false, "score": 0.024771571159362793}, "created": {"value": false, "score": 4.017353057861328e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9980475902557373}, "created": {"value": false, "score": 4.017353057861328e-05}, "shared": {"value": false, "score": 9.5367431640625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Catalyst", "normalizedForm": "Catalyst", "offsetStart": 107, "offsetEnd": 115}, "context": "This part is either done by a special operator in SAVIME, or by an AD-HOC MPI Python application using the Catalyst library (baseline), depending on the approach being run. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.5072364807128906}, "created": {"value": false, "score": 8.571147918701172e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.5072364807128906}, "created": {"value": false, "score": 0.0010356903076171875}, "shared": {"value": false, "score": 2.6226043701171875e-06}}, "references": [{"label": "[2]", "normalizedForm": "[2]", "refKey": 2}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "application", "normalizedForm": "application", "offsetStart": 108, "offsetEnd": 119}, "context": "We use the simulation tools based on the MHM numerical method [14] as a representative numerical simulation application.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9851198792457581}, "created": {"value": false, "score": 0.00010657310485839844}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9995059967041016}, "created": {"value": true, "score": 0.5702955722808838}, "shared": {"value": false, "score": 5.9604644775390625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 109, "offsetEnd": 115}, "context": "To further integrate SAVIME into this process, we have also developed a library that allows the execution of SAVIME queries from the Python environment.", "mentionContextAttributes": {"used": {"value": false, "score": 2.9206275939941406e-05}, "created": {"value": true, "score": 0.9998506307601929}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "application", "normalizedForm": "application", "offsetStart": 111, "offsetEnd": 122}, "context": "In Section 4 we show the results of our evaluation comparing SAVIME and SciDB and embedding SAVIME with a real application, and we also present experiments relating to the ML functionality.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9970912933349609}, "created": {"value": true, "score": 0.5702955722808838}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9995059967041016}, "created": {"value": true, "score": 0.5702955722808838}, "shared": {"value": false, "score": 5.9604644775390625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 112, "offsetEnd": 118}, "context": "We also considered the performance of exact window queries, We implement these queries as specific operators in SAVIME and SciDB and with the help of a custom OpenMP application using the NetCDF library. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9987775683403015}, "created": {"value": false, "score": 0.3298248052597046}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 112, "offsetEnd": 118}, "context": "As the next step in our research agenda to manage scientific array data, we have developed the array DBMS named SAVIME, which implements the TARS data model.", "mentionContextAttributes": {"used": {"value": false, "score": 6.783008575439453e-05}, "created": {"value": true, "score": 0.9998134970664978}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 112, "offsetEnd": 118}, "context": "When we increase the number of cores used by the simulation code, we also increase the numbers of cores used by SAVIME for analysis.", "mentionContextAttributes": {"used": {"value": false, "score": 0.19686520099639893}, "created": {"value": false, "score": 0.00020629167556762695}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "library", "normalizedForm": "library", "offsetStart": 112, "offsetEnd": 119}, "context": "SAVIME is also different from TileDB [28], which is not exactly a DBMS with a declarative query language, but a library that deals with array data.", "mentionContextAttributes": {"used": {"value": false, "score": 5.6743621826171875e-05}, "created": {"value": false, "score": 6.4373016357421875e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9987775683403015}, "created": {"value": true, "score": 0.9998506307601929}, "shared": {"value": false, "score": 5.9604644775390625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 116, "offsetEnd": 122}, "context": "In this article, we present SAVIME and the TARS data model, along with a performance evaluation in which we compare SAVIME with SciDB [38], the state-of-the-art array DBMS.", "mentionContextAttributes": {"used": {"value": false, "score": 0.13062399625778198}, "created": {"value": true, "score": 0.9990279674530029}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "library", "normalizedForm": "library", "offsetStart": 116, "offsetEnd": 123}, "context": "This part is either done by a special operator in SAVIME, or by an AD-HOC MPI Python application using the Catalyst library (baseline), depending on the approach being run.", "mentionContextAttributes": {"used": {"value": true, "score": 0.5072364807128906}, "created": {"value": false, "score": 8.571147918701172e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9987775683403015}, "created": {"value": true, "score": 0.9998506307601929}, "shared": {"value": false, "score": 5.9604644775390625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "scripts", "normalizedForm": "scripts", "offsetStart": 118, "offsetEnd": 125}, "context": "SAVIME is able to generate VTK data files to be directed imported by Paraview, or even to execute Catalyst analytical scripts. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00024253129959106445}, "created": {"value": false, "score": 0.00024253129959106445}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.8456658720970154}, "created": {"value": false, "score": 0.005414247512817383}, "shared": {"value": false, "score": 0.21542882919311523}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 119, "offsetEnd": 125}, "context": "Figure 8: Detailed execution time of the prediction query in SAVIME for three different models While the process using SAVIME still incurs some overhead when compared to the same process when using NumPy arrays, this overhead can be compensated by different optimizations that become possible by integrating the ML model as part of the DBMS.", "mentionContextAttributes": {"used": {"value": false, "score": 0.012358307838439941}, "created": {"value": false, "score": 3.5762786865234375e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 120, "offsetEnd": 126}, "context": "The SAVIME characteristic presented as an advantage (3) in Section 1 is directly related to this feature implemented in SAVIME.", "mentionContextAttributes": {"used": {"value": false, "score": 0.20780187845230103}, "created": {"value": false, "score": 0.00235670804977417}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 120, "offsetEnd": 126}, "context": "In this section, we briefly recall the TARS data model [23] and give a detailed description of how it is implemented in SAVIME.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00547635555267334}, "created": {"value": false, "score": 0.12594568729400635}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PySAVIME", "normalizedForm": "PySAVIME", "offsetStart": 121, "offsetEnd": 129}, "context": "To provide an easy integration between popular ML analysis tools and SAV-IME, we also developed a Python interface named PySAVIME. ", "mentionContextAttributes": {"used": {"value": false, "score": 2.562999725341797e-05}, "created": {"value": true, "score": 0.9993971586227417}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.677758514881134}, "created": {"value": true, "score": 0.9993971586227417}, "shared": {"value": false, "score": 4.76837158203125e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SciDB", "normalizedForm": "SciDB", "offsetStart": 123, "offsetEnd": 128}, "version": {"rawForm": ".9", "normalizedForm": ".9"}, "context": "We also considered the performance of exact window queries, We implement these queries as specific operators in SAVIME and SciDB and with the help of a custom OpenMP application using the NetCDF library. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9987775683403015}, "created": {"value": false, "score": 0.3298248052597046}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999349117279053}, "created": {"value": true, "score": 0.9990279674530029}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "[38]", "normalizedForm": "[38]", "refKey": 38}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 123, "offsetEnd": 129}, "context": "The experimental results show that SciDB suffers from the aforementioned problems, not being an ideal alternative and that SAVIME enables faster data ingestion while maintaining similar performance during window queries execution.", "mentionContextAttributes": {"used": {"value": true, "score": 0.8134169578552246}, "created": {"value": false, "score": 5.459785461425781e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NumPy", "normalizedForm": "NumPy", "offsetStart": 124, "offsetEnd": 129}, "version": {"rawForm": "3.6.9", "normalizedForm": "3.6.9"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "We performed the experiments 10 times and evaluated the average runtime of each of these steps, both in SAVIME and by using NumPy arrays.", "mentionContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": false, "score": 2.1696090698242188e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.7288393378257751}, "shared": {"value": false, "score": 7.152557373046875e-07}}, "references": [{"label": "[27]", "normalizedForm": "[27]", "refKey": 27}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 125, "offsetEnd": 131}, "context": "The IN-TRANSIT approach illustrates a scenario in which all data is sent to a single computational node and kept in a single SAVIME instance.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0002910494804382324}, "created": {"value": false, "score": 6.282329559326172e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "library", "normalizedForm": "library", "offsetStart": 126, "offsetEnd": 133}, "context": "In fact, in order to minimize the overhead caused by the addition of a new layer between the DBMS and the user, the developed library makes extensive use of memory views in Cython.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00010120868682861328}, "created": {"value": false, "score": 0.003283858299255371}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9987775683403015}, "created": {"value": true, "score": 0.9998506307601929}, "shared": {"value": false, "score": 5.9604644775390625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SciDB", "normalizedForm": "SciDB", "offsetStart": 128, "offsetEnd": 133}, "version": {"rawForm": ".9", "normalizedForm": ".9"}, "context": "In this article, we present SAVIME and the TARS data model, along with a performance evaluation in which we compare SAVIME with SciDB [38], the state-of-the-art array DBMS.", "mentionContextAttributes": {"used": {"value": false, "score": 0.13062399625778198}, "created": {"value": true, "score": 0.9990279674530029}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999349117279053}, "created": {"value": true, "score": 0.9990279674530029}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "[38]", "normalizedForm": "[38]", "refKey": 38, "offsetStart": 6071, "offsetEnd": 6075}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 128, "offsetEnd": 134}, "context": "As we can see in Figure 5 on the left graph, the ingestion time taken by SciDB is almost 20 times longer than the time taken by SAVIME, due to costly rearrangements needed on data to make it conform with the underlying storage configuration.", "mentionContextAttributes": {"used": {"value": false, "score": 0.21095985174179077}, "created": {"value": false, "score": 2.0503997802734375e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 129, "offsetEnd": 135}, "context": "Data is kept in a shared-memory file system to simulate an in-transit data analysis, in which data is not kept on disk (for both SAVIME and SciDB).", "mentionContextAttributes": {"used": {"value": false, "score": 0.13104379177093506}, "created": {"value": false, "score": 6.99758529663086e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 129, "offsetEnd": 135}, "context": "To mitigate these problems, and to also offer the benefits of declarative array processing in memory, we propose a system called SAVIME.", "mentionContextAttributes": {"used": {"value": false, "score": 7.236003875732422e-05}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 138, "offsetEnd": 144}, "context": "Since Catalyst is embedded in SAVIME, it is possible to create visualization files and even run scripts with data harvested directly from SAVIME's memory space.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00017911195755004883}, "created": {"value": false, "score": 0.0010356903076171875}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SciDB", "normalizedForm": "SciDB", "offsetStart": 140, "offsetEnd": 145}, "version": {"rawForm": ".9", "normalizedForm": ".9"}, "context": "Data is kept in a shared-memory file system to simulate an in-transit data analysis, in which data is not kept on disk (for both SAVIME and SciDB).", "mentionContextAttributes": {"used": {"value": false, "score": 0.13104379177093506}, "created": {"value": false, "score": 6.99758529663086e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999349117279053}, "created": {"value": true, "score": 0.9990279674530029}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "[38]", "normalizedForm": "[38]", "refKey": 38}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PySAVIME", "normalizedForm": "PySAVIME", "offsetStart": 144, "offsetEnd": 152}, "context": "These are envelopes for data buffers that aim to minimize the number of unnecessary copies between data from different programs, in the case of PySAVIME, between the DBMS C++ Client and the library.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00019782781600952148}, "created": {"value": false, "score": 0.0003083944320678711}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.677758514881134}, "created": {"value": true, "score": 0.9993971586227417}, "shared": {"value": false, "score": 4.76837158203125e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "VTKArrays", "normalizedForm": "VTKArrays", "offsetStart": 147, "offsetEnd": 156}, "context": "Even scientific visualization libraries, such as VTK [35], which allows the most varied grids to be represented and visualized, has arrays (called VTKArrays) as its underlying data structure.", "mentionContextAttributes": {"used": {"value": false, "score": 5.4001808166503906e-05}, "created": {"value": false, "score": 6.759166717529297e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 5.4001808166503906e-05}, "created": {"value": false, "score": 6.759166717529297e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NetCDF", "normalizedForm": "NetCDF", "offsetStart": 149, "offsetEnd": 155}, "context": "SciDB seems to be more sensible to tiling granularity, requiring fine-grained tiles that match the window query to have a performance similar to the NetCDF approach.", "mentionContextAttributes": {"used": {"value": false, "score": 3.6597251892089844e-05}, "created": {"value": false, "score": 4.4226646423339844e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999349117279053}, "created": {"value": false, "score": 0.3298248052597046}, "shared": {"value": false, "score": 2.6226043701171875e-06}}, "references": [{"label": "[31]", "normalizedForm": "[31]", "refKey": 31}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NumPy", "normalizedForm": "NumPy", "offsetStart": 153, "offsetEnd": 158}, "version": {"rawForm": "3.6.9", "normalizedForm": "3.6.9"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "Then we demonstrate how SAVIME can be a feasible tool integrated into the ML process by comparing its execution time with the equivalent procedure using NumPy arrays.", "mentionContextAttributes": {"used": {"value": true, "score": 0.796538770198822}, "created": {"value": false, "score": 0.001495957374572754}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.7288393378257751}, "shared": {"value": false, "score": 7.152557373046875e-07}}, "references": [{"label": "[27]", "normalizedForm": "[27]", "refKey": 27}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Tensorflow", "normalizedForm": "Tensorflow", "offsetStart": 157, "offsetEnd": 167}, "context": "We highlight the fact that because SAVIME only executes trained models, the task of model training must be delegated to other specialized frameworks such as Tensorflow or Pytorch.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0004494786262512207}, "created": {"value": false, "score": 0.0005103349685668945}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998973608016968}, "created": {"value": true, "score": 0.5602536201477051}, "shared": {"value": false, "score": 3.5762786865234375e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "OpenMP", "normalizedForm": "OpenMP", "offsetStart": 159, "offsetEnd": 165}, "context": "We also considered the performance of exact window queries, We implement these queries as specific operators in SAVIME and SciDB and with the help of a custom OpenMP application using the NetCDF library. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9987775683403015}, "created": {"value": false, "score": 0.3298248052597046}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9995059967041016}, "created": {"value": false, "score": 0.3298248052597046}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Tensorflow", "normalizedForm": "Tensorflow", "offsetStart": 159, "offsetEnd": 169}, "context": "Therefore, to cope with the growing need for ML support in scientific research, we have implemented into SAVIME an ML extension through communication with the Tensorflow Extended (TFX) platform [6], integrating the ML process into the DBMS.", "mentionContextAttributes": {"used": {"value": false, "score": 0.000932157039642334}, "created": {"value": true, "score": 0.5602536201477051}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998973608016968}, "created": {"value": true, "score": 0.5602536201477051}, "shared": {"value": false, "score": 3.5762786865234375e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 165, "offsetEnd": 171}, "context": "Moreover, as the Simulation Only run shows, the overhead introduced by storing the data in SAVIME or as an ENSIGHT file is negligible, which confirms the claim that SAVIME can be introduced into the simulation process without incurring in extra overhead.", "mentionContextAttributes": {"used": {"value": false, "score": 0.024771571159362793}, "created": {"value": false, "score": 4.017353057861328e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "application", "normalizedForm": "application", "offsetStart": 166, "offsetEnd": 177}, "context": "We also considered the performance of exact window queries, We implement these queries as specific operators in SAVIME and SciDB and with the help of a custom OpenMP application using the NetCDF library.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9987775683403015}, "created": {"value": false, "score": 0.3298248052597046}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9995059967041016}, "created": {"value": true, "score": 0.5702955722808838}, "shared": {"value": false, "score": 5.9604644775390625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Pytorch", "normalizedForm": "Pytorch", "offsetStart": 171, "offsetEnd": 178}, "context": "We highlight the fact that because SAVIME only executes trained models, the task of model training must be delegated to other specialized frameworks such as Tensorflow or Pytorch.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0004494786262512207}, "created": {"value": false, "score": 0.0005103349685668945}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0004494786262512207}, "created": {"value": false, "score": 0.0005103349685668945}, "shared": {"value": false, "score": 1.1920928955078125e-07}}}, {"type": "software", "software-type": "environment", "software-name": {"rawForm": "Cython", "normalizedForm": "Cython", "offsetStart": 173, "offsetEnd": 179}, "context": "In fact, in order to minimize the overhead caused by the addition of a new layer between the DBMS and the user, the developed library makes extensive use of memory views in Cython. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00010120868682861328}, "created": {"value": false, "score": 0.003283858299255371}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00015842914581298828}, "created": {"value": true, "score": 0.9749465584754944}, "shared": {"value": false, "score": 3.5762786865234375e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 176, "offsetEnd": 182}, "context": "The main difference is that for achieving this result with NetCDF, an OpenMP application needed to be written, while the same result could be obtained with a one-line query in SAVIME and SciDB.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9995059967041016}, "created": {"value": false, "score": 4.5418739318847656e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TFX", "normalizedForm": "TFX", "offsetStart": 180, "offsetEnd": 183}, "context": "Therefore, to cope with the growing need for ML support in scientific research, we have implemented into SAVIME an ML extension through communication with the Tensorflow Extended (TFX) platform [6], integrating the ML process into the DBMS.", "mentionContextAttributes": {"used": {"value": false, "score": 0.000932157039642334}, "created": {"value": true, "score": 0.5602536201477051}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.7853479981422424}, "created": {"value": true, "score": 0.5602536201477051}, "shared": {"value": false, "score": 3.5762786865234375e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NumPy", "normalizedForm": "NumPy", "offsetStart": 180, "offsetEnd": 185}, "version": {"rawForm": "3.6.9", "normalizedForm": "3.6.9"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "We also demonstrate how SAVIME can be easily integrated into the ML process, by presenting a library for communication from a Python environment, and a performance comparison with NumPy arrays.", "mentionContextAttributes": {"used": {"value": false, "score": 0.33397430181503296}, "created": {"value": true, "score": 0.7288393378257751}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.7288393378257751}, "shared": {"value": false, "score": 7.152557373046875e-07}}, "references": [{"label": "[27]", "normalizedForm": "[27]", "refKey": 27}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 181, "offsetEnd": 187}, "context": "Results show that for very small meshes, which are computationally cheap, the time to load data is more significant, and thus there is some overhead (around 40%) in storing data in SAVIME.", "mentionContextAttributes": {"used": {"value": false, "score": 0.33340346813201904}, "created": {"value": false, "score": 2.5272369384765625e-05}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SciDB", "normalizedForm": "SciDB", "offsetStart": 187, "offsetEnd": 192}, "version": {"rawForm": ".9", "normalizedForm": ".9"}, "context": "The main difference is that for achieving this result with NetCDF, an OpenMP application needed to be written, while the same result could be obtained with a one-line query in SAVIME and SciDB.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9995059967041016}, "created": {"value": false, "score": 4.5418739318847656e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999349117279053}, "created": {"value": true, "score": 0.9990279674530029}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "[38]", "normalizedForm": "[38]", "refKey": 38}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NumPy", "normalizedForm": "NumPy", "offsetStart": 188, "offsetEnd": 193}, "version": {"rawForm": "3.6.9", "normalizedForm": "3.6.9"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "In Figure 7, we can see that the total execution time of the prediction query when using SAVIME is 1.8, 1.85, and 1.4 times the total execution time of the equivalent operation when using NumPy, for models A, B, and C respectively.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9731576442718506}, "created": {"value": false, "score": 1.3709068298339844e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.7288393378257751}, "shared": {"value": false, "score": 7.152557373046875e-07}}, "references": [{"label": "[27]", "normalizedForm": "[27]", "refKey": 27}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NetCDF", "normalizedForm": "NetCDF", "offsetStart": 188, "offsetEnd": 194}, "context": "We also considered the performance of exact window queries, We implement these queries as specific operators in SAVIME and SciDB and with the help of a custom OpenMP application using the NetCDF library. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9987775683403015}, "created": {"value": false, "score": 0.3298248052597046}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999349117279053}, "created": {"value": false, "score": 0.3298248052597046}, "shared": {"value": false, "score": 2.6226043701171875e-06}}, "references": [{"label": "[31]", "normalizedForm": "[31]", "refKey": 31}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "library", "normalizedForm": "library", "offsetStart": 190, "offsetEnd": 197}, "context": "These are envelopes for data buffers that aim to minimize the number of unnecessary copies between data from different programs, in the case of PySAVIME, between the DBMS C++ Client and the library.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00019782781600952148}, "created": {"value": false, "score": 0.0003083944320678711}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9987775683403015}, "created": {"value": true, "score": 0.9998506307601929}, "shared": {"value": false, "score": 5.9604644775390625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "library", "normalizedForm": "library", "offsetStart": 195, "offsetEnd": 202}, "context": "We also considered the performance of exact window queries, We implement these queries as specific operators in SAVIME and SciDB and with the help of a custom OpenMP application using the NetCDF library.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9987775683403015}, "created": {"value": false, "score": 0.3298248052597046}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9987775683403015}, "created": {"value": true, "score": 0.9998506307601929}, "shared": {"value": false, "score": 5.9604644775390625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NumPy", "normalizedForm": "NumPy", "offsetStart": 198, "offsetEnd": 203}, "version": {"rawForm": "3.6.9", "normalizedForm": "3.6.9"}, "language": {"rawForm": "Python", "normalizedForm": "Python"}, "context": "Figure 8: Detailed execution time of the prediction query in SAVIME for three different models While the process using SAVIME still incurs some overhead when compared to the same process when using NumPy arrays, this overhead can be compensated by different optimizations that become possible by integrating the ML model as part of the DBMS.", "mentionContextAttributes": {"used": {"value": false, "score": 0.012358307838439941}, "created": {"value": false, "score": 3.5762786865234375e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.7288393378257751}, "shared": {"value": false, "score": 7.152557373046875e-07}}, "references": [{"label": "[27]", "normalizedForm": "[27]", "refKey": 27}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "application", "normalizedForm": "application", "offsetStart": 198, "offsetEnd": 209}, "context": "In the third approach, SAVIME is not used, but instead, the data is stored in ENSIGHT files (the standard file format used by MHM), and analyzes are performed by an ad-hoc Message Passing Interface application in Python.", "mentionContextAttributes": {"used": {"value": false, "score": 0.05615949630737305}, "created": {"value": false, "score": 2.467632293701172e-05}, "shared": {"value": false, "score": 9.5367431640625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9995059967041016}, "created": {"value": true, "score": 0.5702955722808838}, "shared": {"value": false, "score": 5.9604644775390625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 199, "offsetEnd": 205}, "context": "Our conclusion is that the regular chunking scheme imposed by SciDB not only slows down the ingestion process significantly as it has no real impact in improving performance for simple operations as SAVIME using a more flexible data model can solve similar queries presenting a compatible performance.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00020927190780639648}, "created": {"value": false, "score": 0.004015684127807617}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PyTorch", "normalizedForm": "PyTorch", "offsetStart": 200, "offsetEnd": 207}, "context": "These queries results are returned as multidimensional arrays NumPy [27], which are popular structures widely used in scientific data analysis as well as supported by ML libraries and frameworks like PyTorch, scikit-learn, and Tensorflow.", "mentionContextAttributes": {"used": {"value": false, "score": 0.04579424858093262}, "created": {"value": false, "score": 7.62939453125e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.04579424858093262}, "created": {"value": false, "score": 7.62939453125e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 209, "offsetEnd": 215}, "context": "In Figure 6 we can see the time of running the simulation and discarding the data, which is the time to solely carry out the computations without any I/O whatsoever and the time to transfer and load data into SAVIME.", "mentionContextAttributes": {"used": {"value": true, "score": 0.5548669695854187}, "created": {"value": false, "score": 0.0003223419189453125}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "scikit-learn", "normalizedForm": "scikit-learn", "offsetStart": 209, "offsetEnd": 221}, "context": "These queries results are returned as multidimensional arrays NumPy [27], which are popular structures widely used in scientific data analysis as well as supported by ML libraries and frameworks like PyTorch, scikit-learn, and Tensorflow.", "mentionContextAttributes": {"used": {"value": false, "score": 0.04579424858093262}, "created": {"value": false, "score": 7.62939453125e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.04579424858093262}, "created": {"value": false, "score": 7.62939453125e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "environment", "software-name": {"rawForm": "Catalyst", "normalizedForm": "Catalyst", "offsetStart": 212, "offsetEnd": 220}, "context": "Visualization in SAVIME is done with the use of a special purpose operator named CATALYZE, shown in Figure 2, which gets the resulting TARs of a query, converts it to the VTK structures and optionally executes a Catalyst script with the query output. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.08838236331939697}, "created": {"value": false, "score": 7.43865966796875e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.5072364807128906}, "created": {"value": false, "score": 0.0010356903076171875}, "shared": {"value": false, "score": 2.6226043701171875e-06}}, "references": [{"label": "[2]", "normalizedForm": "[2]", "refKey": 2}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Tensorflow", "normalizedForm": "Tensorflow", "offsetStart": 216, "offsetEnd": 226}, "context": "To demonstrate how SAVIME is a viable alternative in terms of performance when applied to the ML process, we compared the execution time of a prediction query run in the system with the equivalent procedure invoking Tensorflow Extended from a Python environment using only NumPy arrays.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9998973608016968}, "created": {"value": false, "score": 3.159046173095703e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998973608016968}, "created": {"value": true, "score": 0.5602536201477051}, "shared": {"value": false, "score": 3.5762786865234375e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PySAVIME", "normalizedForm": "PySAVIME", "offsetStart": 219, "offsetEnd": 227}, "context": "Figure 4, to the left, demonstrates a query invoking the SUBSET operator into  The tar_definition, contains information about the name of the target-tar, its dimensions and attribute values, and is is created using the PySAVIME command define. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.677758514881134}, "created": {"value": false, "score": 1.0728836059570312e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.677758514881134}, "created": {"value": true, "score": 0.9993971586227417}, "shared": {"value": false, "score": 4.76837158203125e-07}}}, {"type": "software", "software-type": "implicit", "software-name": {"rawForm": "script", "normalizedForm": "script", "offsetStart": 221, "offsetEnd": 227}, "context": "Visualization in SAVIME is done with the use of a special purpose operator named CATALYZE, shown in Figure 2, which gets the resulting TARs of a query, converts it to the VTK structures and optionally executes a Catalyst script with the query output. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.08838236331939697}, "created": {"value": false, "score": 7.43865966796875e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.08838236331939697}, "created": {"value": false, "score": 0.07288479804992676}, "shared": {"value": false, "score": 3.5762786865234375e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 223, "offsetEnd": 229}, "context": "The authors would like to thank Yania Souto, for the ML models used on the experiments, as well as Brian Tsan and Florin Rusu from the University of California, Merced, for contributions to the ML feature implementation in SAVIME.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9402667880058289}, "created": {"value": false, "score": 0.0012740492820739746}, "shared": {"value": false, "score": 7.152557373046875e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "library", "normalizedForm": "library", "offsetStart": 227, "offsetEnd": 234}, "context": "2. Implementation of a data model that offers an elegant representation for array data and allows SAVIME to take advantage of the preexisting data partitioning and sorting to process queries efficiently 3. Incorporation of the library Paraview Catalyst, which enables the analysis and visualization code to harvest data directly from SAVIME's memory space, avoiding the overhead of creating a separate application to query the DBMS and convert query results to the visualization file format.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0006592869758605957}, "created": {"value": false, "score": 0.2674041986465454}, "shared": {"value": false, "score": 5.9604644775390625e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9987775683403015}, "created": {"value": true, "score": 0.9998506307601929}, "shared": {"value": false, "score": 5.9604644775390625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Tensorflow", "normalizedForm": "Tensorflow", "offsetStart": 227, "offsetEnd": 237}, "context": "These queries results are returned as multidimensional arrays NumPy [27], which are popular structures widely used in scientific data analysis as well as supported by ML libraries and frameworks like PyTorch, scikit-learn, and Tensorflow.", "mentionContextAttributes": {"used": {"value": false, "score": 0.04579424858093262}, "created": {"value": false, "score": 7.62939453125e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998973608016968}, "created": {"value": true, "score": 0.5602536201477051}, "shared": {"value": false, "score": 3.5762786865234375e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Paraview Catalyst", "normalizedForm": "Paraview Catalyst", "offsetStart": 235, "offsetEnd": 252}, "context": "2. Implementation of a data model that offers an elegant representation for array data and allows SAVIME to take advantage of the preexisting data partitioning and sorting to process queries efficiently 3. Incorporation of the library Paraview Catalyst, which enables the analysis and visualization code to harvest data directly from SAVIME's memory space, avoiding the overhead of creating a separate application to query the DBMS and convert query results to the visualization file format.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0006592869758605957}, "created": {"value": false, "score": 0.2674041986465454}, "shared": {"value": false, "score": 5.9604644775390625e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0006592869758605957}, "created": {"value": false, "score": 0.2674041986465454}, "shared": {"value": false, "score": 5.9604644775390625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NumPy", "normalizedForm": "NumPy", "offsetStart": 273, "offsetEnd": 278}, "version": {"rawForm": "3.6.9", "normalizedForm": "3.6.9"}, "language": {"rawForm": "Python", "normalizedForm": "Python", "wikidataId": "Q28865", "offsetStart": 243, "offsetEnd": 249}, "context": "To demonstrate how SAVIME is a viable alternative in terms of performance when applied to the ML process, we compared the execution time of a prediction query run in the system with the equivalent procedure invoking Tensorflow Extended from a Python environment using only NumPy arrays. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9998973608016968}, "created": {"value": false, "score": 3.159046173095703e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.7288393378257751}, "shared": {"value": false, "score": 7.152557373046875e-07}}, "references": [{"label": "[27]", "normalizedForm": "[27]", "refKey": 27}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SAVIME", "normalizedForm": "SAVIME", "offsetStart": 334, "offsetEnd": 340}, "context": "2. Implementation of a data model that offers an elegant representation for array data and allows SAVIME to take advantage of the preexisting data partitioning and sorting to process queries efficiently 3. Incorporation of the library Paraview Catalyst, which enables the analysis and visualization code to harvest data directly from SAVIME's memory space, avoiding the overhead of creating a separate application to query the DBMS and convert query results to the visualization file format.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0006592869758605957}, "created": {"value": false, "score": 0.2674041986465454}, "shared": {"value": false, "score": 5.9604644775390625e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999995231628418}, "created": {"value": true, "score": 0.999916672706604}, "shared": {"value": true, "score": 0.9861605167388916}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "application", "normalizedForm": "application", "offsetStart": 402, "offsetEnd": 413}, "context": "2. Implementation of a data model that offers an elegant representation for array data and allows SAVIME to take advantage of the preexisting data partitioning and sorting to process queries efficiently 3. Incorporation of the library Paraview Catalyst, which enables the analysis and visualization code to harvest data directly from SAVIME's memory space, avoiding the overhead of creating a separate application to query the DBMS and convert query results to the visualization file format.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0006592869758605957}, "created": {"value": false, "score": 0.2674041986465454}, "shared": {"value": false, "score": 5.9604644775390625e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9995059967041016}, "created": {"value": true, "score": 0.5702955722808838}, "shared": {"value": false, "score": 5.9604644775390625e-06}}}], "references": [{"refKey": 38, "tei": "<biblStruct xml:id=\"b38\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">SciDB: A Database Management System for Applications with Complex Analytics</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Michael</forename><surname>Stonebraker</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Paul</forename><surname>Brown</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Donghui</forename><surname>Zhang</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Jacek</forename><surname>Becla</surname></persName>\n\t\t</author>\n\t\t<idno type=\"DOI\">10.1109/mcse.2013.19</idno>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"j\">Computing in Science &amp; Engineering</title>\n\t\t<title level=\"j\" type=\"abbrev\">Comput. Sci. Eng.</title>\n\t\t<idno type=\"ISSN\">1521-9615</idno>\n\t\t<imprint>\n\t\t\t<biblScope unit=\"volume\">15</biblScope>\n\t\t\t<biblScope unit=\"issue\">3</biblScope>\n\t\t\t<biblScope unit=\"page\" from=\"54\" to=\"62\" />\n\t\t\t<date type=\"published\" when=\"2013-05\">2013</date>\n\t\t\t<publisher>Institute of Electrical and Electronics Engineers (IEEE)</publisher>\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}, {"refKey": 31, "tei": "<biblStruct xml:id=\"b31\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">NetCDF: an interface for scientific data access</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Russ</forename><surname>Rew</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Glenn</forename><surname>Davis</surname></persName>\n\t\t</author>\n\t\t<idno type=\"DOI\">10.1109/38.56302</idno>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"j\">IEEE Computer Graphics and Applications</title>\n\t\t<title level=\"j\" type=\"abbrev\">IEEE Comput. Grap. Appl.</title>\n\t\t<idno type=\"ISSN\">0272-1716</idno>\n\t\t<imprint>\n\t\t\t<biblScope unit=\"volume\">10</biblScope>\n\t\t\t<biblScope unit=\"issue\">4</biblScope>\n\t\t\t<biblScope unit=\"page\" from=\"76\" to=\"82\" />\n\t\t\t<date type=\"published\" when=\"1990-07\">1990</date>\n\t\t\t<publisher>Institute of Electrical and Electronics Engineers (IEEE)</publisher>\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}, {"refKey": 2, "tei": "<biblStruct xml:id=\"b2\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">ParaView Catalyst</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Utkarsh</forename><surname>Ayachit</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Andrew</forename><surname>Bauer</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Berk</forename><surname>Geveci</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Patrick</forename><surname>O'leary</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Kenneth</forename><surname>Moreland</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Nathan</forename><surname>Fabian</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Jeffrey</forename><surname>Mauldin</surname></persName>\n\t\t</author>\n\t\t<idno type=\"DOI\">10.1145/2828612.2828624</idno>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"m\">Proceedings of the First Workshop on In Situ Infrastructures for Enabling Extreme-Scale Analysis and Visualization</title>\n\t\t<meeting>the First Workshop on In Situ Infrastructures for Enabling Extreme-Scale Analysis and Visualization</meeting>\n\t\t<imprint>\n\t\t\t<publisher>ACM</publisher>\n\t\t\t<date type=\"published\" when=\"2015-11-15\">2015</date>\n\t\t\t<biblScope unit=\"volume\">69</biblScope>\n\t\t\t<biblScope unit=\"page\" from=\"25\" to=\"29\" />\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}, {"refKey": 27, "tei": "<biblStruct xml:id=\"b27\">\n\t<monogr>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Travis</forename><forename type=\"middle\">E</forename><surname>Oliphant</surname></persName>\n\t\t</author>\n\t\t<title level=\"m\">A guide to NumPy</title>\n\t\t<imprint>\n\t\t\t<publisher>Trelgol Publishing</publisher>\n\t\t\t<date>2006</date>\n\t\t\t<biblScope unit=\"volume\">1</biblScope>\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}, {"refKey": 13, "tei": "<biblStruct xml:id=\"b13\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">SciDB</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Philippe</forename><surname>Cudr\u00e9-Mauroux</surname></persName>\n\t\t</author>\n\t\t<idno type=\"DOI\">10.1007/978-3-319-63962-8_271-1</idno>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"m\">Encyclopedia of Big Data Technologies</title>\n\t\t<imprint>\n\t\t\t<publisher>Springer International Publishing</publisher>\n\t\t\t<date type=\"published\" when=\"2018\">2009</date>\n\t\t\t<biblScope unit=\"page\" from=\"1\" to=\"3\" />\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}], "runtime": 15360, "id": "a1043b362e0376d8f5129d4aa4371480435d3e07", "metadata": {"id": "a1043b362e0376d8f5129d4aa4371480435d3e07"}, "original_file_path": "../../datalake/Samuel/SOFTware-Sync/downloads/xml/lirmm-03144324.grobid.tei.xml", "file_name": "lirmm-03144324.grobid.tei.xml"}