{"application": "software-mentions", "version": "0.8.0", "date": "2024-10-07T11:53+0000", "md5": "1A6A9780D2C7B0B0A97B2362E140B5F5", "mentions": [{"type": "software", "software-type": "software", "software-name": {"rawForm": "PLLib", "normalizedForm": "PLLib", "offsetStart": 0, "offsetEnd": 5}, "context": "PLLib is the only component in direct contact with the users' workflows running in the clusters (S3). ", "mentionContextAttributes": {"used": {"value": false, "score": 0.001586318016052246}, "created": {"value": false, "score": 1.8477439880371094e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.7013335227966309}, "created": {"value": false, "score": 0.001377701759338379}, "shared": {"value": false, "score": 0.014402449131011963}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ProvLake", "normalizedForm": "ProvLake", "offsetStart": 0, "offsetEnd": 8}, "context": "ProvLake Architecture. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0011843442916870117}, "created": {"value": false, "score": 0.0002053380012512207}, "shared": {"value": false, "score": 1.3113021850585938e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998062252998352}, "created": {"value": true, "score": 0.996073842048645}, "shared": {"value": false, "score": 2.6226043701171875e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ProvLake", "normalizedForm": "ProvLake", "offsetStart": 0, "offsetEnd": 8}, "context": "ProvLake can keep track of data distributed in multiple stores. ", "mentionContextAttributes": {"used": {"value": false, "score": 4.0411949157714844e-05}, "created": {"value": false, "score": 5.614757537841797e-05}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998062252998352}, "created": {"value": true, "score": 0.996073842048645}, "shared": {"value": false, "score": 2.6226043701171875e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ProvLake", "normalizedForm": "ProvLake", "offsetStart": 0, "offsetEnd": 8}, "context": "ProvLake architecture is an implementation of the reference architecture (Fig. 6).", "mentionContextAttributes": {"used": {"value": false, "score": 0.00012385845184326172}, "created": {"value": false, "score": 0.006761312484741211}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998062252998352}, "created": {"value": true, "score": 0.996073842048645}, "shared": {"value": false, "score": 2.6226043701171875e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ProvLake", "normalizedForm": "ProvLake", "offsetStart": 0, "offsetEnd": 8}, "context": "ProvLake Deployment in the Case Study.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9803193211555481}, "created": {"value": false, "score": 8.702278137207031e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998062252998352}, "created": {"value": true, "score": 0.996073842048645}, "shared": {"value": false, "score": 2.6226043701171875e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ProvTracker", "normalizedForm": "ProvTracker", "offsetStart": 0, "offsetEnd": 11}, "context": "ProvTracker implements simple queue management to receive the provenance capture events coming from the lib and also implements a queue consumer, thus working both as the message broker and the provenance consumer in the reference architecture. ", "mentionContextAttributes": {"used": {"value": false, "score": 5.793571472167969e-05}, "created": {"value": false, "score": 0.001727461814880371}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9735062718391418}, "created": {"value": false, "score": 0.001727461814880371}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ProvManager", "normalizedForm": "ProvManager", "offsetStart": 0, "offsetEnd": 11}, "context": "ProvManager maps like the reference architecture and the PolyProvQueryEngine is the component for building the provenance queries and sending them to the DBMS managing the MLHolView. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.2153700590133667}, "created": {"value": false, "score": 7.390975952148438e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9882583618164062}, "created": {"value": false, "score": 0.00033664703369140625}, "shared": {"value": false, "score": 4.887580871582031e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ProvTracker", "normalizedForm": "ProvTracker", "offsetStart": 0, "offsetEnd": 11}, "context": "ProvTracker uses the specified prospective provenance data to provide for the tracking by creating the relationships of retrospective provenance data being continuously sent by PLLib added to the workflows. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0036159753799438477}, "created": {"value": false, "score": 1.2516975402832031e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9735062718391418}, "created": {"value": false, "score": 0.001727461814880371}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ProvTracker", "normalizedForm": "ProvTracker", "offsetStart": 0, "offsetEnd": 11}, "context": "ProvTracker gives unique identifiers (S4) to every data value captured and when there are data references (e.g., references to files or identifiers in a database table or any analogous data reference), it creates a knowledge graph relationship between the data value and the data store [9]. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00018924474716186523}, "created": {"value": false, "score": 0.00011301040649414062}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9735062718391418}, "created": {"value": false, "score": 0.001727461814880371}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ProvManager", "normalizedForm": "ProvManager", "offsetStart": 0, "offsetEnd": 11}, "context": "ProvManager transforms the captured data into RDF triples (the data model of the DBMS in use by ProvLake in this implementation) following the PROV-ML ontology (when capturing data in the learning phase) and PROVLake ontology (when capturing data in the previous phases of the lifecycle).", "mentionContextAttributes": {"used": {"value": false, "score": 0.009830057621002197}, "created": {"value": false, "score": 4.887580871582031e-06}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9882583618164062}, "created": {"value": false, "score": 0.00033664703369140625}, "shared": {"value": false, "score": 4.887580871582031e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ProvTracker", "normalizedForm": "ProvTracker", "offsetStart": 0, "offsetEnd": 11}, "context": "ProvTracker runs on one node in the learning cluster with 24 CPU cores, whereas the learning workflows run in parallel and distributed on up to 8 nodes, each with 28 Intel CPU cores and 6 GPUs (K80). ", "mentionContextAttributes": {"used": {"value": false, "score": 0.08805859088897705}, "created": {"value": false, "score": 9.608268737792969e-05}, "shared": {"value": false, "score": 5.960464477539062e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9735062718391418}, "created": {"value": false, "score": 0.001727461814880371}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ProvManager", "normalizedForm": "ProvManager", "offsetStart": 0, "offsetEnd": 11}, "context": "ProvManager, PolyProvQueryEngine, and Prov DBMS are deployed on a virtual Kubernetes cluster with two nodes with 4 vCores, 16 GB RAM each, virtualized on top of the data processing cluster.", "mentionContextAttributes": {"used": {"value": true, "score": 0.7623503804206848}, "created": {"value": false, "score": 0.00013649463653564453}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9882583618164062}, "created": {"value": false, "score": 0.00033664703369140625}, "shared": {"value": false, "score": 4.887580871582031e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ProvManager", "normalizedForm": "ProvManager", "offsetStart": 0, "offsetEnd": 11}, "context": "ProvManager's queue is set to 50, and ProvTracker threads are set to 120.", "mentionContextAttributes": {"used": {"value": true, "score": 0.7022743225097656}, "created": {"value": false, "score": 3.695487976074219e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9882583618164062}, "created": {"value": false, "score": 0.00033664703369140625}, "shared": {"value": false, "score": 4.887580871582031e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ProvLake", "normalizedForm": "ProvLake", "offsetStart": 0, "offsetEnd": 13}, "context": "ProvLake [47] is a provenance system capable of capturing, integrating, and querying data across distributed services, programs, scripts, and data stores used by multiple computational workflows using provenance data management techniques [9], [24]. ", "mentionContextAttributes": {"used": {"value": false, "score": 7.045269012451172e-05}, "created": {"value": false, "score": 0.0006895065307617188}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998062252998352}, "created": {"value": true, "score": 0.996073842048645}, "shared": {"value": false, "score": 2.6226043701171875e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Jena", "normalizedForm": "Jena", "offsetStart": 3, "offsetEnd": 7}, "context": "In Jena, there were gains (more clearly seen in Q5), but they were not as relevant as in the other two DBMSs. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9996076226234436}, "created": {"value": false, "score": 3.933906555175781e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996076226234436}, "created": {"value": false, "score": 3.933906555175781e-05}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PLLib", "normalizedForm": "PLLib", "offsetStart": 4, "offsetEnd": 9}, "context": "The PLLib allows customizing provenance capture settings, such as the queue size and whether the provenance capture events should be persisted to the local disk, rather than sending to ProvTracker. ", "mentionContextAttributes": {"used": {"value": false, "score": 3.9577484130859375e-05}, "created": {"value": false, "score": 0.00031828880310058594}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.7013335227966309}, "created": {"value": false, "score": 0.001377701759338379}, "shared": {"value": false, "score": 0.014402449131011963}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PLLib", "normalizedForm": "PLLib", "offsetStart": 4, "offsetEnd": 9}, "context": "The PLLib is publicly available on GitHub [49], with examples for data transformation instrumentation. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00042933225631713867}, "created": {"value": false, "score": 0.001377701759338379}, "shared": {"value": false, "score": 0.014402449131011963}}, "documentContextAttributes": {"used": {"value": true, "score": 0.7013335227966309}, "created": {"value": false, "score": 0.001377701759338379}, "shared": {"value": false, "score": 0.014402449131011963}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ProvLake", "normalizedForm": "ProvLake", "offsetStart": 4, "offsetEnd": 12}, "context": "The ProvLake Library (PLLib) [49] maps to the ProvLib. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.5707545876502991}, "created": {"value": false, "score": 5.125999450683594e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998062252998352}, "created": {"value": true, "score": 0.996073842048645}, "shared": {"value": false, "score": 2.6226043701171875e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ProvManager", "normalizedForm": "ProvManager", "offsetStart": 4, "offsetEnd": 15}, "context": "The ProvManager is a RESTful, stateless service and can receive provenance capture requests in any order.", "mentionContextAttributes": {"used": {"value": false, "score": 0.000258028507232666}, "created": {"value": false, "score": 0.00033664703369140625}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9882583618164062}, "created": {"value": false, "score": 0.00033664703369140625}, "shared": {"value": false, "score": 4.887580871582031e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PolyProv-QueryEngine", "normalizedForm": "PolyProv-QueryEngine", "offsetStart": 6, "offsetEnd": 26}, "context": "Then, PolyProv-QueryEngine sends requests to ProvManager. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.021871864795684814}, "created": {"value": false, "score": 6.318092346191406e-06}, "shared": {"value": false, "score": 9.5367431640625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.021871864795684814}, "created": {"value": false, "score": 6.318092346191406e-06}, "shared": {"value": false, "score": 9.5367431640625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MLHolView", "normalizedForm": "MLHolView", "offsetStart": 10, "offsetEnd": 19}, "context": "Thus, the MLHolView should have a built-in ML-specific schema, tightly coupled with the rest of the provenance data schema, to provide ML-specific context to support the comprehensive analyses.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0007964968681335449}, "created": {"value": false, "score": 0.0001443624496459961}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9895657300949097}, "created": {"value": true, "score": 0.9990513920783997}, "shared": {"value": false, "score": 3.886222839355469e-05}}}, {"type": "software", "software-type": "implicit", "software-name": {"rawForm": "scripts", "normalizedForm": "scripts", "offsetStart": 13, "offsetEnd": 20}, "context": "The workflow scripts of our use case are implemented in Python using different libraries to manipulate raw seismic files and for designing and training the ML algorithms (PyTorch V1.1) that execute in the HPC cluster. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.4991784691810608}, "created": {"value": false, "score": 0.3427088260650635}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.4991784691810608}, "created": {"value": true, "score": 0.9996402263641357}, "shared": {"value": false, "score": 2.6226043701171875e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ProvLake", "normalizedForm": "ProvLake", "offsetStart": 13, "offsetEnd": 21}, "context": "Essentially, ProvLake tracks and maintains such interconnections in a provenance data graph composed of RDF triples. ", "mentionContextAttributes": {"used": {"value": false, "score": 9.620189666748047e-05}, "created": {"value": false, "score": 8.7738037109375e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998062252998352}, "created": {"value": true, "score": 0.996073842048645}, "shared": {"value": false, "score": 2.6226043701171875e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PolyProvQueryEngine", "normalizedForm": "PolyProvQueryEngine", "offsetStart": 13, "offsetEnd": 32}, "context": "ProvManager, PolyProvQueryEngine, and Prov DBMS are deployed on a virtual Kubernetes cluster with two nodes with 4 vCores, 16 GB RAM each, virtualized on top of the data processing cluster. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.7623503804206848}, "created": {"value": false, "score": 0.00013649463653564453}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.7623503804206848}, "created": {"value": false, "score": 0.00013649463653564453}, "shared": {"value": false, "score": 3.5762786865234375e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MLHolView", "normalizedForm": "MLHolView", "offsetStart": 15, "offsetEnd": 24}, "context": "Similarly, the MLHolView needs ML-specific concepts and relationships. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00015020370483398438}, "created": {"value": false, "score": 3.600120544433594e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9895657300949097}, "created": {"value": true, "score": 0.9990513920783997}, "shared": {"value": false, "score": 3.886222839355469e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "offsetStart": 18, "offsetEnd": 24}, "version": {"rawForm": "1.1", "normalizedForm": "1.1"}, "context": "Excerpts of Q7 in SPARQL with and without PROV-ML are available in the Listings 1 and 2, respectively. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.3799617886543274}, "created": {"value": false, "score": 9.298324584960938e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998395442962646}, "created": {"value": false, "score": 0.00016832351684570312}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "mls", "normalizedForm": "mls", "offsetStart": 22, "offsetEnd": 25}, "context": "This is equivalent to mls:Run and was renamed to explicitly preserve the aspects of retrospective provenance, which are not explicitly handled in MLS.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0931127667427063}, "created": {"value": false, "score": 0.0003826618194580078}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0931127667427063}, "created": {"value": false, "score": 0.0003826618194580078}, "shared": {"value": false, "score": 4.76837158203125e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PLLib", "normalizedForm": "PLLib", "offsetStart": 22, "offsetEnd": 27}, "context": "The ProvLake Library (PLLib) [49] maps to the ProvLib.", "mentionContextAttributes": {"used": {"value": true, "score": 0.5707545876502991}, "created": {"value": false, "score": 5.125999450683594e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.7013335227966309}, "created": {"value": false, "score": 0.001377701759338379}, "shared": {"value": false, "score": 0.014402449131011963}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MLHolView", "normalizedForm": "MLHolView", "offsetStart": 25, "offsetEnd": 34}, "context": "Figure 4 illustrates the MLHolView and its awareness of data coming from the ML phases and the dimensions of heterogeneity (illustrated as layers) it addresses: software, data, data stores, and infrastructure (execution environment). ", "mentionContextAttributes": {"used": {"value": false, "score": 0.2787742018699646}, "created": {"value": false, "score": 8.845329284667969e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9895657300949097}, "created": {"value": true, "score": 0.9990513920783997}, "shared": {"value": false, "score": 3.886222839355469e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ProvLake", "normalizedForm": "ProvLake", "offsetStart": 28, "offsetEnd": 36}, "context": "In the data curation phase, ProvLake tracks provenance while data-intensive scripts run. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.07543283700942993}, "created": {"value": false, "score": 1.3828277587890625e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998062252998352}, "created": {"value": true, "score": 0.996073842048645}, "shared": {"value": false, "score": 2.6226043701171875e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PLLib", "normalizedForm": "PLLib", "offsetStart": 29, "offsetEnd": 34}, "context": "While running the workflows, PLLib captures data at runtime and sends them to ProvTracker, which in turn sends them to ProvManager service deployed externally on the virtual Kubernetes cluster, which finally stores them in the Prov DBMS. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.168551504611969}, "created": {"value": false, "score": 2.9206275939941406e-05}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.7013335227966309}, "created": {"value": false, "score": 0.001377701759338379}, "shared": {"value": false, "score": 0.014402449131011963}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "AllegroGraph", "normalizedForm": "AllegroGraph", "offsetStart": 29, "offsetEnd": 41}, "context": "In Q7, they are 3x faster in AllegroGraph and 16.6x (an order of magnitude) faster in BlazeGraph, whereas in Jena, the results are nearly the same. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.5820589661598206}, "created": {"value": false, "score": 3.063678741455078e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.987572431564331}, "created": {"value": false, "score": 4.1365623474121094e-05}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ProvManager", "normalizedForm": "ProvManager", "offsetStart": 30, "offsetEnd": 41}, "context": "Such specification is used by ProvManager to create the nodes, their properties, and their relationships in the knowledge graph MLHolView using PROV-ML (D2, D3). ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9882583618164062}, "created": {"value": false, "score": 4.0411949157714844e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9882583618164062}, "created": {"value": false, "score": 0.00033664703369140625}, "shared": {"value": false, "score": 4.887580871582031e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ProvTracker", "normalizedForm": "ProvTracker", "offsetStart": 31, "offsetEnd": 42}, "context": "If they are not, it means that ProvTracker is taking too long to answer, caused by high stress in the system due to too many provenance capture requests, adding latency to the training.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0031864047050476074}, "created": {"value": false, "score": 5.078315734863281e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9735062718391418}, "created": {"value": false, "score": 0.001727461814880371}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ProvTracker", "normalizedForm": "ProvTracker", "offsetStart": 38, "offsetEnd": 49}, "context": "ProvManager's queue is set to 50, and ProvTracker threads are set to 120. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.7022743225097656}, "created": {"value": false, "score": 3.695487976074219e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9735062718391418}, "created": {"value": false, "score": 0.001727461814880371}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MLHolView", "normalizedForm": "MLHolView", "offsetStart": 40, "offsetEnd": 49}, "context": "The contents and the granularity of the MLHolView are driven by the relevant queries for a project, and the view can be materialized as the database that integrates data from several sources, while the workflows run [9]. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.03838843107223511}, "created": {"value": false, "score": 8.225440979003906e-06}, "shared": {"value": false, "score": 1.1920928955078125e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9895657300949097}, "created": {"value": true, "score": 0.9990513920783997}, "shared": {"value": false, "score": 3.886222839355469e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ProvLake", "normalizedForm": "ProvLake", "offsetStart": 42, "offsetEnd": 50}, "context": "A provenance capture overhead analysis of ProvLake using synthetic workloads to highly stress the system and comparison with a competing system has been presented in a previous work [9]. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0006709098815917969}, "created": {"value": false, "score": 0.0007936358451843262}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998062252998352}, "created": {"value": true, "score": 0.996073842048645}, "shared": {"value": false, "score": 2.6226043701171875e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ProvManager", "normalizedForm": "ProvManager", "offsetStart": 45, "offsetEnd": 56}, "context": "Then, PolyProv-QueryEngine sends requests to ProvManager. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.021871864795684814}, "created": {"value": false, "score": 6.318092346191406e-06}, "shared": {"value": false, "score": 9.5367431640625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9882583618164062}, "created": {"value": false, "score": 0.00033664703369140625}, "shared": {"value": false, "score": 4.887580871582031e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MLHolView", "normalizedForm": "MLHolView", "offsetStart": 51, "offsetEnd": 60}, "context": "To provide the specialized semantics needed by the MLHolView, we propose a conceptual data schema focusing on the key concepts identified by the characterization in Section 2. The concepts are driven by the lifecycle phases and the data they manipulate: the phases are illustrated with a gray background and the and four main kinds of data are illustrated in white background in the UML class diagram in Figure 5.  On the four data concept classes, each instance represents one dataset, i.e., a set of data elements that combined form one meaningful set of data for a given application.", "mentionContextAttributes": {"used": {"value": false, "score": 0.350799560546875}, "created": {"value": false, "score": 0.0011214613914489746}, "shared": {"value": false, "score": 3.0994415283203125e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9895657300949097}, "created": {"value": true, "score": 0.9990513920783997}, "shared": {"value": false, "score": 3.886222839355469e-05}}}, {"type": "software", "software-type": "environment", "software-name": {"rawForm": "Python", "normalizedForm": "Python", "offsetStart": 56, "offsetEnd": 62}, "context": "The workflow scripts of our use case are implemented in Python using different libraries to manipulate raw seismic files and for designing and training the ML algorithms (PyTorch V1.1) that execute in the HPC cluster. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.4991784691810608}, "created": {"value": false, "score": 0.3427088260650635}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.4991784691810608}, "created": {"value": false, "score": 0.3427088260650635}, "shared": {"value": false, "score": 3.5762786865234375e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ProvLake", "normalizedForm": "ProvLake", "offsetStart": 56, "offsetEnd": 64}, "context": "Next, we describe the workflows of the use case and how ProvLake tracks the data.  4.", "mentionContextAttributes": {"used": {"value": false, "score": 0.002853691577911377}, "created": {"value": false, "score": 0.01356196403503418}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998062252998352}, "created": {"value": true, "score": 0.996073842048645}, "shared": {"value": false, "score": 2.6226043701171875e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PolyProvQueryEngine", "normalizedForm": "PolyProvQueryEngine", "offsetStart": 57, "offsetEnd": 76}, "context": "ProvManager maps like the reference architecture and the PolyProvQueryEngine is the component for building the provenance queries and sending them to the DBMS managing the MLHolView. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.2153700590133667}, "created": {"value": false, "score": 7.390975952148438e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.7623503804206848}, "created": {"value": false, "score": 0.00013649463653564453}, "shared": {"value": false, "score": 3.5762786865234375e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MLHolView", "normalizedForm": "MLHolView", "offsetStart": 59, "offsetEnd": 68}, "context": "Our approach focuses on creating the relationships, in the MLHolView, between the heterogeneous workflow data and the domain-specific knowledge graph.", "mentionContextAttributes": {"used": {"value": false, "score": 6.687641143798828e-05}, "created": {"value": true, "score": 0.9990513920783997}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9895657300949097}, "created": {"value": true, "score": 0.9990513920783997}, "shared": {"value": false, "score": 3.886222839355469e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "script", "normalizedForm": "script", "offsetStart": 63, "offsetEnd": 69}, "context": "We measure the overall execution time of the learning workflow script, repeating each test at least 10 times and we plot the boxplots of the repetitions and the numeric values used in-text refer to the medians.", "mentionContextAttributes": {"used": {"value": true, "score": 0.998580813407898}, "created": {"value": false, "score": 7.3909759521484375e-06}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.998580813407898}, "created": {"value": false, "score": 0.0024404525756835938}, "shared": {"value": false, "score": 2.6226043701171875e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Jena", "normalizedForm": "Jena", "offsetStart": 66, "offsetEnd": 70}, "context": "In Q5, the queries with PROV-ML are 1.22x, 2.9x, and 2x faster in Jena, AllegroGraph, and BlazeGraph, respectively. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.10665488243103027}, "created": {"value": false, "score": 1.71661376953125e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996076226234436}, "created": {"value": false, "score": 3.933906555175781e-05}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PolyProvQueryEngine", "normalizedForm": "PolyProvQueryEngine", "offsetStart": 66, "offsetEnd": 85}, "context": "To submit queries, the user sends a GET or POST request to one of PolyProvQueryEngine's endpoints. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00583040714263916}, "created": {"value": false, "score": 1.7642974853515625e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.7623503804206848}, "created": {"value": false, "score": 0.00013649463653564453}, "shared": {"value": false, "score": 3.5762786865234375e-07}}}, {"type": "software", "software-type": "implicit", "software-name": {"rawForm": "scripts", "normalizedForm": "scripts", "offsetStart": 68, "offsetEnd": 75}, "context": "Then, computational scientists and engineers develop data-intensive scripts to clean, filter, and validate the data. ", "mentionContextAttributes": {"used": {"value": false, "score": 4.9591064453125e-05}, "created": {"value": true, "score": 0.9996402263641357}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.4991784691810608}, "created": {"value": true, "score": 0.9996402263641357}, "shared": {"value": false, "score": 2.6226043701171875e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "AllegroGraph", "normalizedForm": "AllegroGraph", "offsetStart": 72, "offsetEnd": 84}, "context": "In Q5, the queries with PROV-ML are 1.22x, 2.9x, and 2x faster in Jena, AllegroGraph, and BlazeGraph, respectively. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.10665488243103027}, "created": {"value": false, "score": 1.71661376953125e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.987572431564331}, "created": {"value": false, "score": 4.1365623474121094e-05}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MLHolView", "normalizedForm": "MLHolView", "offsetStart": 73, "offsetEnd": 82}, "context": "The distributed captured data are ultimately integrated into the unified MLHolView. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.28347742557525635}, "created": {"value": false, "score": 0.000517725944519043}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9895657300949097}, "created": {"value": true, "score": 0.9990513920783997}, "shared": {"value": false, "score": 3.886222839355469e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MLHolView", "normalizedForm": "MLHolView", "offsetStart": 73, "offsetEnd": 82}, "context": "However, the performance depends on the underlying DBMS that manages the MLHolView, since the DBMS might implement efficient indexing mechanisms, parallelism techniques, or data transformation strategies. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.001224815845489502}, "created": {"value": false, "score": 0.0003343820571899414}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9895657300949097}, "created": {"value": true, "score": 0.9990513920783997}, "shared": {"value": false, "score": 3.886222839355469e-05}}}, {"type": "software", "software-type": "implicit", "software-name": {"rawForm": "scripts", "normalizedForm": "scripts", "offsetStart": 76, "offsetEnd": 83}, "context": "In the data curation phase, ProvLake tracks provenance while data-intensive scripts run. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.07543283700942993}, "created": {"value": false, "score": 1.3828277587890625e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.4991784691810608}, "created": {"value": true, "score": 0.9996402263641357}, "shared": {"value": false, "score": 2.6226043701171875e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ProvLake", "normalizedForm": "ProvLake", "offsetStart": 76, "offsetEnd": 84}, "context": "In this section, we explain how we implement the design decisions to enable ProvLake to build the MLHolView and how it is deployed to support the lifecycle in our case study. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.026991963386535645}, "created": {"value": true, "score": 0.996073842048645}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998062252998352}, "created": {"value": true, "score": 0.996073842048645}, "shared": {"value": false, "score": 2.6226043701171875e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "offsetStart": 77, "offsetEnd": 83}, "version": {"rawForm": "1.1", "normalizedForm": "1.1"}, "context": "Most of the queries are answered with simple graph traversals using standard SPARQL features.", "mentionContextAttributes": {"used": {"value": false, "score": 0.12449157238006592}, "created": {"value": false, "score": 4.172325134277344e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998395442962646}, "created": {"value": false, "score": 0.00016832351684570312}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ProvTracker", "normalizedForm": "ProvTracker", "offsetStart": 78, "offsetEnd": 89}, "context": "While running the workflows, PLLib captures data at runtime and sends them to ProvTracker, which in turn sends them to ProvManager service deployed externally on the virtual Kubernetes cluster, which finally stores them in the Prov DBMS. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.168551504611969}, "created": {"value": false, "score": 2.9206275939941406e-05}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9735062718391418}, "created": {"value": false, "score": 0.001727461814880371}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "AllegroGraph", "normalizedForm": "AllegroGraph", "offsetStart": 78, "offsetEnd": 90}, "context": "Nevertheless, Q5 and Q7 show a different behavior, particularly for the DBMSs AllegroGraph and BlazeGraph. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.659166693687439}, "created": {"value": false, "score": 4.0531158447265625e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.987572431564331}, "created": {"value": false, "score": 4.1365623474121094e-05}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MLHolView", "normalizedForm": "MLHolView", "offsetStart": 83, "offsetEnd": 92}, "context": "2.3) the users involved in the lifecycle of the ML models want to execute over the MLHolView (D1), they will know what to capture in their workflows. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.004327654838562012}, "created": {"value": false, "score": 7.62939453125e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9895657300949097}, "created": {"value": true, "score": 0.9990513920783997}, "shared": {"value": false, "score": 3.886222839355469e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "BlazeGraph", "normalizedForm": "BlazeGraph", "offsetStart": 86, "offsetEnd": 96}, "context": "In Q7, they are 3x faster in AllegroGraph and 16.6x (an order of magnitude) faster in BlazeGraph, whereas in Jena, the results are nearly the same. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.5820589661598206}, "created": {"value": false, "score": 3.063678741455078e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.987572431564331}, "created": {"value": false, "score": 4.1365623474121094e-05}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "implicit", "software-name": {"rawForm": "script", "normalizedForm": "script", "offsetStart": 87, "offsetEnd": 93}, "context": "Each workflow may use heterogeneous data stores and may be implemented as a standalone script, or as a workflow in a WMS, or a composition of microservice calls, or as a pipeline in a data processing or ML framework. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0004507899284362793}, "created": {"value": false, "score": 0.0024404525756835938}, "shared": {"value": false, "score": 1.430511474609375e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.998580813407898}, "created": {"value": false, "score": 0.0024404525756835938}, "shared": {"value": false, "score": 2.6226043701171875e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ProvLake", "normalizedForm": "ProvLake", "offsetStart": 87, "offsetEnd": 95}, "context": "We explore the O&G use case described in Section 2 and validate if the data tracked by ProvLake, inserted in the MLHolView implementing the PROV-ML data, can answer the queries Q1-Q7. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.5081448554992676}, "created": {"value": false, "score": 0.0006110668182373047}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998062252998352}, "created": {"value": true, "score": 0.996073842048645}, "shared": {"value": false, "score": 2.6226043701171875e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MLHolView", "normalizedForm": "MLHolView", "offsetStart": 87, "offsetEnd": 96}, "context": "We called it as Provenance-based Holistic Data View of the Lifecycle of Scientific ML (MLHolView). ", "mentionContextAttributes": {"used": {"value": false, "score": 0.01648789644241333}, "created": {"value": true, "score": 0.980381965637207}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9895657300949097}, "created": {"value": true, "score": 0.9990513920783997}, "shared": {"value": false, "score": 3.886222839355469e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ProvLake", "normalizedForm": "ProvLake", "offsetStart": 90, "offsetEnd": 98}, "context": "We obtained these results after implementing the design principles and the PROV-ML in the ProvLake system and deploying it in a real case in the O&G industry.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9998062252998352}, "created": {"value": true, "score": 0.9538412094116211}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998062252998352}, "created": {"value": true, "score": 0.996073842048645}, "shared": {"value": false, "score": 2.6226043701171875e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "BlazeGraph", "normalizedForm": "BlazeGraph", "offsetStart": 90, "offsetEnd": 100}, "context": "In Q5, the queries with PROV-ML are 1.22x, 2.9x, and 2x faster in Jena, AllegroGraph, and BlazeGraph, respectively. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.10665488243103027}, "created": {"value": false, "score": 1.71661376953125e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.987572431564331}, "created": {"value": false, "score": 4.1365623474121094e-05}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Apache Jena TDB", "normalizedForm": "Apache Jena TDB", "offsetStart": 90, "offsetEnd": 105}, "version": {"rawForm": "3.12", "normalizedForm": "3.12", "offsetStart": 106, "offsetEnd": 110}, "context": "For the query performance tests, we deployed three different DBMSs on the server machine: Apache Jena TDB 3.12, Allegro 6.6.0, and Blazegraph 2.1.5.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999749660491943}, "created": {"value": false, "score": 0.0001678466796875}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999749660491943}, "created": {"value": false, "score": 0.0001678466796875}, "shared": {"value": false, "score": 1.1920928955078125e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MLHolView", "normalizedForm": "MLHolView", "offsetStart": 94, "offsetEnd": 103}, "context": "The figure also shows the kind of provenance analysis (top-left) and the key capabilities the MLHolView enables (top-right) (Sec. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9604780673980713}, "created": {"value": false, "score": 8.821487426757812e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9895657300949097}, "created": {"value": true, "score": 0.9990513920783997}, "shared": {"value": false, "score": 3.886222839355469e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "BlazeGraph", "normalizedForm": "BlazeGraph", "offsetStart": 95, "offsetEnd": 105}, "context": "Nevertheless, Q5 and Q7 show a different behavior, particularly for the DBMSs AllegroGraph and BlazeGraph. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.659166693687439}, "created": {"value": false, "score": 4.0531158447265625e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.987572431564331}, "created": {"value": false, "score": 4.1365623474121094e-05}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "offsetStart": 96, "offsetEnd": 102}, "version": {"rawForm": "1.1", "normalizedForm": "1.1", "offsetStart": 103, "offsetEnd": 106}, "context": "We write the selected queries both with and without the PROV-ML ontology (written in OWL) using SPARQL 1.1. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9998395442962646}, "created": {"value": false, "score": 0.00016832351684570312}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998395442962646}, "created": {"value": false, "score": 0.00016832351684570312}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ProvLake", "normalizedForm": "ProvLake", "offsetStart": 96, "offsetEnd": 104}, "context": "ProvManager transforms the captured data into RDF triples (the data model of the DBMS in use by ProvLake in this implementation) following the PROV-ML ontology (when capturing data in the learning phase) and PROVLake ontology (when capturing data in the previous phases of the lifecycle).", "mentionContextAttributes": {"used": {"value": false, "score": 0.009830057621002197}, "created": {"value": false, "score": 4.887580871582031e-06}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998062252998352}, "created": {"value": true, "score": 0.996073842048645}, "shared": {"value": false, "score": 2.6226043701171875e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MLHolView", "normalizedForm": "MLHolView", "offsetStart": 96, "offsetEnd": 105}, "context": "To be able to implement the context-awareness for the domain, ML, and hybrid environments , the MLHolView needs a comprehensive data representation. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00043636560440063477}, "created": {"value": false, "score": 0.02736365795135498}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9895657300949097}, "created": {"value": true, "score": 0.9990513920783997}, "shared": {"value": false, "score": 3.886222839355469e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ProvLake", "normalizedForm": "ProvLake", "offsetStart": 97, "offsetEnd": 105}, "context": "Finally, since the system tracks every data and their relationships while the workflows execute, ProvLake enables answering online, offline, intra-and inter-training provenance queries to analyze ML data, domain-specific data, and execution data throughout the phases of the lifecycle, exemplified by the queries Q1-Q7.", "mentionContextAttributes": {"used": {"value": false, "score": 9.47713851928711e-05}, "created": {"value": false, "score": 0.031256258487701416}, "shared": {"value": false, "score": 7.152557373046875e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998062252998352}, "created": {"value": true, "score": 0.996073842048645}, "shared": {"value": false, "score": 2.6226043701171875e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MLHolView", "normalizedForm": "MLHolView", "offsetStart": 98, "offsetEnd": 107}, "context": "In this section, we explain how we implement the design decisions to enable ProvLake to build the MLHolView and how it is deployed to support the lifecycle in our case study. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.026991963386535645}, "created": {"value": true, "score": 0.996073842048645}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9895657300949097}, "created": {"value": true, "score": 0.9990513920783997}, "shared": {"value": false, "score": 3.886222839355469e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "AllegroGraph", "normalizedForm": "AllegroGraph", "offsetStart": 98, "offsetEnd": 110}, "context": "Since the choice of the underlying DBMS may impact the results, we analyze three different DBMSs: AllegroGraph, Blazegraph, and Jena TDB running on the same hardware and same conditions, with their default settings (no special fine-tuning are performed in any DBMS). ", "mentionContextAttributes": {"used": {"value": true, "score": 0.8475279808044434}, "created": {"value": false, "score": 1.2993812561035156e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.987572431564331}, "created": {"value": false, "score": 4.1365623474121094e-05}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MLHolView", "normalizedForm": "MLHolView", "offsetStart": 99, "offsetEnd": 108}, "context": "In this section, we provide experimental validation of the design decisions to build and query the MLHolView to support the lifecycle of scientific ML in a real case study in the O&G industry. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0010821819305419922}, "created": {"value": true, "score": 0.9958767890930176}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9895657300949097}, "created": {"value": true, "score": 0.9990513920783997}, "shared": {"value": false, "score": 3.886222839355469e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ProvLake", "normalizedForm": "ProvLake", "offsetStart": 101, "offsetEnd": 109}, "context": "Sec 2), the learning phase generates a large amount of provenance data at a high frequency to stress ProvLake services.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0021306276321411133}, "created": {"value": false, "score": 5.5909156799316406e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998062252998352}, "created": {"value": true, "score": 0.996073842048645}, "shared": {"value": false, "score": 2.6226043701171875e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PLLib", "normalizedForm": "PLLib", "offsetStart": 103, "offsetEnd": 108}, "context": "To enable runtime data capture and integration in their workflows, users import a lightweight library (PLLib) and add the data capture calls into the workflow codes (see S1, S5). ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0036982297897338867}, "created": {"value": false, "score": 0.0001442432403564453}, "shared": {"value": false, "score": 1.430511474609375e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.7013335227966309}, "created": {"value": false, "score": 0.001377701759338379}, "shared": {"value": false, "score": 0.014402449131011963}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "lib", "normalizedForm": "lib", "offsetStart": 104, "offsetEnd": 107}, "context": "ProvTracker implements simple queue management to receive the provenance capture events coming from the lib and also implements a queue consumer, thus working both as the message broker and the provenance consumer in the reference architecture. ", "mentionContextAttributes": {"used": {"value": false, "score": 5.793571472167969e-05}, "created": {"value": false, "score": 0.001727461814880371}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 5.793571472167969e-05}, "created": {"value": false, "score": 0.001727461814880371}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ProvTracker", "normalizedForm": "ProvTracker", "offsetStart": 104, "offsetEnd": 115}, "context": "Then, if disk only is not specified, when the scripts execute, provenance data are captured and sent to ProvTracker.", "mentionContextAttributes": {"used": {"value": true, "score": 0.935064971446991}, "created": {"value": false, "score": 0.00011396408081054688}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9735062718391418}, "created": {"value": false, "score": 0.001727461814880371}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MLHolView", "normalizedForm": "MLHolView", "offsetStart": 105, "offsetEnd": 114}, "context": "Let us call this data view as the Provenance-based Holistic Data View of the Lifecycle of Scientific ML (MLHolView). ", "mentionContextAttributes": {"used": {"value": false, "score": 0.014055967330932617}, "created": {"value": false, "score": 0.031193673610687256}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9895657300949097}, "created": {"value": true, "score": 0.9990513920783997}, "shared": {"value": false, "score": 3.886222839355469e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Jena", "normalizedForm": "Jena", "offsetStart": 109, "offsetEnd": 113}, "context": "In Q7, they are 3x faster in AllegroGraph and 16.6x (an order of magnitude) faster in BlazeGraph, whereas in Jena, the results are nearly the same. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.5820589661598206}, "created": {"value": false, "score": 3.063678741455078e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996076226234436}, "created": {"value": false, "score": 3.933906555175781e-05}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PLLib", "normalizedForm": "PLLib", "offsetStart": 109, "offsetEnd": 114}, "context": "For a baseline, we first execute the training without any provenance capture, then we vary the queue size in PLLib (i.e., amount of provenance capture requests accumulated in PLLib), diskless vs. diskful (i.e., saving or not provenance data in a log file on disk), and online vs. offline (i.e., storing or not provenance data in the DBMS, available for online provenance queries during the execution).", "mentionContextAttributes": {"used": {"value": true, "score": 0.7013335227966309}, "created": {"value": false, "score": 2.1457672119140625e-06}, "shared": {"value": false, "score": 1.1920928955078125e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.7013335227966309}, "created": {"value": false, "score": 0.001377701759338379}, "shared": {"value": false, "score": 0.014402449131011963}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Triple Store", "normalizedForm": "Triple Store", "offsetStart": 111, "offsetEnd": 123}, "context": "In turn, to obtain the oil basin and oil field information, the query retrieves data from the resource, in the Triple Store, which represents structured knowledge about the seismic file.", "mentionContextAttributes": {"used": {"value": false, "score": 0.15341973304748535}, "created": {"value": false, "score": 4.470348358154297e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.8166456818580627}, "created": {"value": false, "score": 0.00010538101196289062}, "shared": {"value": false, "score": 0.0001722574234008789}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Allegro", "normalizedForm": "Allegro", "offsetStart": 112, "offsetEnd": 119}, "version": {"rawForm": "6.6.0", "normalizedForm": "6.6.0", "offsetStart": 120, "offsetEnd": 125}, "context": "For the query performance tests, we deployed three different DBMSs on the server machine: Apache Jena TDB 3.12, Allegro 6.6.0, and Blazegraph 2.1.5.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999749660491943}, "created": {"value": false, "score": 0.0001678466796875}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999749660491943}, "created": {"value": false, "score": 0.0001678466796875}, "shared": {"value": false, "score": 1.1920928955078125e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Blazegraph", "normalizedForm": "Blazegraph", "offsetStart": 112, "offsetEnd": 122}, "version": {"rawForm": "2.1.5", "normalizedForm": "2.1.5"}, "context": "Since the choice of the underlying DBMS may impact the results, we analyze three different DBMSs: AllegroGraph, Blazegraph, and Jena TDB running on the same hardware and same conditions, with their default settings (no special fine-tuning are performed in any DBMS). ", "mentionContextAttributes": {"used": {"value": true, "score": 0.8475279808044434}, "created": {"value": false, "score": 1.2993812561035156e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999749660491943}, "created": {"value": false, "score": 0.0001678466796875}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MLHolView", "normalizedForm": "MLHolView", "offsetStart": 113, "offsetEnd": 122}, "context": "We explore the O&G use case described in Section 2 and validate if the data tracked by ProvLake, inserted in the MLHolView implementing the PROV-ML data, can answer the queries Q1-Q7. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.5081448554992676}, "created": {"value": false, "score": 0.0006110668182373047}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9895657300949097}, "created": {"value": true, "score": 0.9990513920783997}, "shared": {"value": false, "score": 3.886222839355469e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MLHolView", "normalizedForm": "MLHolView", "offsetStart": 113, "offsetEnd": 122}, "context": "Each computational process (data transformations) and the datasets they transform are qualified according to the MLHolView's conceptual data schema (D5).", "mentionContextAttributes": {"used": {"value": true, "score": 0.9895657300949097}, "created": {"value": false, "score": 6.651878356933594e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9895657300949097}, "created": {"value": true, "score": 0.9990513920783997}, "shared": {"value": false, "score": 3.886222839355469e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MLHolView", "normalizedForm": "MLHolView", "offsetStart": 116, "offsetEnd": 125}, "context": "To accomplish such integration, it was key to promote a holistic view of the lifecycle, end-to-end, which we called MLHolView, as described in the data design decision D1, which enabled the comprehensive data analyses (e.g., Q1-Q7), thus supporting the lifecycle, which is our main motivation. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.01693195104598999}, "created": {"value": true, "score": 0.8985127210617065}, "shared": {"value": false, "score": 7.152557373046875e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9895657300949097}, "created": {"value": true, "score": 0.9990513920783997}, "shared": {"value": false, "score": 3.886222839355469e-05}}}, {"type": "software", "software-type": "implicit", "software-name": {"rawForm": "scripts", "normalizedForm": "scripts", "offsetStart": 118, "offsetEnd": 125}, "context": "Additionally, geoscientists add relevant information, based on their specialized knowledge, as input to some of those scripts to be loaded into a domain-specific knowledge graph database, external to the provenance database, but also tracked by ProvLake through links between the workflows and the domain knowledge in the graph. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0010312795639038086}, "created": {"value": false, "score": 5.5670738220214844e-05}, "shared": {"value": false, "score": 2.6226043701171875e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.4991784691810608}, "created": {"value": true, "score": 0.9996402263641357}, "shared": {"value": false, "score": 2.6226043701171875e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ProvManager", "normalizedForm": "ProvManager", "offsetStart": 119, "offsetEnd": 130}, "context": "While running the workflows, PLLib captures data at runtime and sends them to ProvTracker, which in turn sends them to ProvManager service deployed externally on the virtual Kubernetes cluster, which finally stores them in the Prov DBMS.", "mentionContextAttributes": {"used": {"value": false, "score": 0.168551504611969}, "created": {"value": false, "score": 2.9206275939941406e-05}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9882583618164062}, "created": {"value": false, "score": 0.00033664703369140625}, "shared": {"value": false, "score": 4.887580871582031e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Triple Store", "normalizedForm": "Triple Store", "offsetStart": 127, "offsetEnd": 139}, "context": "The performance impact depends on the number of clauses to be matched in the query and on the number of triples matched by the Triple Store DBMS.", "mentionContextAttributes": {"used": {"value": true, "score": 0.8166456818580627}, "created": {"value": false, "score": 8.344650268554688e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.8166456818580627}, "created": {"value": false, "score": 0.00010538101196289062}, "shared": {"value": false, "score": 0.0001722574234008789}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Jena", "normalizedForm": "Jena", "offsetStart": 128, "offsetEnd": 132}, "context": "Since the choice of the underlying DBMS may impact the results, we analyze three different DBMSs: AllegroGraph, Blazegraph, and Jena TDB running on the same hardware and same conditions, with their default settings (no special fine-tuning are performed in any DBMS).", "mentionContextAttributes": {"used": {"value": true, "score": 0.8475279808044434}, "created": {"value": false, "score": 1.2993812561035156e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996076226234436}, "created": {"value": false, "score": 3.933906555175781e-05}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "offsetStart": 128, "offsetEnd": 134}, "version": {"rawForm": "1.1", "normalizedForm": "1.1"}, "context": "Other queries require analytical operators, such as Q3, which requires finding the learned model with least (using min() native SPARQL operator) loss and returning its hyperparameters.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00016868114471435547}, "created": {"value": false, "score": 1.8477439880371094e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998395442962646}, "created": {"value": false, "score": 0.00016832351684570312}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MLHolView", "normalizedForm": "MLHolView", "offsetStart": 128, "offsetEnd": 137}, "context": "Such specification is used by ProvManager to create the nodes, their properties, and their relationships in the knowledge graph MLHolView using PROV-ML (D2, D3). ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9882583618164062}, "created": {"value": false, "score": 4.0411949157714844e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9895657300949097}, "created": {"value": true, "score": 0.9990513920783997}, "shared": {"value": false, "score": 3.886222839355469e-05}}}, {"type": "software", "software-type": "implicit", "software-name": {"rawForm": "scripts", "normalizedForm": "scripts", "offsetStart": 129, "offsetEnd": 136}, "context": "ProvLake [47] is a provenance system capable of capturing, integrating, and querying data across distributed services, programs, scripts, and data stores used by multiple computational workflows using provenance data management techniques [9], [24]. ", "mentionContextAttributes": {"used": {"value": false, "score": 7.045269012451172e-05}, "created": {"value": false, "score": 0.0006895065307617188}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.4991784691810608}, "created": {"value": true, "score": 0.9996402263641357}, "shared": {"value": false, "score": 2.6226043701171875e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Blazegraph", "normalizedForm": "Blazegraph", "offsetStart": 131, "offsetEnd": 141}, "version": {"rawForm": "2.1.5", "normalizedForm": "2.1.5", "offsetStart": 142, "offsetEnd": 147}, "context": "For the query performance tests, we deployed three different DBMSs on the server machine: Apache Jena TDB 3.12, Allegro 6.6.0, and Blazegraph 2.1.5.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999749660491943}, "created": {"value": false, "score": 0.0001678466796875}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999749660491943}, "created": {"value": false, "score": 0.0001678466796875}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ProvManager", "normalizedForm": "ProvManager", "offsetStart": 139, "offsetEnd": 150}, "context": "Then, the ProvConsumer, which is a lightweight service that runs on the background, consumes from this queue and sends the requests to the ProvManager, which is aware of the prospective provenance data and can create the context-aware linkages using W3C PROV-based relationships and the reuse of unique identifiers (D4), and sends the data to the MLHolView, which is managed by a DBMS, typically a knowledge graph DBMS.", "mentionContextAttributes": {"used": {"value": true, "score": 0.6635701060295105}, "created": {"value": false, "score": 7.748603820800781e-06}, "shared": {"value": false, "score": 4.887580871582031e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9882583618164062}, "created": {"value": false, "score": 0.00033664703369140625}, "shared": {"value": false, "score": 4.887580871582031e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MLHolView", "normalizedForm": "MLHolView", "offsetStart": 145, "offsetEnd": 154}, "context": "Therefore managing both kinds of provenance data, and more importantly, with a strong connection between each related kind, is essential for the MLHolView, which should be reflected in the provenance data modeling.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00037419795989990234}, "created": {"value": false, "score": 0.0005110502243041992}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9895657300949097}, "created": {"value": true, "score": 0.9990513920783997}, "shared": {"value": false, "score": 3.886222839355469e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MLHolView", "normalizedForm": "MLHolView", "offsetStart": 145, "offsetEnd": 154}, "context": "After the specification, hooks can be added to the workflows before and after each data transformation, informing the key concept (following the MLHolView's conceptual data schema) in each data transformation and data reference.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0031732916831970215}, "created": {"value": false, "score": 0.0002994537353515625}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9895657300949097}, "created": {"value": true, "score": 0.9990513920783997}, "shared": {"value": false, "score": 3.886222839355469e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "InfiniBand", "normalizedForm": "InfiniBand", "offsetStart": 145, "offsetEnd": 155}, "context": "An HPC cluster for learning workflows, which has 393 Intel and Power8 nodes, each with 24 to 48 CPU cores, 256 to 512 GB RAM, interconnected via InfiniBand, sharing about 3.45 PB in a GPFS, and using in total 946 GPUs (NVIDIA Tesla K40 and K80, each with 2880 and 4992 CUDA cores respectively); a Kubernetes cloud cluster for data processing, which has 4 nodes, each with 16 GB RAM and 8 cores; and a server machine Intel Core i7-7700T CPU 2.40 GHz, 8 GB DDR4 RAM, 128 GB SSD Liteon. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.09752994775772095}, "created": {"value": false, "score": 2.5153160095214844e-05}, "shared": {"value": false, "score": 4.76837158203125e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.09752994775772095}, "created": {"value": false, "score": 2.5153160095214844e-05}, "shared": {"value": false, "score": 4.76837158203125e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Triple Store", "normalizedForm": "Triple Store", "offsetStart": 147, "offsetEnd": 159}, "context": "For instance, raw files can be stored in file systems or cloud stores, domain-specific annotations can be stored in a Knowledge Base System (e.g., Triple Store) with domain ontologies, and curated data can be stored in a NoSQL DBMS. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0013012886047363281}, "created": {"value": false, "score": 0.00010538101196289062}, "shared": {"value": false, "score": 0.0001722574234008789}}, "documentContextAttributes": {"used": {"value": true, "score": 0.8166456818580627}, "created": {"value": false, "score": 0.00010538101196289062}, "shared": {"value": false, "score": 0.0001722574234008789}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "AllegroGraph", "normalizedForm": "AllegroGraph", "offsetStart": 153, "offsetEnd": 165}, "context": "The results show that for Q1, PROV-ML does not significantly impact query performance since the queries using PROV-ML are only 1.17x and 1.05x slower in AllegroGraph and BlazeGraph, respectively; and the difference for Jena is within the error bars, i.e., no statistically significant difference. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.987572431564331}, "created": {"value": false, "score": 2.0265579223632812e-06}, "shared": {"value": false, "score": 5.960464477539062e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.987572431564331}, "created": {"value": false, "score": 4.1365623474121094e-05}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ProvLake", "normalizedForm": "ProvLake", "offsetStart": 160, "offsetEnd": 168}, "context": "Each value of these parameters, the name of the transformation, the execution data, and the references to input and output data are captured and represented in ProvLake's provenance data graph.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9823163151741028}, "created": {"value": false, "score": 3.516674041748047e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998062252998352}, "created": {"value": true, "score": 0.996073842048645}, "shared": {"value": false, "score": 2.6226043701171875e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "AllegroGraph", "normalizedForm": "AllegroGraph", "offsetStart": 162, "offsetEnd": 174}, "context": "With these queries, we can see that those clauses that are reduced because of PROV-ML types make a difference in the query performance, with significant gains in AllegroGraph and BlazeGraph. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.4121977686882019}, "created": {"value": false, "score": 4.1365623474121094e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.987572431564331}, "created": {"value": false, "score": 4.1365623474121094e-05}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "BlazeGraph", "normalizedForm": "BlazeGraph", "offsetStart": 170, "offsetEnd": 180}, "context": "The results show that for Q1, PROV-ML does not significantly impact query performance since the queries using PROV-ML are only 1.17x and 1.05x slower in AllegroGraph and BlazeGraph, respectively; and the difference for Jena is within the error bars, i.e., no statistically significant difference. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.987572431564331}, "created": {"value": false, "score": 2.0265579223632812e-06}, "shared": {"value": false, "score": 5.960464477539062e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.987572431564331}, "created": {"value": false, "score": 4.1365623474121094e-05}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ProvTracker", "normalizedForm": "ProvTracker", "offsetStart": 170, "offsetEnd": 181}, "context": "To analyze the queue size, we compare Settings A-C with D-F, and we see larger queues provide faster provenance capture since there is less but larger communication with ProvTracker service. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9735062718391418}, "created": {"value": false, "score": 1.1205673217773438e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9735062718391418}, "created": {"value": false, "score": 0.001727461814880371}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PyTorch", "normalizedForm": "PyTorch", "offsetStart": 171, "offsetEnd": 178}, "version": {"rawForm": "1.1", "normalizedForm": "1.1", "offsetStart": 180, "offsetEnd": 183}, "context": "The workflow scripts of our use case are implemented in Python using different libraries to manipulate raw seismic files and for designing and training the ML algorithms (PyTorch V1.1) that execute in the HPC cluster. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.49917876720428467}, "created": {"value": false, "score": 0.34270817041397095}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.49917876720428467}, "created": {"value": false, "score": 0.34270817041397095}, "shared": {"value": false, "score": 3.5762786865234375e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MLHolView", "normalizedForm": "MLHolView", "offsetStart": 172, "offsetEnd": 181}, "context": "ProvManager maps like the reference architecture and the PolyProvQueryEngine is the component for building the provenance queries and sending them to the DBMS managing the MLHolView. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.21536928415298462}, "created": {"value": false, "score": 7.390975952148438e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9895657300949097}, "created": {"value": true, "score": 0.9990513920783997}, "shared": {"value": false, "score": 3.886222839355469e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PLLib", "normalizedForm": "PLLib", "offsetStart": 175, "offsetEnd": 180}, "context": "For a baseline, we first execute the training without any provenance capture, then we vary the queue size in PLLib (i.e., amount of provenance capture requests accumulated in PLLib), diskless vs. diskful (i.e., saving or not provenance data in a log file on disk), and online vs. offline (i.e., storing or not provenance data in the DBMS, available for online provenance queries during the execution).", "mentionContextAttributes": {"used": {"value": true, "score": 0.7013334035873413}, "created": {"value": false, "score": 2.1457672119140625e-06}, "shared": {"value": false, "score": 1.1920928955078125e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.7013335227966309}, "created": {"value": false, "score": 0.001377701759338379}, "shared": {"value": false, "score": 0.014402449131011963}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MLHolView", "normalizedForm": "MLHolView", "offsetStart": 176, "offsetEnd": 185}, "context": "Existing approaches keep track of data files consumed and produced in the workflows, and here we extend this concept to keep track of every data value that participates in the MLHolView, even scalar values.", "mentionContextAttributes": {"used": {"value": false, "score": 4.971027374267578e-05}, "created": {"value": true, "score": 0.8348841667175293}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9895657300949097}, "created": {"value": true, "score": 0.9990513920783997}, "shared": {"value": false, "score": 3.886222839355469e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PLLib", "normalizedForm": "PLLib", "offsetStart": 177, "offsetEnd": 182}, "context": "ProvTracker uses the specified prospective provenance data to provide for the tracking by creating the relationships of retrospective provenance data being continuously sent by PLLib added to the workflows.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0036159753799438477}, "created": {"value": false, "score": 1.2516975402832031e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.7013335227966309}, "created": {"value": false, "score": 0.001377701759338379}, "shared": {"value": false, "score": 0.014402449131011963}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MLHolView", "normalizedForm": "MLHolView", "offsetStart": 179, "offsetEnd": 188}, "context": "The provenance library (in the client-side of the system) does not need these specifications, which are essential for the server-side of the system, so the linkages that form the MLHolView can be provided.", "mentionContextAttributes": {"used": {"value": false, "score": 0.01957869529724121}, "created": {"value": false, "score": 2.9921531677246094e-05}, "shared": {"value": false, "score": 7.748603820800781e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9895657300949097}, "created": {"value": true, "score": 0.9990513920783997}, "shared": {"value": false, "score": 3.886222839355469e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "BlazeGraph", "normalizedForm": "BlazeGraph", "offsetStart": 179, "offsetEnd": 189}, "context": "With these queries, we can see that those clauses that are reduced because of PROV-ML types make a difference in the query performance, with significant gains in AllegroGraph and BlazeGraph. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.4121977686882019}, "created": {"value": false, "score": 4.1365623474121094e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.987572431564331}, "created": {"value": false, "score": 4.1365623474121094e-05}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ProvTracker", "normalizedForm": "ProvTracker", "offsetStart": 185, "offsetEnd": 196}, "context": "The PLLib allows customizing provenance capture settings, such as the queue size and whether the provenance capture events should be persisted to the local disk, rather than sending to ProvTracker. ", "mentionContextAttributes": {"used": {"value": false, "score": 3.9577484130859375e-05}, "created": {"value": false, "score": 0.00031828880310058594}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9735062718391418}, "created": {"value": false, "score": 0.001727461814880371}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MLHolView", "normalizedForm": "MLHolView", "offsetStart": 186, "offsetEnd": 195}, "context": "In addition to the domain-and ML-specific context awareness, since the workflows can be executed within heterogeneous frameworks, scripts, or WMSs and on heterogeneous environments, the MLHolView needs to be aware of such hybrid (i.e., heterogeneous) execution by containing the track of the execution environment and software, and associated metadata. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0026816725730895996}, "created": {"value": false, "score": 0.0008179545402526855}, "shared": {"value": false, "score": 9.5367431640625e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9895657300949097}, "created": {"value": true, "score": 0.9990513920783997}, "shared": {"value": false, "score": 3.886222839355469e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MLHolView", "normalizedForm": "MLHolView", "offsetStart": 206, "offsetEnd": 215}, "context": "These data and their relationships, with pointers to domain-specific knowledge graphs and large data stored in other stores, are all materialized using provenance data in the knowledge graph that forms the MLHolView. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9851750731468201}, "created": {"value": false, "score": 3.123283386230469e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9895657300949097}, "created": {"value": true, "score": 0.9990513920783997}, "shared": {"value": false, "score": 3.886222839355469e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Jena", "normalizedForm": "Jena", "offsetStart": 219, "offsetEnd": 223}, "context": "The results show that for Q1, PROV-ML does not significantly impact query performance since the queries using PROV-ML are only 1.17x and 1.05x slower in AllegroGraph and BlazeGraph, respectively; and the difference for Jena is within the error bars, i.e., no statistically significant difference.", "mentionContextAttributes": {"used": {"value": true, "score": 0.987572431564331}, "created": {"value": false, "score": 2.0265579223632812e-06}, "shared": {"value": false, "score": 5.960464477539062e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996076226234436}, "created": {"value": false, "score": 3.933906555175781e-05}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ProvLake", "normalizedForm": "ProvLake", "offsetStart": 245, "offsetEnd": 253}, "context": "Additionally, geoscientists add relevant information, based on their specialized knowledge, as input to some of those scripts to be loaded into a domain-specific knowledge graph database, external to the provenance database, but also tracked by ProvLake through links between the workflows and the domain knowledge in the graph. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0010312795639038086}, "created": {"value": false, "score": 5.5670738220214844e-05}, "shared": {"value": false, "score": 2.6226043701171875e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998062252998352}, "created": {"value": true, "score": 0.996073842048645}, "shared": {"value": false, "score": 2.6226043701171875e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MLHolView", "normalizedForm": "MLHolView", "offsetStart": 249, "offsetEnd": 258}, "context": "These batches are then received in the provenance system, which should process each request in the batch in a parallel manner, to reduce the time between the provenance capture in the workflow and the data to be readily available for queries in the MLHolView.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9587764143943787}, "created": {"value": false, "score": 3.921985626220703e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9895657300949097}, "created": {"value": true, "score": 0.9990513920783997}, "shared": {"value": false, "score": 3.886222839355469e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MLHolView", "normalizedForm": "MLHolView", "offsetStart": 277, "offsetEnd": 286}, "context": "During the execution of these workflows, users or applications may submit provenance analysis through a Query API that communicates with the Prov query component, which is a RESTful service responsible for implementing query building strategies using the query language of the MLHolView's DBMS and returning the results to the requesting client.", "mentionContextAttributes": {"used": {"value": false, "score": 0.007134795188903809}, "created": {"value": false, "score": 9.739398956298828e-05}, "shared": {"value": false, "score": 3.886222839355469e-05}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9895657300949097}, "created": {"value": true, "score": 0.9990513920783997}, "shared": {"value": false, "score": 3.886222839355469e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MLHolView", "normalizedForm": "MLHolView", "offsetStart": 347, "offsetEnd": 356}, "context": "Then, the ProvConsumer, which is a lightweight service that runs on the background, consumes from this queue and sends the requests to the ProvManager, which is aware of the prospective provenance data and can create the context-aware linkages using W3C PROV-based relationships and the reuse of unique identifiers (D4), and sends the data to the MLHolView, which is managed by a DBMS, typically a knowledge graph DBMS.", "mentionContextAttributes": {"used": {"value": true, "score": 0.6635705828666687}, "created": {"value": false, "score": 7.748603820800781e-06}, "shared": {"value": false, "score": 4.887580871582031e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9895657300949097}, "created": {"value": true, "score": 0.9990513920783997}, "shared": {"value": false, "score": 3.886222839355469e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "script", "normalizedForm": "script", "offsetStart": 411, "offsetEnd": 417}, "context": "Other classes worth mentioning for provenance analysis are: data store-data are distributed onto multiple stores, like file systems, cloud stores (e.g., IBM Cloud Object Storage, AWS S3), Relational or NoSQL DBMSs [9]; execution environment-where the workflows execute, such as HPC clusters, Kubernetes clusters, Standalone server; execution orchestration software-each workflow may be executed as a standalone script, or as a workflow in a WMS, or a composition of microservice calls, or as a pipeline in a data processing (e.g., Spark) and ML frameworks (e.g., Tensorflow); provenance data granularity-provenance of files (i.e., references to files consumed and generated in a script), functions calls (arguments and outputs), blocks of code, and stack traces [30]; and provenance analysis direction-forward or backward: generally, forward queries analyze from raw scientific files or learning datasets to trained models (e.g., Q3-Q5, Q7), whereas backward queries analyze from trained models to learning datasets or raw files (e.g., Q1, Q2, Q6).", "mentionContextAttributes": {"used": {"value": false, "score": 0.012126505374908447}, "created": {"value": false, "score": 1.2278556823730469e-05}, "shared": {"value": false, "score": 2.6226043701171875e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.998580813407898}, "created": {"value": false, "score": 0.0024404525756835938}, "shared": {"value": false, "score": 2.6226043701171875e-06}}}, {"type": "software", "software-type": "implicit", "software-name": {"rawForm": "scripts", "normalizedForm": "scripts", "offsetStart": 416, "offsetEnd": 423}, "context": "The spectrum ranges from only scientific-domain (fully white on the left) to ML only (fully black on the right), with the following personas: (i) Domain scientists, who have in-depth knowledge of the domain data and use specialized tools to interpret, visualize, and clean the scientific data; (ii) Computational scientists and engineers, who have high computational skills, often with abilities to develop parallel scripts and execute them in HPC clusters; (iii) ML scientists and engineers, who have in-depth knowledge of statistics, ML algorithms, and software engineering. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0027579069137573242}, "created": {"value": false, "score": 0.00024205446243286133}, "shared": {"value": false, "score": 1.9073486328125e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.4991784691810608}, "created": {"value": true, "score": 0.9996402263641357}, "shared": {"value": false, "score": 2.6226043701171875e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "script", "normalizedForm": "script", "offsetStart": 679, "offsetEnd": 685}, "context": "Other classes worth mentioning for provenance analysis are: data store-data are distributed onto multiple stores, like file systems, cloud stores (e.g., IBM Cloud Object Storage, AWS S3), Relational or NoSQL DBMSs [9]; execution environment-where the workflows execute, such as HPC clusters, Kubernetes clusters, Standalone server; execution orchestration software-each workflow may be executed as a standalone script, or as a workflow in a WMS, or a composition of microservice calls, or as a pipeline in a data processing (e.g., Spark) and ML frameworks (e.g., Tensorflow); provenance data granularity-provenance of files (i.e., references to files consumed and generated in a script), functions calls (arguments and outputs), blocks of code, and stack traces [30]; and provenance analysis direction-forward or backward: generally, forward queries analyze from raw scientific files or learning datasets to trained models (e.g., Q3-Q5, Q7), whereas backward queries analyze from trained models to learning datasets or raw files (e.g., Q1, Q2, Q6).", "mentionContextAttributes": {"used": {"value": false, "score": 0.012126505374908447}, "created": {"value": false, "score": 1.2278556823730469e-05}, "shared": {"value": false, "score": 2.6226043701171875e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.998580813407898}, "created": {"value": false, "score": 0.0024404525756835938}, "shared": {"value": false, "score": 2.6226043701171875e-06}}}], "references": [], "runtime": 24566, "id": "5153497ba0eb76abec92c472869f57a30e1d48b7", "metadata": {"id": "5153497ba0eb76abec92c472869f57a30e1d48b7"}, "original_file_path": "../../datalake/Samuel/SOFTware-Sync/downloads/xml/lirmm-03324881.grobid.tei.xml", "file_name": "lirmm-03324881.grobid.tei.xml"}