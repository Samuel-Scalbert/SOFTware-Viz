{"application": "software-mentions", "version": "0.8.0", "date": "2024-10-07T11:45+0000", "md5": "D4C6740AE105D68B34AA3AFDEDAD0447", "mentions": [{"type": "software", "software-type": "software", "software-name": {"rawForm": "TAG", "normalizedForm": "TAG", "offsetStart": 0, "offsetEnd": 3}, "context": "TAG is implemented in Python, Timed k-Tail's author implementation (where k is hard coded to 2) is in Java and RTI+ in C++. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.35999971628189087}, "created": {"value": false, "score": 0.0017009377479553223}, "shared": {"value": false, "score": 7.152557373046875e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999963045120239}, "created": {"value": true, "score": 0.9999216794967651}, "shared": {"value": true, "score": 0.9812684655189514}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TAG", "normalizedForm": "TAG", "offsetStart": 0, "offsetEnd": 3}, "context": "TAG learns a timed automaton to describe and understand a time-dependent system only from its generated logs, without any a priori knowledge.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0017738938331604004}, "created": {"value": false, "score": 0.00017601251602172852}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999963045120239}, "created": {"value": true, "score": 0.9999216794967651}, "shared": {"value": true, "score": 0.9812684655189514}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TAG", "normalizedForm": "TAG", "offsetStart": 0, "offsetEnd": 3}, "context": "TAG's splits, unlike in RTI+, are applied after the merging step because the factorization has gathered the paths considering the events, so a split that should have been done multiple times only needs to be done once, and only the event sequences that remain specific to a time window are isolated.", "mentionContextAttributes": {"used": {"value": false, "score": 0.008200764656066895}, "created": {"value": false, "score": 2.1457672119140625e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999963045120239}, "created": {"value": true, "score": 0.9999216794967651}, "shared": {"value": true, "score": 0.9812684655189514}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TAG", "normalizedForm": "TAG", "offsetStart": 0, "offsetEnd": 3}, "context": "TAG ceases when no more split or merge can be done.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00034236907958984375}, "created": {"value": false, "score": 7.319450378417969e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999963045120239}, "created": {"value": true, "score": 0.9999216794967651}, "shared": {"value": true, "score": 0.9812684655189514}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TAG", "normalizedForm": "TAG", "offsetStart": 0, "offsetEnd": 3}, "context": "TAG is sensitive to the complexity of the model automaton (outdegree, number of states, and twinned transitions proportion).", "mentionContextAttributes": {"used": {"value": false, "score": 3.910064697265625e-05}, "created": {"value": false, "score": 6.92605972290039e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999963045120239}, "created": {"value": true, "score": 0.9999216794967651}, "shared": {"value": true, "score": 0.9812684655189514}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GenProgTA.", "normalizedForm": "GenProgTA", "offsetStart": 0, "offsetEnd": 10}, "context": "GenProgTA. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.001645803451538086}, "created": {"value": false, "score": 4.839897155761719e-05}, "shared": {"value": false, "score": 1.430511474609375e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9969843029975891}, "created": {"value": false, "score": 0.2042618989944458}, "shared": {"value": false, "score": 1.430511474609375e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GenProgTA", "normalizedForm": "GenProgTA", "offsetStart": 0, "offsetEnd": 29}, "context": "GenProgTA (Tappler et al. 2018) is an algorithm to learn TAs which are deterministic. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0001647472381591797}, "created": {"value": false, "score": 0.005446672439575195}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9969843029975891}, "created": {"value": false, "score": 0.2042618989944458}, "shared": {"value": false, "score": 1.430511474609375e-06}}, "references": [{"label": "(Tappler et al. 2018)", "normalizedForm": "Tappler et al. 2018", "refKey": 21}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TAG", "normalizedForm": "TAG", "offsetStart": 2, "offsetEnd": 5}, "context": "\u2022 TAG, a new algorithm that easily automates the TA learning process from logs since it only requires one parameter.", "mentionContextAttributes": {"used": {"value": false, "score": 4.5418739318847656e-05}, "created": {"value": true, "score": 0.9666354060173035}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999963045120239}, "created": {"value": true, "score": 0.9999216794967651}, "shared": {"value": true, "score": 0.9812684655189514}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TAG", "normalizedForm": "TAG", "offsetStart": 2, "offsetEnd": 5}, "context": "\u2022 TAG's parameter k, only studied for our algorithm.", "mentionContextAttributes": {"used": {"value": true, "score": 0.999327540397644}, "created": {"value": false, "score": 0.0003389120101928711}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999963045120239}, "created": {"value": true, "score": 0.9999216794967651}, "shared": {"value": true, "score": 0.9812684655189514}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TAG", "normalizedForm": "TAG", "offsetStart": 3, "offsetEnd": 6}, "context": "In TAG's last step (splits and merges succession), an overlapping-guards requirement is also added to ensure convergence so a merge doesn't cancel the result of splits (Figure 3).", "mentionContextAttributes": {"used": {"value": false, "score": 0.000793755054473877}, "created": {"value": false, "score": 2.2649765014648438e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999963045120239}, "created": {"value": true, "score": 0.9999216794967651}, "shared": {"value": true, "score": 0.9812684655189514}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TAG", "normalizedForm": "TAG", "offsetStart": 8, "offsetEnd": 11}, "context": "Lastly, TAG recall and precision are improved by the splits leading to a better F1-score.", "mentionContextAttributes": {"used": {"value": false, "score": 0.04136890172958374}, "created": {"value": false, "score": 8.749961853027344e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999963045120239}, "created": {"value": true, "score": 0.9999216794967651}, "shared": {"value": true, "score": 0.9812684655189514}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TAG", "normalizedForm": "TAG", "offsetStart": 9, "offsetEnd": 12}, "context": "How does TAG scale with the complexity of the data?", "mentionContextAttributes": {"used": {"value": false, "score": 0.012552797794342041}, "created": {"value": false, "score": 1.4543533325195312e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999963045120239}, "created": {"value": true, "score": 0.9999216794967651}, "shared": {"value": true, "score": 0.9812684655189514}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TAG", "normalizedForm": "TAG", "offsetStart": 9, "offsetEnd": 12}, "context": "How does TAG cope with real-world data?", "mentionContextAttributes": {"used": {"value": false, "score": 0.0004048943519592285}, "created": {"value": false, "score": 1.895427703857422e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999963045120239}, "created": {"value": true, "score": 0.9999216794967651}, "shared": {"value": true, "score": 0.9812684655189514}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TAG", "normalizedForm": "TAG", "offsetStart": 9, "offsetEnd": 12}, "context": "How does TAG's parameter k impact the result?", "mentionContextAttributes": {"used": {"value": true, "score": 0.5284783840179443}, "created": {"value": false, "score": 2.753734588623047e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999963045120239}, "created": {"value": true, "score": 0.9999216794967651}, "shared": {"value": true, "score": 0.9812684655189514}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TAG", "normalizedForm": "TAG", "offsetStart": 9, "offsetEnd": 12}, "context": "How does TAG cope with real-world data?", "mentionContextAttributes": {"used": {"value": false, "score": 0.0004048943519592285}, "created": {"value": false, "score": 1.895427703857422e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999963045120239}, "created": {"value": true, "score": 0.9999216794967651}, "shared": {"value": true, "score": 0.9812684655189514}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TAG", "normalizedForm": "TAG", "offsetStart": 10, "offsetEnd": 13}, "context": "To assess TAG's ability to learn an interpretable and exploitable model from real data, we used the logs of the programs of the Canadian TV channel CBC Windsor (Canadian Radio-television and Telecommunications Commission 2015).", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999659061431885}, "created": {"value": false, "score": 3.075599670410156e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999963045120239}, "created": {"value": true, "score": 0.9999216794967651}, "shared": {"value": true, "score": 0.9812684655189514}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TAG", "normalizedForm": "TAG", "offsetStart": 10, "offsetEnd": 13}, "context": "Globally, TAG's precision always stays good (0.92 on average) and significantly better than the other algorithms (rate of increase of 0.48 with RTI+ and 0.34 with Timed k-Tail).", "mentionContextAttributes": {"used": {"value": false, "score": 0.0004936456680297852}, "created": {"value": false, "score": 3.516674041748047e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999963045120239}, "created": {"value": true, "score": 0.9999216794967651}, "shared": {"value": true, "score": 0.9812684655189514}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TAG", "normalizedForm": "TAG", "offsetStart": 10, "offsetEnd": 13}, "context": "Globally, TAG automata are accurate and not too generalized.", "mentionContextAttributes": {"used": {"value": false, "score": 3.361701965332031e-05}, "created": {"value": false, "score": 2.491474151611328e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999963045120239}, "created": {"value": true, "score": 0.9999216794967651}, "shared": {"value": true, "score": 0.9812684655189514}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TAG", "normalizedForm": "TAG", "offsetStart": 12, "offsetEnd": 15}, "context": "To evaluate TAG, we addressed four questions: Q1.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999500513076782}, "created": {"value": false, "score": 0.006648063659667969}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999963045120239}, "created": {"value": true, "score": 0.9999216794967651}, "shared": {"value": true, "score": 0.9812684655189514}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TAG", "normalizedForm": "TAG", "offsetStart": 13, "offsetEnd": 16}, "context": "To study how TAG and the state-of-the-art algorithms scale with the complexity of the input data, we identified multiple factors possibly inferring the runtime and model quality.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999274015426636}, "created": {"value": false, "score": 0.0004354119300842285}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999963045120239}, "created": {"value": true, "score": 0.9999216794967651}, "shared": {"value": true, "score": 0.9812684655189514}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TAG", "normalizedForm": "TAG", "offsetStart": 13, "offsetEnd": 16}, "context": "Q1. How does TAG scale with the complexity of the data?", "mentionContextAttributes": {"used": {"value": false, "score": 0.010203540325164795}, "created": {"value": false, "score": 1.3709068298339844e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999963045120239}, "created": {"value": true, "score": 0.9999216794967651}, "shared": {"value": true, "score": 0.9812684655189514}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TAG", "normalizedForm": "TAG", "offsetStart": 15, "offsetEnd": 18}, "context": "The outcome is TAG, which stands for Timed Automata Generator, a novel algorithm to learn DRTA from positive timestamped event sequences.", "mentionContextAttributes": {"used": {"value": false, "score": 0.002270519733428955}, "created": {"value": true, "score": 0.9773644804954529}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999963045120239}, "created": {"value": true, "score": 0.9999216794967651}, "shared": {"value": true, "score": 0.9812684655189514}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TAG", "normalizedForm": "TAG", "offsetStart": 16, "offsetEnd": 19}, "context": "This means that TAG automata are accurate and not too generalized.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0001977086067199707}, "created": {"value": false, "score": 2.849102020263672e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999963045120239}, "created": {"value": true, "score": 0.9999216794967651}, "shared": {"value": true, "score": 0.9812684655189514}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TAG", "normalizedForm": "TAG", "offsetStart": 18, "offsetEnd": 21}, "context": "The TA learned by TAG with the TV logs of the Friday mornings (329 events) is shown in Figure 10.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999898672103882}, "created": {"value": false, "score": 1.0609626770019531e-05}, "shared": {"value": false, "score": 5.960464477539062e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999963045120239}, "created": {"value": true, "score": 0.9999216794967651}, "shared": {"value": true, "score": 0.9812684655189514}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TAG", "normalizedForm": "TAG", "offsetStart": 22, "offsetEnd": 25}, "context": "As shown in Figure 7, TAG is less sensitive to the alphabet size than Timed k-Tail, which produces models too compact and thus not much precise when there are few different symbols, and RTI+, which doesn't generalize enough in presence of many symbols and therefore doesn't recognize well new words of the language.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00011301040649414062}, "created": {"value": false, "score": 4.649162292480469e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999963045120239}, "created": {"value": true, "score": 0.9999216794967651}, "shared": {"value": true, "score": 0.9812684655189514}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TAG", "normalizedForm": "TAG", "offsetStart": 26, "offsetEnd": 29}, "context": "First, an initial state 1 TAG source code can be found here: https://gitlab.inria.fr/lcornang/tag/.", "mentionContextAttributes": {"used": {"value": false, "score": 0.001274406909942627}, "created": {"value": false, "score": 3.24249267578125e-05}, "shared": {"value": true, "score": 0.9812684655189514}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999963045120239}, "created": {"value": true, "score": 0.9999216794967651}, "shared": {"value": true, "score": 0.9812684655189514}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TAG", "normalizedForm": "TAG", "offsetStart": 27, "offsetEnd": 30}, "context": "k is the only parameter of TAG.", "mentionContextAttributes": {"used": {"value": false, "score": 0.013367712497711182}, "created": {"value": false, "score": 0.00026994943618774414}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999963045120239}, "created": {"value": true, "score": 0.9999216794967651}, "shared": {"value": true, "score": 0.9812684655189514}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TAG", "normalizedForm": "TAG", "offsetStart": 28, "offsetEnd": 31}, "context": "These experiments show that TAG provide the best performances both for scalability and for the precision/recall trade-off.", "mentionContextAttributes": {"used": {"value": false, "score": 0.4898838400840759}, "created": {"value": false, "score": 7.998943328857422e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999963045120239}, "created": {"value": true, "score": 0.9999216794967651}, "shared": {"value": true, "score": 0.9812684655189514}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TAG", "normalizedForm": "TAG", "offsetStart": 28, "offsetEnd": 31}, "context": "Experiments have shown that TAG is fully capable of inferring a TA describing the system including realistic time constraints while remaining interpretable, visually if the model is small, and thanks to model-checking otherwise.", "mentionContextAttributes": {"used": {"value": false, "score": 8.106231689453125e-05}, "created": {"value": false, "score": 0.0015620589256286621}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999963045120239}, "created": {"value": true, "score": 0.9999216794967651}, "shared": {"value": true, "score": 0.9812684655189514}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TAG", "normalizedForm": "TAG", "offsetStart": 30, "offsetEnd": 33}, "context": "The factor impacting the most TAG is the number of timed words in the input sample, which increases the runtime but also the quality of the obtained TA.", "mentionContextAttributes": {"used": {"value": false, "score": 0.10697919130325317}, "created": {"value": false, "score": 4.971027374267578e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999963045120239}, "created": {"value": true, "score": 0.9999216794967651}, "shared": {"value": true, "score": 0.9812684655189514}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Timed k-Tail", "normalizedForm": "Timed k-Tail", "offsetStart": 30, "offsetEnd": 42}, "context": "TAG is implemented in Python, Timed k-Tail's author implementation (where k is hard coded to 2) is in Java and RTI+ in C++. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.35999971628189087}, "created": {"value": false, "score": 0.0017009377479553223}, "shared": {"value": false, "score": 7.152557373046875e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.35999971628189087}, "created": {"value": false, "score": 0.0017009377479553223}, "shared": {"value": false, "score": 7.152557373046875e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TAG", "normalizedForm": "TAG", "offsetStart": 34, "offsetEnd": 37}, "context": "To query the automaton learned by TAG with the summer data, we can take advantage of both the classical expressiveness of TA and the probabilities associated with the TAG's TA transitions.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9488057494163513}, "created": {"value": false, "score": 4.220008850097656e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999963045120239}, "created": {"value": true, "score": 0.9999216794967651}, "shared": {"value": true, "score": 0.9812684655189514}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TAG", "normalizedForm": "TAG", "offsetStart": 34, "offsetEnd": 37}, "context": "The complexity factors penalizing TAG's quality are the number of states and the outdegree.", "mentionContextAttributes": {"used": {"value": false, "score": 0.24711591005325317}, "created": {"value": false, "score": 2.181529998779297e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999963045120239}, "created": {"value": true, "score": 0.9999216794967651}, "shared": {"value": true, "score": 0.9812684655189514}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TAG", "normalizedForm": "TAG", "offsetStart": 36, "offsetEnd": 39}, "context": "In summary, these results show that TAG offers a better trade-off between recall and precision than the state-of-theart algorithms with a comparable runtime.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9996950626373291}, "created": {"value": false, "score": 2.396106719970703e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999963045120239}, "created": {"value": true, "score": 0.9999216794967651}, "shared": {"value": true, "score": 0.9812684655189514}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TAG", "normalizedForm": "TAG", "offsetStart": 39, "offsetEnd": 42}, "context": "The factors positively correlated with TAG's runtime are the following: the outdegree as more merges are necessary; the number of states since TAG process the pair of states in a breadth-first order to find split candidates; the parameter k as the states kfuture is constructed recursively; and obviously the number of timed words (Figure 6b).", "mentionContextAttributes": {"used": {"value": true, "score": 0.9980607628822327}, "created": {"value": false, "score": 1.6689300537109375e-06}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999963045120239}, "created": {"value": true, "score": 0.9999216794967651}, "shared": {"value": true, "score": 0.9812684655189514}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TAG", "normalizedForm": "TAG", "offsetStart": 39, "offsetEnd": 42}, "context": "This paper introduces a new algorithm, TAG, to learn Timed Automata from logs of real-time systems.", "mentionContextAttributes": {"used": {"value": false, "score": 2.0503997802734375e-05}, "created": {"value": true, "score": 0.9997864365577698}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999963045120239}, "created": {"value": true, "score": 0.9999216794967651}, "shared": {"value": true, "score": 0.9812684655189514}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TAG", "normalizedForm": "TAG", "offsetStart": 43, "offsetEnd": 46}, "context": "In contrast, our proposed approach, called TAG, requires only one parameter and learns a deterministic Timed Automaton having a good tradeoff between accuracy and complexity of the automata.", "mentionContextAttributes": {"used": {"value": false, "score": 4.38690185546875e-05}, "created": {"value": true, "score": 0.9996832609176636}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999963045120239}, "created": {"value": true, "score": 0.9999216794967651}, "shared": {"value": true, "score": 0.9812684655189514}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TAG", "normalizedForm": "TAG", "offsetStart": 58, "offsetEnd": 61}, "context": "We also carried out a real-data experiment to demonstrate TAG's ability to deal with real-world data and to produce interpretable models, using the logs of the programs of a Canadian TV channel and querying TAG's output with model-checking.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999057054519653}, "created": {"value": true, "score": 0.9102420806884766}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999963045120239}, "created": {"value": true, "score": 0.9999216794967651}, "shared": {"value": true, "score": 0.9812684655189514}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TAG", "normalizedForm": "TAG", "offsetStart": 75, "offsetEnd": 78}, "context": "In this paper we propose a new algorithm, called Timed Automata Generator (TAG).", "mentionContextAttributes": {"used": {"value": false, "score": 4.863739013671875e-05}, "created": {"value": true, "score": 0.9999216794967651}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999963045120239}, "created": {"value": true, "score": 0.9999216794967651}, "shared": {"value": true, "score": 0.9812684655189514}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TAG", "normalizedForm": "TAG", "offsetStart": 78, "offsetEnd": 81}, "context": "We performed an ablation study to confirm the importance of each operation of TAG. Figure 9     precision, the recall, and the F1-score obtained for the TA produced with only the tree-shaped automaton initialization, then with the initialization and the merges, and finally with the initialization, the merges, and the splits.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999963045120239}, "created": {"value": false, "score": 4.649162292480469e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999963045120239}, "created": {"value": true, "score": 0.9999216794967651}, "shared": {"value": true, "score": 0.9812684655189514}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TAG", "normalizedForm": "TAG", "offsetStart": 82, "offsetEnd": 85}, "context": "We studied the first concern by challenging RTI+, Timed k-Tail, and our algorithm TAG on the quality of their models and their runtime in various situations using synthetic data (we couldn't test GenProgTA because its interface doesn't allow the addition of new data and the source code isn't available).", "mentionContextAttributes": {"used": {"value": true, "score": 0.9969843029975891}, "created": {"value": false, "score": 0.2042618989944458}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999963045120239}, "created": {"value": true, "score": 0.9999216794967651}, "shared": {"value": true, "score": 0.9812684655189514}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TAG", "normalizedForm": "TAG", "offsetStart": 85, "offsetEnd": 88}, "context": "After a treeshaped automaton initialization (initTA function), the first step of the TAG Algorithm consists in reducing the automaton size by merging all the states that can be merged together (all possible merge), disregarding the temporal values.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0011047720909118652}, "created": {"value": false, "score": 3.504753112792969e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999963045120239}, "created": {"value": true, "score": 0.9999216794967651}, "shared": {"value": true, "score": 0.9812684655189514}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TAG", "normalizedForm": "TAG", "offsetStart": 97, "offsetEnd": 100}, "context": "In addition to the previously presented DRTA characteristics, the transitions of DRTA learned by TAG are enriched with an indicative probability of occurrence, and a guard on a global clock never reinitialized which measures the time since the beginning of a run.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0034363865852355957}, "created": {"value": false, "score": 5.257129669189453e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999963045120239}, "created": {"value": true, "score": 0.9999216794967651}, "shared": {"value": true, "score": 0.9812684655189514}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "LearnLib", "normalizedForm": "LearnLib", "offsetStart": 98, "offsetEnd": 141}, "context": "Several algorithms exist (e.g., EDSM, Alergia, MDI) and efficient implementations can be found in LearnLib (Isberner, Howar, and Steffen 2015).", "mentionContextAttributes": {"used": {"value": false, "score": 3.7550926208496094e-05}, "created": {"value": false, "score": 0.008100032806396484}, "shared": {"value": false, "score": 1.5497207641601562e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 3.7550926208496094e-05}, "created": {"value": false, "score": 0.008100032806396484}, "shared": {"value": false, "score": 1.5497207641601562e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GenProgTA", "normalizedForm": "GenProgTA", "offsetStart": 100, "offsetEnd": 109}, "context": "In this setting, three main works have been proposed: RTI+ (Verwer, de Weerdt, and Witteveen 2012), GenProgTA (Tappler et al. 2018), and Timed k-Tail (Pastore, Micucci, and Mariani 2017).", "mentionContextAttributes": {"used": {"value": false, "score": 0.00025278329849243164}, "created": {"value": false, "score": 0.18796932697296143}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9969843029975891}, "created": {"value": false, "score": 0.2042618989944458}, "shared": {"value": false, "score": 1.430511474609375e-06}}, "references": [{"label": "(Tappler et al. 2018)", "normalizedForm": "Tappler et al. 2018", "refKey": 21, "offsetStart": 5275, "offsetEnd": 5296}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TAG", "normalizedForm": "TAG", "offsetStart": 135, "offsetEnd": 138}, "context": "Globally, the runtime of the three algorithms is comparable, with RTI+ (median x = 0.22s, interquartile range IQR = 0.25s) followed by TAG (x = 0.46s, IQR = 0.21s) and Timed k-Tail (x = 0.64s, IQR = 0.06s).", "mentionContextAttributes": {"used": {"value": false, "score": 0.24507147073745728}, "created": {"value": false, "score": 2.7418136596679688e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999963045120239}, "created": {"value": true, "score": 0.9999216794967651}, "shared": {"value": true, "score": 0.9812684655189514}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TAG", "normalizedForm": "TAG", "offsetStart": 143, "offsetEnd": 146}, "context": "The factors positively correlated with TAG's runtime are the following: the outdegree as more merges are necessary; the number of states since TAG process the pair of states in a breadth-first order to find split candidates; the parameter k as the states kfuture is constructed recursively; and obviously the number of timed words (Figure 6b).", "mentionContextAttributes": {"used": {"value": true, "score": 0.9980607628822327}, "created": {"value": false, "score": 1.6689300537109375e-06}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999963045120239}, "created": {"value": true, "score": 0.9999216794967651}, "shared": {"value": true, "score": 0.9812684655189514}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TAG", "normalizedForm": "TAG", "offsetStart": 167, "offsetEnd": 170}, "context": "To query the automaton learned by TAG with the summer data, we can take advantage of both the classical expressiveness of TA and the probabilities associated with the TAG's TA transitions.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9488057494163513}, "created": {"value": false, "score": 4.220008850097656e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999963045120239}, "created": {"value": true, "score": 0.9999216794967651}, "shared": {"value": true, "score": 0.9812684655189514}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GenProgTA", "normalizedForm": "GenProgTA", "offsetStart": 196, "offsetEnd": 205}, "context": "We studied the first concern by challenging RTI+, Timed k-Tail, and our algorithm TAG on the quality of their models and their runtime in various situations using synthetic data (we couldn't test GenProgTA because its interface doesn't allow the addition of new data and the source code isn't available). ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9969843029975891}, "created": {"value": false, "score": 0.2042618989944458}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9969843029975891}, "created": {"value": false, "score": 0.2042618989944458}, "shared": {"value": false, "score": 1.430511474609375e-06}}, "references": [{"label": "(Tappler et al. 2018)", "normalizedForm": "Tappler et al. 2018", "refKey": 21}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TAG", "normalizedForm": "TAG", "offsetStart": 207, "offsetEnd": 210}, "context": "We also carried out a real-data experiment to demonstrate TAG's ability to deal with real-world data and to produce interpretable models, using the logs of the programs of a Canadian TV channel and querying TAG's output with model-checking.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999057054519653}, "created": {"value": true, "score": 0.9102420806884766}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999963045120239}, "created": {"value": true, "score": 0.9999216794967651}, "shared": {"value": true, "score": 0.9812684655189514}}}], "references": [{"refKey": 21, "tei": "<biblStruct xml:id=\"b21\">\n\t<monogr>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">M</forename><surname>Tappler</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">B</forename><forename type=\"middle\">K</forename><surname>Aichernig</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">K</forename><forename type=\"middle\">G</forename><surname>Larsen</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">F</forename><surname>Lorber</surname></persName>\n\t\t</author>\n\t\t<idno>arXiv:1808.07744</idno>\n\t\t<title level=\"m\">Learning Timed Automata via Genetic Programming</title>\n\t\t<imprint>\n\t\t\t<date>2018</date>\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}], "runtime": 10908, "id": "0b6983143b5b3511b3a598755743a8bd747e44c5", "metadata": {"id": "0b6983143b5b3511b3a598755743a8bd747e44c5"}, "original_file_path": "../../datalake/Samuel/SOFTware-Sync/downloads/xml/hal-03564455.grobid.tei.xml", "file_name": "hal-03564455.grobid.tei.xml"}