{"application": "software-mentions", "version": "0.8.0", "date": "2024-04-12T15:40+0000", "md5": "87D13C13D639AB4A9170AC5F586A1F6D", "mentions": [{"type": "software", "software-type": "software", "software-name": {"rawForm": "DNNProv", "normalizedForm": "DNNProv", "offsetStart": 0, "offsetEnd": 7}, "context": "DNNProv captures provenance from NN coded in environments like TensorFlow and Keras with low overhead [7]. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00021719932556152344}, "created": {"value": false, "score": 1.2516975402832031e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9893193244934082}, "created": {"value": true, "score": 0.9992940425872803}, "shared": {"value": false, "score": 8.940696716308594e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DNNProv", "normalizedForm": "DNNProv", "offsetStart": 0, "offsetEnd": 7}, "context": "DNNProv is a W3C PROV compliant software library that allows for online hyperparameters' analysis through provenance data [7]. ", "mentionContextAttributes": {"used": {"value": false, "score": 9.709596633911133e-05}, "created": {"value": false, "score": 9.292364120483398e-05}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9893193244934082}, "created": {"value": true, "score": 0.9992940425872803}, "shared": {"value": false, "score": 8.940696716308594e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DNNProv", "normalizedForm": "DNNProv", "offsetStart": 0, "offsetEnd": 7}, "context": "DNNProv captures typical ML hyperparameters with the flexibility to include other data. ", "mentionContextAttributes": {"used": {"value": false, "score": 8.624792098999023e-05}, "created": {"value": false, "score": 3.3974647521972656e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9893193244934082}, "created": {"value": true, "score": 0.9992940425872803}, "shared": {"value": false, "score": 8.940696716308594e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DNNProv", "normalizedForm": "DNNProv", "offsetStart": 0, "offsetEnd": 7}, "context": "DNNProv can also be connected to data visualization tools, such as Kibana2 to create dashboards and other resources to improve the runtime data analysis. ", "mentionContextAttributes": {"used": {"value": false, "score": 3.0100345611572266e-05}, "created": {"value": false, "score": 0.000492393970489502}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9893193244934082}, "created": {"value": true, "score": 0.9992940425872803}, "shared": {"value": false, "score": 8.940696716308594e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DNNProv", "normalizedForm": "DNNProv", "offsetStart": 4, "offsetEnd": 11}, "context": "The DNNProv services are used in ML-based workflows with different DL frameworks (e.g., Tensorflow, Theano) while being able to share and analyze captured provenance data using the same W3C PROV representation.", "mentionContextAttributes": {"used": {"value": false, "score": 0.07249033451080322}, "created": {"value": false, "score": 6.288290023803711e-05}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9893193244934082}, "created": {"value": true, "score": 0.9992940425872803}, "shared": {"value": false, "score": 8.940696716308594e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DNNProv", "normalizedForm": "DNNProv", "offsetStart": 14, "offsetEnd": 21}, "context": "Provenance in DNNProv captures the metrics associated with the hyperparameters along the epochs during the training execution. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0006292462348937988}, "created": {"value": false, "score": 8.165836334228516e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9893193244934082}, "created": {"value": true, "score": 0.9992940425872803}, "shared": {"value": false, "score": 8.940696716308594e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DNNProv", "normalizedForm": "DNNProv", "offsetStart": 15, "offsetEnd": 22}, "context": "In this paper, DNNProv captures parameters relevant to fine-tune PINNs, like those in the loss function. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00010305643081665039}, "created": {"value": true, "score": 0.9896615147590637}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9893193244934082}, "created": {"value": true, "score": 0.9992940425872803}, "shared": {"value": false, "score": 8.940696716308594e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q21447895", "wikipediaExternalRef": 48508507, "lang": "en", "confidence": 0.9154, "software-name": {"rawForm": "TensorFlow", "normalizedForm": "TensorFlow", "wikidataId": "Q21447895", "wikipediaExternalRef": 48508507, "lang": "en", "confidence": 0.9154, "offsetStart": 19, "offsetEnd": 29}, "context": "ML frameworks like TensorFlow and Keras are prevalent, and they can support PINNs, but they have limited provenance data, which are stored in log files. ", "mentionContextAttributes": {"used": {"value": false, "score": 3.8683414459228516e-05}, "created": {"value": false, "score": 0.00021839141845703125}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00021719932556152344}, "created": {"value": false, "score": 0.008924603462219238}, "shared": {"value": false, "score": 7.152557373046875e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DNNProv", "normalizedForm": "DNNProv", "offsetStart": 20, "offsetEnd": 27}, "context": "This paper presents DNNProv as an alternative to generating provenance in PINNs.", "mentionContextAttributes": {"used": {"value": false, "score": 5.227327346801758e-05}, "created": {"value": true, "score": 0.9992940425872803}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9893193244934082}, "created": {"value": true, "score": 0.9992940425872803}, "shared": {"value": false, "score": 8.940696716308594e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DNNProv", "normalizedForm": "DNNProv", "offsetStart": 25, "offsetEnd": 32}, "context": "Initial experiments with DNNProv using a PINN for the Factored Eikonal Equation in the Grid5000 using hybrid computing (CPU-GPU) provide evidence of the flexibility, the efficiency of data capture, and data analysis.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9893193244934082}, "created": {"value": false, "score": 0.00040847063064575195}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9893193244934082}, "created": {"value": true, "score": 0.9992940425872803}, "shared": {"value": false, "score": 8.940696716308594e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Keras", "normalizedForm": "Keras", "offsetStart": 34, "offsetEnd": 39}, "context": "ML frameworks like TensorFlow and Keras are prevalent, and they can support PINNs, but they have limited provenance data, which are stored in log files. ", "mentionContextAttributes": {"used": {"value": false, "score": 3.8683414459228516e-05}, "created": {"value": false, "score": 0.00021839141845703125}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00021719932556152344}, "created": {"value": false, "score": 0.00021839141845703125}, "shared": {"value": false, "score": 5.364418029785156e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DNNProv", "normalizedForm": "DNNProv", "offsetStart": 35, "offsetEnd": 42}, "context": "Our experiments show how using the DNNProv approach for online provenance query data analysis, and monitoring can support decision-making with very low overhead. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0011190176010131836}, "created": {"value": true, "score": 0.7842398881912231}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9893193244934082}, "created": {"value": true, "score": 0.9992940425872803}, "shared": {"value": false, "score": 8.940696716308594e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DNNProv", "normalizedForm": "DNNProv", "offsetStart": 48, "offsetEnd": 55}, "context": "By automatically capturing provenance data with DNNProv, it is possible to analyze the chosen hyperparameter values related to the training stages and adjust them during the execution to achieve results with more quality. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.5596916675567627}, "created": {"value": false, "score": 3.808736801147461e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9893193244934082}, "created": {"value": true, "score": 0.9992940425872803}, "shared": {"value": false, "score": 8.940696716308594e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Grid5000", "normalizedForm": "Grid5000", "offsetStart": 51, "offsetEnd": 59}, "context": "We are indebted to Inria by providing us access to Grid5000.", "mentionContextAttributes": {"used": {"value": false, "score": 0.011167764663696289}, "created": {"value": false, "score": 0.006456315517425537}, "shared": {"value": false, "score": 3.606081008911133e-05}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9893193244934082}, "created": {"value": true, "score": 0.829776406288147}, "shared": {"value": false, "score": 3.606081008911133e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DNNProv", "normalizedForm": "DNNProv", "offsetStart": 53, "offsetEnd": 60}, "context": "In all experiments, the FEE PINN runs on GPUs, while DNNProv captures provenance data from the same GPU and sends them asynchronously to a database running on a CPU managed by the columnar relational database system MonetDB1 . ", "mentionContextAttributes": {"used": {"value": false, "score": 0.09545272588729858}, "created": {"value": false, "score": 1.5556812286376953e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9893193244934082}, "created": {"value": true, "score": 0.9992940425872803}, "shared": {"value": false, "score": 8.940696716308594e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DNNProv", "normalizedForm": "DNNProv", "offsetStart": 56, "offsetEnd": 63}, "context": "This section presents how provenance data captured with DNNProv help improving the training of PINNs to solve an inverse FEE problem, the crosshole traveltime tomography. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0006671547889709473}, "created": {"value": false, "score": 0.03501176834106445}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9893193244934082}, "created": {"value": true, "score": 0.9992940425872803}, "shared": {"value": false, "score": 8.940696716308594e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Grid5000", "normalizedForm": "Grid5000", "offsetStart": 57, "offsetEnd": 65}, "context": "We also report our first experiences on running PINNs in Grid5000 using hybrid CPU-GPU computing.", "mentionContextAttributes": {"used": {"value": false, "score": 0.14665991067886353}, "created": {"value": true, "score": 0.829776406288147}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9893193244934082}, "created": {"value": true, "score": 0.829776406288147}, "shared": {"value": false, "score": 3.606081008911133e-05}}}, {"type": "software", "software-type": "software", "wikidataId": "Q21447895", "wikipediaExternalRef": 48508507, "lang": "en", "confidence": 0.9154, "software-name": {"rawForm": "TensorFlow", "normalizedForm": "TensorFlow", "wikidataId": "Q21447895", "wikipediaExternalRef": 48508507, "lang": "en", "confidence": 0.9154, "offsetStart": 63, "offsetEnd": 73}, "context": "DNNProv captures provenance from NN coded in environments like TensorFlow and Keras with low overhead [7]. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00021719932556152344}, "created": {"value": false, "score": 1.2516975402832031e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00021719932556152344}, "created": {"value": false, "score": 0.008924603462219238}, "shared": {"value": false, "score": 7.152557373046875e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q21156460", "wikipediaExternalRef": 47485709, "lang": "en", "confidence": 0.694, "software-name": {"rawForm": "Kibana", "normalizedForm": "Kibana", "wikidataId": "Q21156460", "wikipediaExternalRef": 47485709, "lang": "en", "confidence": 0.694, "offsetStart": 67, "offsetEnd": 74}, "context": "DNNProv can also be connected to data visualization tools, such as Kibana2 to create dashboards and other resources to improve the runtime data analysis. ", "mentionContextAttributes": {"used": {"value": false, "score": 3.0100345611572266e-05}, "created": {"value": false, "score": 0.000492393970489502}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 3.0100345611572266e-05}, "created": {"value": false, "score": 0.000492393970489502}, "shared": {"value": false, "score": 8.940696716308594e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Grid5000", "normalizedForm": "Grid5000", "offsetStart": 67, "offsetEnd": 75}, "context": "A case study has been conducted with an actual PINN application on Grid5000. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9356801509857178}, "created": {"value": false, "score": 0.006972134113311768}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9893193244934082}, "created": {"value": true, "score": 0.829776406288147}, "shared": {"value": false, "score": 3.606081008911133e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Grid5000", "normalizedForm": "Grid5000", "offsetStart": 71, "offsetEnd": 79}, "context": "All the experiments use a CPU-GPU hybrid computing mode in the Inria's Grid5000 computer system, a large-scale and flexible testbed for experiment-driven research, with a focus on parallel and distributed computing, including Cloud, HPC, and Big Data and AI [15].", "mentionContextAttributes": {"used": {"value": true, "score": 0.5340712666511536}, "created": {"value": false, "score": 0.00043839216232299805}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9893193244934082}, "created": {"value": true, "score": 0.829776406288147}, "shared": {"value": false, "score": 3.606081008911133e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Keras", "normalizedForm": "Keras", "offsetStart": 78, "offsetEnd": 83}, "context": "DNNProv captures provenance from NN coded in environments like TensorFlow and Keras with low overhead [7].", "mentionContextAttributes": {"used": {"value": false, "score": 0.00021719932556152344}, "created": {"value": false, "score": 1.2516975402832031e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00021719932556152344}, "created": {"value": false, "score": 0.00021839141845703125}, "shared": {"value": false, "score": 5.364418029785156e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Grid5000", "normalizedForm": "Grid5000", "offsetStart": 87, "offsetEnd": 95}, "context": "Initial experiments with DNNProv using a PINN for the Factored Eikonal Equation in the Grid5000 using hybrid computing (CPU-GPU) provide evidence of the flexibility, the efficiency of data capture, and data analysis.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9893193244934082}, "created": {"value": false, "score": 0.00040847063064575195}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9893193244934082}, "created": {"value": true, "score": 0.829776406288147}, "shared": {"value": false, "score": 3.606081008911133e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ModelHub", "normalizedForm": "ModelHub", "offsetStart": 87, "offsetEnd": 98}, "context": "Provenance has been added to ML to assist hyperparameter analysis in environments like ModelHub [5], and ModelKB [6]. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00029909610748291016}, "created": {"value": false, "score": 0.00032329559326171875}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00029909610748291016}, "created": {"value": false, "score": 0.00032329559326171875}, "shared": {"value": false, "score": 1.7881393432617188e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "ModelKB", "normalizedForm": "ModelKB", "offsetStart": 105, "offsetEnd": 115}, "context": "Provenance has been added to ML to assist hyperparameter analysis in environments like ModelHub [5], and ModelKB [6]. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00029909610748291016}, "created": {"value": false, "score": 0.00032329559326171875}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00029909610748291016}, "created": {"value": false, "score": 0.00032329559326171875}, "shared": {"value": false, "score": 1.1920928955078125e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PyGIMli", "normalizedForm": "PyGIMli", "offsetStart": 113, "offsetEnd": 125}, "context": "Fig. 2 shows that the PINN solution, using the FEE as the forward solver, is closer to the ground truth than the PyGIMli [14] solution. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0909314751625061}, "created": {"value": false, "score": 1.6450881958007812e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0909314751625061}, "created": {"value": false, "score": 1.6450881958007812e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q6898976", "wikipediaExternalRef": 1862647, "lang": "en", "confidence": 0.7587, "software-name": {"rawForm": "MonetDB", "normalizedForm": "MonetDB", "wikidataId": "Q6898976", "wikipediaExternalRef": 1862647, "lang": "en", "confidence": 0.7587, "offsetStart": 216, "offsetEnd": 224}, "context": "In all experiments, the FEE PINN runs on GPUs, while DNNProv captures provenance data from the same GPU and sends them asynchronously to a database running on a CPU managed by the columnar relational database system MonetDB1 . ", "mentionContextAttributes": {"used": {"value": false, "score": 0.09545266628265381}, "created": {"value": false, "score": 1.5497207641601562e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.09545266628265381}, "created": {"value": false, "score": 1.5497207641601562e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q21447895", "wikipediaExternalRef": 48508507, "lang": "en", "confidence": 0.9154, "software-name": {"rawForm": "TensorFlow", "normalizedForm": "TensorFlow", "wikidataId": "Q21447895", "wikipediaExternalRef": 48508507, "lang": "en", "confidence": 0.9154, "offsetStart": 247, "offsetEnd": 257}, "context": "Finally, for the solution of inverse problems, one may want to estimate the parameters \u03bb as a set of physical constants or even in the form of a function \u03bb(x; \u03b8 \u03bb ), which is easily achievable and implemented thanks to computing libraries such as TensorFlow and PyTorch.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0001628398895263672}, "created": {"value": false, "score": 0.008924603462219238}, "shared": {"value": false, "score": 7.152557373046875e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00021719932556152344}, "created": {"value": false, "score": 0.008924603462219238}, "shared": {"value": false, "score": 7.152557373046875e-07}}}, {"type": "software", "software-type": "software", "wikidataId": "Q47509047", "wikipediaExternalRef": 54022970, "lang": "en", "confidence": 0.9161, "software-name": {"rawForm": "PyTorch", "normalizedForm": "PyTorch", "wikidataId": "Q47509047", "wikipediaExternalRef": 54022970, "lang": "en", "confidence": 0.9161, "offsetStart": 262, "offsetEnd": 269}, "context": "Finally, for the solution of inverse problems, one may want to estimate the parameters \u03bb as a set of physical constants or even in the form of a function \u03bb(x; \u03b8 \u03bb ), which is easily achievable and implemented thanks to computing libraries such as TensorFlow and PyTorch.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0001628398895263672}, "created": {"value": false, "score": 0.008924603462219238}, "shared": {"value": false, "score": 7.152557373046875e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0001628398895263672}, "created": {"value": false, "score": 0.008924603462219238}, "shared": {"value": false, "score": 7.152557373046875e-07}}}], "references": [], "runtime": 55290, "id": "e8995c12d93891c7c77f8f8641a51d001bc329c3", "metadata": {"id": "e8995c12d93891c7c77f8f8641a51d001bc329c3"}, "original_file_path": "../../datalake/Samuel/SOFTware-Sync/data/xml_files/lirmm-03443548.grobid.tei.xml", "file_name": "lirmm-03443548.grobid.tei.xml"}