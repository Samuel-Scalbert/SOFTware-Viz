{"application": "software-mentions", "version": "0.8.0", "date": "2024-04-12T15:38+0000", "md5": "DE6143CBDD335A576C0A9CB455E138B7", "mentions": [{"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 0, "offsetEnd": 3}, "context": "SQL (relational) database systems are at the heart of any information system.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0017911195755004883}, "created": {"value": false, "score": 0.00014710426330566406}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 0, "offsetEnd": 3}, "context": "SQL database systems come in two main variants, operational and analytical, which have been around for more than three decades.", "mentionContextAttributes": {"used": {"value": false, "score": 8.64863395690918e-05}, "created": {"value": false, "score": 0.001016855239868164}, "shared": {"value": false, "score": 6.556510925292969e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NewSQL", "normalizedForm": "NewSQL", "offsetStart": 0, "offsetEnd": 6}, "context": "NewSQL has been the latest technology in the big data management landscape, combining the scalability and availability of NoSQL with the consistency and usability of SQL.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0001327991485595703}, "created": {"value": false, "score": 0.21543163061141968}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2536736726760864}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NewSQL", "normalizedForm": "NewSQL", "offsetStart": 0, "offsetEnd": 6}, "context": "NewSQL may also simplify data management, by removing the traditional separation between NoSQL and SQL (ingest data fast, query it with SQL), as well as between operational database and data warehouse / data lake (no more ETLs!).", "mentionContextAttributes": {"used": {"value": false, "score": 5.65648078918457e-05}, "created": {"value": false, "score": 0.0010101795196533203}, "shared": {"value": false, "score": 1.0132789611816406e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2536736726760864}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NewSQL", "normalizedForm": "NewSQL", "offsetStart": 0, "offsetEnd": 6}, "context": "NewSQL is the latest technology in the big data management landscape, enjoying a rapid growth in the database system and business intelligence (BI) markets.", "mentionContextAttributes": {"used": {"value": false, "score": 7.730722427368164e-05}, "created": {"value": false, "score": 0.05714535713195801}, "shared": {"value": false, "score": 1.1324882507324219e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2536736726760864}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NewSQL", "normalizedForm": "NewSQL", "offsetStart": 0, "offsetEnd": 6}, "context": "NewSQL combines the scalability and availability of NoSQL with the consistency and usability of SQL (SQL here refers to SQL database systems, which is the common term used for relational database systems).", "mentionContextAttributes": {"used": {"value": false, "score": 0.00012034177780151367}, "created": {"value": false, "score": 8.815526962280273e-05}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2536736726760864}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NewSQL", "normalizedForm": "NewSQL", "offsetStart": 0, "offsetEnd": 6}, "context": "NewSQL may also simplify data management, by removing the traditional separation between NoSQL and SQL (ingest data fast, query it with SQL), as well as between the operational database and data warehouse or data lake (no more complex data extraction tools such as ETLs or ELTs!).", "mentionContextAttributes": {"used": {"value": false, "score": 7.551908493041992e-05}, "created": {"value": false, "score": 0.004825770854949951}, "shared": {"value": false, "score": 1.1324882507324219e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2536736726760864}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NewSQL", "normalizedForm": "NewSQL", "offsetStart": 0, "offsetEnd": 6}, "context": "NewSQL database systems have different flavors and architectures.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00023746490478515625}, "created": {"value": false, "score": 0.0002110004425048828}, "shared": {"value": false, "score": 7.748603820800781e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2536736726760864}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NewSQL", "normalizedForm": "NewSQL", "offsetStart": 0, "offsetEnd": 6}, "context": "NewSQL is a new class of database system that seeks to combine the advantages of NoSQL (scalability, availability) and SQL (ACID consistency and usability) systems.", "mentionContextAttributes": {"used": {"value": false, "score": 7.647275924682617e-05}, "created": {"value": true, "score": 0.9216902852058411}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2536736726760864}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NewSQL", "normalizedForm": "NewSQL", "offsetStart": 0, "offsetEnd": 6}, "context": "NewSQL database systems come in different flavors, each targeted at different workloads and usages.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00012755393981933594}, "created": {"value": false, "score": 0.00010842084884643555}, "shared": {"value": false, "score": 1.2516975402832031e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2536736726760864}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NewSQL", "normalizedForm": "NewSQL", "offsetStart": 0, "offsetEnd": 6}, "context": "NewSQL database systems typically support more than one feature, but are often characterized by the one feature in which they excel, e.g., scalable ACID transactions.", "mentionContextAttributes": {"used": {"value": false, "score": 3.88026237487793e-05}, "created": {"value": false, "score": 0.0005785226821899414}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2536736726760864}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NewSQL", "normalizedForm": "NewSQL", "offsetStart": 0, "offsetEnd": 6}, "context": "NewSQL database systems can have one or more of these features and/or technologies, e.g., scalable operational, HTAP and main memory, or for the most advanced systems, HTAP with scalable transactions and polystore capabilities.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00010889768600463867}, "created": {"value": false, "score": 0.0005470514297485352}, "shared": {"value": false, "score": 1.4901161193847656e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2536736726760864}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NewSQL", "normalizedForm": "NewSQL", "offsetStart": 0, "offsetEnd": 6}, "context": "NewSQL combines the scalability and availability of NoSQL with the consistency and usability of SQL.", "mentionContextAttributes": {"used": {"value": false, "score": 5.513429641723633e-05}, "created": {"value": false, "score": 5.227327346801758e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2536736726760864}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NewSQL", "normalizedForm": "NewSQL", "offsetStart": 0, "offsetEnd": 6}, "context": "NewSQL systems come in different flavors, each targeted at different workloads and usages.", "mentionContextAttributes": {"used": {"value": false, "score": 5.751848220825195e-05}, "created": {"value": false, "score": 0.00012165307998657227}, "shared": {"value": false, "score": 1.1324882507324219e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2536736726760864}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NewSQL", "normalizedForm": "NewSQL", "offsetStart": 0, "offsetEnd": 6}, "context": "NewSQL database systems typically support more than one feature, but are often characterized by the one feature in which they excel, e.g., scalable ACID transactions.", "mentionContextAttributes": {"used": {"value": false, "score": 3.88026237487793e-05}, "created": {"value": false, "score": 0.0005785226821899414}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2536736726760864}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NewSQL", "normalizedForm": "NewSQL", "offsetStart": 0, "offsetEnd": 6}, "context": "NewSQL may also simplify data management, by removing the traditional separation between NoSQL and SQL (ingest data fast, query it with SQL), as well as between operational database and data warehouse / data lake (no more ETLs!).", "mentionContextAttributes": {"used": {"value": false, "score": 5.65648078918457e-05}, "created": {"value": false, "score": 0.0010101795196533203}, "shared": {"value": false, "score": 1.0132789611816406e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2536736726760864}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NewSQL", "normalizedForm": "NewSQL", "offsetStart": 0, "offsetEnd": 6}, "context": "NewSQL is relatively new, and there is much room for research.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00010162591934204102}, "created": {"value": false, "score": 0.004020512104034424}, "shared": {"value": false, "score": 1.2516975402832031e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2536736726760864}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Spanner", "normalizedForm": "Spanner", "offsetStart": 0, "offsetEnd": 7}, "context": "Spanner uses traditional locking and 2PC and provides serializability as isolation level. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00023245811462402344}, "created": {"value": false, "score": 8.761882781982422e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.02985328435897827}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.3543834686279297e-05}}, "references": [{"label": "[3]", "normalizedForm": "[3]", "refKey": 3}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Spanner", "normalizedForm": "Spanner", "offsetStart": 0, "offsetEnd": 7}, "context": "Spanner uses real time to timestamp transactions, while LeanXcale uses logical time.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0005446672439575195}, "created": {"value": false, "score": 2.682209014892578e-06}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.02985328435897827}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.3543834686279297e-05}}, "references": [{"label": "[3]", "normalizedForm": "[3]", "refKey": 3}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Spanner", "normalizedForm": "Spanner", "offsetStart": 0, "offsetEnd": 7}, "context": "Spanner uses real time to timestamp transactions, while LeanXcale uses logical time, which avoids having to rely on a complex real-time infrastructure.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00010603666305541992}, "created": {"value": false, "score": 6.973743438720703e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.02985328435897827}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.3543834686279297e-05}}, "references": [{"label": "[3]", "normalizedForm": "[3]", "refKey": 3}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "LeanXcale", "normalizedForm": "LeanXcale", "offsetStart": 0, "offsetEnd": 9}, "context": "LeanXcale adopts an approach in which transactions are timestamped with a logical time and committed transactions are made visible progressively as gaps in the serialization order are filled by newly committed transactions. ", "mentionContextAttributes": {"used": {"value": false, "score": 5.036592483520508e-05}, "created": {"value": false, "score": 0.0011546015739440918}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.16292071342468262}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[9]", "normalizedForm": "[9]", "refKey": 9}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "LeanXcale", "normalizedForm": "LeanXcale", "offsetStart": 0, "offsetEnd": 9}, "context": "LeanXcale is an advanced NewSQL HTAP database system with full SQL and polystore support with scalable ACID transactions. ", "mentionContextAttributes": {"used": {"value": false, "score": 3.49879264831543e-05}, "created": {"value": false, "score": 0.006314456462860107}, "shared": {"value": false, "score": 6.556510925292969e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.16292071342468262}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[9]", "normalizedForm": "[9]", "refKey": 9}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "LeanXcale", "normalizedForm": "LeanXcale", "offsetStart": 0, "offsetEnd": 9}, "context": "LeanXcale provides full SQL functionality over relational tables with JSON columns. ", "mentionContextAttributes": {"used": {"value": false, "score": 3.844499588012695e-05}, "created": {"value": false, "score": 1.245737075805664e-05}, "shared": {"value": false, "score": 7.748603820800781e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.16292071342468262}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[9]", "normalizedForm": "[9]", "refKey": 9}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "LeanXcale", "normalizedForm": "LeanXcale", "offsetStart": 0, "offsetEnd": 9}, "context": "LeanXcale scales out transactional management [9] by decomposing the ACID properties and scaling each of them independently but in a composable manner. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00035321712493896484}, "created": {"value": false, "score": 4.112720489501953e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.16292071342468262}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[9]", "normalizedForm": "[9]", "refKey": 9}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Spanner", "normalizedForm": "Spanner", "offsetStart": 0, "offsetEnd": 11}, "context": "Spanner [3] is an advanced NewSQL database system with full SQL and scalable ACID transactions. ", "mentionContextAttributes": {"used": {"value": false, "score": 5.072355270385742e-05}, "created": {"value": false, "score": 0.0005909204483032227}, "shared": {"value": false, "score": 7.748603820800781e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.02985328435897827}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.3543834686279297e-05}}, "references": [{"label": "[3]", "normalizedForm": "[3]", "refKey": 3}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NewSQL", "normalizedForm": "NewSQL", "offsetStart": 7, "offsetEnd": 13}, "context": "Before NewSQL, these applications could be developed, but using multiple systems and typically at a very high price.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0004158616065979004}, "created": {"value": false, "score": 0.04085320234298706}, "shared": {"value": false, "score": 7.748603820800781e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2536736726760864}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 14, "offsetEnd": 17}, "context": "The fact that SQL has been an industry standard language has had a major impact on the data analysis tool industry, making it easy for tool vendors to provide support for reporting, BI and data visualization on top of all major SQL database systems.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0005706548690795898}, "created": {"value": false, "score": 0.010554969310760498}, "shared": {"value": false, "score": 5.066394805908203e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NewSQL", "normalizedForm": "NewSQL", "offsetStart": 17, "offsetEnd": 23}, "context": "We characterized NewSQL systems by their main new features, which are: scalable ACID transactions, main memory support, polystore, and HTAP support.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00034630298614501953}, "created": {"value": true, "score": 0.9855977296829224}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2536736726760864}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NewSQL", "normalizedForm": "NewSQL", "offsetStart": 18, "offsetEnd": 24}, "context": "Today, only a few NewSQL systems have solved this problem.", "mentionContextAttributes": {"used": {"value": false, "score": 0.000417172908782959}, "created": {"value": false, "score": 0.0001361370086669922}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2536736726760864}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NewSQL", "normalizedForm": "NewSQL", "offsetStart": 18, "offsetEnd": 24}, "context": "Today, only a few NewSQL systems have solved this problem, e.g., Spanner and LeanXcale, which we described in more details.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0007314682006835938}, "created": {"value": false, "score": 0.0004348158836364746}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2536736726760864}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Spanner", "normalizedForm": "Spanner", "offsetStart": 18, "offsetEnd": 25}, "context": "For this purpose, Spanner implements an internal service called TrueTime that provides the current time and its current accuracy. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00013685226440429688}, "created": {"value": false, "score": 0.48609793186187744}, "shared": {"value": false, "score": 2.3543834686279297e-05}}, "documentContextAttributes": {"used": {"value": false, "score": 0.02985328435897827}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.3543834686279297e-05}}, "references": [{"label": "[3]", "normalizedForm": "[3]", "refKey": 3}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "LeanXcale", "normalizedForm": "LeanXcale", "offsetStart": 18, "offsetEnd": 27}, "context": "For logical time, LeanXcale uses two services: the commit sequencer and the snapshot server. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0004737973213195801}, "created": {"value": false, "score": 1.4483928680419922e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.16292071342468262}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[9]", "normalizedForm": "[9]", "refKey": 9}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "LeanXcale", "normalizedForm": "LeanXcale", "offsetStart": 19, "offsetEnd": 28}, "context": "Clients can access LeanXcale with any analytics tool using a JDBC or ODBC driver. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.000548243522644043}, "created": {"value": false, "score": 1.138448715209961e-05}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.16292071342468262}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[9]", "normalizedForm": "[9]", "refKey": 9}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 20, "offsetEnd": 23}, "context": "About a decade ago, SQL database systems were criticized for their \"One Size Fits All\" approach.", "mentionContextAttributes": {"used": {"value": false, "score": 0.009444773197174072}, "created": {"value": false, "score": 0.0005589723587036133}, "shared": {"value": false, "score": 7.748603820800781e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NewSQL", "normalizedForm": "NewSQL", "offsetStart": 20, "offsetEnd": 26}, "context": "Examples of popular NewSQL database systems are LeanXcale, Spanner, CockroachDB, EsgynDB, SAP HANA, MemSQL, NuoDB, and Splice Machine.", "mentionContextAttributes": {"used": {"value": false, "score": 6.955862045288086e-05}, "created": {"value": false, "score": 0.0006276965141296387}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2536736726760864}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 21, "offsetEnd": 24}, "context": "As an alternative to SQL, different NoSQL database systems support different data models and query languages/APIs other than standard SQL.", "mentionContextAttributes": {"used": {"value": false, "score": 6.300210952758789e-05}, "created": {"value": false, "score": 0.0015119314193725586}, "shared": {"value": false, "score": 7.212162017822266e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NewSQL", "normalizedForm": "NewSQL", "offsetStart": 22, "offsetEnd": 28}, "context": "Currently, only a few NewSQL database systems have solved this problem, e.g., the LeanXcale NewSQL database system that includes a highly scalable transaction manager [9] and a polystore [6].", "mentionContextAttributes": {"used": {"value": false, "score": 0.00012069940567016602}, "created": {"value": false, "score": 0.0002338886260986328}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2536736726760864}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Spanner", "normalizedForm": "Spanner", "offsetStart": 22, "offsetEnd": 29}, "context": "Storage management in Spanner is made scalable by leveraging Bigtable, a wide column data store.", "mentionContextAttributes": {"used": {"value": false, "score": 0.02985328435897827}, "created": {"value": false, "score": 0.0007123947143554688}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.02985328435897827}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.3543834686279297e-05}}, "references": [{"label": "[3]", "normalizedForm": "[3]", "refKey": 3}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 23, "offsetEnd": 26}, "context": "Fig. 2 illustrates the SQL shared-disk architecture, with multiple DB servers accessing the shared disk units.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0046405792236328125}, "created": {"value": false, "score": 2.199411392211914e-05}, "shared": {"value": false, "score": 7.748603820800781e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 23, "offsetEnd": 26}, "context": "NoSQL Database Systems SQL databases, whether operational or analytical, are inefficient for complex data.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0001571178436279297}, "created": {"value": false, "score": 4.583597183227539e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Spanner", "normalizedForm": "Spanner", "offsetStart": 23, "offsetEnd": 30}, "context": "Using multiversioning, Spanner also implements read-only transactions that read over the snapshot at the current time.", "mentionContextAttributes": {"used": {"value": false, "score": 6.836652755737305e-05}, "created": {"value": false, "score": 0.0034683942794799805}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.02985328435897827}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.3543834686279297e-05}}, "references": [{"label": "[3]", "normalizedForm": "[3]", "refKey": 3}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 24, "offsetEnd": 27}, "context": "The major innovation of SQL database systems has been to allow data manipulation through queries expressed in a high-level (declarative) language such as SQL.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00012731552124023438}, "created": {"value": true, "score": 0.8740658760070801}, "shared": {"value": false, "score": 6.556510925292969e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 24, "offsetEnd": 27}, "context": "Within a DB server, all SQL functionality is implemented in a tightly coupled fashion.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0017657279968261719}, "created": {"value": false, "score": 0.003460407257080078}, "shared": {"value": false, "score": 1.4901161193847656e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 24, "offsetEnd": 27}, "context": "LeanXcale provides full SQL functionality over relational tables with JSON columns.", "mentionContextAttributes": {"used": {"value": false, "score": 3.844499588012695e-05}, "created": {"value": false, "score": 1.245737075805664e-05}, "shared": {"value": false, "score": 7.748603820800781e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Spanner", "normalizedForm": "Spanner", "offsetStart": 24, "offsetEnd": 31}, "context": "To deal with deadlocks, Spanner adopts deadlock avoidance using a wound-and-wait approach thereby eliminating the bottleneck of deadlock detection. ", "mentionContextAttributes": {"used": {"value": false, "score": 5.441904067993164e-05}, "created": {"value": false, "score": 0.0008581876754760742}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.02985328435897827}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.3543834686279297e-05}}, "references": [{"label": "[3]", "normalizedForm": "[3]", "refKey": 3}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NewSQL", "normalizedForm": "NewSQL", "offsetStart": 25, "offsetEnd": 31}, "context": "LeanXcale is an advanced NewSQL HTAP database system with full SQL and polystore support with scalable ACID transactions.", "mentionContextAttributes": {"used": {"value": false, "score": 3.49879264831543e-05}, "created": {"value": false, "score": 0.006314456462860107}, "shared": {"value": false, "score": 6.556510925292969e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2536736726760864}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 27, "offsetEnd": 30}, "context": "Then, we briefly introduce SQL systems (Section 3) and NoSQL systems (Section 4).", "mentionContextAttributes": {"used": {"value": false, "score": 0.0009494423866271973}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NewSQL", "normalizedForm": "NewSQL", "offsetStart": 27, "offsetEnd": 33}, "context": "Spanner [3] is an advanced NewSQL database system with full SQL and scalable ACID transactions. ", "mentionContextAttributes": {"used": {"value": false, "score": 5.072355270385742e-05}, "created": {"value": false, "score": 0.0005909204483032227}, "shared": {"value": false, "score": 7.748603820800781e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2536736726760864}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "LeanXcale", "normalizedForm": "LeanXcale", "offsetStart": 27, "offsetEnd": 36}, "context": "An important capability of LeanXcale is polystore access using the scripting mechanism of the CloudMdsQL query language [6,7]. ", "mentionContextAttributes": {"used": {"value": false, "score": 7.909536361694336e-05}, "created": {"value": false, "score": 9.357929229736328e-06}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.16292071342468262}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[9]", "normalizedForm": "[9]", "refKey": 9}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 28, "offsetEnd": 31}, "context": "A major difference with the SQL architecture, which is client-server, is distribution by design to take full advantage of a shared-nothing cluster.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00018906593322753906}, "created": {"value": false, "score": 0.0019279718399047852}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 30, "offsetEnd": 33}, "context": "Although it can be modeled in SQL tables, graph-traversal queries may be very time consuming, with repeated and sparse accesses to the database (to mimic graph traversals on tables), which can be very inefficient, if the graph is large.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00012129545211791992}, "created": {"value": false, "score": 9.006261825561523e-05}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "wikidataId": "Q1165204", "wikipediaExternalRef": 21855450, "lang": "en", "confidence": 0.7457, "software-name": {"rawForm": "MongoDB", "normalizedForm": "MongoDB", "wikidataId": "Q1165204", "wikipediaExternalRef": 21855450, "lang": "en", "confidence": 0.7457, "offsetStart": 33, "offsetEnd": 40}, "context": "Document database systems, e.g., MongoDB and CouchBase, use a flexible data representation, such as JSON or XML, and provide an API to access these data or sometimes a query language.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00015473365783691406}, "created": {"value": false, "score": 0.0004546046257019043}, "shared": {"value": false, "score": 7.68899917602539e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.002473592758178711}, "created": {"value": false, "score": 0.0004546046257019043}, "shared": {"value": false, "score": 7.68899917602539e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 34, "offsetEnd": 37}, "context": "Atop a key-value store layer, the SQL engine can also be made scalable.", "mentionContextAttributes": {"used": {"value": false, "score": 4.941225051879883e-05}, "created": {"value": false, "score": 0.0010075569152832031}, "shared": {"value": false, "score": 6.556510925292969e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DynamoDB", "normalizedForm": "DynamoDB", "offsetStart": 34, "offsetEnd": 42}, "context": "Key-value database systems, e.g., DynamoDB and Cassandra, are schemaless so they are totally flexible with the stored data. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00016736984252929688}, "created": {"value": false, "score": 0.00011652708053588867}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00016736984252929688}, "created": {"value": false, "score": 0.00011652708053588867}, "shared": {"value": false, "score": 2.980232238769531e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NewSQL", "normalizedForm": "NewSQL", "offsetStart": 36, "offsetEnd": 42}, "context": "In this paper, we make the case for NewSQL, introducing their basic principles from distributed database systems and illustrating with Spanner and LeanXcale, two of the most advanced systems in terms of scalable transaction management.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00011771917343139648}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2536736726760864}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NewSQL", "normalizedForm": "NewSQL", "offsetStart": 36, "offsetEnd": 42}, "context": "In this paper, we make the case for NewSQL.", "mentionContextAttributes": {"used": {"value": false, "score": 0.2536736726760864}, "created": {"value": true, "score": 0.9997813701629639}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2536736726760864}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NewSQL", "normalizedForm": "NewSQL", "offsetStart": 36, "offsetEnd": 42}, "context": "In this paper, we made the case for NewSQL, which is enjoying a fast growth in the database system and BI markets in the context of big data.", "mentionContextAttributes": {"used": {"value": false, "score": 0.008650660514831543}, "created": {"value": true, "score": 0.9998297691345215}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2536736726760864}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MemDB", "normalizedForm": "MemDB", "offsetStart": 38, "offsetEnd": 43}, "context": "Main memory database systems, such as MemDB, SAP HANA and VoltDB, keep all data in memory, which enables processing queries at the speed of memory without being limited by the I/O bandwidth and latency. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00016880035400390625}, "created": {"value": false, "score": 0.0004284977912902832}, "shared": {"value": false, "score": 6.556510925292969e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00016880035400390625}, "created": {"value": false, "score": 0.0004284977912902832}, "shared": {"value": false, "score": 6.556510925292969e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NewSQL", "normalizedForm": "NewSQL", "offsetStart": 38, "offsetEnd": 44}, "context": "The architecture of the most advanced NewSQL database systems is interesting, typically using a key-value store to provide a first level of scalability (see Fig. 4).", "mentionContextAttributes": {"used": {"value": false, "score": 2.664327621459961e-05}, "created": {"value": false, "score": 0.0019263029098510742}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2536736726760864}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NewSQL", "normalizedForm": "NewSQL", "offsetStart": 40, "offsetEnd": 46}, "context": "In the rest of this section, we present NewSQL in more detail, and illustrate with two of the most advanced systems in terms of scalable transaction management: Spanner and LeanXcale.", "mentionContextAttributes": {"used": {"value": false, "score": 8.732080459594727e-05}, "created": {"value": true, "score": 0.9993574023246765}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2536736726760864}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NewSQL", "normalizedForm": "NewSQL", "offsetStart": 41, "offsetEnd": 47}, "context": "We gave a first in-depth presentation of NewSQL in a tutorial at the IEEE Big Data 2019 conference [15], where we provide a taxonomy of NewSQL database systems based on major dimensions including targeted workloads, capabilities and implementation techniques.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0007724761962890625}, "created": {"value": false, "score": 0.19246947765350342}, "shared": {"value": false, "score": 1.3709068298339844e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2536736726760864}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 42, "offsetEnd": 45}, "context": "However, within such an architecture, the SQL query engine should exploit the key-value data store, by pushing down within execution plans the operations that can be more efficiently performed close to the data, e.g., filter and aggregate.", "mentionContextAttributes": {"used": {"value": false, "score": 7.56382942199707e-05}, "created": {"value": false, "score": 0.0012610554695129395}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NewSQL", "normalizedForm": "NewSQL", "offsetStart": 45, "offsetEnd": 51}, "context": "Our taxonomy in [15] is useful to understand NewSQL database systems based on major dimensions including targeted workloads (OLTP, OLAP, HTAP), features and implementation techniques.", "mentionContextAttributes": {"used": {"value": false, "score": 9.053945541381836e-05}, "created": {"value": false, "score": 0.14697468280792236}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2536736726760864}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NewSQL", "normalizedForm": "NewSQL", "offsetStart": 45, "offsetEnd": 51}, "context": "This approach can provide the ability of the NewSQL database system to support a key-value API, in addition to plain SQL, in order to allow for fast and simple programmatic access to rows.", "mentionContextAttributes": {"used": {"value": false, "score": 2.962350845336914e-05}, "created": {"value": false, "score": 0.07127124071121216}, "shared": {"value": false, "score": 2.0325183868408203e-05}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2536736726760864}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "wikidataId": "Q951374", "wikipediaExternalRef": 40383082, "lang": "en", "confidence": 0.7869, "software-name": {"rawForm": "SAP HANA", "normalizedForm": "SAP HANA", "wikidataId": "Q951374", "wikipediaExternalRef": 40383082, "lang": "en", "confidence": 0.7869, "offsetStart": 45, "offsetEnd": 53}, "context": "Main memory database systems, such as MemDB, SAP HANA and VoltDB, keep all data in memory, which enables processing queries at the speed of memory without being limited by the I/O bandwidth and latency. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00016880035400390625}, "created": {"value": false, "score": 0.0004284977912902832}, "shared": {"value": false, "score": 6.556510925292969e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00016880035400390625}, "created": {"value": false, "score": 0.0006276965141296387}, "shared": {"value": false, "score": 6.556510925292969e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CouchBase", "normalizedForm": "CouchBase", "offsetStart": 45, "offsetEnd": 54}, "context": "Document database systems, e.g., MongoDB and CouchBase, use a flexible data representation, such as JSON or XML, and provide an API to access these data or sometimes a query language. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00015473365783691406}, "created": {"value": false, "score": 0.0004546046257019043}, "shared": {"value": false, "score": 7.68899917602539e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00015473365783691406}, "created": {"value": false, "score": 0.0004546046257019043}, "shared": {"value": false, "score": 7.68899917602539e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 47, "offsetEnd": 50}, "context": "Until a decade ago, the database world was all SQL, distributed, sometimes replicated, and fully consistent.", "mentionContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": false, "score": 0.00015878677368164062}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 47, "offsetEnd": 50}, "context": "This is obtained by relaxing features found in SQL database systems such as full SQL support, ACID transactions, in particular, atomicity and consistency, which become weaker (e.g., atomicity only for some operations, eventual consistency) and strong schema support.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00019168853759765625}, "created": {"value": false, "score": 0.00046128034591674805}, "shared": {"value": false, "score": 6.556510925292969e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Cassandra", "normalizedForm": "Cassandra", "offsetStart": 47, "offsetEnd": 56}, "context": "Key-value database systems, e.g., DynamoDB and Cassandra, are schemaless so they are totally flexible with the stored data. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00016736984252929688}, "created": {"value": false, "score": 0.00011652708053588867}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00016736984252929688}, "created": {"value": false, "score": 0.00011652708053588867}, "shared": {"value": false, "score": 2.980232238769531e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "LeanXcale", "normalizedForm": "LeanXcale", "offsetStart": 48, "offsetEnd": 57}, "context": "Examples of popular NewSQL database systems are LeanXcale, Spanner, CockroachDB, EsgynDB, SAP HANA, MemSQL, NuoDB, and Splice Machine.", "mentionContextAttributes": {"used": {"value": false, "score": 6.955862045288086e-05}, "created": {"value": false, "score": 0.0006276965141296387}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.16292071342468262}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[9]", "normalizedForm": "[9]", "refKey": 9}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 49, "offsetEnd": 52}, "context": "The data independence principle has also enabled SQL database systems to continuously integrate new advanced capabilities such as object and document support and to adapt to all kinds of hardware/software platforms from very small devices to very large computers (NUMA multiprocessor, cluster, etc.) in distributed environments.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00032210350036621094}, "created": {"value": false, "score": 0.3148916959762573}, "shared": {"value": false, "score": 3.039836883544922e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 50, "offsetEnd": 53}, "context": "Examples of research directions include: JSON and SQL integration, to seamlessly access both relational and JSON data, and thus combine the advantages of SQL and NoSQL with one database system; streaming SQL to combine data streams and NewSQL data; integration with popular big data frameworks such as Spark to perform analytics and machine learning; and defining specific NewSQL HTAP benchmarks.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00018978118896484375}, "created": {"value": true, "score": 0.7400951981544495}, "shared": {"value": false, "score": 4.589557647705078e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "LeanXcale", "normalizedForm": "LeanXcale", "offsetStart": 51, "offsetEnd": 60}, "context": "Furthermore, in addition to scalable transactions, LeanXcale provides polytore support, to access multiple data stores such as HDFS and NoSQL, and non-intrusive elasticity.", "mentionContextAttributes": {"used": {"value": false, "score": 3.212690353393555e-05}, "created": {"value": false, "score": 0.00011402368545532227}, "shared": {"value": false, "score": 1.0132789611816406e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.16292071342468262}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[9]", "normalizedForm": "[9]", "refKey": 9}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NewSQL", "normalizedForm": "NewSQL", "offsetStart": 53, "offsetEnd": 59}, "context": "By providing online analytics over operational data, NewSQL opens up new opportunities in many application domains where real-time decisions are critical.", "mentionContextAttributes": {"used": {"value": false, "score": 4.738569259643555e-05}, "created": {"value": false, "score": 0.11092483997344971}, "shared": {"value": false, "score": 1.6093254089355469e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2536736726760864}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NewSQL", "normalizedForm": "NewSQL", "offsetStart": 53, "offsetEnd": 59}, "context": "In particular, new techniques and algorithms (NoSQL, NewSQL) can be presented as extensions of earlier material, using relational concepts.", "mentionContextAttributes": {"used": {"value": false, "score": 5.0127506256103516e-05}, "created": {"value": true, "score": 0.5782541036605835}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2536736726760864}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NewSQL", "normalizedForm": "NewSQL", "offsetStart": 54, "offsetEnd": 60}, "context": "In Section 5, we present in more details our case for NewSQL.", "mentionContextAttributes": {"used": {"value": false, "score": 0.07179927825927734}, "created": {"value": true, "score": 0.9996823072433472}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2536736726760864}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "LeanXcale", "normalizedForm": "LeanXcale", "offsetStart": 55, "offsetEnd": 64}, "context": "The few systems that have solved this hard problem are LeanXcale [9] and Spanner [3], through horizontal scalability in a shared-nothing cluster typically on top of a key-value data store.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0005747079849243164}, "created": {"value": false, "score": 4.464387893676758e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.16292071342468262}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[9]", "normalizedForm": "[9]", "refKey": 9, "offsetStart": 22835, "offsetEnd": 22838}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "LeanXcale", "normalizedForm": "LeanXcale", "offsetStart": 56, "offsetEnd": 65}, "context": "Spanner uses real time to timestamp transactions, while LeanXcale uses logical time. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0005446672439575195}, "created": {"value": false, "score": 2.682209014892578e-06}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.16292071342468262}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[9]", "normalizedForm": "[9]", "refKey": 9}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "LeanXcale", "normalizedForm": "LeanXcale", "offsetStart": 56, "offsetEnd": 65}, "context": "Spanner uses real time to timestamp transactions, while LeanXcale uses logical time, which avoids having to rely on a complex real-time infrastructure. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00010603666305541992}, "created": {"value": false, "score": 6.973743438720703e-06}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.16292071342468262}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[9]", "normalizedForm": "[9]", "refKey": 9}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "LeanXcale", "normalizedForm": "LeanXcale", "offsetStart": 57, "offsetEnd": 66}, "context": "In addition to scalability, in the context of the cloud, LeanXcale supports non-intrusive elasticity and can move data partitions without affecting transaction processing. ", "mentionContextAttributes": {"used": {"value": false, "score": 2.4259090423583984e-05}, "created": {"value": false, "score": 0.00021505355834960938}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.16292071342468262}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[9]", "normalizedForm": "[9]", "refKey": 9}]}, {"type": "software", "software-type": "software", "wikidataId": "Q3884002", "wikipediaExternalRef": 27497171, "lang": "en", "confidence": 0.6923, "software-name": {"rawForm": "VoltDB", "normalizedForm": "VoltDB", "wikidataId": "Q3884002", "wikipediaExternalRef": 27497171, "lang": "en", "confidence": 0.6923, "offsetStart": 58, "offsetEnd": 64}, "context": "Main memory database systems, such as MemDB, SAP HANA and VoltDB, keep all data in memory, which enables processing queries at the speed of memory without being limited by the I/O bandwidth and latency. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00016880035400390625}, "created": {"value": false, "score": 0.0004284977912902832}, "shared": {"value": false, "score": 6.556510925292969e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00016880035400390625}, "created": {"value": false, "score": 0.0004284977912902832}, "shared": {"value": false, "score": 6.556510925292969e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Spanner", "normalizedForm": "Spanner", "offsetStart": 59, "offsetEnd": 66}, "context": "Examples of popular NewSQL database systems are LeanXcale, Spanner, CockroachDB, EsgynDB, SAP HANA, MemSQL, NuoDB, and Splice Machine.", "mentionContextAttributes": {"used": {"value": false, "score": 6.955862045288086e-05}, "created": {"value": false, "score": 0.0006276965141296387}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.02985328435897827}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.3543834686279297e-05}}, "references": [{"label": "[3]", "normalizedForm": "[3]", "refKey": 3}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 60, "offsetEnd": 63}, "context": "Spanner [3] is an advanced NewSQL database system with full SQL and scalable ACID transactions.", "mentionContextAttributes": {"used": {"value": false, "score": 5.072355270385742e-05}, "created": {"value": false, "score": 0.0005909204483032227}, "shared": {"value": false, "score": 7.748603820800781e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "wikidataId": "Q1165204", "wikipediaExternalRef": 21855450, "lang": "en", "confidence": 0.7457, "software-name": {"rawForm": "MongoDB", "normalizedForm": "MongoDB", "wikidataId": "Q1165204", "wikipediaExternalRef": 21855450, "lang": "en", "confidence": 0.7457, "offsetStart": 60, "offsetEnd": 67}, "context": "Moreover, joins across any native datasets, such as HDFS or MongoDB, including LeanXcale tables, can be applied, exploiting efficient parallel join algorithms [8].", "mentionContextAttributes": {"used": {"value": false, "score": 0.0001036524772644043}, "created": {"value": false, "score": 9.638071060180664e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.002473592758178711}, "created": {"value": false, "score": 0.0004546046257019043}, "shared": {"value": false, "score": 7.68899917602539e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 63, "offsetEnd": 66}, "context": "LeanXcale is an advanced NewSQL HTAP database system with full SQL and polystore support with scalable ACID transactions.", "mentionContextAttributes": {"used": {"value": false, "score": 3.49879264831543e-05}, "created": {"value": false, "score": 0.006314456462860107}, "shared": {"value": false, "score": 6.556510925292969e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NewSQL", "normalizedForm": "NewSQL", "offsetStart": 63, "offsetEnd": 69}, "context": "Scaling out transaction management is much harder and very few NewSQL database systems have been able to achieve it.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00037091970443725586}, "created": {"value": false, "score": 0.00028014183044433594}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2536736726760864}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Spanner", "normalizedForm": "Spanner", "offsetStart": 65, "offsetEnd": 72}, "context": "Today, only a few NewSQL systems have solved this problem, e.g., Spanner and LeanXcale, which we described in more details.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0007314682006835938}, "created": {"value": false, "score": 0.0004348158836364746}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.02985328435897827}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.3543834686279297e-05}}, "references": [{"label": "[3]", "normalizedForm": "[3]", "refKey": 3}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NewSQL", "normalizedForm": "NewSQL", "offsetStart": 66, "offsetEnd": 72}, "context": "Finally, Section 6 concludes and discusses research directions in NewSQL.", "mentionContextAttributes": {"used": {"value": false, "score": 0.025464355945587158}, "created": {"value": false, "score": 0.0008932352066040039}, "shared": {"value": false, "score": 6.556510925292969e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2536736726760864}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 68, "offsetEnd": 71}, "context": "To scale out query processing, traditional parallel techniques from SQL analytical database systems are reused.", "mentionContextAttributes": {"used": {"value": false, "score": 0.034900665283203125}, "created": {"value": false, "score": 9.077787399291992e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Spanner", "normalizedForm": "Spanner", "offsetStart": 73, "offsetEnd": 80}, "context": "The few systems that have solved this hard problem are LeanXcale [9] and Spanner [3], through horizontal scalability in a shared-nothing cluster typically on top of a key-value data store.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0005747079849243164}, "created": {"value": false, "score": 4.464387893676758e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.02985328435897827}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.3543834686279297e-05}}, "references": [{"label": "[3]", "normalizedForm": "[3]", "refKey": 3, "offsetStart": 22851, "offsetEnd": 22854}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "LeanXcale", "normalizedForm": "LeanXcale", "offsetStart": 77, "offsetEnd": 86}, "context": "Today, only a few NewSQL systems have solved this problem, e.g., Spanner and LeanXcale, which we described in more details. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0007314682006835938}, "created": {"value": false, "score": 0.0004348158836364746}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.16292071342468262}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[9]", "normalizedForm": "[9]", "refKey": 9}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "LeanXcale", "normalizedForm": "LeanXcale", "offsetStart": 79, "offsetEnd": 88}, "context": "Moreover, joins across any native datasets, such as HDFS or MongoDB, including LeanXcale tables, can be applied, exploiting efficient parallel join algorithms [8].", "mentionContextAttributes": {"used": {"value": false, "score": 0.0001036524772644043}, "created": {"value": false, "score": 9.638071060180664e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.16292071342468262}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[9]", "normalizedForm": "[9]", "refKey": 9}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 81, "offsetEnd": 84}, "context": "This is obtained by relaxing features found in SQL database systems such as full SQL support, ACID transactions, in particular, atomicity and consistency, which become weaker (e.g., atomicity only for some operations, eventual consistency) and strong schema support.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00019168853759765625}, "created": {"value": false, "score": 0.00046128034591674805}, "shared": {"value": false, "score": 6.556510925292969e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 82, "offsetEnd": 85}, "context": "The functionality provided by a KV engine corresponds to the low-level part of an SQL system: i.e., operation processing using indexes, replication, fault-tolerance and high availability. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.001194298267364502}, "created": {"value": false, "score": 7.706880569458008e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "LeanXcale", "normalizedForm": "LeanXcale", "offsetStart": 82, "offsetEnd": 91}, "context": "Currently, only a few NewSQL database systems have solved this problem, e.g., the LeanXcale NewSQL database system that includes a highly scalable transaction manager [9] and a polystore [6].", "mentionContextAttributes": {"used": {"value": false, "score": 0.00012069940567016602}, "created": {"value": false, "score": 0.0002338886260986328}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.16292071342468262}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[9]", "normalizedForm": "[9]", "refKey": 9}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NewSQL", "normalizedForm": "NewSQL", "offsetStart": 83, "offsetEnd": 89}, "context": "Note that some systems with some of the features have existed long before the term NewSQL was coined, e.g., main memory database systems.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0001342296600341797}, "created": {"value": false, "score": 0.0006856322288513184}, "shared": {"value": false, "score": 7.748603820800781e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2536736726760864}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Spanner", "normalizedForm": "Spanner", "offsetStart": 88, "offsetEnd": 95}, "context": "Since locking results in high contention between large queries and update transactions, Spanner also implements multiversioning, which avoids the conflicts between reads and writes and thus the contention stemming from these conflicts. ", "mentionContextAttributes": {"used": {"value": false, "score": 5.179643630981445e-05}, "created": {"value": false, "score": 0.0004063248634338379}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.02985328435897827}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.3543834686279297e-05}}, "references": [{"label": "[3]", "normalizedForm": "[3]", "refKey": 3}]}, {"type": "software", "software-type": "software", "wikidataId": "Q951374", "wikipediaExternalRef": 40383082, "lang": "en", "confidence": 0.7869, "software-name": {"rawForm": "SAP HANA", "normalizedForm": "SAP HANA", "wikidataId": "Q951374", "wikipediaExternalRef": 40383082, "lang": "en", "confidence": 0.7869, "offsetStart": 90, "offsetEnd": 98}, "context": "Examples of popular NewSQL database systems are LeanXcale, Spanner, CockroachDB, EsgynDB, SAP HANA, MemSQL, NuoDB, and Splice Machine.", "mentionContextAttributes": {"used": {"value": false, "score": 6.955862045288086e-05}, "created": {"value": false, "score": 0.0006276965141296387}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00016880035400390625}, "created": {"value": false, "score": 0.0006276965141296387}, "shared": {"value": false, "score": 6.556510925292969e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "LeanXcale", "normalizedForm": "LeanXcale", "offsetStart": 90, "offsetEnd": 99}, "context": "Each table is stored as a KiVi table, where the key corresponds to the primary key of the LeanXcale table and all the columns are stored as they are in KiVi columns.", "mentionContextAttributes": {"used": {"value": false, "score": 0.16292071342468262}, "created": {"value": false, "score": 5.632638931274414e-05}, "shared": {"value": false, "score": 6.556510925292969e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.16292071342468262}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[9]", "normalizedForm": "[9]", "refKey": 9}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NewSQL", "normalizedForm": "NewSQL", "offsetStart": 92, "offsetEnd": 98}, "context": "Currently, only a few NewSQL database systems have solved this problem, e.g., the LeanXcale NewSQL database system that includes a highly scalable transaction manager [9] and a polystore [6].", "mentionContextAttributes": {"used": {"value": false, "score": 0.00012069940567016602}, "created": {"value": false, "score": 0.0002338886260986328}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2536736726760864}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 96, "offsetEnd": 99}, "context": "NewSQL combines the scalability and availability of NoSQL with the consistency and usability of SQL (SQL here refers to SQL database systems, which is the common term used for relational database systems).", "mentionContextAttributes": {"used": {"value": false, "score": 0.00012034177780151367}, "created": {"value": false, "score": 8.815526962280273e-05}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 96, "offsetEnd": 99}, "context": "NewSQL combines the scalability and availability of NoSQL with the consistency and usability of SQL.", "mentionContextAttributes": {"used": {"value": false, "score": 5.513429641723633e-05}, "created": {"value": false, "score": 5.227327346801758e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 99, "offsetEnd": 102}, "context": "NewSQL may also simplify data management, by removing the traditional separation between NoSQL and SQL (ingest data fast, query it with SQL), as well as between operational database and data warehouse / data lake (no more ETLs!).", "mentionContextAttributes": {"used": {"value": false, "score": 5.65648078918457e-05}, "created": {"value": false, "score": 0.0010101795196533203}, "shared": {"value": false, "score": 1.0132789611816406e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 99, "offsetEnd": 102}, "context": "NewSQL may also simplify data management, by removing the traditional separation between NoSQL and SQL (ingest data fast, query it with SQL), as well as between the operational database and data warehouse or data lake (no more complex data extraction tools such as ETLs or ELTs!).", "mentionContextAttributes": {"used": {"value": false, "score": 7.551908493041992e-05}, "created": {"value": false, "score": 0.004825770854949951}, "shared": {"value": false, "score": 1.1324882507324219e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 99, "offsetEnd": 102}, "context": "NewSQL may also simplify data management, by removing the traditional separation between NoSQL and SQL (ingest data fast, query it with SQL), as well as between operational database and data warehouse / data lake (no more ETLs!).", "mentionContextAttributes": {"used": {"value": false, "score": 5.65648078918457e-05}, "created": {"value": false, "score": 0.0010101795196533203}, "shared": {"value": false, "score": 1.0132789611816406e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 101, "offsetEnd": 104}, "context": "NewSQL combines the scalability and availability of NoSQL with the consistency and usability of SQL (SQL here refers to SQL database systems, which is the common term used for relational database systems).", "mentionContextAttributes": {"used": {"value": false, "score": 0.00012034177780151367}, "created": {"value": false, "score": 8.815526962280273e-05}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 104, "offsetEnd": 107}, "context": "The data stores that can be accessed range from distributed raw data files (e.g., HDFS through parallel SQL queries) to NoSQL database systems (e.g., MongoDB, where queries can be expressed as Ja-vaScript programs).", "mentionContextAttributes": {"used": {"value": false, "score": 0.002473592758178711}, "created": {"value": false, "score": 0.0002474784851074219}, "shared": {"value": false, "score": 4.231929779052734e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 106, "offsetEnd": 109}, "context": "However, we can identify the following common features: support of the relational data model and standard SQL; ACID transactions; scalability using data partitioning in shared-nothing clusters; and high availability using data replication.", "mentionContextAttributes": {"used": {"value": false, "score": 6.192922592163086e-05}, "created": {"value": false, "score": 0.002837836742401123}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NewSQL", "normalizedForm": "NewSQL", "offsetStart": 110, "offsetEnd": 116}, "context": "First, we briefly recall the principles of distributed database systems (Section 2), which are at the core of NewSQL systems.", "mentionContextAttributes": {"used": {"value": false, "score": 0.04611331224441528}, "created": {"value": true, "score": 0.9976701140403748}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2536736726760864}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 111, "offsetEnd": 114}, "context": "By blending capabilities only available in different kinds of database systems such as fast data ingestion and SQL queries and by providing online analytics over operational data, NewSQL opens up new opportunities in many application domains where real-time decisions are critical.", "mentionContextAttributes": {"used": {"value": false, "score": 7.325410842895508e-05}, "created": {"value": false, "score": 0.011944830417633057}, "shared": {"value": false, "score": 4.470348358154297e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 111, "offsetEnd": 114}, "context": "NoSQL database systems came to address the requirements of web and cloud applications, NoSQL meaning \"Not Only SQL\" to contrast with the \"One Size Fits All\" approach of SQL database systems.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0023401379585266113}, "created": {"value": false, "score": 0.00046068429946899414}, "shared": {"value": false, "score": 2.205371856689453e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 111, "offsetEnd": 114}, "context": "By blending capabilities only available in different kinds of database systems such as fast data ingestion and SQL queries and by providing online analytics over operational data, NewSQL opens up new opportunities in many application domains where realtime decision is critical.", "mentionContextAttributes": {"used": {"value": false, "score": 6.99162483215332e-05}, "created": {"value": false, "score": 0.008410811424255371}, "shared": {"value": false, "score": 5.066394805908203e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 114, "offsetEnd": 117}, "context": "The main objective is to address the requirements of enterprise information systems, which have been supported by SQL database systems.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00035059452056884766}, "created": {"value": false, "score": 0.07513105869293213}, "shared": {"value": false, "score": 7.748603820800781e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Spanner", "normalizedForm": "Spanner", "offsetStart": 116, "offsetEnd": 123}, "context": "In recent years solutions have started to emerge; we discuss two approaches in the next sections as embodied in the Spanner and LeanXcale database systems.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00015544891357421875}, "created": {"value": true, "score": 0.879950761795044}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.02985328435897827}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.3543834686279297e-05}}, "references": [{"label": "[3]", "normalizedForm": "[3]", "refKey": 3}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 117, "offsetEnd": 120}, "context": "This approach can provide the ability of the NewSQL database system to support a key-value API, in addition to plain SQL, in order to allow for fast and simple programmatic access to rows.", "mentionContextAttributes": {"used": {"value": false, "score": 2.962350845336914e-05}, "created": {"value": false, "score": 0.07127141952514648}, "shared": {"value": false, "score": 2.0325183868408203e-05}}, "documentContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NewSQL", "normalizedForm": "NewSQL", "offsetStart": 118, "offsetEnd": 124}, "context": "The fourth edition of this classic textbook [11] includes the latest developments, in particular, big data, NoSQL and NewSQL.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00013518333435058594}, "created": {"value": false, "score": 0.026288747787475586}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2536736726760864}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 119, "offsetEnd": 122}, "context": "NewSQL is a new class of database system that seeks to combine the advantages of NoSQL (scalability, availability) and SQL (ACID consistency and usability) systems.", "mentionContextAttributes": {"used": {"value": false, "score": 7.647275924682617e-05}, "created": {"value": true, "score": 0.9216902852058411}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Splice Machine", "normalizedForm": "Splice Machine", "offsetStart": 119, "offsetEnd": 133}, "context": "Examples of popular NewSQL database systems are LeanXcale, Spanner, CockroachDB, EsgynDB, SAP HANA, MemSQL, NuoDB, and Splice Machine. ", "mentionContextAttributes": {"used": {"value": false, "score": 6.955862045288086e-05}, "created": {"value": false, "score": 0.0006276965141296387}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 6.955862045288086e-05}, "created": {"value": false, "score": 0.0006276965141296387}, "shared": {"value": false, "score": 4.172325134277344e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 120, "offsetEnd": 123}, "context": "NewSQL combines the scalability and availability of NoSQL with the consistency and usability of SQL (SQL here refers to SQL database systems, which is the common term used for relational database systems).", "mentionContextAttributes": {"used": {"value": false, "score": 0.00012034177780151367}, "created": {"value": false, "score": 8.815526962280273e-05}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "LeanXcale", "normalizedForm": "LeanXcale", "offsetStart": 128, "offsetEnd": 137}, "context": "In recent years solutions have started to emerge; we discuss two approaches in the next sections as embodied in the Spanner and LeanXcale database systems.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00015544891357421875}, "created": {"value": true, "score": 0.879950761795044}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.16292071342468262}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[9]", "normalizedForm": "[9]", "refKey": 9}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 132, "offsetEnd": 135}, "context": "Polystores, also called multistore systems [2], provide integrated access to a number of different data stores, such as HDFS files, SQL and NoSQL databases, through one or more query languages.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00011295080184936523}, "created": {"value": false, "score": 0.00010401010513305664}, "shared": {"value": false, "score": 2.086162567138672e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 132, "offsetEnd": 135}, "context": "Thus, we can have a fully distributed architecture, as shown below, where the three layers (key-value store, transaction engine and SQL query engine) can scale out independently in a shared-nothing cluster.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00016951560974121094}, "created": {"value": false, "score": 0.09425497055053711}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 134, "offsetEnd": 137}, "context": "As an alternative to SQL, different NoSQL database systems support different data models and query languages/APIs other than standard SQL.", "mentionContextAttributes": {"used": {"value": false, "score": 6.300210952758789e-05}, "created": {"value": false, "score": 0.0015119314193725586}, "shared": {"value": false, "score": 7.212162017822266e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Spanner", "normalizedForm": "Spanner", "offsetStart": 135, "offsetEnd": 142}, "context": "In this paper, we make the case for NewSQL, introducing their basic principles from distributed database systems and illustrating with Spanner and LeanXcale, two of the most advanced systems in terms of scalable transaction management.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00011771917343139648}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.02985328435897827}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.3543834686279297e-05}}, "references": [{"label": "[3]", "normalizedForm": "[3]", "refKey": 3}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 136, "offsetEnd": 139}, "context": "NewSQL may also simplify data management, by removing the traditional separation between NoSQL and SQL (ingest data fast, query it with SQL), as well as between operational database and data warehouse / data lake (no more ETLs!).", "mentionContextAttributes": {"used": {"value": false, "score": 5.65648078918457e-05}, "created": {"value": false, "score": 0.0010101795196533203}, "shared": {"value": false, "score": 1.0132789611816406e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 136, "offsetEnd": 139}, "context": "NewSQL may also simplify data management, by removing the traditional separation between NoSQL and SQL (ingest data fast, query it with SQL), as well as between the operational database and data warehouse or data lake (no more complex data extraction tools such as ETLs or ELTs!).", "mentionContextAttributes": {"used": {"value": false, "score": 7.551908493041992e-05}, "created": {"value": false, "score": 0.004825770854949951}, "shared": {"value": false, "score": 1.1324882507324219e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 136, "offsetEnd": 139}, "context": "NewSQL may also simplify data management, by removing the traditional separation between NoSQL and SQL (ingest data fast, query it with SQL), as well as between operational database and data warehouse / data lake (no more ETLs!).", "mentionContextAttributes": {"used": {"value": false, "score": 5.65648078918457e-05}, "created": {"value": false, "score": 0.0010101795196533203}, "shared": {"value": false, "score": 1.0132789611816406e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NewSQL", "normalizedForm": "NewSQL", "offsetStart": 136, "offsetEnd": 142}, "context": "We gave a first in-depth presentation of NewSQL in a tutorial at the IEEE Big Data 2019 conference [15], where we provide a taxonomy of NewSQL database systems based on major dimensions including targeted workloads, capabilities and implementation techniques.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0007724761962890625}, "created": {"value": false, "score": 0.19246989488601685}, "shared": {"value": false, "score": 1.3709068298339844e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2536736726760864}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 143, "offsetEnd": 146}, "context": "It is also interesting to note that the fundamental principles of data partitioning, data integration, transaction management, replication and SQL query processing have stood the test of time.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0011463165283203125}, "created": {"value": false, "score": 0.013117730617523193}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "LeanXcale", "normalizedForm": "LeanXcale", "offsetStart": 147, "offsetEnd": 156}, "context": "In this paper, we make the case for NewSQL, introducing their basic principles from distributed database systems and illustrating with Spanner and LeanXcale, two of the most advanced systems in terms of scalable transaction management.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00011771917343139648}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.16292071342468262}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[9]", "normalizedForm": "[9]", "refKey": 9}]}, {"type": "software", "software-type": "software", "wikidataId": "Q1165204", "wikipediaExternalRef": 21855450, "lang": "en", "confidence": 0.7457, "software-name": {"rawForm": "MongoDB", "normalizedForm": "MongoDB", "wikidataId": "Q1165204", "wikipediaExternalRef": 21855450, "lang": "en", "confidence": 0.7457, "offsetStart": 150, "offsetEnd": 157}, "context": "The data stores that can be accessed range from distributed raw data files (e.g., HDFS through parallel SQL queries) to NoSQL database systems (e.g., MongoDB, where queries can be expressed as Ja-vaScript programs).", "mentionContextAttributes": {"used": {"value": false, "score": 0.002473592758178711}, "created": {"value": false, "score": 0.0002474784851074219}, "shared": {"value": false, "score": 4.231929779052734e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.002473592758178711}, "created": {"value": false, "score": 0.0004546046257019043}, "shared": {"value": false, "score": 7.68899917602539e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 154, "offsetEnd": 157}, "context": "The major innovation of SQL database systems has been to allow data manipulation through queries expressed in a high-level (declarative) language such as SQL.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00012731552124023438}, "created": {"value": true, "score": 0.8740658760070801}, "shared": {"value": false, "score": 6.556510925292969e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 154, "offsetEnd": 157}, "context": "Examples of research directions include: JSON and SQL integration, to seamlessly access both relational and JSON data, and thus combine the advantages of SQL and NoSQL with one database system; streaming SQL to combine data streams and NewSQL data; integration with popular big data frameworks such as Spark to perform analytics and machine learning; and defining specific NewSQL HTAP benchmarks.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00018978118896484375}, "created": {"value": true, "score": 0.7400951981544495}, "shared": {"value": false, "score": 4.589557647705078e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 161, "offsetEnd": 164}, "context": "A hard problem is scaling out transactions in mixed operational and analytical (HTAP) workloads over big data, possibly coming from different data stores (HDFS, SQL, NoSQL).", "mentionContextAttributes": {"used": {"value": false, "score": 0.00033295154571533203}, "created": {"value": false, "score": 9.125471115112305e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Spanner", "normalizedForm": "Spanner", "offsetStart": 161, "offsetEnd": 168}, "context": "In the rest of this section, we present NewSQL in more detail, and illustrate with two of the most advanced systems in terms of scalable transaction management: Spanner and LeanXcale.", "mentionContextAttributes": {"used": {"value": false, "score": 8.732080459594727e-05}, "created": {"value": true, "score": 0.9993574023246765}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.02985328435897827}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.3543834686279297e-05}}, "references": [{"label": "[3]", "normalizedForm": "[3]", "refKey": 3}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 166, "offsetEnd": 169}, "context": "NewSQL has been the latest technology in the big data management landscape, combining the scalability and availability of NoSQL with the consistency and usability of SQL.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0001327991485595703}, "created": {"value": false, "score": 0.21543163061141968}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 169, "offsetEnd": 172}, "context": "NoSQL database systems came to address the requirements of web and cloud applications, NoSQL meaning \"Not Only SQL\" to contrast with the \"One Size Fits All\" approach of SQL database systems.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0023401379585266113}, "created": {"value": false, "score": 0.00046068429946899414}, "shared": {"value": false, "score": 2.205371856689453e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 170, "offsetEnd": 173}, "context": "However, a hard problem is scaling out transactions in mixed operational and analytical (HTAP) workloads over big data, possibly coming from different data stores (HDFS, SQL, NoSQL).", "mentionContextAttributes": {"used": {"value": false, "score": 0.00021505355834960938}, "created": {"value": false, "score": 0.0001399517059326172}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "LeanXcale", "normalizedForm": "LeanXcale", "offsetStart": 173, "offsetEnd": 182}, "context": "In the rest of this section, we present NewSQL in more detail, and illustrate with two of the most advanced systems in terms of scalable transaction management: Spanner and LeanXcale.", "mentionContextAttributes": {"used": {"value": false, "score": 8.732080459594727e-05}, "created": {"value": true, "score": 0.9993574023246765}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.16292071342468262}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.562999725341797e-06}}, "references": [{"label": "[9]", "normalizedForm": "[9]", "refKey": 9}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NewSQL", "normalizedForm": "NewSQL", "offsetStart": 180, "offsetEnd": 186}, "context": "By blending capabilities only available in different kinds of database systems such as fast data ingestion and SQL queries and by providing online analytics over operational data, NewSQL opens up new opportunities in many application domains where real-time decisions are critical.", "mentionContextAttributes": {"used": {"value": false, "score": 7.325410842895508e-05}, "created": {"value": false, "score": 0.011944830417633057}, "shared": {"value": false, "score": 4.470348358154297e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2536736726760864}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NewSQL", "normalizedForm": "NewSQL", "offsetStart": 180, "offsetEnd": 186}, "context": "By blending capabilities only available in different kinds of database systems such as fast data ingestion and SQL queries and by providing online analytics over operational data, NewSQL opens up new opportunities in many application domains where realtime decision is critical.", "mentionContextAttributes": {"used": {"value": false, "score": 6.99162483215332e-05}, "created": {"value": false, "score": 0.008410811424255371}, "shared": {"value": false, "score": 5.066394805908203e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2536736726760864}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 189, "offsetEnd": 192}, "context": "However, a hard problem is scaling transactions in mixed operational and analytical (HTAP) workloads over big data, possibly coming from different data stores (HDFS files, NoSQL databases, SQL databases).", "mentionContextAttributes": {"used": {"value": false, "score": 0.0002048015594482422}, "created": {"value": false, "score": 0.00010699033737182617}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Myrinet", "normalizedForm": "Myrinet", "offsetStart": 189, "offsetEnd": 196}, "context": "Today, shared-nothing clusters are cost-effective as servers can be off-the-shelf components (multicore processor, memory and disk) connected by a low-latency network such as Infiniband or Myrinet. ", "mentionContextAttributes": {"used": {"value": false, "score": 9.721517562866211e-05}, "created": {"value": false, "score": 0.0002391338348388672}, "shared": {"value": false, "score": 1.3053417205810547e-05}}, "documentContextAttributes": {"used": {"value": false, "score": 9.721517562866211e-05}, "created": {"value": false, "score": 0.0002391338348388672}, "shared": {"value": false, "score": 1.3053417205810547e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 204, "offsetEnd": 207}, "context": "Examples of research directions include: JSON and SQL integration, to seamlessly access both relational and JSON data, and thus combine the advantages of SQL and NoSQL with one database system; streaming SQL to combine data streams and NewSQL data; integration with popular big data frameworks such as Spark to perform analytics and machine learning; and defining specific NewSQL HTAP benchmarks.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00018978118896484375}, "created": {"value": true, "score": 0.7400951981544495}, "shared": {"value": false, "score": 4.589557647705078e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 228, "offsetEnd": 231}, "context": "The fact that SQL has been an industry standard language has had a major impact on the data analysis tool industry, making it easy for tool vendors to provide support for reporting, BI and data visualization on top of all major SQL database systems.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0005707144737243652}, "created": {"value": false, "score": 0.010554969310760498}, "shared": {"value": false, "score": 5.0067901611328125e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.06830775737762451}, "created": {"value": true, "score": 0.9995856881141663}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NewSQL", "normalizedForm": "NewSQL", "offsetStart": 236, "offsetEnd": 242}, "context": "Examples of research directions include: JSON and SQL integration, to seamlessly access both relational and JSON data, and thus combine the advantages of SQL and NoSQL with one database system; streaming SQL to combine data streams and NewSQL data; integration with popular big data frameworks such as Spark to perform analytics and machine learning; and defining specific NewSQL HTAP benchmarks.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00018972158432006836}, "created": {"value": true, "score": 0.7400952577590942}, "shared": {"value": false, "score": 4.5299530029296875e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2536736726760864}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NewSQL", "normalizedForm": "NewSQL", "offsetStart": 318, "offsetEnd": 324}, "context": "This characterization has been useful for all subsequent editions, to include the new developments in many topics, which are reflected in Fig. 1, which identifies four main categories: the early clientserver database systems, with limited distribution; the recent distributed and parallel systems, including NoSQL and NewSQL with high distribution; the P2P systems with high distribution and autonomy; and the multidatabase systems and polystores with high distribution, autonomy and heterogeneity.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0027900338172912598}, "created": {"value": false, "score": 0.0007277131080627441}, "shared": {"value": false, "score": 2.384185791015625e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2536736726760864}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "NewSQL", "normalizedForm": "NewSQL", "offsetStart": 373, "offsetEnd": 379}, "context": "Examples of research directions include: JSON and SQL integration, to seamlessly access both relational and JSON data, and thus combine the advantages of SQL and NoSQL with one database system; streaming SQL to combine data streams and NewSQL data; integration with popular big data frameworks such as Spark to perform analytics and machine learning; and defining specific NewSQL HTAP benchmarks.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00018972158432006836}, "created": {"value": true, "score": 0.7400951981544495}, "shared": {"value": false, "score": 4.5299530029296875e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.2536736726760864}, "created": {"value": true, "score": 0.9999106526374817}, "shared": {"value": false, "score": 2.0325183868408203e-05}}}], "references": [{"refKey": 3, "tei": "<biblStruct xml:id=\"b3\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">Spanner</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">James</forename><forename type=\"middle\">C</forename><surname>Corbett</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Jeffrey</forename><surname>Dean</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Michael</forename><surname>Epstein</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Andrew</forename><surname>Fikes</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Christopher</forename><surname>Frost</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">J</forename><forename type=\"middle\">J</forename><surname>Furman</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Sanjay</forename><surname>Ghemawat</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Andrey</forename><surname>Gubarev</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Christopher</forename><surname>Heiser</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Peter</forename><surname>Hochschild</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Wilson</forename><surname>Hsieh</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Sebastian</forename><surname>Kanthak</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Eugene</forename><surname>Kogan</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Hongyi</forename><surname>Li</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Alexander</forename><surname>Lloyd</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Sergey</forename><surname>Melnik</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">David</forename><surname>Mwaura</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">David</forename><surname>Nagle</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Sean</forename><surname>Quinlan</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Rajesh</forename><surname>Rao</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Lindsay</forename><surname>Rolig</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Yasushi</forename><surname>Saito</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Michal</forename><surname>Szymaniak</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Christopher</forename><surname>Taylor</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Ruth</forename><surname>Wang</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Dale</forename><surname>Woodford</surname></persName>\n\t\t</author>\n\t\t<idno type=\"DOI\">10.1145/2491245</idno>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"j\">ACM Transactions on Computer Systems</title>\n\t\t<title level=\"j\" type=\"abbrev\">ACM Trans. Comput. Syst.</title>\n\t\t<idno type=\"ISSN\">0734-2071</idno>\n\t\t<idno type=\"ISSNe\">1557-7333</idno>\n\t\t<imprint>\n\t\t\t<biblScope unit=\"volume\">31</biblScope>\n\t\t\t<biblScope unit=\"issue\">3</biblScope>\n\t\t\t<biblScope unit=\"page\" from=\"1\" to=\"22\" />\n\t\t\t<date type=\"published\" when=\"2013-08\">2012</date>\n\t\t\t<publisher>Association for Computing Machinery (ACM)</publisher>\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}, {"refKey": 9, "tei": "<biblStruct xml:id=\"b9\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">Transactional Processing for Polyglot Persistence</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Ricardo</forename><surname>Jimenez-Peris</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Marta</forename><surname>Patino-Martinez</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Ivan</forename><surname>Brondino</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Valerio</forename><surname>Vianello</surname></persName>\n\t\t</author>\n\t\t<idno type=\"DOI\">10.1109/waina.2016.144</idno>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"m\">2016 30th International Conference on Advanced Information Networking and Applications Workshops (WAINA)</title>\n\t\t<imprint>\n\t\t\t<publisher>IEEE</publisher>\n\t\t\t<date type=\"published\" when=\"2016-03\">2011</date>\n\t\t\t<biblScope unit=\"volume\">2780832</biblScope>\n\t\t\t<biblScope unit=\"page\">597</biblScope>\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}], "runtime": 59633, "id": "a874373cca8a7752f18945e0969a949a01657cc6", "metadata": {"id": "a874373cca8a7752f18945e0969a949a01657cc6"}, "original_file_path": "../../datalake/Samuel/SOFTware-Sync/data/xml_files/lirmm-03228968.grobid.tei.xml", "file_name": "lirmm-03228968.grobid.tei.xml"}