{"application": "software-mentions", "version": "0.8.0", "date": "2024-10-07T11:54+0000", "md5": "D4174D8F17E55DFFEF58E9A5FEA88567", "mentions": [{"type": "software", "software-type": "software", "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "offsetStart": 10, "offsetEnd": 16}, "context": "} Fig. 1: SPARQL query used to compute the number of intersecting classes (nic) for a subclass C.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999915361404419}, "created": {"value": false, "score": 2.5033950805664062e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999915361404419}, "created": {"value": true, "score": 0.9997761845588684}, "shared": {"value": false, "score": 2.2649765014648438e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "code", "normalizedForm": "code", "offsetStart": 11, "offsetEnd": 15}, "context": "The source code of the project is available on GitHub. 2  This paper is organized as follows: In Section II we summarize the principles of the approach to extract OWL axioms from RDF data to the improvement of which we contribute. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.013100206851959229}, "created": {"value": true, "score": 0.6310709714889526}, "shared": {"value": false, "score": 0.029252946376800537}}, "documentContextAttributes": {"used": {"value": false, "score": 0.013100206851959229}, "created": {"value": true, "score": 0.6310709714889526}, "shared": {"value": false, "score": 0.029252946376800537}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "offsetStart": 21, "offsetEnd": 27}, "context": "execution of the two SPARQL queries in our optimisation (Figures 6 and7).", "mentionContextAttributes": {"used": {"value": true, "score": 0.9819768667221069}, "created": {"value": false, "score": 9.179115295410156e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999915361404419}, "created": {"value": true, "score": 0.9997761845588684}, "shared": {"value": false, "score": 2.2649765014648438e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "offsetStart": 31, "offsetEnd": 37}, "context": "As a result, we have split the SPARQL query to compute exceptions to an axiom in two (the latter query being dependent on the result of first one):", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999771118164062}, "created": {"value": false, "score": 0.00020307302474975586}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999915361404419}, "created": {"value": true, "score": 0.9997761845588684}, "shared": {"value": false, "score": 2.2649765014648438e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SubClassOf", "normalizedForm": "SubClassOf", "offsetStart": 35, "offsetEnd": 45}, "context": "Its OWL functional-style syntax is SubClassOf(C D), where C and D are OWL classes occurring in an RDF graph, e.g.", "mentionContextAttributes": {"used": {"value": false, "score": 0.011267542839050293}, "created": {"value": false, "score": 7.140636444091797e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.7447972893714905}, "created": {"value": true, "score": 0.9998517036437988}, "shared": {"value": false, "score": 2.1457672119140625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "offsetStart": 50, "offsetEnd": 56}, "context": "In that case, the execution of the initial single SPARQL query (Figure 3) is faster than the Fig. 9: Comparison of the computation times (CPU) of axioms ARIs with the original heuristic and with our proposed optimization (A+B), highlighting the proportion of axioms for which our optimization saves time (in green) or loose time (in red).", "mentionContextAttributes": {"used": {"value": true, "score": 0.7367986440658569}, "created": {"value": false, "score": 5.4836273193359375e-06}, "shared": {"value": false, "score": 7.152557373046875e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999915361404419}, "created": {"value": true, "score": 0.9997761845588684}, "shared": {"value": false, "score": 2.2649765014648438e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "offsetStart": 53, "offsetEnd": 59}, "context": "Moreover, one may still want to resort to chunking a SPARQL query with a VALUES clause, due to the fact that some servers limit the number of elements handled in such a clause.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0003331899642944336}, "created": {"value": false, "score": 1.9788742065429688e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999915361404419}, "created": {"value": true, "score": 0.9997761845588684}, "shared": {"value": false, "score": 2.2649765014648438e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "offsetStart": 54, "offsetEnd": 60}, "context": "The LIMIT and OFFSET modifiers allow the results of a SPARQL query to be paginated, making it quicker to manipulate a subset.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0036458969116210938}, "created": {"value": false, "score": 1.3232231140136719e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999915361404419}, "created": {"value": true, "score": 0.9997761845588684}, "shared": {"value": false, "score": 2.2649765014648438e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "offsetStart": 55, "offsetEnd": 61}, "context": "We build upon previous work on using URL parameters in SPARQL federated query services [15].", "mentionContextAttributes": {"used": {"value": false, "score": 0.0012131333351135254}, "created": {"value": false, "score": 0.05094641447067261}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999915361404419}, "created": {"value": true, "score": 0.9997761845588684}, "shared": {"value": false, "score": 2.2649765014648438e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "offsetStart": 57, "offsetEnd": 63}, "context": "} } Fig. 4: Implementation of our optimized heuristic in SPARQL: retrieval of the classes which instances are possible exceptions to axiom SubClassOf(<C> <D>).", "mentionContextAttributes": {"used": {"value": false, "score": 0.00024121999740600586}, "created": {"value": false, "score": 0.0004734992980957031}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999915361404419}, "created": {"value": true, "score": 0.9997761845588684}, "shared": {"value": false, "score": 2.2649765014648438e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "offsetStart": 57, "offsetEnd": 63}, "context": "In general, it is quite tedious to implement chunking of SPARQL queries.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00018388032913208008}, "created": {"value": false, "score": 0.007914960384368896}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999915361404419}, "created": {"value": true, "score": 0.9997761845588684}, "shared": {"value": false, "score": 2.2649765014648438e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "offsetStart": 59, "offsetEnd": 65}, "context": "Therefore, we have also developed a chunking technique for SPARQL queries in order to split the task into SELECT DISTINCT ?t", "mentionContextAttributes": {"used": {"value": false, "score": 4.5180320739746094e-05}, "created": {"value": true, "score": 0.999700665473938}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999915361404419}, "created": {"value": true, "score": 0.9997761845588684}, "shared": {"value": false, "score": 2.2649765014648438e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "offsetStart": 60, "offsetEnd": 66}, "context": "The implementation of the above formulas was carried out in SPARQL. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.999742329120636}, "created": {"value": false, "score": 0.007806956768035889}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999915361404419}, "created": {"value": true, "score": 0.9997761845588684}, "shared": {"value": false, "score": 2.2649765014648438e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SubClassOf", "normalizedForm": "SubClassOf", "offsetStart": 61, "offsetEnd": 71}, "context": "Focusing on the evaluation of subsumption axioms of the form SubClassOf(C, D), where C and D are class expressions, a possibility theory-based scoring involves a significant computational cost, in terms of resources and time. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.001207888126373291}, "created": {"value": false, "score": 5.841255187988281e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.7447972893714905}, "created": {"value": true, "score": 0.9998517036437988}, "shared": {"value": false, "score": 2.1457672119140625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "offsetStart": 62, "offsetEnd": 68}, "context": "Require: numConf irmations \u0338 = ref erenceCardinality 1: q 1 \u2190 SPARQL query presented in Fig. 1 2: q 2 \u2190 SPARQL query presented in Fig. 4 3: of f set \u2190 0 4: limit \u2190 1000 5: exceptions \u2190 {} 6: types \u2190 {} 7: nic \u2190 eval(q 1 ) 8: while of f set \u0338 = nic do 9: q 2 \u2190 q 2 + LIM IT limit OF F SET of f set 10:", "mentionContextAttributes": {"used": {"value": true, "score": 0.9804269075393677}, "created": {"value": false, "score": 1.430511474609375e-06}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999915361404419}, "created": {"value": true, "score": 0.9997761845588684}, "shared": {"value": false, "score": 2.2649765014648438e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "offsetStart": 65, "offsetEnd": 71}, "context": "} Fig. 2: Naive implementation of our possibilistic heuristic in SPARQL: retrieval of the confirmations for a given axiom SubClassOf(<C> <D>). ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0003294944763183594}, "created": {"value": false, "score": 0.09444761276245117}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999915361404419}, "created": {"value": true, "score": 0.9997761845588684}, "shared": {"value": false, "score": 2.2649765014648438e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "offsetStart": 67, "offsetEnd": 73}, "context": "} } Fig. 3: Naive implementation of our possibilistic heuristic in SPARQL: retrieval of the exceptions for a given axiom SubClassOf(<C> <D>).", "mentionContextAttributes": {"used": {"value": false, "score": 0.00033283233642578125}, "created": {"value": false, "score": 0.032374680042266846}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999915361404419}, "created": {"value": true, "score": 0.9997761845588684}, "shared": {"value": false, "score": 2.2649765014648438e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "offsetStart": 70, "offsetEnd": 76}, "context": "} } } Fig. 6: Second implementation of our optimized heuristic with a SPARQL federated query using parameters loop and limit: retrieval of the classes which instances are possible exceptions to axiom SubClassOf(<C> <D>).", "mentionContextAttributes": {"used": {"value": false, "score": 0.000339508056640625}, "created": {"value": false, "score": 0.005771517753601074}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999915361404419}, "created": {"value": true, "score": 0.9997761845588684}, "shared": {"value": false, "score": 2.2649765014648438e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SubClassOf", "normalizedForm": "SubClassOf", "offsetStart": 76, "offsetEnd": 86}, "context": "Six categories of OWL axioms can be distinguished: Class expression axioms (SubClassOf, DisjointClasses, . . .", "mentionContextAttributes": {"used": {"value": false, "score": 0.005807936191558838}, "created": {"value": false, "score": 2.2411346435546875e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.7447972893714905}, "created": {"value": true, "score": 0.9998517036437988}, "shared": {"value": false, "score": 2.1457672119140625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "offsetStart": 78, "offsetEnd": 84}, "context": "Require: numConf irmations \u0338 = ref erenceCardinality 1: limit \u2190 1000 2: q 1 \u2190 SPARQL query presented in Fig. 6 3: types \u2190 eval(q 1 ) 4: start \u2190 0 5: step \u2190 50 6: limit \u2190 10000 7: while start \u0338 = \u2225types\u2225 do q 2 \u2190 SPARQL query presented in Fig.  exceptions \u2190 exceptions \u222a eval(q 2 ) 12:", "mentionContextAttributes": {"used": {"value": true, "score": 0.9708529114723206}, "created": {"value": false, "score": 1.430511474609375e-06}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999915361404419}, "created": {"value": true, "score": 0.9997761845588684}, "shared": {"value": false, "score": 2.2649765014648438e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SubClassOf", "normalizedForm": "SubClassOf", "offsetStart": 78, "offsetEnd": 88}, "context": "Within the framework of our special use case of computing the exceptions to a SubClassOf axiom, we propose a generic SPARQL operator allowing us to automatically integrate the pagination of the results with an iteration system.", "mentionContextAttributes": {"used": {"value": false, "score": 5.650520324707031e-05}, "created": {"value": true, "score": 0.9997761845588684}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.7447972893714905}, "created": {"value": true, "score": 0.9998517036437988}, "shared": {"value": false, "score": 2.1457672119140625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "code", "normalizedForm": "code", "offsetStart": 82, "offsetEnd": 86}, "context": "The advantage of this operator is twofold: on the one hand, it makes it easier to code the iteration and chunking of SPARQL queries; on the other hand, the iteration and chunking are delegated to the SPARQL engine, which in general is more effective at performing them than the user code calling the engine several times.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00048553943634033203}, "created": {"value": false, "score": 0.00017851591110229492}, "shared": {"value": false, "score": 1.0728836059570312e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.013100206851959229}, "created": {"value": true, "score": 0.6310709714889526}, "shared": {"value": false, "score": 0.029252946376800537}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "offsetStart": 83, "offsetEnd": 89}, "context": "The results presented in Fig. 10 highlight a significant CPU time saved when using SPARQL federated queries with URL parameters.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999830722808838}, "created": {"value": false, "score": 2.9802322387695312e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999915361404419}, "created": {"value": true, "score": 0.9997761845588684}, "shared": {"value": false, "score": 2.2649765014648438e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "offsetStart": 84, "offsetEnd": 90}, "context": "Another challenge is to generalize this optimisation to computational problems with SPARQL queries having a similar form, and thus bring the benefit of our work to the semantic Web community.", "mentionContextAttributes": {"used": {"value": false, "score": 5.4001808166503906e-05}, "created": {"value": true, "score": 0.6301101446151733}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999915361404419}, "created": {"value": true, "score": 0.9997761845588684}, "shared": {"value": false, "score": 2.2649765014648438e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "offsetStart": 89, "offsetEnd": 95}, "context": "To evaluate our last optimization using a loop+page operator relying on the extension of SPARQL federated query with URL parameters, we compared the times to compute axioms ARIs with this extension and with standard SPARQL queries.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999867677688599}, "created": {"value": false, "score": 1.4781951904296875e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999915361404419}, "created": {"value": true, "score": 0.9997761845588684}, "shared": {"value": false, "score": 2.2649765014648438e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SubClassOf", "normalizedForm": "SubClassOf", "offsetStart": 90, "offsetEnd": 100}, "context": "Considering the naive implementation of the retrieval of the exceptions for a given axiom SubClassOf(<C> <D>) in the SPARQL query depicted in Figure 3, we can observe the possible and useless repetition of the retrieval of the same types ?t for different instances ?x of a subclass <C> satisfying a filter condition that does not depend on ?x.", "mentionContextAttributes": {"used": {"value": true, "score": 0.7447972893714905}, "created": {"value": false, "score": 6.198883056640625e-06}, "shared": {"value": false, "score": 7.152557373046875e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.7447972893714905}, "created": {"value": true, "score": 0.9998517036437988}, "shared": {"value": false, "score": 2.1457672119140625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SubClassOf", "normalizedForm": "SubClassOf", "offsetStart": 93, "offsetEnd": 103}, "context": "We presented an optimisation of a possibilistic heuristic approach for the assessment of OWL SubClassOf axioms against RDF data, enabling a significant CPU computation time saving and offering new perspectives to this approach.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00028699636459350586}, "created": {"value": true, "score": 0.9998517036437988}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.7447972893714905}, "created": {"value": true, "score": 0.9998517036437988}, "shared": {"value": false, "score": 2.1457672119140625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SubClassOf", "normalizedForm": "SubClassOf", "offsetStart": 100, "offsetEnd": 110}, "context": "By using this novel loop+page operator, we propose another algorithm to compute the exceptions to a SubClassOf sol \u2190 sol \u222a res 10: end for 11: return sol <C> <D>axiom.", "mentionContextAttributes": {"used": {"value": false, "score": 0.006221890449523926}, "created": {"value": true, "score": 0.8993664979934692}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.7447972893714905}, "created": {"value": true, "score": 0.9998517036437988}, "shared": {"value": false, "score": 2.1457672119140625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "offsetStart": 101, "offsetEnd": 107}, "context": "VALUES ?t { <t1> <t2> ... <tn> } } } Fig. 7: Second implementation of our optimized heuristic with a SPARQL federated query using parameters loop and limit: retrieval of the exceptions of SubClassOf(<C> <D>) as being the instances of the classes computed in Fig. 6.", "mentionContextAttributes": {"used": {"value": false, "score": 0.2651733160018921}, "created": {"value": false, "score": 2.6226043701171875e-06}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999915361404419}, "created": {"value": true, "score": 0.9997761845588684}, "shared": {"value": false, "score": 2.2649765014648438e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "offsetStart": 104, "offsetEnd": 110}, "context": "Require: numConf irmations \u0338 = ref erenceCardinality 1: q 1 \u2190 SPARQL query presented in Fig. 1 2: q 2 \u2190 SPARQL query presented in Fig. 4 3: of f set \u2190 0 4: limit \u2190 1000 5: exceptions \u2190 {} 6: types \u2190 {} 7: nic \u2190 eval(q 1 ) 8: while of f set \u0338 = nic do 9: q 2 \u2190 q 2 + LIM IT limit OF F SET of f set 10:", "mentionContextAttributes": {"used": {"value": true, "score": 0.9804269075393677}, "created": {"value": false, "score": 1.430511474609375e-06}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999915361404419}, "created": {"value": true, "score": 0.9997761845588684}, "shared": {"value": false, "score": 2.2649765014648438e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SubClassOf", "normalizedForm": "SubClassOf", "offsetStart": 108, "offsetEnd": 118}, "context": "Taking inspiration from possibility theory [11], we previously proposed a possibilistic heuristic to assess SubClassOf axioms with the two possibilistic metrics of possibility and necessity of an axiom [10], [12]- [14].", "mentionContextAttributes": {"used": {"value": false, "score": 0.0028439760208129883}, "created": {"value": false, "score": 0.0008873343467712402}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.7447972893714905}, "created": {"value": true, "score": 0.9998517036437988}, "shared": {"value": false, "score": 2.1457672119140625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "offsetStart": 113, "offsetEnd": 119}, "context": "In this approach, the extraction of candidate axioms relies on an evolutionary algorithm and their evaluation on SPARQL queries to compute a score based on possibility theory [11].", "mentionContextAttributes": {"used": {"value": false, "score": 0.0009542107582092285}, "created": {"value": false, "score": 3.039836883544922e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999915361404419}, "created": {"value": true, "score": 0.9997761845588684}, "shared": {"value": false, "score": 2.2649765014648438e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SubClassOf", "normalizedForm": "SubClassOf", "offsetStart": 114, "offsetEnd": 124}, "context": "Additionally, considering the worst case where (almost) all the instances of subclass <C> are exceptions to axiom SubClassOf <C> <D> (in that case the axiom's ARI will be close to -1), the computation time of exceptions may be very long if the number of instances of <C> is high.", "mentionContextAttributes": {"used": {"value": false, "score": 0.07495087385177612}, "created": {"value": false, "score": 2.0265579223632812e-06}, "shared": {"value": false, "score": 2.1457672119140625e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.7447972893714905}, "created": {"value": true, "score": 0.9998517036437988}, "shared": {"value": false, "score": 2.1457672119140625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "offsetStart": 115, "offsetEnd": 121}, "context": "of f set \u2190 of f set + min(nic -of f set, limit) 12: end while 13: start \u2190 0 14: step \u2190 100 while true do 20: q 3 \u2190 SPARQL query presented in Fig. 5 21: using VALUES { t i \u2208 types, i \u2208 [start, end] } 22: q 3 \u2190 q 3 + LIM IT limit OF F SET of f set Output: numExceptions, and a list of these exceptions.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9935342073440552}, "created": {"value": false, "score": 1.9073486328125e-06}, "shared": {"value": false, "score": 7.152557373046875e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999915361404419}, "created": {"value": true, "score": 0.9997761845588684}, "shared": {"value": false, "score": 2.2649765014648438e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "offsetStart": 116, "offsetEnd": 122}, "context": "VALUES ?t { <t1> <t2> ... <tn> } } LIMIT $limit OFFSET $offset Fig. 5: Implementation of our optimized heuristic in SPARQL: retrieval of the exceptions of SubClassOf(<C> <D>) as being the instances of the classes computed in Fig. 4. several steps.", "mentionContextAttributes": {"used": {"value": true, "score": 0.7358218431472778}, "created": {"value": false, "score": 1.6689300537109375e-06}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999915361404419}, "created": {"value": true, "score": 0.9997761845588684}, "shared": {"value": false, "score": 2.2649765014648438e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "offsetStart": 117, "offsetEnd": 123}, "context": "Considering the naive implementation of the retrieval of the exceptions for a given axiom SubClassOf(<C> <D>) in the SPARQL query depicted in Figure 3, we can observe the possible and useless repetition of the retrieval of the same types ?t for different instances ?x of a subclass <C> satisfying a filter condition that does not depend on ?x.", "mentionContextAttributes": {"used": {"value": true, "score": 0.7447972297668457}, "created": {"value": false, "score": 6.198883056640625e-06}, "shared": {"value": false, "score": 7.152557373046875e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999915361404419}, "created": {"value": true, "score": 0.9997761845588684}, "shared": {"value": false, "score": 2.2649765014648438e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "offsetStart": 117, "offsetEnd": 123}, "context": "Within the framework of our special use case of computing the exceptions to a SubClassOf axiom, we propose a generic SPARQL operator allowing us to automatically integrate the pagination of the results with an iteration system.", "mentionContextAttributes": {"used": {"value": false, "score": 5.650520324707031e-05}, "created": {"value": true, "score": 0.9997761845588684}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999915361404419}, "created": {"value": true, "score": 0.9997761845588684}, "shared": {"value": false, "score": 2.2649765014648438e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "offsetStart": 117, "offsetEnd": 123}, "context": "The advantage of this operator is twofold: on the one hand, it makes it easier to code the iteration and chunking of SPARQL queries; on the other hand, the iteration and chunking are delegated to the SPARQL engine, which in general is more effective at performing them than the user code calling the engine several times.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00048553943634033203}, "created": {"value": false, "score": 0.00017851591110229492}, "shared": {"value": false, "score": 1.0728836059570312e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999915361404419}, "created": {"value": true, "score": 0.9997761845588684}, "shared": {"value": false, "score": 2.2649765014648438e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SubClassOf", "normalizedForm": "SubClassOf", "offsetStart": 121, "offsetEnd": 131}, "context": "} } Fig. 3: Naive implementation of our possibilistic heuristic in SPARQL: retrieval of the exceptions for a given axiom SubClassOf(<C> <D>).", "mentionContextAttributes": {"used": {"value": false, "score": 0.00033283233642578125}, "created": {"value": false, "score": 0.032374680042266846}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.7447972893714905}, "created": {"value": true, "score": 0.9998517036437988}, "shared": {"value": false, "score": 2.1457672119140625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SubClassOf", "normalizedForm": "SubClassOf", "offsetStart": 122, "offsetEnd": 132}, "context": "} Fig. 2: Naive implementation of our possibilistic heuristic in SPARQL: retrieval of the confirmations for a given axiom SubClassOf(<C> <D>).", "mentionContextAttributes": {"used": {"value": false, "score": 0.0003294944763183594}, "created": {"value": false, "score": 0.09444761276245117}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.7447972893714905}, "created": {"value": true, "score": 0.9998517036437988}, "shared": {"value": false, "score": 2.1457672119140625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SubClassOf", "normalizedForm": "SubClassOf", "offsetStart": 139, "offsetEnd": 149}, "context": "} } Fig. 4: Implementation of our optimized heuristic in SPARQL: retrieval of the classes which instances are possible exceptions to axiom SubClassOf(<C> <D>).", "mentionContextAttributes": {"used": {"value": false, "score": 0.00024121999740600586}, "created": {"value": false, "score": 0.0004734992980957031}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.7447972893714905}, "created": {"value": true, "score": 0.9998517036437988}, "shared": {"value": false, "score": 2.1457672119140625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "offsetStart": 140, "offsetEnd": 146}, "context": "Both the query to retrieve the classes potentially containing exceptions (Figure 6) and the query to retrieve the exceptions (Figure 7) are SPARQL federated queries using the parameters loop and limit in the URL of the remote query service in the SERVICE clause.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9714900851249695}, "created": {"value": false, "score": 6.67572021484375e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999915361404419}, "created": {"value": true, "score": 0.9997761845588684}, "shared": {"value": false, "score": 2.2649765014648438e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SubClassOf", "normalizedForm": "SubClassOf", "offsetStart": 147, "offsetEnd": 157}, "context": "Our contribution lies in the proposition and the combination of a multi-threading system and two algorithms to compute the exceptions to candidate SubClassOf axioms: a first one relying on a classical approach for SPARQL query chunking and a second one where we put forward our expertise with the Corese semantic Web factory to propose a loop+page operator implemented with URL parameters for SPARQL federated queries.", "mentionContextAttributes": {"used": {"value": false, "score": 0.002138793468475342}, "created": {"value": true, "score": 0.9791074395179749}, "shared": {"value": false, "score": 1.0728836059570312e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.7447972893714905}, "created": {"value": true, "score": 0.9998517036437988}, "shared": {"value": false, "score": 2.1457672119140625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SubClassOf", "normalizedForm": "SubClassOf", "offsetStart": 155, "offsetEnd": 165}, "context": "VALUES ?t { <t1> <t2> ... <tn> } } LIMIT $limit OFFSET $offset Fig. 5: Implementation of our optimized heuristic in SPARQL: retrieval of the exceptions of SubClassOf(<C> <D>) as being the instances of the classes computed in Fig. 4. several steps.", "mentionContextAttributes": {"used": {"value": true, "score": 0.7358218431472778}, "created": {"value": false, "score": 1.6689300537109375e-06}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.7447972893714905}, "created": {"value": true, "score": 0.9998517036437988}, "shared": {"value": false, "score": 2.1457672119140625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "offsetStart": 159, "offsetEnd": 165}, "context": "Over time, the semantic Web has developed significantly, relying on a series of W3C standards, the foremost of which are RDF (Resource Description Framework), SPARQL (SPARQL Protocol and RDF Query Language) and OWL (Web Ontology Language).", "mentionContextAttributes": {"used": {"value": false, "score": 0.0005301833152770996}, "created": {"value": false, "score": 0.05984395742416382}, "shared": {"value": false, "score": 2.2649765014648438e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999915361404419}, "created": {"value": true, "score": 0.9997761845588684}, "shared": {"value": false, "score": 2.2649765014648438e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "offsetStart": 167, "offsetEnd": 173}, "context": "Over time, the semantic Web has developed significantly, relying on a series of W3C standards, the foremost of which are RDF (Resource Description Framework), SPARQL (SPARQL Protocol and RDF Query Language) and OWL (Web Ontology Language).", "mentionContextAttributes": {"used": {"value": false, "score": 0.0005301833152770996}, "created": {"value": false, "score": 0.05984395742416382}, "shared": {"value": false, "score": 2.2649765014648438e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999915361404419}, "created": {"value": true, "score": 0.9997761845588684}, "shared": {"value": false, "score": 2.2649765014648438e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SubClassOf", "normalizedForm": "SubClassOf", "offsetStart": 169, "offsetEnd": 179}, "context": "), Datatype definition axioms (DatatypeDefinition), Keys axioms (HasKey) and Assertion axioms (ClassAssertion, Object-PropertyAssertion). In this paper, we focus on the SubClassOf class expression axiom [13].", "mentionContextAttributes": {"used": {"value": false, "score": 0.3980763554573059}, "created": {"value": false, "score": 0.3635064363479614}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.7447972893714905}, "created": {"value": true, "score": 0.9998517036437988}, "shared": {"value": false, "score": 2.1457672119140625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SubClassOf", "normalizedForm": "SubClassOf", "offsetStart": 188, "offsetEnd": 198}, "context": "VALUES ?t { <t1> <t2> ... <tn> } } } Fig. 7: Second implementation of our optimized heuristic with a SPARQL federated query using parameters loop and limit: retrieval of the exceptions of SubClassOf(<C> <D>) as being the instances of the classes computed in Fig. 6.", "mentionContextAttributes": {"used": {"value": false, "score": 0.26517319679260254}, "created": {"value": false, "score": 2.6226043701171875e-06}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.7447972893714905}, "created": {"value": true, "score": 0.9998517036437988}, "shared": {"value": false, "score": 2.1457672119140625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "offsetStart": 200, "offsetEnd": 206}, "context": "The advantage of this operator is twofold: on the one hand, it makes it easier to code the iteration and chunking of SPARQL queries; on the other hand, the iteration and chunking are delegated to the SPARQL engine, which in general is more effective at performing them than the user code calling the engine several times.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00048553943634033203}, "created": {"value": false, "score": 0.00017851591110229492}, "shared": {"value": false, "score": 1.0728836059570312e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999915361404419}, "created": {"value": true, "score": 0.9997761845588684}, "shared": {"value": false, "score": 2.2649765014648438e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SubClassOf", "normalizedForm": "SubClassOf", "offsetStart": 200, "offsetEnd": 210}, "context": "} } } Fig. 6: Second implementation of our optimized heuristic with a SPARQL federated query using parameters loop and limit: retrieval of the classes which instances are possible exceptions to axiom SubClassOf(<C> <D>).", "mentionContextAttributes": {"used": {"value": false, "score": 0.000339508056640625}, "created": {"value": false, "score": 0.005771517753601074}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.7447972893714905}, "created": {"value": true, "score": 0.9998517036437988}, "shared": {"value": false, "score": 2.1457672119140625e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "offsetStart": 212, "offsetEnd": 218}, "context": "Require: numConf irmations \u0338 = ref erenceCardinality 1: limit \u2190 1000 2: q 1 \u2190 SPARQL query presented in Fig. 6 3: types \u2190 eval(q 1 ) 4: start \u2190 0 5: step \u2190 50 6: limit \u2190 10000 7: while start \u0338 = \u2225types\u2225 do q 2 \u2190 SPARQL query presented in Fig.  exceptions \u2190 exceptions \u222a eval(q 2 ) 12:", "mentionContextAttributes": {"used": {"value": true, "score": 0.9708529114723206}, "created": {"value": false, "score": 1.430511474609375e-06}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999915361404419}, "created": {"value": true, "score": 0.9997761845588684}, "shared": {"value": false, "score": 2.2649765014648438e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "offsetStart": 214, "offsetEnd": 220}, "context": "Our contribution lies in the proposition and the combination of a multi-threading system and two algorithms to compute the exceptions to candidate SubClassOf axioms: a first one relying on a classical approach for SPARQL query chunking and a second one where we put forward our expertise with the Corese semantic Web factory to propose a loop+page operator implemented with URL parameters for SPARQL federated queries.", "mentionContextAttributes": {"used": {"value": false, "score": 0.002138793468475342}, "created": {"value": true, "score": 0.9791074395179749}, "shared": {"value": false, "score": 1.0728836059570312e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999915361404419}, "created": {"value": true, "score": 0.9997761845588684}, "shared": {"value": false, "score": 2.2649765014648438e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "offsetStart": 216, "offsetEnd": 222}, "context": "To evaluate our last optimization using a loop+page operator relying on the extension of SPARQL federated query with URL parameters, we compared the times to compute axioms ARIs with this extension and with standard SPARQL queries.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999867677688599}, "created": {"value": false, "score": 1.4781951904296875e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999915361404419}, "created": {"value": true, "score": 0.9997761845588684}, "shared": {"value": false, "score": 2.2649765014648438e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "offsetStart": 217, "offsetEnd": 223}, "context": "To answer this problem, our contribution presented in this paper consists of (i) a multi-threading system to parallelize axiom assessment, (ii) a heuristic to avoid redundant computation and (iii) an optimization for SPARQL query chunking relying on an extension of the SPARQL 1.1 Federated Query standard.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00016689300537109375}, "created": {"value": true, "score": 0.9894920587539673}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999915361404419}, "created": {"value": true, "score": 0.9997761845588684}, "shared": {"value": false, "score": 2.2649765014648438e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "offsetStart": 264, "offsetEnd": 270}, "context": "A. a multi-threading system to parallelize OWL axioms assessment, especially the computation of exceptions to axioms, B. an extension of the original heuristic to avoid redundant computation, with an explanation of the computational problem, C. an optimization of SPARQL query chunking relying on an extension of SPARQL 1.1 Federated Query to automatically iterate a SPARQL federated query service call.", "mentionContextAttributes": {"used": {"value": false, "score": 0.004765450954437256}, "created": {"value": false, "score": 6.115436553955078e-05}, "shared": {"value": false, "score": 1.5497207641601562e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999915361404419}, "created": {"value": true, "score": 0.9997761845588684}, "shared": {"value": false, "score": 2.2649765014648438e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "offsetStart": 270, "offsetEnd": 276}, "context": "To answer this problem, our contribution presented in this paper consists of (i) a multi-threading system to parallelize axiom assessment, (ii) a heuristic to avoid redundant computation and (iii) an optimization for SPARQL query chunking relying on an extension of the SPARQL 1.1 Federated Query standard.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00016689300537109375}, "created": {"value": true, "score": 0.9894920587539673}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999915361404419}, "created": {"value": true, "score": 0.9997761845588684}, "shared": {"value": false, "score": 2.2649765014648438e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "code", "normalizedForm": "code", "offsetStart": 283, "offsetEnd": 287}, "context": "The advantage of this operator is twofold: on the one hand, it makes it easier to code the iteration and chunking of SPARQL queries; on the other hand, the iteration and chunking are delegated to the SPARQL engine, which in general is more effective at performing them than the user code calling the engine several times.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00048553943634033203}, "created": {"value": false, "score": 0.00017851591110229492}, "shared": {"value": false, "score": 1.0728836059570312e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.013100206851959229}, "created": {"value": true, "score": 0.6310709714889526}, "shared": {"value": false, "score": 0.029252946376800537}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "offsetStart": 313, "offsetEnd": 319}, "context": "A. a multi-threading system to parallelize OWL axioms assessment, especially the computation of exceptions to axioms, B. an extension of the original heuristic to avoid redundant computation, with an explanation of the computational problem, C. an optimization of SPARQL query chunking relying on an extension of SPARQL 1.1 Federated Query to automatically iterate a SPARQL federated query service call.", "mentionContextAttributes": {"used": {"value": false, "score": 0.004765450954437256}, "created": {"value": false, "score": 6.115436553955078e-05}, "shared": {"value": false, "score": 1.5497207641601562e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999915361404419}, "created": {"value": true, "score": 0.9997761845588684}, "shared": {"value": false, "score": 2.2649765014648438e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "offsetStart": 367, "offsetEnd": 373}, "context": "A. a multi-threading system to parallelize OWL axioms assessment, especially the computation of exceptions to axioms, B. an extension of the original heuristic to avoid redundant computation, with an explanation of the computational problem, C. an optimization of SPARQL query chunking relying on an extension of SPARQL 1.1 Federated Query to automatically iterate a SPARQL federated query service call.", "mentionContextAttributes": {"used": {"value": false, "score": 0.004765450954437256}, "created": {"value": false, "score": 6.115436553955078e-05}, "shared": {"value": false, "score": 1.5497207641601562e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999915361404419}, "created": {"value": true, "score": 0.9997761845588684}, "shared": {"value": false, "score": 2.2649765014648438e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SPARQL", "normalizedForm": "SPARQL", "offsetStart": 393, "offsetEnd": 399}, "context": "Our contribution lies in the proposition and the combination of a multi-threading system and two algorithms to compute the exceptions to candidate SubClassOf axioms: a first one relying on a classical approach for SPARQL query chunking and a second one where we put forward our expertise with the Corese semantic Web factory to propose a loop+page operator implemented with URL parameters for SPARQL federated queries.", "mentionContextAttributes": {"used": {"value": false, "score": 0.002138793468475342}, "created": {"value": true, "score": 0.9791074395179749}, "shared": {"value": false, "score": 1.0728836059570312e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999915361404419}, "created": {"value": true, "score": 0.9997761845588684}, "shared": {"value": false, "score": 2.2649765014648438e-06}}}], "references": [], "runtime": 7258, "id": "56e69cd856a19252e1e5d1efc2ae6023a9a656e9", "metadata": {"id": "56e69cd856a19252e1e5d1efc2ae6023a9a656e9"}, "original_file_path": "../../datalake/Samuel/SOFTware-Sync/downloads/xml/hal-03892080.grobid.tei.xml", "file_name": "hal-03892080.grobid.tei.xml"}