{"application": "software-mentions", "version": "0.8.0", "date": "2024-10-07T12:47+0000", "md5": "A20D8C894EC21F2B52C0DAA9EF79B1C3", "mentions": [{"type": "software", "software-type": "software", "software-name": {"rawForm": "TrieDF", "normalizedForm": "TrieDF", "offsetStart": 0, "offsetEnd": 6}, "context": "TrieDF was written in C++. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.8964911699295044}, "created": {"value": true, "score": 0.5770267248153687}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996989965438843}, "created": {"value": true, "score": 0.9999129772186279}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TrieDF", "normalizedForm": "TrieDF", "offsetStart": 0, "offsetEnd": 6}, "context": "TrieDF still uses 26% more memory than indexed SQLite, however TrieDF cannot leverage its trie-based dictionary to its full capacity. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.01308739185333252}, "created": {"value": false, "score": 3.933906555175781e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996989965438843}, "created": {"value": true, "score": 0.9999129772186279}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TrieDF", "normalizedForm": "TrieDF", "offsetStart": 0, "offsetEnd": 6}, "context": "TrieDF stores tuples of arbitrary length in a trie, an inmemory prefix-based tree originally used for compact storage and efficient retrieval of strings.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00010597705841064453}, "created": {"value": false, "score": 3.266334533691406e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996989965438843}, "created": {"value": true, "score": 0.9999129772186279}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TrieDF", "normalizedForm": "TrieDF", "offsetStart": 0, "offsetEnd": 6}, "context": "TrieDF models everything as a trie, namely all indexes and the dictionary.", "mentionContextAttributes": {"used": {"value": false, "score": 5.924701690673828e-05}, "created": {"value": false, "score": 9.655952453613281e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996989965438843}, "created": {"value": true, "score": 0.9999129772186279}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TrieDF", "normalizedForm": "TrieDF", "offsetStart": 0, "offsetEnd": 6}, "context": "TrieDF stores RDF tuples of arbitrary length in different indexes.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0001596212387084961}, "created": {"value": false, "score": 5.602836608886719e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996989965438843}, "created": {"value": true, "score": 0.9999129772186279}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TrieDF", "normalizedForm": "TrieDF", "offsetStart": 0, "offsetEnd": 6}, "context": "TrieDF borrows inspiration from tries -prefix-based trees for string storage.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00015604496002197266}, "created": {"value": false, "score": 0.0005733966827392578}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996989965438843}, "created": {"value": true, "score": 0.9999129772186279}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TrieDF", "normalizedForm": "TrieDF", "offsetStart": 0, "offsetEnd": 6}, "context": "TrieDF treats tuples as \"strings\" of items.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00011777877807617188}, "created": {"value": false, "score": 2.9325485229492188e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996989965438843}, "created": {"value": true, "score": 0.9999129772186279}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RDFLib", "normalizedForm": "RDFLib", "offsetStart": 6, "offsetEnd": 12}, "context": "While RDFLib is mostly insensitive to large result sets, it lags behind the other systems in terms of average retrieval time.", "mentionContextAttributes": {"used": {"value": false, "score": 4.208087921142578e-05}, "created": {"value": false, "score": 1.2636184692382812e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9993991851806641}, "created": {"value": false, "score": 0.0002714991569519043}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RDFLib", "normalizedForm": "RDFLib", "offsetStart": 6, "offsetEnd": 12}, "context": "While RDFLib showcases the lowest memory consumption, TrieDF strikes the best trade-off with at most 28% more peek memory usage than RDFLib in exchange for a speed-up of 3 orders of magnitude for retrieval.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00039058923721313477}, "created": {"value": false, "score": 6.079673767089844e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9993991851806641}, "created": {"value": false, "score": 0.0002714991569519043}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RDFLib", "normalizedForm": "RDFLib", "offsetStart": 7, "offsetEnd": 13}, "context": "First, RDFLib's indexes are of fixed depth, which allows for some space savings: leaves do not need to accommodate for an additional pointer to its potential children.", "mentionContextAttributes": {"used": {"value": false, "score": 0.017301321029663086}, "created": {"value": false, "score": 1.430511474609375e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9993991851806641}, "created": {"value": false, "score": 0.0002714991569519043}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQLite", "normalizedForm": "SQLite", "offsetStart": 8, "offsetEnd": 14}, "context": "We test SQLite with and without those indexes. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9998805522918701}, "created": {"value": false, "score": 6.67572021484375e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998805522918701}, "created": {"value": false, "score": 0.00023764371871948242}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RDFLib", "normalizedForm": "RDFLib", "offsetStart": 8, "offsetEnd": 14}, "context": "Second, RDFLib does not implement explicit dictionary encoding but rather relies on Python's internal variable handling (Python variables are actually keys pointing to their actual value in a hash table) to store references to RDF terms in the indexes.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00025457143783569336}, "created": {"value": false, "score": 0.0002714991569519043}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9993991851806641}, "created": {"value": false, "score": 0.0002714991569519043}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TrieDF", "normalizedForm": "TrieDF", "offsetStart": 9, "offsetEnd": 15}, "context": "Users of TrieDF can define indexes of arbitrary depth for all permutations of the elements of a tuple.", "mentionContextAttributes": {"used": {"value": false, "score": 7.677078247070312e-05}, "created": {"value": false, "score": 6.437301635742188e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996989965438843}, "created": {"value": true, "score": 0.9999129772186279}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TrieDF", "normalizedForm": "TrieDF", "offsetStart": 10, "offsetEnd": 16}, "context": "Moreover, TrieDF can also operate as a standard triple store.", "mentionContextAttributes": {"used": {"value": false, "score": 4.887580871582031e-05}, "created": {"value": false, "score": 0.00013971328735351562}, "shared": {"value": false, "score": 5.960464477539062e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996989965438843}, "created": {"value": true, "score": 0.9999129772186279}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "implicit", "software-name": {"rawForm": "code", "normalizedForm": "code", "offsetStart": 11, "offsetEnd": 15}, "language": {"rawForm": "C++", "normalizedForm": "C++", "wikidataId": "Q2407", "offsetStart": 22, "offsetEnd": 25}, "context": "The source code and experimental data is available at https://relweb.cs.aau.dk/triedf.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00010836124420166016}, "created": {"value": false, "score": 0.00018256902694702148}, "shared": {"value": true, "score": 0.9928170442581177}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00010836124420166016}, "created": {"value": false, "score": 0.00018256902694702148}, "shared": {"value": true, "score": 0.9928170442581177}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TrieDF", "normalizedForm": "TrieDF", "offsetStart": 12, "offsetEnd": 18}, "context": "We evaluate TrieDF along three dimensions: loading time, main-memory consumption, and retrieval time (i.e., the time to return all the tuples that match a prefix).", "mentionContextAttributes": {"used": {"value": true, "score": 0.8521292805671692}, "created": {"value": false, "score": 1.3113021850585938e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996989965438843}, "created": {"value": true, "score": 0.9999129772186279}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TrieDF", "normalizedForm": "TrieDF", "offsetStart": 12, "offsetEnd": 18}, "context": "5-tuples in TrieDF are represented via SPOQV, POSQV, and OSPQV indexes.", "mentionContextAttributes": {"used": {"value": true, "score": 0.5026228427886963}, "created": {"value": false, "score": 1.704692840576172e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996989965438843}, "created": {"value": true, "score": 0.9999129772186279}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RDFLib", "normalizedForm": "RDFLib", "offsetStart": 13, "offsetEnd": 19}, "context": "In contrast, RDFLib stores graphs (called contexts) in separate hash tables that map triples to graphs and graphs to triples.", "mentionContextAttributes": {"used": {"value": false, "score": 9.047985076904297e-05}, "created": {"value": false, "score": 1.0371208190917969e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9993991851806641}, "created": {"value": false, "score": 0.0002714991569519043}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TrieDF", "normalizedForm": "TrieDF", "offsetStart": 15, "offsetEnd": 21}, "context": "In particular, TrieDF's indexes are optimized for VQ queries, for which they are 3 orders of magnitude faster than the competitors.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00021404027938842773}, "created": {"value": false, "score": 1.3589859008789062e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996989965438843}, "created": {"value": true, "score": 0.9999129772186279}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TrieDF", "normalizedForm": "TrieDF", "offsetStart": 16, "offsetEnd": 22}, "context": "We observe that TrieDF outperforms Jena in all datasets, and all the competitors in YAGO 3. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.27922946214675903}, "created": {"value": false, "score": 6.794929504394531e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996989965438843}, "created": {"value": true, "score": 0.9999129772186279}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQLite", "normalizedForm": "SQLite", "offsetStart": 16, "offsetEnd": 22}, "context": "We observe that SQLite loads data significantly faster when no indexes are built, however when indexing is enabled, TrieDF is faster. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0013464689254760742}, "created": {"value": false, "score": 1.4901161193847656e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998805522918701}, "created": {"value": false, "score": 0.00023764371871948242}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TrieDF", "normalizedForm": "TrieDF", "offsetStart": 16, "offsetEnd": 22}, "context": "We also compare TrieDF with the Jena in-memory models and RDFLib.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9993991851806641}, "created": {"value": false, "score": 1.71661376953125e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996989965438843}, "created": {"value": true, "score": 0.9999129772186279}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TrieDF", "normalizedForm": "TrieDF", "offsetStart": 16, "offsetEnd": 22}, "context": "We observe that TrieDF outperforms all the competitors by far, although the performance gap can vary drastically.", "mentionContextAttributes": {"used": {"value": false, "score": 0.006276071071624756}, "created": {"value": false, "score": 1.7881393432617188e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996989965438843}, "created": {"value": true, "score": 0.9999129772186279}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TrieDF", "normalizedForm": "TrieDF", "offsetStart": 16, "offsetEnd": 22}, "context": "We believe that TrieDF is a first step towards a holistic solution to manage knowledge beyond RDF triples.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00015175342559814453}, "created": {"value": true, "score": 0.9704263806343079}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996989965438843}, "created": {"value": true, "score": 0.9999129772186279}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TrieDF", "normalizedForm": "TrieDF", "offsetStart": 18, "offsetEnd": 24}, "context": "In the same vibe, TrieDF stores version identifiers in the last component of each index, which reduces redundancy.", "mentionContextAttributes": {"used": {"value": false, "score": 0.003507077693939209}, "created": {"value": false, "score": 1.5974044799804688e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996989965438843}, "created": {"value": true, "score": 0.9999129772186279}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Jena", "normalizedForm": "Jena", "offsetStart": 19, "offsetEnd": 23}, "context": "The reason is that Jena implements a classical independent copies approach, where each revision is entirety stored in a different graph. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0009557604789733887}, "created": {"value": false, "score": 0.00043910741806030273}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9993991851806641}, "created": {"value": false, "score": 0.009443521499633789}, "shared": {"value": false, "score": 2.0265579223632812e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TrieDF", "normalizedForm": "TrieDF", "offsetStart": 20, "offsetEnd": 26}, "context": "We now elaborate on TrieDF, our in-memory architecture to manage metadataaugmented RDF.", "mentionContextAttributes": {"used": {"value": false, "score": 7.43865966796875e-05}, "created": {"value": true, "score": 0.9999129772186279}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996989965438843}, "created": {"value": true, "score": 0.9999129772186279}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TrieDF", "normalizedForm": "TrieDF", "offsetStart": 21, "offsetEnd": 27}, "context": "Our approach, called TrieDF, builds upon the notion of tries to store the indexes and the dictionary of a metadataaugmented RDF dataset. ", "mentionContextAttributes": {"used": {"value": false, "score": 5.161762237548828e-05}, "created": {"value": true, "score": 0.9996951818466187}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996989965438843}, "created": {"value": true, "score": 0.9999129772186279}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TrieDF", "normalizedForm": "TrieDF", "offsetStart": 22, "offsetEnd": 28}, "context": "The median runtime of TrieDF is better for VM and VQ queries. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.003902614116668701}, "created": {"value": false, "score": 3.2901763916015625e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996989965438843}, "created": {"value": true, "score": 0.9999129772186279}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TrieDF", "normalizedForm": "TrieDF", "offsetStart": 22, "offsetEnd": 28}, "context": "The results show that TrieDF is at least one order of magnitude faster than the competitors for queries with one variable.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9973641037940979}, "created": {"value": false, "score": 7.510185241699219e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996989965438843}, "created": {"value": true, "score": 0.9999129772186279}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TrieDF", "normalizedForm": "TrieDF", "offsetStart": 23, "offsetEnd": 29}, "context": "16.98s, and 47.27s for TrieDF, SQLite, and SQLite with indexes respectively. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9996989965438843}, "created": {"value": false, "score": 8.225440979003906e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996989965438843}, "created": {"value": true, "score": 0.9999129772186279}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Jena", "normalizedForm": "Jena", "offsetStart": 24, "offsetEnd": 28}, "context": "We first highlight that Jena uses much more memory than the other systems. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.007670342922210693}, "created": {"value": false, "score": 0.009443521499633789}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9993991851806641}, "created": {"value": false, "score": 0.009443521499633789}, "shared": {"value": false, "score": 2.0265579223632812e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQLite", "normalizedForm": "SQLite", "offsetStart": 27, "offsetEnd": 33}, "context": "After a comparison between SQLite and MariaDB, we chose the former due to its good performance in our setting. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.999796450138092}, "created": {"value": false, "score": 0.00023764371871948242}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998805522918701}, "created": {"value": false, "score": 0.00023764371871948242}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TrieDF", "normalizedForm": "TrieDF", "offsetStart": 27, "offsetEnd": 33}, "context": "As suggested by Figure 4d, TrieDF achieves similar retrieval performance than an indexed 5-column SQLite in-memory table. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0004898309707641602}, "created": {"value": false, "score": 3.933906555175781e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996989965438843}, "created": {"value": true, "score": 0.9999129772186279}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TrieDF", "normalizedForm": "TrieDF", "offsetStart": 28, "offsetEnd": 34}, "context": "In this section we evaluate TrieDF at managing RDF quads s, p, o, v , that represent triples annotated with a revision number \ud835\udc63.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9989926218986511}, "created": {"value": false, "score": 1.2874603271484375e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996989965438843}, "created": {"value": true, "score": 0.9999129772186279}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TrieDF", "normalizedForm": "TrieDF", "offsetStart": 28, "offsetEnd": 34}, "context": "In this section we evaluate TrieDF on a 5-tuples setup where triples are annotated with provenance and version identifiers \ud835\udc5e, \ud835\udc63, i.e., we store tuples s, p, o, q, v .", "mentionContextAttributes": {"used": {"value": true, "score": 0.9987351298332214}, "created": {"value": false, "score": 6.9141387939453125e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996989965438843}, "created": {"value": true, "score": 0.9999129772186279}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Jena", "normalizedForm": "Jena", "offsetStart": 29, "offsetEnd": 33}, "context": "This phenomenon also affects Jena. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.006208598613739014}, "created": {"value": false, "score": 0.0001799464225769043}, "shared": {"value": false, "score": 2.0265579223632812e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9993991851806641}, "created": {"value": false, "score": 0.009443521499633789}, "shared": {"value": false, "score": 2.0265579223632812e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TrieDF", "normalizedForm": "TrieDF", "offsetStart": 30, "offsetEnd": 36}, "context": "When there are two variables, TrieDF still exhibits lower median runtimes, but its variance is large, specially for YAGO.", "mentionContextAttributes": {"used": {"value": false, "score": 0.001405179500579834}, "created": {"value": false, "score": 4.5299530029296875e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996989965438843}, "created": {"value": true, "score": 0.9999129772186279}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQLite", "normalizedForm": "SQLite", "offsetStart": 31, "offsetEnd": 37}, "context": "16.98s, and 47.27s for TrieDF, SQLite, and SQLite with indexes respectively. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9996989965438843}, "created": {"value": false, "score": 8.225440979003906e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998805522918701}, "created": {"value": false, "score": 0.00023764371871948242}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Jena", "normalizedForm": "Jena", "offsetStart": 32, "offsetEnd": 36}, "context": "We also compare TrieDF with the Jena in-memory models and RDFLib.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9993991851806641}, "created": {"value": false, "score": 1.71661376953125e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9993991851806641}, "created": {"value": false, "score": 0.009443521499633789}, "shared": {"value": false, "score": 2.0265579223632812e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TrieDF", "normalizedForm": "TrieDF", "offsetStart": 34, "offsetEnd": 40}, "context": "We also illustrate the utility of TrieDF at handling 5-tuples in the context of provenance and version management.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9683406352996826}, "created": {"value": false, "score": 0.0011667609214782715}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996989965438843}, "created": {"value": true, "score": 0.9999129772186279}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Jena", "normalizedForm": "Jena", "offsetStart": 35, "offsetEnd": 39}, "context": "We observe that TrieDF outperforms Jena in all datasets, and all the competitors in YAGO 3. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.27922946214675903}, "created": {"value": false, "score": 6.794929504394531e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9993991851806641}, "created": {"value": false, "score": 0.009443521499633789}, "shared": {"value": false, "score": 2.0265579223632812e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TrieDF", "normalizedForm": "TrieDF", "offsetStart": 35, "offsetEnd": 41}, "context": "We first assess the performance of TrieDF when used as a standard in-memory triple store on DBpedia 2016-10 [1], YAGO 3.1 [18], YAGO 4 [19], and Wikidata [3]. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.960149884223938}, "created": {"value": false, "score": 5.0067901611328125e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996989965438843}, "created": {"value": true, "score": 0.9999129772186279}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TrieDF", "normalizedForm": "TrieDF", "offsetStart": 38, "offsetEnd": 44}, "context": "We now describe the implementation of TrieDF and the operations it supports.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00015604496002197266}, "created": {"value": true, "score": 0.9998719692230225}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996989965438843}, "created": {"value": true, "score": 0.9999129772186279}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "MariaDB", "normalizedForm": "MariaDB", "offsetStart": 38, "offsetEnd": 45}, "context": "After a comparison between SQLite and MariaDB, we chose the former due to its good performance in our setting. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.999796450138092}, "created": {"value": false, "score": 0.00023764371871948242}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.999796450138092}, "created": {"value": false, "score": 0.00023764371871948242}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TrieDF", "normalizedForm": "TrieDF", "offsetStart": 40, "offsetEnd": 46}, "context": "Despite this rather suboptimal setting, TrieDF still shows comparable performance to SQLite.", "mentionContextAttributes": {"used": {"value": false, "score": 0.006817519664764404}, "created": {"value": false, "score": 6.079673767089844e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996989965438843}, "created": {"value": true, "score": 0.9999129772186279}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQLite", "normalizedForm": "SQLite", "offsetStart": 43, "offsetEnd": 49}, "context": "16.98s, and 47.27s for TrieDF, SQLite, and SQLite with indexes respectively. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9996989965438843}, "created": {"value": false, "score": 8.225440979003906e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998805522918701}, "created": {"value": false, "score": 0.00023764371871948242}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQLite", "normalizedForm": "SQLite", "offsetStart": 46, "offsetEnd": 52}, "context": "Figure 3c shows the peak memory usage of both SQLite and TrieDF when loading and querying the NELL dataset. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9960262775421143}, "created": {"value": false, "score": 2.5033950805664062e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998805522918701}, "created": {"value": false, "score": 0.00023764371871948242}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQLite", "normalizedForm": "SQLite", "offsetStart": 47, "offsetEnd": 53}, "context": "TrieDF still uses 26% more memory than indexed SQLite, however TrieDF cannot leverage its trie-based dictionary to its full capacity. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.01308739185333252}, "created": {"value": false, "score": 3.933906555175781e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998805522918701}, "created": {"value": false, "score": 0.00023764371871948242}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TrieDF", "normalizedForm": "TrieDF", "offsetStart": 47, "offsetEnd": 53}, "context": "In order to provide versioning capabilities to TrieDF, we store RDF quads in SPOV, POSV, and OSPV indexes.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0033218860626220703}, "created": {"value": false, "score": 0.0020534396171569824}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996989965438843}, "created": {"value": true, "score": 0.9999129772186279}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Jena", "normalizedForm": "Jena", "offsetStart": 52, "offsetEnd": 56}, "context": "Even though the independent copies approach used in Jena and RDFLib is optimal for VM queries (and to a lesser extent for DM queries), TrieDF is still one order of magnitude faster than the competitors. ", "mentionContextAttributes": {"used": {"value": false, "score": 9.036064147949219e-05}, "created": {"value": false, "score": 1.3589859008789062e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9993991851806641}, "created": {"value": false, "score": 0.009443521499633789}, "shared": {"value": false, "score": 2.0265579223632812e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RDFLib", "normalizedForm": "RDFLib", "offsetStart": 54, "offsetEnd": 60}, "context": "Relying on Python incurs important memory savings for RDFLib, however, the system remains two orders of magnitude slower than TrieDF at retrieval.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0002097487449645996}, "created": {"value": false, "score": 1.7881393432617188e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9993991851806641}, "created": {"value": false, "score": 0.0002714991569519043}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TrieDF", "normalizedForm": "TrieDF", "offsetStart": 54, "offsetEnd": 60}, "context": "While RDFLib showcases the lowest memory consumption, TrieDF strikes the best trade-off with at most 28% more peek memory usage than RDFLib in exchange for a speed-up of 3 orders of magnitude for retrieval.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00039058923721313477}, "created": {"value": false, "score": 6.079673767089844e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996989965438843}, "created": {"value": true, "score": 0.9999129772186279}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Stardog", "normalizedForm": "Stardog", "offsetStart": 54, "offsetEnd": 61}, "context": "Some commercial solutions such as RDFox, GraphDB, and Stardog can parse TriG, an RDF-star serialization text format. ", "mentionContextAttributes": {"used": {"value": false, "score": 2.968311309814453e-05}, "created": {"value": false, "score": 0.0003472566604614258}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 2.968311309814453e-05}, "created": {"value": false, "score": 0.0003472566604614258}, "shared": {"value": false, "score": 3.5762786865234375e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TrieDF", "normalizedForm": "TrieDF", "offsetStart": 57, "offsetEnd": 63}, "context": "Figure 3c shows the peak memory usage of both SQLite and TrieDF when loading and querying the NELL dataset. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9960262775421143}, "created": {"value": false, "score": 2.5033950805664062e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996989965438843}, "created": {"value": true, "score": 0.9999129772186279}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TrieDF", "normalizedForm": "TrieDF", "offsetStart": 58, "offsetEnd": 64}, "context": "Our experimental evaluation on three use cases shows that TrieDF outperforms state-of-the-art in-memory solutions for RDF in terms of main memory usage and retrieval time, while remaining application-agnostic.", "mentionContextAttributes": {"used": {"value": false, "score": 0.1680387258529663}, "created": {"value": false, "score": 0.005246520042419434}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996989965438843}, "created": {"value": true, "score": 0.9999129772186279}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TrieDF", "normalizedForm": "TrieDF", "offsetStart": 58, "offsetEnd": 64}, "context": "If |\ud835\udc47 | is the number of nodes in a trie \ud835\udc47, an index in TrieDF has a space complexity of \ud835\udc42 (|\ud835\udc47 |\ud835\udc50 max ), where \ud835\udc50 max is the highest out-degree of a node in \ud835\udc47.", "mentionContextAttributes": {"used": {"value": false, "score": 0.12365692853927612}, "created": {"value": false, "score": 2.9206275939941406e-05}, "shared": {"value": false, "score": 5.960464477539062e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996989965438843}, "created": {"value": true, "score": 0.9999129772186279}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RDFLib", "normalizedForm": "RDFLib", "offsetStart": 58, "offsetEnd": 64}, "context": "We also compare TrieDF with the Jena in-memory models and RDFLib.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9993991851806641}, "created": {"value": false, "score": 1.71661376953125e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9993991851806641}, "created": {"value": false, "score": 0.0002714991569519043}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TrieDF", "normalizedForm": "TrieDF", "offsetStart": 60, "offsetEnd": 66}, "context": "To make updates simpler -at the expense of some redundancy -TrieDF compresses IRIs by automatically coalescing all the nodes that lie between occurrences of the \"/\" character [21].", "mentionContextAttributes": {"used": {"value": false, "score": 0.0003330707550048828}, "created": {"value": false, "score": 1.704692840576172e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996989965438843}, "created": {"value": true, "score": 0.9999129772186279}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RDFLib", "normalizedForm": "RDFLib", "offsetStart": 61, "offsetEnd": 67}, "context": "Even though the independent copies approach used in Jena and RDFLib is optimal for VM queries (and to a lesser extent for DM queries), TrieDF is still one order of magnitude faster than the competitors. ", "mentionContextAttributes": {"used": {"value": false, "score": 9.036064147949219e-05}, "created": {"value": false, "score": 1.3589859008789062e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9993991851806641}, "created": {"value": false, "score": 0.0002714991569519043}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TrieDF", "normalizedForm": "TrieDF", "offsetStart": 62, "offsetEnd": 68}, "context": "Since RDF storage systems do not support 5-tuples, we compare TrieDF against relational database systems with support for in-memory tables.", "mentionContextAttributes": {"used": {"value": false, "score": 0.192874014377594}, "created": {"value": false, "score": 1.6927719116210938e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996989965438843}, "created": {"value": true, "score": 0.9999129772186279}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TrieDF", "normalizedForm": "TrieDF", "offsetStart": 63, "offsetEnd": 69}, "context": "TrieDF still uses 26% more memory than indexed SQLite, however TrieDF cannot leverage its trie-based dictionary to its full capacity.", "mentionContextAttributes": {"used": {"value": false, "score": 0.01308739185333252}, "created": {"value": false, "score": 3.933906555175781e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996989965438843}, "created": {"value": true, "score": 0.9999129772186279}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TrieDF", "normalizedForm": "TrieDF", "offsetStart": 69, "offsetEnd": 75}, "context": "As future work we envision to explore different strategies to reduce TrieDF's memory footprint.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0002639889717102051}, "created": {"value": true, "score": 0.999824583530426}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996989965438843}, "created": {"value": true, "score": 0.9999129772186279}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Jena", "normalizedForm": "Jena", "offsetStart": 71, "offsetEnd": 75}, "context": "This can represent a challenge for classical RDF graph stores, such as Jena, Virtuoso, RDF4J, etc., that are not optimized for a large number of small RDF graphs.", "mentionContextAttributes": {"used": {"value": false, "score": 4.267692565917969e-05}, "created": {"value": false, "score": 0.00022071599960327148}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9993991851806641}, "created": {"value": false, "score": 0.009443521499633789}, "shared": {"value": false, "score": 2.0265579223632812e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RDFLib", "normalizedForm": "RDFLib", "offsetStart": 71, "offsetEnd": 77}, "context": "For the other datasets, our approach uses at most 13% more memory than RDFLib.", "mentionContextAttributes": {"used": {"value": false, "score": 0.03705108165740967}, "created": {"value": false, "score": 0.00013124942779541016}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9993991851806641}, "created": {"value": false, "score": 0.0002714991569519043}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQLite", "normalizedForm": "SQLite", "offsetStart": 75, "offsetEnd": 81}, "context": "We observe that indexing multiplies memory consumption by a factor of 3 in SQLite. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9998397827148438}, "created": {"value": false, "score": 8.58306884765625e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998805522918701}, "created": {"value": false, "score": 0.00023764371871948242}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TrieDF", "normalizedForm": "TrieDF", "offsetStart": 77, "offsetEnd": 83}, "context": "This work takes a step to tackle the aforementioned limitations and proposes TrieDF, an in-memory RDF tuple store.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00011944770812988281}, "created": {"value": true, "score": 0.9998102784156799}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996989965438843}, "created": {"value": true, "score": 0.9999129772186279}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQLite", "normalizedForm": "SQLite", "offsetStart": 85, "offsetEnd": 91}, "context": "Despite this rather suboptimal setting, TrieDF still shows comparable performance to SQLite.", "mentionContextAttributes": {"used": {"value": false, "score": 0.006817519664764404}, "created": {"value": false, "score": 6.079673767089844e-06}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998805522918701}, "created": {"value": false, "score": 0.00023764371871948242}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TrieDF", "normalizedForm": "TrieDF", "offsetStart": 90, "offsetEnd": 96}, "context": "Details about the dataset sizes are available in the following table, in which we compare TrieDF with Jena and RDFLib , two fully-fledged inmemory platforms for RDF/SPARQL management. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.030093014240264893}, "created": {"value": false, "score": 0.00023061037063598633}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996989965438843}, "created": {"value": true, "score": 0.9999129772186279}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQLite", "normalizedForm": "SQLite", "offsetStart": 98, "offsetEnd": 104}, "context": "As suggested by Figure 4d, TrieDF achieves similar retrieval performance than an indexed 5-column SQLite in-memory table. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0004898309707641602}, "created": {"value": false, "score": 3.933906555175781e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9998805522918701}, "created": {"value": false, "score": 0.00023764371871948242}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Jena", "normalizedForm": "Jena", "offsetStart": 102, "offsetEnd": 106}, "context": "Details about the dataset sizes are available in the following table, in which we compare TrieDF with Jena and RDFLib , two fully-fledged inmemory platforms for RDF/SPARQL management. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.030093014240264893}, "created": {"value": false, "score": 0.00023061037063598633}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9993991851806641}, "created": {"value": false, "score": 0.009443521499633789}, "shared": {"value": false, "score": 2.0265579223632812e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RDFLib", "normalizedForm": "RDFLib", "offsetStart": 111, "offsetEnd": 117}, "context": "Details about the dataset sizes are available in the following table, in which we compare TrieDF with Jena and RDFLib , two fully-fledged inmemory platforms for RDF/SPARQL management. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.030093014240264893}, "created": {"value": false, "score": 0.00023061037063598633}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9993991851806641}, "created": {"value": false, "score": 0.0002714991569519043}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TrieDF", "normalizedForm": "TrieDF", "offsetStart": 116, "offsetEnd": 122}, "context": "We observe that SQLite loads data significantly faster when no indexes are built, however when indexing is enabled, TrieDF is faster. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0013464689254760742}, "created": {"value": false, "score": 1.4901161193847656e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996989965438843}, "created": {"value": true, "score": 0.9999129772186279}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TrieDF", "normalizedForm": "TrieDF", "offsetStart": 126, "offsetEnd": 132}, "context": "Relying on Python incurs important memory savings for RDFLib, however, the system remains two orders of magnitude slower than TrieDF at retrieval.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0002097487449645996}, "created": {"value": false, "score": 1.7881393432617188e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996989965438843}, "created": {"value": true, "score": 0.9999129772186279}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "RDFLib", "normalizedForm": "RDFLib", "offsetStart": 133, "offsetEnd": 139}, "context": "While RDFLib showcases the lowest memory consumption, TrieDF strikes the best trade-off with at most 28% more peek memory usage than RDFLib in exchange for a speed-up of 3 orders of magnitude for retrieval.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00039058923721313477}, "created": {"value": false, "score": 6.079673767089844e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9993991851806641}, "created": {"value": false, "score": 0.0002714991569519043}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TrieDF", "normalizedForm": "TrieDF", "offsetStart": 135, "offsetEnd": 141}, "context": "Even though the independent copies approach used in Jena and RDFLib is optimal for VM queries (and to a lesser extent for DM queries), TrieDF is still one order of magnitude faster than the competitors.", "mentionContextAttributes": {"used": {"value": false, "score": 9.036064147949219e-05}, "created": {"value": false, "score": 1.3589859008789062e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9996989965438843}, "created": {"value": true, "score": 0.9999129772186279}, "shared": {"value": false, "score": 5.960464477539062e-07}}}], "references": [], "runtime": 5620, "id": "8829aea2f6bc7fbe8c2bdd649e1db658fbad89ac", "metadata": {"id": "8829aea2f6bc7fbe8c2bdd649e1db658fbad89ac"}, "original_file_path": "../../datalake/Samuel/SOFTware-Sync/downloads/xml/hal-03500647.grobid.tei.xml", "file_name": "hal-03500647.grobid.tei.xml"}