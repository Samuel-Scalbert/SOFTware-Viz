{"application": "software-mentions", "version": "0.8.0", "date": "2024-10-07T11:49+0000", "md5": "0EA48DAFD08CFC5AE5C2A3A60515B263", "mentions": [{"type": "software", "software-type": "software", "software-name": {"rawForm": "Runway", "normalizedForm": "Runway", "offsetStart": 0, "offsetEnd": 6}, "context": "Runway manages ML and DL artifacts, such as models, data, or experiments, as well as their provenance.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00042551755905151367}, "created": {"value": false, "score": 0.00045162439346313477}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00042551755905151367}, "created": {"value": false, "score": 0.004577696323394775}, "shared": {"value": false, "score": 1.1920928955078125e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DNNProv", "normalizedForm": "DNNProv", "offsetStart": 0, "offsetEnd": 7}, "context": "DNNProv and Keras-Prov integrate both traditional retrospective provenance data (r-prov) with domain-specific DL data.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0016655325889587402}, "created": {"value": false, "score": 3.933906555175781e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": false, "score": 0.0005136728286743164}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DNNProv", "normalizedForm": "DNNProv", "offsetStart": 0, "offsetEnd": 7}, "context": "DNNProv and Keras-Prov extend DfAnalyzer [39,38], which allows monitoring, debugging, and analyzing provenance during the execution of scientific workflows.", "mentionContextAttributes": {"used": {"value": false, "score": 5.125999450683594e-05}, "created": {"value": false, "score": 4.744529724121094e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": false, "score": 0.0005136728286743164}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DNNProv", "normalizedForm": "DNNProv", "offsetStart": 0, "offsetEnd": 7}, "context": "DNNProv and Keras-Prov data representation follows the data model based on the recommendations of the PROV-DM of the W3C PROV [26] which is an initiative for the representation of different types of provenance data without being specific to a domain.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0075653791427612305}, "created": {"value": false, "score": 3.6835670471191406e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": false, "score": 0.0005136728286743164}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "noWorkflow", "normalizedForm": "noWorkflow", "offsetStart": 0, "offsetEnd": 10}, "context": "noWorkflow allows provenance data capture without requiring any modifications in the original Python script. ", "mentionContextAttributes": {"used": {"value": false, "score": 2.6702880859375e-05}, "created": {"value": false, "score": 0.00019615888595581055}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0003745555877685547}, "created": {"value": false, "score": 0.00019615888595581055}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "[27]", "normalizedForm": "[27]", "refKey": 27}, {"label": "[27]", "normalizedForm": "[27]", "refKey": 27}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Keras-Prov", "normalizedForm": "Keras-Prov", "offsetStart": 0, "offsetEnd": 10}, "context": "Keras-Prov is an extension of the DNN library Keras6 and its goal is to reduce the effort to adapt the code to capture provenance data during the DNN training process by reducing the need for instrumentation. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00018352270126342773}, "created": {"value": false, "score": 0.04429006576538086}, "shared": {"value": false, "score": 5.960464477539062e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.4921110272407532}, "created": {"value": true, "score": 0.9999275207519531}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Sumatra", "normalizedForm": "Sumatra", "offsetStart": 0, "offsetEnd": 11}, "context": "Sumatra [6] captures provenance from the script execution based on a series of annotations in the script. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9178391098976135}, "created": {"value": false, "score": 2.2649765014648438e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9178391098976135}, "created": {"value": false, "score": 3.361701965332031e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "YesWorkflow", "normalizedForm": "YesWorkflow", "offsetStart": 0, "offsetEnd": 11}, "context": "YesWorkflow does not depend on a programming language, adopting a strategy of adding annotations to the scripts to identify provenance data. ", "mentionContextAttributes": {"used": {"value": false, "score": 4.291534423828125e-05}, "created": {"value": false, "score": 0.0013275146484375}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00019782781600952148}, "created": {"value": false, "score": 0.0013275146484375}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "references": [{"label": "[13]", "normalizedForm": "[13]", "refKey": 13}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "YesWorkflow", "normalizedForm": "YesWorkflow", "offsetStart": 0, "offsetEnd": 16}, "context": "YesWorkflow [22] is another example of a tool capable of analyzing provenance data. ", "mentionContextAttributes": {"used": {"value": false, "score": 2.849102020263672e-05}, "created": {"value": false, "score": 3.135204315185547e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00019782781600952148}, "created": {"value": false, "score": 0.0013275146484375}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "references": [{"label": "[13]", "normalizedForm": "[13]", "refKey": 13}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DNNProv", "normalizedForm": "DNNProv", "offsetStart": 3, "offsetEnd": 10}, "context": "In DNNProv, the user defines which domain data and hyperparameters values will be captured and where they should be captured. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0005822181701660156}, "created": {"value": false, "score": 2.2292137145996094e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": false, "score": 0.0005136728286743164}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DNNProv", "normalizedForm": "DNNProv", "offsetStart": 4, "offsetEnd": 11}, "context": "For DNNProv, the Provenance Extractor is implemented and deployed outside the DNN library. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0003044605255126953}, "created": {"value": false, "score": 0.24834495782852173}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": false, "score": 0.0005136728286743164}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DNNProv", "normalizedForm": "DNNProv", "offsetStart": 5, "offsetEnd": 12}, "context": "Thus DNNProv-Df contains the following classes to represent domain-specific data regarding the DNN training process: i trainingModel, o trainingModel, i adaptation, o adaptation and o testingModel.", "mentionContextAttributes": {"used": {"value": false, "score": 0.04156571626663208}, "created": {"value": false, "score": 8.225440979003906e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": false, "score": 0.0005136728286743164}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DNNProv", "normalizedForm": "DNNProv", "offsetStart": 6, "offsetEnd": 13}, "context": "Using DNNProv we assume that the programs in the DL life cycle are gray boxes, i.e., part of their source code can be adapted, while the other part can invoke a private source code (black box). ", "mentionContextAttributes": {"used": {"value": false, "score": 0.14308851957321167}, "created": {"value": false, "score": 5.0902366638183594e-05}, "shared": {"value": false, "score": 5.841255187988281e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": false, "score": 0.0005136728286743164}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DfAnalyzer", "normalizedForm": "DfAnalyzer", "offsetStart": 6, "offsetEnd": 16}, "context": "Since DfAnalyzer is domain-agnostic, it is not designed for ML and DL domains and targets mainly binary scientific data, this section presents the extensions to DfAnalyzer for ML and DL domains.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0020191073417663574}, "created": {"value": false, "score": 0.0001327991485595703}, "shared": {"value": false, "score": 2.9802322387695312e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0020191073417663574}, "created": {"value": false, "score": 0.11758756637573242}, "shared": {"value": false, "score": 2.9802322387695312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DNNProv", "normalizedForm": "DNNProv", "offsetStart": 7, "offsetEnd": 14}, "context": "Due to DNNProv's flexibility, a modification was made to the p-prov and this activity was included, which means that in the next training executions, the data defined by the user for this activity started to be captured.", "mentionContextAttributes": {"used": {"value": false, "score": 0.17947834730148315}, "created": {"value": false, "score": 0.0001424551010131836}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": false, "score": 0.0005136728286743164}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Keras", "normalizedForm": "Keras", "offsetStart": 8, "offsetEnd": 13}, "context": "In both Keras-Prov and DNN-Prov, once captured, the provenance data is managed asynchronously with the DL execution.", "mentionContextAttributes": {"used": {"value": false, "score": 0.126753032207489}, "created": {"value": false, "score": 8.344650268554688e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": true, "score": 0.883756697177887}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Keras", "normalizedForm": "Keras", "offsetStart": 9, "offsetEnd": 14}, "context": "Although Keras-Prov captures several hyperparameter values automatically, it is worth noticing that the user can define new data to be captured.", "mentionContextAttributes": {"used": {"value": false, "score": 7.224082946777344e-05}, "created": {"value": false, "score": 5.3763389587402344e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": true, "score": 0.883756697177887}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Sumatra", "normalizedForm": "Sumatra", "offsetStart": 9, "offsetEnd": 16}, "context": "However, Sumatra only supports post-mortem analysis, i.e., only after the ML model is generated. ", "mentionContextAttributes": {"used": {"value": false, "score": 5.6624412536621094e-05}, "created": {"value": false, "score": 3.361701965332031e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9178391098976135}, "created": {"value": false, "score": 3.361701965332031e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DNNProv", "normalizedForm": "DNNProv", "offsetStart": 9, "offsetEnd": 16}, "context": "However, DNNProv requires the user to instrument the script code of the DNN workflow, which may require some effort. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00026804208755493164}, "created": {"value": false, "score": 1.990795135498047e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": false, "score": 0.0005136728286743164}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DfAnalyzer", "normalizedForm": "DfAnalyzer", "offsetStart": 9, "offsetEnd": 19}, "context": "Although DfAnalyzer is W3C PROV compliant and has been used in different domains, it is not designed for supporting provenance capturing during the ML life cycle. ", "mentionContextAttributes": {"used": {"value": false, "score": 4.5180320739746094e-05}, "created": {"value": false, "score": 0.00036203861236572266}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0020191073417663574}, "created": {"value": false, "score": 0.11758756637573242}, "shared": {"value": false, "score": 2.9802322387695312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DNNProv", "normalizedForm": "DNNProv", "offsetStart": 11, "offsetEnd": 18}, "context": "The first, DNNProv, is not specific to programming languages or libraries, and does not require the use of a particular ML execution environment. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0009067058563232422}, "created": {"value": false, "score": 0.00044542551040649414}, "shared": {"value": false, "score": 7.152557373046875e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": false, "score": 0.0005136728286743164}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "noWorkflow", "normalizedForm": "noWorkflow", "offsetStart": 11, "offsetEnd": 21}, "context": "Similar to noWorkflow, SPADE [10] automatically collects provenance from a workflow script including distributed and parallel environments, but this script has to be compiled using an LLVM compiler.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0003745555877685547}, "created": {"value": false, "score": 4.565715789794922e-05}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0003745555877685547}, "created": {"value": false, "score": 0.00019615888595581055}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "[10]", "normalizedForm": "[10]", "refKey": 10, "offsetStart": 11038, "offsetEnd": 11042}, {"label": "[10]", "normalizedForm": "[10]", "refKey": 10, "offsetStart": 11038, "offsetEnd": 11042}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "YesWorkflow", "normalizedForm": "YesWorkflow", "offsetStart": 11, "offsetEnd": 22}, "context": "Similar to YesWorkflow, in [13] there is no runtime provenance capture. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00019782781600952148}, "created": {"value": false, "score": 4.5299530029296875e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00019782781600952148}, "created": {"value": false, "score": 0.0013275146484375}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "references": [{"label": "[13]", "normalizedForm": "[13]", "refKey": 13, "offsetStart": 13134, "offsetEnd": 13138}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Keras", "normalizedForm": "Keras", "offsetStart": 12, "offsetEnd": 17}, "context": "DNNProv and Keras-Prov integrate both traditional retrospective provenance data (r-prov) with domain-specific DL data.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0016655325889587402}, "created": {"value": false, "score": 3.933906555175781e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": true, "score": 0.883756697177887}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Keras", "normalizedForm": "Keras", "offsetStart": 12, "offsetEnd": 17}, "context": "DNNProv and Keras-Prov extend DfAnalyzer [39,38], which allows monitoring, debugging, and analyzing provenance during the execution of scientific workflows.", "mentionContextAttributes": {"used": {"value": false, "score": 5.125999450683594e-05}, "created": {"value": false, "score": 4.744529724121094e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": true, "score": 0.883756697177887}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Keras", "normalizedForm": "Keras", "offsetStart": 12, "offsetEnd": 17}, "context": "DNNProv and Keras-Prov data representation follows the data model based on the recommendations of the PROV-DM of the W3C PROV [26] which is an initiative for the representation of different types of provenance data without being specific to a domain.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0075653791427612305}, "created": {"value": false, "score": 3.6835670471191406e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": true, "score": 0.883756697177887}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "noWorkflow", "normalizedForm": "noWorkflow", "offsetStart": 13, "offsetEnd": 23}, "context": "Systems like noWorkflow [27], capture and store provenance data from Python scripts in an automatic way.", "mentionContextAttributes": {"used": {"value": false, "score": 3.457069396972656e-05}, "created": {"value": false, "score": 2.9802322387695312e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0003745555877685547}, "created": {"value": false, "score": 0.00019615888595581055}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "references": [{"label": "[27]", "normalizedForm": "[27]", "refKey": 27, "offsetStart": 10649, "offsetEnd": 10653}, {"label": "[27]", "normalizedForm": "[27]", "refKey": 27, "offsetStart": 10649, "offsetEnd": 10653}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Keras", "normalizedForm": "Keras", "offsetStart": 15, "offsetEnd": 20}, "context": "In the case of Keras-Prov, the Provenance Extractor is already implemented within the Keras library, so the user does not need to instrument the code.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00702667236328125}, "created": {"value": false, "score": 0.0009075403213500977}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": true, "score": 0.883756697177887}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Runway", "normalizedForm": "Runway", "offsetStart": 15, "offsetEnd": 21}, "context": "In this sense, Runway allows for tracking the model and data, easing reproducibility. ", "mentionContextAttributes": {"used": {"value": false, "score": 3.361701965332031e-05}, "created": {"value": false, "score": 0.004577696323394775}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00042551755905151367}, "created": {"value": false, "score": 0.004577696323394775}, "shared": {"value": false, "score": 1.1920928955078125e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DNNProv", "normalizedForm": "DNNProv", "offsetStart": 15, "offsetEnd": 22}, "context": "Different from DNNProv, when using Keras-Prov the user needs only to set which hyperparameters to capture, and no additional instrumentation is required.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00035703182220458984}, "created": {"value": false, "score": 1.049041748046875e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": false, "score": 0.0005136728286743164}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DfAnalyzer", "normalizedForm": "DfAnalyzer", "offsetStart": 17, "offsetEnd": 27}, "context": "One advantage of DfAnalyzer is that it captures provenance throughout the training of a DNN, and does not interfere in the performance of the training. ", "mentionContextAttributes": {"used": {"value": false, "score": 6.854534149169922e-05}, "created": {"value": false, "score": 0.0001266002655029297}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0020191073417663574}, "created": {"value": false, "score": 0.11758756637573242}, "shared": {"value": false, "score": 2.9802322387695312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DfAnalyzer", "normalizedForm": "DfAnalyzer", "offsetStart": 17, "offsetEnd": 27}, "context": "One advantage of DfAnalyzer is that it explores in-situ or asynchronous provenance data management, without interfering with ML and DL workflow performance even in HPC environments. ", "mentionContextAttributes": {"used": {"value": false, "score": 3.552436828613281e-05}, "created": {"value": false, "score": 0.0021715760231018066}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0020191073417663574}, "created": {"value": false, "score": 0.11758756637573242}, "shared": {"value": false, "score": 2.9802322387695312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DNNProv", "normalizedForm": "DNNProv", "offsetStart": 20, "offsetEnd": 27}, "context": "Fig. 3 presents the DNNProv-Df model represented as a UML class diagram.", "mentionContextAttributes": {"used": {"value": false, "score": 0.008221864700317383}, "created": {"value": false, "score": 7.557868957519531e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": false, "score": 0.0005136728286743164}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DNNProv", "normalizedForm": "DNNProv", "offsetStart": 21, "offsetEnd": 28}, "context": "The architectures of DNNProv and Keras-Prov are presented in Fig. 4. The main difference between DNNProv and Keras-Prov is where the Provenance Extractor component is deployed.", "mentionContextAttributes": {"used": {"value": false, "score": 0.1895861029624939}, "created": {"value": false, "score": 8.344650268554688e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": false, "score": 0.0005136728286743164}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Keras", "normalizedForm": "Keras", "offsetStart": 22, "offsetEnd": 27}, "context": "In the Model class of Keras, a provenance method was created to capture provenance data.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00043267011642456055}, "created": {"value": true, "score": 0.6827078461647034}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": true, "score": 0.883756697177887}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DfAnalyzer", "normalizedForm": "DfAnalyzer", "offsetStart": 22, "offsetEnd": 36}, "context": "One of these tools is DfAnalyzer [39], which is a tool that allows users to set the relevant data to be captured for runtime analysis in high-performance execution environments. ", "mentionContextAttributes": {"used": {"value": false, "score": 2.110004425048828e-05}, "created": {"value": false, "score": 0.11758756637573242}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0020191073417663574}, "created": {"value": false, "score": 0.11758756637573242}, "shared": {"value": false, "score": 2.9802322387695312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SPADE", "normalizedForm": "SPADE", "offsetStart": 23, "offsetEnd": 33}, "context": "Similar to noWorkflow, SPADE [10] automatically collects provenance from a workflow script including distributed and parallel environments, but this script has to be compiled using an LLVM compiler. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0003745555877685547}, "created": {"value": false, "score": 4.565715789794922e-05}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0003745555877685547}, "created": {"value": false, "score": 4.565715789794922e-05}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Keras-Prov", "normalizedForm": "Keras-Prov", "offsetStart": 25, "offsetEnd": 35}, "context": "In the implementation of Keras-Prov, modifications were performed to the source code of Keras7 to embed the Provenance Extractor component, since Keras does not capture provenance data natively. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.4921110272407532}, "created": {"value": false, "score": 0.004471242427825928}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.4921110272407532}, "created": {"value": true, "score": 0.9999275207519531}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Keras", "normalizedForm": "Keras", "offsetStart": 26, "offsetEnd": 31}, "context": "In addition to this data, Keras-Prov captures and stores information about the layers of the DNN, that is, the name that identifies the layer (e.g., activation 1, dropout 1), the type of layer (e.g., activation, dropout) and the value of this layer (e.g., for activation the value is relu, the value for dropout is 0.4).", "mentionContextAttributes": {"used": {"value": false, "score": 0.017937958240509033}, "created": {"value": false, "score": 2.6226043701171875e-05}, "shared": {"value": false, "score": 3.337860107421875e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": true, "score": 0.883756697177887}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DNNProv", "normalizedForm": "DNNProv", "offsetStart": 26, "offsetEnd": 33}, "context": "It is worth noticing that DNNProv and Keras-Prov can also be connected to data visualization tools, as a setup option, such as Kibana8 , to create dashboards and other resources to support the user's analysis.", "mentionContextAttributes": {"used": {"value": false, "score": 8.761882781982422e-05}, "created": {"value": false, "score": 0.0013683438301086426}, "shared": {"value": false, "score": 0.0005136728286743164}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": false, "score": 0.0005136728286743164}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DNNProv", "normalizedForm": "DNNProv", "offsetStart": 26, "offsetEnd": 33}, "context": "In this paper, we present DNNProv and Keras-Prov, two provenance service management approaches that are designed for supporting hyperparameter analysis in DNNs.", "mentionContextAttributes": {"used": {"value": false, "score": 5.745887756347656e-05}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": false, "score": 0.0005136728286743164}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DNNProv", "normalizedForm": "DNNProv", "offsetStart": 27, "offsetEnd": 34}, "context": "If the user chooses to use DNNProv, one important step is the code instrumentation. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.014456748962402344}, "created": {"value": false, "score": 3.886222839355469e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": false, "score": 0.0005136728286743164}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DNNProv", "normalizedForm": "DNNProv", "offsetStart": 29, "offsetEnd": 36}, "context": "In this section, we evaluate DNNProv and Keras-Prov.", "mentionContextAttributes": {"used": {"value": true, "score": 0.999134361743927}, "created": {"value": false, "score": 0.00028520822525024414}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": false, "score": 0.0005136728286743164}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DNNProv", "normalizedForm": "DNNProv", "offsetStart": 29, "offsetEnd": 36}, "context": "To evaluate the potential of DNNProv and Keras-Prov, queries Q3, Q6, and Q8 were submitted to the provenance database that was populated with the different training data of AlexNet (from multiple training runs).", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999135732650757}, "created": {"value": false, "score": 7.510185241699219e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": false, "score": 0.0005136728286743164}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DfAnalyzer", "normalizedForm": "DfAnalyzer", "offsetStart": 30, "offsetEnd": 47}, "context": "DNNProv and Keras-Prov extend DfAnalyzer [39,38], which allows monitoring, debugging, and analyzing provenance during the execution of scientific workflows. ", "mentionContextAttributes": {"used": {"value": false, "score": 5.125999450683594e-05}, "created": {"value": false, "score": 4.744529724121094e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0020191073417663574}, "created": {"value": false, "score": 0.11758756637573242}, "shared": {"value": false, "score": 2.9802322387695312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DNNProv", "normalizedForm": "DNNProv", "offsetStart": 31, "offsetEnd": 38}, "context": "The next section describes how DNNProv and Keras-Prov address these limitations.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0003198385238647461}, "created": {"value": false, "score": 0.0003934502601623535}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": false, "score": 0.0005136728286743164}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Keras-Prov", "normalizedForm": "Keras-Prov", "offsetStart": 31, "offsetEnd": 41}, "context": "With this in mind, we proposed Keras-Prov, which is the second provenance service management approach proposed in this paper. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00011670589447021484}, "created": {"value": true, "score": 0.9999275207519531}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.4921110272407532}, "created": {"value": true, "score": 0.9999275207519531}, "shared": {"value": false, "score": 5.960464477539062e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Keras", "normalizedForm": "Keras", "offsetStart": 33, "offsetEnd": 38}, "context": "The architectures of DNNProv and Keras-Prov are presented in Fig. 4. The main difference between DNNProv and Keras-Prov is where the Provenance Extractor component is deployed.", "mentionContextAttributes": {"used": {"value": false, "score": 0.1895861029624939}, "created": {"value": false, "score": 8.344650268554688e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": true, "score": 0.883756697177887}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Keras", "normalizedForm": "Keras", "offsetStart": 33, "offsetEnd": 38}, "context": "ML frameworks like Tensorflow or Keras mention their provenance support through logs.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0001360177993774414}, "created": {"value": false, "score": 1.6689300537109375e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": true, "score": 0.883756697177887}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Keras", "normalizedForm": "Keras", "offsetStart": 35, "offsetEnd": 40}, "context": "Different from DNNProv, when using Keras-Prov the user needs only to set which hyperparameters to capture, and no additional instrumentation is required.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00035703182220458984}, "created": {"value": false, "score": 1.049041748046875e-05}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": true, "score": 0.883756697177887}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Keras", "normalizedForm": "Keras", "offsetStart": 38, "offsetEnd": 43}, "context": "In this paper, we present DNNProv and Keras-Prov, two provenance service management approaches that are designed for supporting hyperparameter analysis in DNNs.", "mentionContextAttributes": {"used": {"value": false, "score": 5.745887756347656e-05}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": true, "score": 0.883756697177887}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Keras", "normalizedForm": "Keras", "offsetStart": 38, "offsetEnd": 43}, "context": "It is worth noticing that DNNProv and Keras-Prov can also be connected to data visualization tools, as a setup option, such as Kibana8 , to create dashboards and other resources to support the user's analysis.", "mentionContextAttributes": {"used": {"value": false, "score": 8.761882781982422e-05}, "created": {"value": false, "score": 0.0013683438301086426}, "shared": {"value": false, "score": 0.0005136728286743164}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": true, "score": 0.883756697177887}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TensorFlow", "normalizedForm": "TensorFlow", "offsetStart": 38, "offsetEnd": 48}, "context": "This could be adopted by systems like TensorFlow and Keras, which provide provenance logs. ", "mentionContextAttributes": {"used": {"value": false, "score": 4.0650367736816406e-05}, "created": {"value": false, "score": 0.0039934515953063965}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 4.0650367736816406e-05}, "created": {"value": false, "score": 0.0039934515953063965}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Keras", "normalizedForm": "Keras", "offsetStart": 41, "offsetEnd": 46}, "context": "In this section, we evaluate DNNProv and Keras-Prov.", "mentionContextAttributes": {"used": {"value": true, "score": 0.999134361743927}, "created": {"value": false, "score": 0.00028520822525024414}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": true, "score": 0.883756697177887}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Keras", "normalizedForm": "Keras", "offsetStart": 41, "offsetEnd": 46}, "context": "To evaluate the potential of DNNProv and Keras-Prov, queries Q3, Q6, and Q8 were submitted to the provenance database that was populated with the different training data of AlexNet (from multiple training runs).", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999135732650757}, "created": {"value": false, "score": 7.510185241699219e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": true, "score": 0.883756697177887}}}, {"type": "software", "software-type": "implicit", "software-name": {"rawForm": "script", "normalizedForm": "script", "offsetStart": 41, "offsetEnd": 47}, "context": "Sumatra [6] captures provenance from the script execution based on a series of annotations in the script. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9178391098976135}, "created": {"value": false, "score": 2.2649765014648438e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9178391098976135}, "created": {"value": false, "score": 0.00021582841873168945}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Keras", "normalizedForm": "Keras", "offsetStart": 43, "offsetEnd": 48}, "context": "The next section describes how DNNProv and Keras-Prov address these limitations.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0003198385238647461}, "created": {"value": false, "score": 0.0003934502601623535}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": true, "score": 0.883756697177887}}}, {"type": "software", "software-type": "implicit", "software-name": {"rawForm": "script", "normalizedForm": "script", "offsetStart": 46, "offsetEnd": 52}, "context": "An activity is associated with a program or a script that is As described in [23], the hyperparameters are adjusted after or during each iteration. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0027617216110229492}, "created": {"value": false, "score": 0.00021582841873168945}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9178391098976135}, "created": {"value": false, "score": 0.00021582841873168945}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Keras", "normalizedForm": "Keras", "offsetStart": 46, "offsetEnd": 52}, "context": "Keras-Prov is an extension of the DNN library Keras6 and its goal is to reduce the effort to adapt the code to capture provenance data during the DNN training process by reducing the need for instrumentation. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00018352270126342773}, "created": {"value": false, "score": 0.04429006576538086}, "shared": {"value": false, "score": 5.960464477539062e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": true, "score": 0.883756697177887}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Runway", "normalizedForm": "Runway", "offsetStart": 46, "offsetEnd": 56}, "context": "Another solution focused on ML experiments is Runway [40]. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00010478496551513672}, "created": {"value": false, "score": 0.0015052556991577148}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00042551755905151367}, "created": {"value": false, "score": 0.004577696323394775}, "shared": {"value": false, "score": 1.1920928955078125e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DNNProv", "normalizedForm": "DNNProv", "offsetStart": 51, "offsetEnd": 58}, "context": "By setting the automatic definition of p-prov, the DNNProv queries the provenance database and identifies the registered activities.", "mentionContextAttributes": {"used": {"value": false, "score": 0.018757939338684082}, "created": {"value": false, "score": 0.0001544952392578125}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": false, "score": 0.0005136728286743164}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Keras", "normalizedForm": "Keras", "offsetStart": 53, "offsetEnd": 58}, "context": "This could be adopted by systems like TensorFlow and Keras, which provide provenance logs. ", "mentionContextAttributes": {"used": {"value": false, "score": 4.0650367736816406e-05}, "created": {"value": false, "score": 0.0039934515953063965}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": true, "score": 0.883756697177887}}}, {"type": "software", "software-type": "implicit", "software-name": {"rawForm": "script code", "normalizedForm": "script code", "offsetStart": 53, "offsetEnd": 64}, "context": "However, DNNProv requires the user to instrument the script code of the DNN workflow, which may require some effort. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00026804208755493164}, "created": {"value": false, "score": 1.990795135498047e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00026804208755493164}, "created": {"value": false, "score": 1.990795135498047e-05}, "shared": {"value": false, "score": 3.5762786865234375e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "scikit-learn", "normalizedForm": "scikit-learn", "offsetStart": 60, "offsetEnd": 72}, "context": "Currently, ModelDB is customized for models generated using scikit-learn and SparkML, and uses visualization only as a way to perform post-mortem analysis of the ML pipeline, i.e., it does not support runtime provenance analysis. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0003217458724975586}, "created": {"value": false, "score": 0.0006659626960754395}, "shared": {"value": false, "score": 7.152557373046875e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0003217458724975586}, "created": {"value": false, "score": 0.0006659626960754395}, "shared": {"value": false, "score": 7.152557373046875e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Keras", "normalizedForm": "Keras", "offsetStart": 61, "offsetEnd": 66}, "context": "To provide a solution that does not require instrumentation, Keras-Prov adds DNNProv components into Keras to capture the provenance data automatically.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0022388696670532227}, "created": {"value": false, "score": 0.0018210411071777344}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": true, "score": 0.883756697177887}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Keras", "normalizedForm": "Keras", "offsetStart": 66, "offsetEnd": 71}, "context": "For more information about defining new data to be captured using Keras-Prov please visit https://github.com/dbpina/keras-prov.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00039452314376831055}, "created": {"value": false, "score": 0.0004050135612487793}, "shared": {"value": true, "score": 0.883756697177887}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": true, "score": 0.883756697177887}}}, {"type": "software", "software-type": "implicit", "software-name": {"rawForm": "scripts", "normalizedForm": "scripts", "offsetStart": 76, "offsetEnd": 83}, "context": "Systems like noWorkflow [27], capture and store provenance data from Python scripts in an automatic way. ", "mentionContextAttributes": {"used": {"value": false, "score": 3.457069396972656e-05}, "created": {"value": false, "score": 2.9802322387695312e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 4.291534423828125e-05}, "created": {"value": false, "score": 0.0013275146484375}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SparkML", "normalizedForm": "SparkML", "offsetStart": 77, "offsetEnd": 84}, "context": "Currently, ModelDB is customized for models generated using scikit-learn and SparkML, and uses visualization only as a way to perform post-mortem analysis of the ML pipeline, i.e., it does not support runtime provenance analysis. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0003217458724975586}, "created": {"value": false, "score": 0.0006659626960754395}, "shared": {"value": false, "score": 7.152557373046875e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0003217458724975586}, "created": {"value": false, "score": 0.0006659626960754395}, "shared": {"value": false, "score": 7.152557373046875e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DNNProv", "normalizedForm": "DNNProv", "offsetStart": 77, "offsetEnd": 84}, "context": "To provide a solution that does not require instrumentation, Keras-Prov adds DNNProv components into Keras to capture the provenance data automatically.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0022388696670532227}, "created": {"value": false, "score": 0.0018210411071777344}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": false, "score": 0.0005136728286743164}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DNNProv", "normalizedForm": "DNNProv", "offsetStart": 78, "offsetEnd": 85}, "context": "In the experiments presented in this section, we trained AlexNet [19] in both DNNProv and Keras-Prov in the cluster Lobo Carneiro (SGI cluster with 504 CPUs Intel Xeon E5-2670v3 (Haswell) -total of 6.048 processors) at COPPE/UFRJ using the Oxford Flower [28] dataset, which consists of 17 species of flowers with 80 images for each class.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": false, "score": 1.9073486328125e-06}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": false, "score": 0.0005136728286743164}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DNNProv", "normalizedForm": "DNNProv", "offsetStart": 80, "offsetEnd": 87}, "context": "Considering that ML workflows follow the life cycle of Fig. 1, the inclusion of DNNProv in popular ML systems like Keras, requires the identification, in the source code, of the points at which such activities (network configuration, training, and testing) are performed and how the neural network data, hyperparameters, and metrics (from the training and testing steps) are being manipulated.", "mentionContextAttributes": {"used": {"value": false, "score": 0.002497851848602295}, "created": {"value": false, "score": 0.00045752525329589844}, "shared": {"value": false, "score": 1.5497207641601562e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": false, "score": 0.0005136728286743164}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Keras", "normalizedForm": "Keras", "offsetStart": 86, "offsetEnd": 91}, "context": "In the case of Keras-Prov, the Provenance Extractor is already implemented within the Keras library, so the user does not need to instrument the code. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00702667236328125}, "created": {"value": false, "score": 0.0009075403213500977}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": true, "score": 0.883756697177887}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Keras", "normalizedForm": "Keras", "offsetStart": 88, "offsetEnd": 93}, "context": "In the implementation of Keras-Prov, modifications were performed to the source code of Keras7 to embed the Provenance Extractor component, since Keras does not capture provenance data natively.", "mentionContextAttributes": {"used": {"value": false, "score": 0.4921110272407532}, "created": {"value": false, "score": 0.004471242427825928}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": true, "score": 0.883756697177887}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Keras", "normalizedForm": "Keras", "offsetStart": 90, "offsetEnd": 95}, "context": "In the experiments presented in this section, we trained AlexNet [19] in both DNNProv and Keras-Prov in the cluster Lobo Carneiro (SGI cluster with 504 CPUs Intel Xeon E5-2670v3 (Haswell) -total of 6.048 processors) at COPPE/UFRJ using the Oxford Flower [28] dataset, which consists of 17 species of flowers with 80 images for each class.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": false, "score": 1.9073486328125e-06}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": true, "score": 0.883756697177887}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DNNProv", "normalizedForm": "DNNProv", "offsetStart": 97, "offsetEnd": 104}, "context": "The architectures of DNNProv and Keras-Prov are presented in Fig. 4. The main difference between DNNProv and Keras-Prov is where the Provenance Extractor component is deployed.", "mentionContextAttributes": {"used": {"value": false, "score": 0.1895861029624939}, "created": {"value": false, "score": 8.344650268554688e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": false, "score": 0.0005136728286743164}}}, {"type": "software", "software-type": "implicit", "software-name": {"rawForm": "script", "normalizedForm": "script", "offsetStart": 98, "offsetEnd": 104}, "context": "Sumatra [6] captures provenance from the script execution based on a series of annotations in the script. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9178391098976135}, "created": {"value": false, "score": 2.2649765014648438e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9178391098976135}, "created": {"value": false, "score": 0.00021582841873168945}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Keras", "normalizedForm": "Keras", "offsetStart": 101, "offsetEnd": 106}, "context": "To provide a solution that does not require instrumentation, Keras-Prov adds DNNProv components into Keras to capture the provenance data automatically.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0022388696670532227}, "created": {"value": false, "score": 0.0018210411071777344}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": true, "score": 0.883756697177887}}}, {"type": "software", "software-type": "implicit", "software-name": {"rawForm": "script", "normalizedForm": "script", "offsetStart": 101, "offsetEnd": 107}, "context": "noWorkflow allows provenance data capture without requiring any modifications in the original Python script. ", "mentionContextAttributes": {"used": {"value": false, "score": 2.6702880859375e-05}, "created": {"value": false, "score": 0.00019615888595581055}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9178391098976135}, "created": {"value": false, "score": 0.00021582841873168945}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "implicit", "software-name": {"rawForm": "scripts", "normalizedForm": "scripts", "offsetStart": 104, "offsetEnd": 111}, "context": "YesWorkflow does not depend on a programming language, adopting a strategy of adding annotations to the scripts to identify provenance data. ", "mentionContextAttributes": {"used": {"value": false, "score": 4.291534423828125e-05}, "created": {"value": false, "score": 0.0013275146484375}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 4.291534423828125e-05}, "created": {"value": false, "score": 0.0013275146484375}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DNNProv", "normalizedForm": "DNNProv", "offsetStart": 107, "offsetEnd": 114}, "context": "To represent specific data from the DL training process, a specialization of the PROV-Df [39] model, named DNNProv-Df, is proposed in this subsection.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00014531612396240234}, "created": {"value": false, "score": 0.11226522922515869}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": false, "score": 0.0005136728286743164}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Keras", "normalizedForm": "Keras", "offsetStart": 109, "offsetEnd": 114}, "context": "The architectures of DNNProv and Keras-Prov are presented in Fig. 4. The main difference between DNNProv and Keras-Prov is where the Provenance Extractor component is deployed.", "mentionContextAttributes": {"used": {"value": false, "score": 0.1895861029624939}, "created": {"value": false, "score": 8.344650268554688e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": true, "score": 0.883756697177887}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Keras", "normalizedForm": "Keras", "offsetStart": 115, "offsetEnd": 120}, "context": "Considering that ML workflows follow the life cycle of Fig. 1, the inclusion of DNNProv in popular ML systems like Keras, requires the identification, in the source code, of the points at which such activities (network configuration, training, and testing) are performed and how the neural network data, hyperparameters, and metrics (from the training and testing steps) are being manipulated. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.002497851848602295}, "created": {"value": false, "score": 0.00045752525329589844}, "shared": {"value": false, "score": 1.5497207641601562e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": true, "score": 0.883756697177887}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "LearningRateScheduler", "normalizedForm": "LearningRateScheduler", "offsetStart": 115, "offsetEnd": 136}, "context": "The results con-sider the number of epochs, if a gray-scale filter was applied to the input dataset and the use of LearningRateScheduler (LRS) for adaptations in the learning rate during training. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9999867677688599}, "created": {"value": false, "score": 6.4373016357421875e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999867677688599}, "created": {"value": false, "score": 6.031990051269531e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Kibana", "normalizedForm": "Kibana", "offsetStart": 127, "offsetEnd": 134}, "context": "It is worth noticing that DNNProv and Keras-Prov can also be connected to data visualization tools, as a setup option, such as Kibana8 , to create dashboards and other resources to support the user's analysis.", "mentionContextAttributes": {"used": {"value": false, "score": 8.761882781982422e-05}, "created": {"value": false, "score": 0.0013683438301086426}, "shared": {"value": false, "score": 0.0005136728286743164}}, "documentContextAttributes": {"used": {"value": false, "score": 8.761882781982422e-05}, "created": {"value": false, "score": 0.0013683438301086426}, "shared": {"value": false, "score": 0.0005136728286743164}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DNNProv", "normalizedForm": "DNNProv", "offsetStart": 136, "offsetEnd": 143}, "context": "The diagram in Fig. 2, generated by Prov Python4 and Graphviz5 , represents some activities of the neural network training process with DNNProv and Keras-Prov, following the notation from [25].", "mentionContextAttributes": {"used": {"value": true, "score": 0.8534627556800842}, "created": {"value": false, "score": 1.704692840576172e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": false, "score": 0.0005136728286743164}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Theano", "normalizedForm": "Theano", "offsetStart": 137, "offsetEnd": 143}, "context": "Both solutions provide an API that allows for users to develop their ML-based workflows using different DL frameworks (e.g., Tensorflow, Theano) while being able to share and analyze captured provenance data using W3C PROV. ", "mentionContextAttributes": {"used": {"value": false, "score": 8.344650268554688e-05}, "created": {"value": false, "score": 0.007433295249938965}, "shared": {"value": false, "score": 0.00024813413619995117}}, "documentContextAttributes": {"used": {"value": false, "score": 8.344650268554688e-05}, "created": {"value": false, "score": 0.007433295249938965}, "shared": {"value": false, "score": 0.00024813413619995117}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DNNProv", "normalizedForm": "DNNProv", "offsetStart": 141, "offsetEnd": 148}, "context": "Once the dataflow and its transformations are defined, the user needs to set in the source code where a task starts (and finishes) and where DNNProv can extract (at runtime) the values of the hyperparameters. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.009975433349609375}, "created": {"value": false, "score": 4.673004150390625e-05}, "shared": {"value": false, "score": 1.6689300537109375e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": false, "score": 0.0005136728286743164}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "TensorFlow", "normalizedForm": "TensorFlow", "offsetStart": 144, "offsetEnd": 157}, "context": "ModelKB itself is not a modeling tool, but a complementary system that can automatically manage experiments in their native frameworks, such as TensorFlow [1]. ", "mentionContextAttributes": {"used": {"value": false, "score": 3.731250762939453e-05}, "created": {"value": false, "score": 0.0003350973129272461}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 4.0650367736816406e-05}, "created": {"value": false, "score": 0.0039934515953063965}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Keras", "normalizedForm": "Keras", "offsetStart": 146, "offsetEnd": 151}, "context": "In the implementation of Keras-Prov, modifications were performed to the source code of Keras7 to embed the Provenance Extractor component, since Keras does not capture provenance data natively.", "mentionContextAttributes": {"used": {"value": false, "score": 0.4921110272407532}, "created": {"value": false, "score": 0.004471242427825928}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": true, "score": 0.883756697177887}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Keras", "normalizedForm": "Keras", "offsetStart": 148, "offsetEnd": 153}, "context": "The diagram in Fig. 2, generated by Prov Python4 and Graphviz5 , represents some activities of the neural network training process with DNNProv and Keras-Prov, following the notation from [25].", "mentionContextAttributes": {"used": {"value": true, "score": 0.8534627556800842}, "created": {"value": false, "score": 1.704692840576172e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": true, "score": 0.883756697177887}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Runway", "normalizedForm": "Runway", "offsetStart": 148, "offsetEnd": 154}, "context": "However, in addition to being a proprietary solution, which means that the solution does not follow W3C PROV standard to represent provenance data, Runway is restricted to the Python 3 programming language.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0003788471221923828}, "created": {"value": false, "score": 0.0005041360855102539}, "shared": {"value": false, "score": 1.1920928955078125e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00042551755905151367}, "created": {"value": false, "score": 0.004577696323394775}, "shared": {"value": false, "score": 1.1920928955078125e-06}}}, {"type": "software", "software-type": "implicit", "software-name": {"rawForm": "script", "normalizedForm": "script", "offsetStart": 149, "offsetEnd": 155}, "context": "Similar to noWorkflow, SPADE [10] automatically collects provenance from a workflow script including distributed and parallel environments, but this script has to be compiled using an LLVM compiler. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0003745555877685547}, "created": {"value": false, "score": 4.565715789794922e-05}, "shared": {"value": false, "score": 8.344650268554688e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9178391098976135}, "created": {"value": false, "score": 0.00021582841873168945}, "shared": {"value": false, "score": 8.344650268554688e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "SQL", "normalizedForm": "SQL", "offsetStart": 157, "offsetEnd": 160}, "context": "Its goal is to automatically track ML models in their native environment, storing trained models and their results to allow for visual exploration (or using SQL). ", "mentionContextAttributes": {"used": {"value": false, "score": 6.73532485961914e-05}, "created": {"value": false, "score": 0.003367602825164795}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 6.73532485961914e-05}, "created": {"value": false, "score": 0.003367602825164795}, "shared": {"value": false, "score": 1.1920928955078125e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DfAnalyzer", "normalizedForm": "DfAnalyzer", "offsetStart": 161, "offsetEnd": 171}, "context": "Since DfAnalyzer is domain-agnostic, it is not designed for ML and DL domains and targets mainly binary scientific data, this section presents the extensions to DfAnalyzer for ML and DL domains.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0020191073417663574}, "created": {"value": false, "score": 0.0001327991485595703}, "shared": {"value": false, "score": 2.9802322387695312e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0020191073417663574}, "created": {"value": false, "score": 0.11758756637573242}, "shared": {"value": false, "score": 2.9802322387695312e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "DNNProv", "normalizedForm": "DNNProv", "offsetStart": 180, "offsetEnd": 187}, "context": "To capture, store and analyze provenance data from DNNs in an efficient way, we propose two provenance service management approaches, one independent from the DNN framework (named DNNProv) and the other coupled to a DNN framework (named Keras-Prov).", "mentionContextAttributes": {"used": {"value": false, "score": 0.00010716915130615234}, "created": {"value": true, "score": 0.9221750497817993}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": false, "score": 0.0005136728286743164}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "LearningRateScheduler", "normalizedForm": "LearningRateScheduler", "offsetStart": 194, "offsetEnd": 215}, "context": "This method receives a tag to identify the dataflow, if there is an adaptation of the hyperparameters during training (e.g., an update of the learning rate), that is, the use of methods such as LearningRateScheduler offered by Keras, and the list of hyperparameters to be captured.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0011733174324035645}, "created": {"value": false, "score": 6.031990051269531e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999867677688599}, "created": {"value": false, "score": 6.031990051269531e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Keras", "normalizedForm": "Keras", "offsetStart": 227, "offsetEnd": 232}, "context": "This method receives a tag to identify the dataflow, if there is an adaptation of the hyperparameters during training (e.g., an update of the learning rate), that is, the use of methods such as LearningRateScheduler offered by Keras, and the list of hyperparameters to be captured.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0011733174324035645}, "created": {"value": false, "score": 6.031990051269531e-05}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": true, "score": 0.883756697177887}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Keras", "normalizedForm": "Keras", "offsetStart": 237, "offsetEnd": 242}, "context": "To capture, store and analyze provenance data from DNNs in an efficient way, we propose two provenance service management approaches, one independent from the DNN framework (named DNNProv) and the other coupled to a DNN framework (named Keras-Prov).", "mentionContextAttributes": {"used": {"value": false, "score": 0.00010716915130615234}, "created": {"value": true, "score": 0.9221747517585754}, "shared": {"value": false, "score": 4.76837158203125e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9999866485595703}, "created": {"value": true, "score": 0.9999203681945801}, "shared": {"value": true, "score": 0.883756697177887}}}], "references": [{"refKey": 27, "tei": "<biblStruct xml:id=\"b27\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">noWorkflow: Capturing and Analyzing Provenance of Scripts</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Leonardo</forename><surname>Murta</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Vanessa</forename><surname>Braganholo</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Fernando</forename><surname>Chirigati</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">David</forename><surname>Koop</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Juliana</forename><surname>Freire</surname></persName>\n\t\t</author>\n\t\t<idno type=\"DOI\">10.1007/978-3-319-16462-5_6</idno>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"m\">Lecture Notes in Computer Science</title>\n\t\t<imprint>\n\t\t\t<publisher>Springer International Publishing</publisher>\n\t\t\t<date type=\"published\" when=\"2015\">2014</date>\n\t\t\t<biblScope unit=\"page\" from=\"71\" to=\"83\" />\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}, {"refKey": 13, "tei": "<biblStruct xml:id=\"b13\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">Provenance from log files</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Devarshi</forename><surname>Ghoshal</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Beth</forename><surname>Plale</surname></persName>\n\t\t</author>\n\t\t<idno type=\"DOI\">10.1145/2457317.2457366</idno>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"m\">Proceedings of the Joint EDBT/ICDT 2013 Workshops</title>\n\t\t<meeting>the Joint EDBT/ICDT 2013 Workshops</meeting>\n\t\t<imprint>\n\t\t\t<publisher>ACM</publisher>\n\t\t\t<date type=\"published\" when=\"2013-03-18\">2013</date>\n\t\t\t<biblScope unit=\"page\">297</biblScope>\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}, {"refKey": 10, "tei": "<biblStruct xml:id=\"b10\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">SPADE: Support for Provenance Auditing in Distributed Environments</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Ashish</forename><surname>Gehani</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Dawood</forename><surname>Tariq</surname></persName>\n\t\t</author>\n\t\t<idno type=\"DOI\">10.1007/978-3-642-35170-9_6</idno>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"m\">Lecture Notes in Computer Science</title>\n\t\t<imprint>\n\t\t\t<publisher>Springer Berlin Heidelberg</publisher>\n\t\t\t<date type=\"published\" when=\"2012\">2012</date>\n\t\t\t<biblScope unit=\"page\" from=\"101\" to=\"120\" />\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}], "runtime": 12972, "id": "d29636c741faf055ea5c7a915cbf4492f9c0ebe1", "metadata": {"id": "d29636c741faf055ea5c7a915cbf4492f9c0ebe1"}, "original_file_path": "../../datalake/Samuel/SOFTware-Sync/downloads/xml/lirmm-03324873.grobid.tei.xml", "file_name": "lirmm-03324873.grobid.tei.xml"}