{"application": "software-mentions", "version": "0.8.0", "date": "2024-04-12T17:08+0000", "md5": "BD77FDA5446AD5762C3E99E875B40B2D", "mentions": [{"type": "software", "software-type": "software", "software-name": {"rawForm": "Audio", "normalizedForm": "Audio", "offsetStart": 0, "offsetEnd": 5}, "context": "Audio files can now be edited in non-real time from a single-track audio editor and can be manipulated as an audio buffer in real time in a patcher.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00038558244705200195}, "created": {"value": false, "score": 0.00025522708892822266}, "shared": {"value": false, "score": 1.7344951629638672e-05}}, "documentContextAttributes": {"used": {"value": false, "score": 0.002702653408050537}, "created": {"value": true, "score": 0.7171862721443176}, "shared": {"value": false, "score": 0.039230167865753174}}, "references": [{"label": "1", "normalizedForm": "1", "refKey": 1}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Audio", "normalizedForm": "Audio", "offsetStart": 0, "offsetEnd": 5}, "context": "Audio buffer manipulation is a key feature for any audio programming environment like Max or JSPatcher, as real time audio projects like some interactive music pieces often need to record and replay audio clips during the performance.", "mentionContextAttributes": {"used": {"value": false, "score": 5.513429641723633e-05}, "created": {"value": false, "score": 0.0014428496360778809}, "shared": {"value": false, "score": 1.8477439880371094e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.002702653408050537}, "created": {"value": true, "score": 0.7171862721443176}, "shared": {"value": false, "score": 0.039230167865753174}}, "references": [{"label": "1", "normalizedForm": "1", "refKey": 1}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "JSPatcher", "normalizedForm": "JSPatcher", "offsetStart": 0, "offsetEnd": 9}, "context": "JSPatcher is a web-based visual programming language (VPL) originally designed for providing a user interface (UI) for Web Audio API. ", "mentionContextAttributes": {"used": {"value": false, "score": 5.131959915161133e-05}, "created": {"value": false, "score": 0.46043068170547485}, "shared": {"value": false, "score": 0.0024063587188720703}}, "documentContextAttributes": {"used": {"value": false, "score": 0.1784917712211609}, "created": {"value": true, "score": 0.9637989401817322}, "shared": {"value": false, "score": 0.0024063587188720703}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "JSPatcher", "normalizedForm": "JSPatcher", "offsetStart": 0, "offsetEnd": 9}, "context": "JSPatcher is initially a WebAudio patcher editor that runs in a browser, where users can create boxes representing the DSP nodes and cables representing the connections in a canvas.", "mentionContextAttributes": {"used": {"value": false, "score": 6.479024887084961e-05}, "created": {"value": false, "score": 0.01347506046295166}, "shared": {"value": false, "score": 0.0005020499229431152}}, "documentContextAttributes": {"used": {"value": false, "score": 0.1784917712211609}, "created": {"value": true, "score": 0.9637989401817322}, "shared": {"value": false, "score": 0.0024063587188720703}}}, {"type": "software", "software-type": "software", "wikidataId": "Q3277979", "wikipediaExternalRef": 4333062, "lang": "en", "confidence": 0.7843, "software-name": {"rawForm": "OpenMusic", "normalizedForm": "OpenMusic", "wikidataId": "Q3277979", "wikipediaExternalRef": 4333062, "lang": "en", "confidence": 0.7843, "offsetStart": 0, "offsetEnd": 9}, "publisher": {"rawForm": "IRCAM", "normalizedForm": "IRCAM", "offsetStart": 24, "offsetEnd": 29}, "context": "OpenMusic, developed at IRCAM, shows the power of such a VPL in algorithmic composition with its composer-oriented design. ", "mentionContextAttributes": {"used": {"value": false, "score": 3.141164779663086e-05}, "created": {"value": true, "score": 0.9817034602165222}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00035178661346435547}, "created": {"value": true, "score": 0.9817034602165222}, "shared": {"value": false, "score": 1.0132789611816406e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "JSPatcher", "normalizedForm": "JSPatcher", "offsetStart": 0, "offsetEnd": 9}, "context": "JSPatcher with a file manager JSPatcher, we had to design a virtual file system in the browser that allows the following operations:", "mentionContextAttributes": {"used": {"value": false, "score": 0.1784917712211609}, "created": {"value": true, "score": 0.8523382544517517}, "shared": {"value": false, "score": 1.8417835235595703e-05}}, "documentContextAttributes": {"used": {"value": false, "score": 0.1784917712211609}, "created": {"value": true, "score": 0.9637989401817322}, "shared": {"value": false, "score": 0.0024063587188720703}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "JSPatcher", "normalizedForm": "JSPatcher", "offsetStart": 3, "offsetEnd": 12}, "context": "In JSPatcher, this behavior is implemented by the temporary file system in which every file is under the root directory. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0002518892288208008}, "created": {"value": false, "score": 0.032499611377716064}, "shared": {"value": false, "score": 8.940696716308594e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.1784917712211609}, "created": {"value": true, "score": 0.9637989401817322}, "shared": {"value": false, "score": 0.0024063587188720703}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "JSPatcher", "normalizedForm": "JSPatcher", "offsetStart": 3, "offsetEnd": 12}, "context": "In JSPatcher, a project is a folder that contains subfolders or files in any format as in native operating systems. ", "mentionContextAttributes": {"used": {"value": false, "score": 8.636713027954102e-05}, "created": {"value": true, "score": 0.8296452760696411}, "shared": {"value": false, "score": 1.9669532775878906e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.1784917712211609}, "created": {"value": true, "score": 0.9637989401817322}, "shared": {"value": false, "score": 0.0024063587188720703}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "JSPatcher", "normalizedForm": "JSPatcher", "offsetStart": 3, "offsetEnd": 12}, "context": "In JSPatcher, using the recent API, two features related to audio files were added. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.004097938537597656}, "created": {"value": false, "score": 0.0004884600639343262}, "shared": {"value": false, "score": 7.748603820800781e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.1784917712211609}, "created": {"value": true, "score": 0.9637989401817322}, "shared": {"value": false, "score": 0.0024063587188720703}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "JSPatcher", "normalizedForm": "JSPatcher", "offsetStart": 3, "offsetEnd": 12}, "context": "In JSPatcher, the Guido engine runs in a separate thread using the Web Worker API. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.002583801746368408}, "created": {"value": false, "score": 0.00016069412231445312}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.1784917712211609}, "created": {"value": true, "score": 0.9637989401817322}, "shared": {"value": false, "score": 0.0024063587188720703}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Audio", "normalizedForm": "Audio", "offsetStart": 4, "offsetEnd": 9}, "context": "The Audio Editor in JSPatcher has a dedicated effect \u00aarack\u00ba for WAMs.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0005432367324829102}, "created": {"value": false, "score": 0.000505983829498291}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.002702653408050537}, "created": {"value": true, "score": 0.7171862721443176}, "shared": {"value": false, "score": 0.039230167865753174}}, "references": [{"label": "1", "normalizedForm": "1", "refKey": 1}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "AudioWorklet", "normalizedForm": "AudioWorklet", "offsetStart": 4, "offsetEnd": 16}, "context": "The AudioWorklet API is important for audio editors or DAWs as buffer recording, looping, editing regions require sample-accurate controls over the input signal and can be done in a customized DSP through the API.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00010663270950317383}, "created": {"value": false, "score": 0.00017547607421875}, "shared": {"value": false, "score": 7.301568984985352e-05}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0010154247283935547}, "created": {"value": false, "score": 0.0025658011436462402}, "shared": {"value": false, "score": 0.039230167865753174}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PatcherAudio", "normalizedForm": "PatcherAudio", "offsetStart": 4, "offsetEnd": 16}, "context": "The PatcherAudio API provides necessary information getters like its number of channels, length and sample rate; and manipulation methods like split, concatenate, pick, paste, remove, insert, etc. Figure 4 shows an example of picking a section (from sample 24000 to 25000) of the existing buffer with 48000 samples. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00013637542724609375}, "created": {"value": false, "score": 0.00011020898818969727}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.6568390727043152}, "created": {"value": false, "score": 0.0002472400665283203}, "shared": {"value": false, "score": 2.4378299713134766e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FAUST compiled patcher", "normalizedForm": "FAUST compiled patcher", "offsetStart": 4, "offsetEnd": 26}, "context": "for FAUST compiled patcher.", "mentionContextAttributes": {"used": {"value": true, "score": 0.9991382360458374}, "created": {"value": false, "score": 3.451108932495117e-05}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9991382360458374}, "created": {"value": false, "score": 0.017346680164337158}, "shared": {"value": false, "score": 2.205371856689453e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q20155677", "wikipediaExternalRef": 47013794, "lang": "en", "confidence": 0.9161, "software-name": {"rawForm": "WebAssembly", "normalizedForm": "WebAssembly", "wikidataId": "Q20155677", "wikipediaExternalRef": 47013794, "lang": "en", "confidence": 0.9161, "offsetStart": 8, "offsetEnd": 19}, "context": "Then, a WebAssembly version of Guido 13 is used to render the score as it provides the AR (Abstract Representation) API to easily convert the musical model to the score. ", "mentionContextAttributes": {"used": {"value": true, "score": 0.9926354885101318}, "created": {"value": false, "score": 9.959936141967773e-05}, "shared": {"value": false, "score": 5.364418029785156e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9926354885101318}, "created": {"value": false, "score": 0.017906665802001953}, "shared": {"value": false, "score": 0.26969462633132935}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Web Audio API", "normalizedForm": "Web Audio API", "offsetStart": 10, "offsetEnd": 23}, "version": {"rawForm": "1.0", "normalizedForm": "1.0", "offsetStart": 32, "offsetEnd": 35}, "context": "Also, the Web Audio API version 1.0 became, after ten years of maturation, a W3C recommendation (a frozen standard) in June 2021. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0006912350654602051}, "created": {"value": false, "score": 0.0021893978118896484}, "shared": {"value": false, "score": 0.0001876354217529297}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0006912350654602051}, "created": {"value": false, "score": 0.0066506266593933105}, "shared": {"value": false, "score": 0.0061563849449157715}}}, {"type": "software", "software-type": "software", "wikidataId": "Q2814113", "wikipediaExternalRef": 35614465, "lang": "en", "confidence": 0.7813, "software-name": {"rawForm": "Emscripten", "normalizedForm": "Emscripten", "wikidataId": "Q2814113", "wikipediaExternalRef": 35614465, "lang": "en", "confidence": 0.7813, "offsetStart": 11, "offsetEnd": 21}, "context": "Through an Emscripten toolchain, the engine has been compiled to WebAssembly with most of its API and released as a JavaScript library at NPM (Node Packages Manager) online. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.003248929977416992}, "created": {"value": false, "score": 0.017906665802001953}, "shared": {"value": false, "score": 0.26969462633132935}}, "documentContextAttributes": {"used": {"value": false, "score": 0.01580888032913208}, "created": {"value": false, "score": 0.017906665802001953}, "shared": {"value": false, "score": 0.26969462633132935}}}, {"type": "software", "software-type": "software", "wikidataId": "Q847465", "wikipediaExternalRef": 214657, "lang": "en", "confidence": 0.7634, "software-name": {"rawForm": "ffmpeg", "normalizedForm": "ffmpeg", "wikidataId": "Q847465", "wikipediaExternalRef": 214657, "lang": "en", "confidence": 0.7634, "offsetStart": 12, "offsetEnd": 18}, "context": "https://www.ffmpeg.org/", "mentionContextAttributes": {"used": {"value": false, "score": 0.00017404556274414062}, "created": {"value": false, "score": 3.463029861450195e-05}, "shared": {"value": true, "score": 0.9928585886955261}}, "documentContextAttributes": {"used": {"value": false, "score": 0.01580888032913208}, "created": {"value": false, "score": 0.00025856494903564453}, "shared": {"value": true, "score": 0.9928585886955261}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "BrowserFS", "normalizedForm": "BrowserFS", "offsetStart": 12, "offsetEnd": 21}, "context": "We also use BrowserFS, a JavaScript module that can store persistently a whole structured file system into the IndexedDB and provide a JavaScript API for file management [8, 9].", "mentionContextAttributes": {"used": {"value": false, "score": 0.39039701223373413}, "created": {"value": false, "score": 0.0015514492988586426}, "shared": {"value": false, "score": 3.451108932495117e-05}}, "documentContextAttributes": {"used": {"value": false, "score": 0.39039701223373413}, "created": {"value": false, "score": 0.0015514492988586426}, "shared": {"value": false, "score": 3.451108932495117e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Audio", "normalizedForm": "Audio", "offsetStart": 15, "offsetEnd": 20}, "context": "(Figure 5) Web Audio's OfflineAudioContext is an audio context that, instead of process audio in real time, generates audio data from a WebAudio graph as fast as it can.", "mentionContextAttributes": {"used": {"value": false, "score": 6.788969039916992e-05}, "created": {"value": false, "score": 2.4974346160888672e-05}, "shared": {"value": false, "score": 1.6093254089355469e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.002702653408050537}, "created": {"value": true, "score": 0.7171862721443176}, "shared": {"value": false, "score": 0.039230167865753174}}, "references": [{"label": "1", "normalizedForm": "1", "refKey": 1}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "VexFlow", "normalizedForm": "VexFlow", "offsetStart": 15, "offsetEnd": 22}, "context": "Libraries like VexFlow, 8 Guido, 9 Verovio10 or abcjs 11 can render music scores on the web. ", "mentionContextAttributes": {"used": {"value": false, "score": 4.225969314575195e-05}, "created": {"value": false, "score": 1.913309097290039e-05}, "shared": {"value": false, "score": 1.4126300811767578e-05}}, "documentContextAttributes": {"used": {"value": false, "score": 4.225969314575195e-05}, "created": {"value": false, "score": 1.913309097290039e-05}, "shared": {"value": false, "score": 1.4126300811767578e-05}}, "references": [{"label": "8", "normalizedForm": "8", "refKey": 8, "offsetStart": 17577, "offsetEnd": 17578}, {"label": "9", "normalizedForm": "9", "refKey": 9, "offsetStart": 17586, "offsetEnd": 17587}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "JSPatcher", "normalizedForm": "JSPatcher", "offsetStart": 16, "offsetEnd": 25}, "context": "Since the whole JSPatcher platform is mainly developed in TypeScript and compiled to JavaScript which is the scripting language for the Web API, we have the possibility to fully import the language it self to the patcher system. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.005907773971557617}, "created": {"value": false, "score": 0.0921316146850586}, "shared": {"value": false, "score": 0.0010149478912353516}}, "documentContextAttributes": {"used": {"value": false, "score": 0.1784917712211609}, "created": {"value": true, "score": 0.9637989401817322}, "shared": {"value": false, "score": 0.0024063587188720703}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "AudioWorklet", "normalizedForm": "AudioWorklet", "offsetStart": 16, "offsetEnd": 28}, "context": "Support for the AudioWorklet API on Safari Desktop and iOS browsers was added in April 2021, which as the final step in providing full Web Audio API coverage on all major browsers. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0010154247283935547}, "created": {"value": false, "score": 0.0025658011436462402}, "shared": {"value": false, "score": 0.039230167865753174}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0010154247283935547}, "created": {"value": false, "score": 0.0025658011436462402}, "shared": {"value": false, "score": 0.039230167865753174}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CAC", "normalizedForm": "CAC", "offsetStart": 18, "offsetEnd": 21}, "context": "To facilitate the CAC, the modeling of these concepts, or generally music theory, should be implemented in a digital way to allow the calculation between the musical concepts.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00011771917343139648}, "created": {"value": true, "score": 0.5948876738548279}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0005899667739868164}, "created": {"value": true, "score": 0.994664192199707}, "shared": {"value": false, "score": 0.0017318129539489746}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "JSPatcher", "normalizedForm": "JSPatcher", "offsetStart": 20, "offsetEnd": 29}, "context": "The Audio Editor in JSPatcher has a dedicated effect \u00aarack\u00ba for WAMs.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0005432367324829102}, "created": {"value": false, "score": 0.000505983829498291}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.1784917712211609}, "created": {"value": true, "score": 0.9637989401817322}, "shared": {"value": false, "score": 0.0024063587188720703}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "JSPatcher", "normalizedForm": "JSPatcher", "offsetStart": 22, "offsetEnd": 31}, "context": "Its implementation in JSPatcher is a dedicated window that can be opened by double-clicking an audio file listed in the file manager. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0001709461212158203}, "created": {"value": false, "score": 0.06137579679489136}, "shared": {"value": false, "score": 0.0005756616592407227}}, "documentContextAttributes": {"used": {"value": false, "score": 0.1784917712211609}, "created": {"value": true, "score": 0.9637989401817322}, "shared": {"value": false, "score": 0.0024063587188720703}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "JSPatcher", "normalizedForm": "JSPatcher", "offsetStart": 24, "offsetEnd": 33}, "context": "These new features make JSPatcher not only a utility to interface graphs from the Web Audio API, but also an integrated development environment (IDE) for data computation and audio processing on the web. ", "mentionContextAttributes": {"used": {"value": false, "score": 6.526708602905273e-05}, "created": {"value": false, "score": 0.24961769580841064}, "shared": {"value": false, "score": 0.0006410479545593262}}, "documentContextAttributes": {"used": {"value": false, "score": 0.1784917712211609}, "created": {"value": true, "score": 0.9637989401817322}, "shared": {"value": false, "score": 0.0024063587188720703}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "WebAudio", "normalizedForm": "WebAudio", "offsetStart": 25, "offsetEnd": 33}, "context": "JSPatcher is initially a WebAudio patcher editor that runs in a browser, where users can create boxes representing the DSP nodes and cables representing the connections in a canvas.", "mentionContextAttributes": {"used": {"value": false, "score": 6.479024887084961e-05}, "created": {"value": false, "score": 0.01347506046295166}, "shared": {"value": false, "score": 0.0005020499229431152}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0014788508415222168}, "created": {"value": false, "score": 0.48201507329940796}, "shared": {"value": false, "score": 0.0005020499229431152}}}, {"type": "software", "software-type": "software", "wikidataId": "Q847465", "wikipediaExternalRef": 214657, "lang": "en", "confidence": 0.7634, "software-name": {"rawForm": "ffmpeg", "normalizedForm": "ffmpeg", "wikidataId": "Q847465", "wikipediaExternalRef": 214657, "lang": "en", "confidence": 0.7634, "offsetStart": 30, "offsetEnd": 36}, "context": "https://github.com/ffmpegwasm/ffmpeg.wasm", "mentionContextAttributes": {"used": {"value": false, "score": 0.0003687739372253418}, "created": {"value": false, "score": 1.0192394256591797e-05}, "shared": {"value": true, "score": 0.9685057401657104}}, "documentContextAttributes": {"used": {"value": false, "score": 0.01580888032913208}, "created": {"value": false, "score": 0.00025856494903564453}, "shared": {"value": true, "score": 0.9928585886955261}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "JSPatcher", "normalizedForm": "JSPatcher", "offsetStart": 30, "offsetEnd": 39}, "context": "JSPatcher with a file manager JSPatcher, we had to design a virtual file system in the browser that allows the following operations:", "mentionContextAttributes": {"used": {"value": false, "score": 0.1784917712211609}, "created": {"value": true, "score": 0.8523382544517517}, "shared": {"value": false, "score": 1.8417835235595703e-05}}, "documentContextAttributes": {"used": {"value": false, "score": 0.1784917712211609}, "created": {"value": true, "score": 0.9637989401817322}, "shared": {"value": false, "score": 0.0024063587188720703}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "BrowserFS", "normalizedForm": "BrowserFS", "offsetStart": 32, "offsetEnd": 41}, "context": "It acts as a bridge between the BrowserFS and the UI, when a change is made by the user to the file system, it calls the BrowserFS to store new change in IndexedDB; meanwhile, all event subscribers to the changed file, such as the file manager UI (Figure 1), file editors or audio players will be alerted and they can react in real time.", "mentionContextAttributes": {"used": {"value": false, "score": 0.012631475925445557}, "created": {"value": false, "score": 5.632638931274414e-05}, "shared": {"value": false, "score": 4.827976226806641e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.39039701223373413}, "created": {"value": false, "score": 0.0015514492988586426}, "shared": {"value": false, "score": 3.451108932495117e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Web Audio Modules", "normalizedForm": "Web Audio Modules", "offsetStart": 34, "offsetEnd": 51}, "context": "In 2015, the first version of the Web Audio Modules (WAM) [10] standard is created, primarily for native plugins developers to port their existing plugins to the web. ", "mentionContextAttributes": {"used": {"value": false, "score": 6.669759750366211e-05}, "created": {"value": false, "score": 0.005533576011657715}, "shared": {"value": false, "score": 0.001261889934539795}}, "documentContextAttributes": {"used": {"value": false, "score": 6.669759750366211e-05}, "created": {"value": false, "score": 0.005533576011657715}, "shared": {"value": false, "score": 0.001261889934539795}}}, {"type": "software", "software-type": "implicit", "software-name": {"rawForm": "module", "normalizedForm": "module", "offsetStart": 36, "offsetEnd": 42}, "context": "We also use BrowserFS, a JavaScript module that can store persistently a whole structured file system into the IndexedDB and provide a JavaScript API for file management [8, 9].", "mentionContextAttributes": {"used": {"value": false, "score": 0.39039701223373413}, "created": {"value": false, "score": 0.0015514492988586426}, "shared": {"value": false, "score": 3.451108932495117e-05}}, "documentContextAttributes": {"used": {"value": false, "score": 0.39039701223373413}, "created": {"value": false, "score": 0.0015514492988586426}, "shared": {"value": false, "score": 3.451108932495117e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "JSPatcher", "normalizedForm": "JSPatcher", "offsetStart": 36, "offsetEnd": 45}, "context": "For instance, an artwork created on JSPatcher can be easily shared with people by designing a presentation mode of the patcher in which only selected boxes is showing with specific position and size, and specifying in the URI the location of the project file and the patcher filename, with additional options such as hiding the editor UI or make the patcher read-only.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0004267096519470215}, "created": {"value": false, "score": 0.001281440258026123}, "shared": {"value": false, "score": 6.204843521118164e-05}}, "documentContextAttributes": {"used": {"value": false, "score": 0.1784917712211609}, "created": {"value": true, "score": 0.9637989401817322}, "shared": {"value": false, "score": 0.0024063587188720703}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Safari Desktop", "normalizedForm": "Safari Desktop", "offsetStart": 36, "offsetEnd": 50}, "context": "Support for the AudioWorklet API on Safari Desktop and iOS browsers was added in April 2021, which as the final step in providing full Web Audio API coverage on all major browsers. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0010154247283935547}, "created": {"value": false, "score": 0.0025658011436462402}, "shared": {"value": false, "score": 0.039230167865753174}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0010154247283935547}, "created": {"value": false, "score": 0.0025658011436462402}, "shared": {"value": false, "score": 0.039230167865753174}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Audio", "normalizedForm": "Audio", "offsetStart": 37, "offsetEnd": 42}, "context": "It motivated developers to adapt Web Audio applications to the recommended standard without worrying about compatibility issues.", "mentionContextAttributes": {"used": {"value": false, "score": 0.002122223377227783}, "created": {"value": true, "score": 0.7171862721443176}, "shared": {"value": false, "score": 1.3709068298339844e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.002702653408050537}, "created": {"value": true, "score": 0.7171862721443176}, "shared": {"value": false, "score": 0.039230167865753174}}, "references": [{"label": "1", "normalizedForm": "1", "refKey": 1}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CAC", "normalizedForm": "CAC", "offsetStart": 41, "offsetEnd": 44}, "context": "It is likely to be highly suitable for a CAC system.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0003647804260253906}, "created": {"value": false, "score": 0.0010828375816345215}, "shared": {"value": false, "score": 6.556510925292969e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0005899667739868164}, "created": {"value": true, "score": 0.994664192199707}, "shared": {"value": false, "score": 0.0017318129539489746}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CAC", "normalizedForm": "CAC", "offsetStart": 41, "offsetEnd": 44}, "context": "The following patcher (Figure 7) shows a CAC project combining the presented features.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00046521425247192383}, "created": {"value": false, "score": 0.0006764531135559082}, "shared": {"value": false, "score": 1.0132789611816406e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0005899667739868164}, "created": {"value": true, "score": 0.994664192199707}, "shared": {"value": false, "score": 0.0017318129539489746}}}, {"type": "software", "software-type": "software", "wikidataId": "Q3277979", "wikipediaExternalRef": 4333062, "lang": "en", "confidence": 0.7843, "software-name": {"rawForm": "OpenMusic", "normalizedForm": "OpenMusic", "wikidataId": "Q3277979", "wikipediaExternalRef": 4333062, "lang": "en", "confidence": 0.7843, "offsetStart": 41, "offsetEnd": 50}, "publisher": {"rawForm": "IRCAM", "normalizedForm": "IRCAM"}, "context": "We also added some functions existing in OpenMusic like x2dx (calculate the difference between values in an array), dx2x (integrate an array), permute, combinations, arithmSer (create an arithmetic series), fiboSer (create a Fibonacci series), etc.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00019097328186035156}, "created": {"value": false, "score": 0.0004811882972717285}, "shared": {"value": false, "score": 7.748603820800781e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00035178661346435547}, "created": {"value": true, "score": 0.9817034602165222}, "shared": {"value": false, "score": 1.0132789611816406e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PatcherAudio", "normalizedForm": "PatcherAudio", "offsetStart": 41, "offsetEnd": 53}, "context": "In fact, the object is associated with a PatcherAudio API in which the audio buffer is stored with its waveform data, with a set of methods related to the buffer editing.", "mentionContextAttributes": {"used": {"value": true, "score": 0.6568390727043152}, "created": {"value": false, "score": 0.0002472400665283203}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.6568390727043152}, "created": {"value": false, "score": 0.0002472400665283203}, "shared": {"value": false, "score": 2.4378299713134766e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "FAUST compiled patcher", "normalizedForm": "FAUST compiled patcher", "offsetStart": 43, "offsetEnd": 65}, "context": "An additional patcher interpretation mode, FAUST compiled patcher, has also been developed to facilitate DSP design under the WebAudio AudioWorklet specification [6].", "mentionContextAttributes": {"used": {"value": false, "score": 3.272294998168945e-05}, "created": {"value": false, "score": 0.017346680164337158}, "shared": {"value": false, "score": 2.205371856689453e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9991382360458374}, "created": {"value": false, "score": 0.017346680164337158}, "shared": {"value": false, "score": 2.205371856689453e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "JSPatcher", "normalizedForm": "JSPatcher", "offsetStart": 44, "offsetEnd": 53}, "context": "The described additions and improvements on JSPatcher are just the first steps towards a complete online IDE for sound and music computing. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00015473365783691406}, "created": {"value": true, "score": 0.9637989401817322}, "shared": {"value": false, "score": 1.0132789611816406e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.1784917712211609}, "created": {"value": true, "score": 0.9637989401817322}, "shared": {"value": false, "score": 0.0024063587188720703}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CAC", "normalizedForm": "CAC", "offsetStart": 45, "offsetEnd": 48}, "context": "To design such a computer-aided composition (CAC) system for composers, visual programming and musical score display are two key features.", "mentionContextAttributes": {"used": {"value": false, "score": 5.310773849487305e-05}, "created": {"value": true, "score": 0.994664192199707}, "shared": {"value": false, "score": 1.1324882507324219e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0005899667739868164}, "created": {"value": true, "score": 0.994664192199707}, "shared": {"value": false, "score": 0.0017318129539489746}}}, {"type": "software", "software-type": "software", "wikidataId": "Q3277979", "wikipediaExternalRef": 4333062, "lang": "en", "confidence": 0.7843, "software-name": {"rawForm": "OpenMusic", "normalizedForm": "OpenMusic", "wikidataId": "Q3277979", "wikipediaExternalRef": 4333062, "lang": "en", "confidence": 0.7843, "offsetStart": 45, "offsetEnd": 54}, "publisher": {"rawForm": "IRCAM", "normalizedForm": "IRCAM"}, "context": "Like the numerous array-related functions in OpenMusic, we also need to provide them in JSPatcher.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00035178661346435547}, "created": {"value": false, "score": 0.0011268854141235352}, "shared": {"value": false, "score": 1.0132789611816406e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00035178661346435547}, "created": {"value": true, "score": 0.9817034602165222}, "shared": {"value": false, "score": 1.0132789611816406e-06}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "JSPatcher", "normalizedForm": "JSPatcher", "offsetStart": 49, "offsetEnd": 58}, "context": "Some types of project files can be recognized by JSPatcher and can be loaded into patchers. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00029671192169189453}, "created": {"value": false, "score": 0.0004946589469909668}, "shared": {"value": false, "score": 4.118680953979492e-05}}, "documentContextAttributes": {"used": {"value": false, "score": 0.1784917712211609}, "created": {"value": true, "score": 0.9637989401817322}, "shared": {"value": false, "score": 0.0024063587188720703}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "WebAudio", "normalizedForm": "WebAudio", "offsetStart": 54, "offsetEnd": 62}, "context": "Its inlets and outlets will be connectable with other WebAudio node objects. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0008140206336975098}, "created": {"value": false, "score": 0.0005415678024291992}, "shared": {"value": false, "score": 0.00022673606872558594}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0014788508415222168}, "created": {"value": false, "score": 0.48201507329940796}, "shared": {"value": false, "score": 0.0005020499229431152}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "iOS", "normalizedForm": "iOS", "offsetStart": 55, "offsetEnd": 58}, "context": "Support for the AudioWorklet API on Safari Desktop and iOS browsers was added in April 2021, which as the final step in providing full Web Audio API coverage on all major browsers. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0010154247283935547}, "created": {"value": false, "score": 0.0025658011436462402}, "shared": {"value": false, "score": 0.039230167865753174}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0010154247283935547}, "created": {"value": false, "score": 0.0025658011436462402}, "shared": {"value": false, "score": 0.039230167865753174}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "JSPatcher", "normalizedForm": "JSPatcher", "offsetStart": 59, "offsetEnd": 68}, "context": "Finally, these feature are integrated as a package 14 into JSPatcher.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0028336644172668457}, "created": {"value": false, "score": 0.05556982755661011}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.1784917712211609}, "created": {"value": true, "score": 0.9637989401817322}, "shared": {"value": false, "score": 0.0024063587188720703}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "WebAudio", "normalizedForm": "WebAudio", "offsetStart": 61, "offsetEnd": 69}, "context": "This kind of can be used in imperative patchers as a special WebAudio node called AudioWorkletNode that can be connected with other WebAudio nodes.", "mentionContextAttributes": {"used": {"value": false, "score": 6.252527236938477e-05}, "created": {"value": false, "score": 0.0002923011779785156}, "shared": {"value": false, "score": 0.000217437744140625}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0014788508415222168}, "created": {"value": false, "score": 0.48201507329940796}, "shared": {"value": false, "score": 0.0005020499229431152}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "JSPatcher", "normalizedForm": "JSPatcher", "offsetStart": 61, "offsetEnd": 70}, "context": "The following sections will present the improvements made to JSPatcher that contain important features for modern computer music practices, including a file manager, audio buffer manipulation, audio plugin support and computer-assisted composition functions.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0001392364501953125}, "created": {"value": false, "score": 0.3357661962509155}, "shared": {"value": false, "score": 4.112720489501953e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.1784917712211609}, "created": {"value": true, "score": 0.9637989401817322}, "shared": {"value": false, "score": 0.0024063587188720703}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "WebAudio", "normalizedForm": "WebAudio", "offsetStart": 63, "offsetEnd": 71}, "context": "Thus, for web-based DAWs, the need arose for a new standard of WebAudio plugins, offering similar functionality to their native counterparts.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0001423358917236328}, "created": {"value": false, "score": 0.48201507329940796}, "shared": {"value": false, "score": 6.192922592163086e-05}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0014788508415222168}, "created": {"value": false, "score": 0.48201507329940796}, "shared": {"value": false, "score": 0.0005020499229431152}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CAC", "normalizedForm": "CAC", "offsetStart": 65, "offsetEnd": 68}, "context": "12 It aims to deal with the musical model issue in the web-based CAC system.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00013947486877441406}, "created": {"value": true, "score": 0.7053752541542053}, "shared": {"value": false, "score": 3.7550926208496094e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0005899667739868164}, "created": {"value": true, "score": 0.994664192199707}, "shared": {"value": false, "score": 0.0017318129539489746}}}, {"type": "software", "software-type": "software", "wikidataId": "Q20155677", "wikipediaExternalRef": 47013794, "lang": "en", "confidence": 0.9161, "software-name": {"rawForm": "WebAssembly", "normalizedForm": "WebAssembly", "wikidataId": "Q20155677", "wikipediaExternalRef": 47013794, "lang": "en", "confidence": 0.9161, "offsetStart": 65, "offsetEnd": 76}, "context": "Through an Emscripten toolchain, the engine has been compiled to WebAssembly with most of its API and released as a JavaScript library at NPM (Node Packages Manager) online. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.003248929977416992}, "created": {"value": false, "score": 0.017906665802001953}, "shared": {"value": false, "score": 0.26969462633132935}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9926354885101318}, "created": {"value": false, "score": 0.017906665802001953}, "shared": {"value": false, "score": 0.26969462633132935}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Web Worker API", "normalizedForm": "Web Worker API", "offsetStart": 67, "offsetEnd": 81}, "context": "In JSPatcher, the Guido engine runs in a separate thread using the Web Worker API. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.002583801746368408}, "created": {"value": false, "score": 0.00016069412231445312}, "shared": {"value": false, "score": 4.172325134277344e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.002583801746368408}, "created": {"value": false, "score": 0.00016069412231445312}, "shared": {"value": false, "score": 4.172325134277344e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PatcherAudio", "normalizedForm": "PatcherAudio", "offsetStart": 69, "offsetEnd": 81}, "context": "Users can connect the buffer~object to some other objects to use the PatcherAudio API.", "mentionContextAttributes": {"used": {"value": false, "score": 0.001150667667388916}, "created": {"value": false, "score": 0.00012922286987304688}, "shared": {"value": false, "score": 5.185604095458984e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.6568390727043152}, "created": {"value": false, "score": 0.0002472400665283203}, "shared": {"value": false, "score": 2.4378299713134766e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Web Audio API", "normalizedForm": "Web Audio API", "offsetStart": 74, "offsetEnd": 87}, "version": {"rawForm": "1.0", "normalizedForm": "1.0"}, "context": "However, for a long period, due to the inconsistent implementation of the Web Audio API between different web browsers, it has been hard to maintain related projects and ensure the same user experience across browsers and devices. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0001647472381591797}, "created": {"value": false, "score": 0.0066506266593933105}, "shared": {"value": false, "score": 0.0061563849449157715}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0006912350654602051}, "created": {"value": false, "score": 0.0066506266593933105}, "shared": {"value": false, "score": 0.0061563849449157715}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "WebAudio", "normalizedForm": "WebAudio", "offsetStart": 75, "offsetEnd": 83}, "context": "Typically, they will be used in a JavaScript patcher (using imperative and WebAudio layers) by different box objects.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0014788508415222168}, "created": {"value": false, "score": 6.955862045288086e-05}, "shared": {"value": false, "score": 1.7881393432617188e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0014788508415222168}, "created": {"value": false, "score": 0.48201507329940796}, "shared": {"value": false, "score": 0.0005020499229431152}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "JSPatcher", "normalizedForm": "JSPatcher", "offsetStart": 82, "offsetEnd": 91}, "context": "It is also important to be able to create interactive audio programs with WAMs in JSPatcher.", "mentionContextAttributes": {"used": {"value": false, "score": 5.799531936645508e-05}, "created": {"value": false, "score": 0.003318309783935547}, "shared": {"value": false, "score": 1.0132789611816406e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.1784917712211609}, "created": {"value": true, "score": 0.9637989401817322}, "shared": {"value": false, "score": 0.0024063587188720703}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "AudioWorkletNode", "normalizedForm": "AudioWorkletNode", "offsetStart": 82, "offsetEnd": 98}, "context": "This kind of can be used in imperative patchers as a special WebAudio node called AudioWorkletNode that can be connected with other WebAudio nodes. ", "mentionContextAttributes": {"used": {"value": false, "score": 6.252527236938477e-05}, "created": {"value": false, "score": 0.0002923011779785156}, "shared": {"value": false, "score": 0.000217437744140625}}, "documentContextAttributes": {"used": {"value": false, "score": 6.252527236938477e-05}, "created": {"value": false, "score": 0.0002923011779785156}, "shared": {"value": false, "score": 0.000217437744140625}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "WebAudioModule (WAM)", "normalizedForm": "WebAudioModule (WAM)", "offsetStart": 82, "offsetEnd": 102}, "context": "To perform more complex processing using third-party DSPs, it is possible to load WebAudioModule (WAM) plugins [10, 11]  into a plugin rack. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.005979359149932861}, "created": {"value": false, "score": 1.8417835235595703e-05}, "shared": {"value": false, "score": 2.4437904357910156e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.005979359149932861}, "created": {"value": false, "score": 1.8417835235595703e-05}, "shared": {"value": false, "score": 2.4437904357910156e-06}}}, {"type": "software", "software-type": "software", "wikidataId": "Q847465", "wikipediaExternalRef": 214657, "lang": "en", "confidence": 0.7634, "software-name": {"rawForm": "ffmpeg", "normalizedForm": "ffmpeg", "wikidataId": "Q847465", "wikipediaExternalRef": 214657, "lang": "en", "confidence": 0.7634, "offsetStart": 83, "offsetEnd": 90}, "context": "formats with different sample rates or bit-rates thanks to a web implementation of ffmpeg4 through Emscripten5 compilation and WebAssembly. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.01580888032913208}, "created": {"value": false, "score": 0.00025856494903564453}, "shared": {"value": false, "score": 1.8477439880371094e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.01580888032913208}, "created": {"value": false, "score": 0.00025856494903564453}, "shared": {"value": true, "score": 0.9928585886955261}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Audio", "normalizedForm": "Audio", "offsetStart": 85, "offsetEnd": 90}, "context": "In 2018, they joined forces with other groups of people working on interoperable Web Audio plugins and plugin hosts to synchronize their efforts toward the beginnings of an open standard called Web Audio Plugins (WAP) [11, 12], covering a wider range of use cases.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00033164024353027344}, "created": {"value": false, "score": 0.30903881788253784}, "shared": {"value": false, "score": 0.002444326877593994}}, "documentContextAttributes": {"used": {"value": false, "score": 0.002702653408050537}, "created": {"value": true, "score": 0.7171862721443176}, "shared": {"value": false, "score": 0.039230167865753174}}, "references": [{"label": "1", "normalizedForm": "1", "refKey": 1}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Audio", "normalizedForm": "Audio", "offsetStart": 86, "offsetEnd": 91}, "context": "These new features make JSPatcher not only a utility to interface graphs from the Web Audio API, but also an integrated development environment (IDE) for data computation and audio processing on the web.", "mentionContextAttributes": {"used": {"value": false, "score": 6.526708602905273e-05}, "created": {"value": false, "score": 0.24961787462234497}, "shared": {"value": false, "score": 0.0006410479545593262}}, "documentContextAttributes": {"used": {"value": false, "score": 0.002702653408050537}, "created": {"value": true, "score": 0.7171862721443176}, "shared": {"value": false, "score": 0.039230167865753174}}, "references": [{"label": "1", "normalizedForm": "1", "refKey": 1}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CAC", "normalizedForm": "CAC", "offsetStart": 88, "offsetEnd": 91}, "context": "Manipulations of arrays (lists) of pitches, durations, velocities are common tasks in a CAC work.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0005899667739868164}, "created": {"value": false, "score": 5.5849552154541016e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0005899667739868164}, "created": {"value": true, "score": 0.994664192199707}, "shared": {"value": false, "score": 0.0017318129539489746}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "JSPatcher", "normalizedForm": "JSPatcher", "offsetStart": 88, "offsetEnd": 97}, "context": "Like the numerous array-related functions in OpenMusic, we also need to provide them in JSPatcher.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00035178661346435547}, "created": {"value": false, "score": 0.0011268854141235352}, "shared": {"value": false, "score": 1.0132789611816406e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.1784917712211609}, "created": {"value": true, "score": 0.9637989401817322}, "shared": {"value": false, "score": 0.0024063587188720703}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "JSPatcher", "normalizedForm": "JSPatcher", "offsetStart": 93, "offsetEnd": 102}, "context": "Audio buffer manipulation is a key feature for any audio programming environment like Max or JSPatcher, as real time audio projects like some interactive music pieces often need to record and replay audio clips during the performance.", "mentionContextAttributes": {"used": {"value": false, "score": 5.513429641723633e-05}, "created": {"value": false, "score": 0.0014428496360778809}, "shared": {"value": false, "score": 1.8477439880371094e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.1784917712211609}, "created": {"value": true, "score": 0.9637989401817322}, "shared": {"value": false, "score": 0.0024063587188720703}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "WebAudio", "normalizedForm": "WebAudio", "offsetStart": 96, "offsetEnd": 104}, "context": "Now, a WAM plugin can be fetched from the web using a URI, and be initialized using the current WebAudio context. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00022411346435546875}, "created": {"value": false, "score": 0.003094911575317383}, "shared": {"value": false, "score": 5.918741226196289e-05}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0014788508415222168}, "created": {"value": false, "score": 0.48201507329940796}, "shared": {"value": false, "score": 0.0005020499229431152}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PatcherAudio", "normalizedForm": "PatcherAudio", "offsetStart": 97, "offsetEnd": 109}, "context": "A Bang (a triggering event) from the first inlet of the buffer~object will trigger output of the PatcherAudio API.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0615578293800354}, "created": {"value": false, "score": 9.161233901977539e-05}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": true, "score": 0.6568390727043152}, "created": {"value": false, "score": 0.0002472400665283203}, "shared": {"value": false, "score": 2.4378299713134766e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "JSPatcher", "normalizedForm": "JSPatcher", "offsetStart": 99, "offsetEnd": 108}, "context": "Feedbacks given by musicians from the community shows high interest in the future possibilities of JSPatcher such as supports for INScore, 16 collaborative editing and messaging via the network. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0009100437164306641}, "created": {"value": false, "score": 0.0015723705291748047}, "shared": {"value": false, "score": 4.7266483306884766e-05}}, "documentContextAttributes": {"used": {"value": false, "score": 0.1784917712211609}, "created": {"value": true, "score": 0.9637989401817322}, "shared": {"value": false, "score": 0.0024063587188720703}}}, {"type": "software", "software-type": "software", "wikidataId": "Q2814113", "wikipediaExternalRef": 35614465, "lang": "en", "confidence": 0.7813, "software-name": {"rawForm": "Emscripten", "normalizedForm": "Emscripten", "wikidataId": "Q2814113", "wikipediaExternalRef": 35614465, "lang": "en", "confidence": 0.7813, "offsetStart": 99, "offsetEnd": 109}, "context": "formats with different sample rates or bit-rates thanks to a web implementation of ffmpeg4 through Emscripten5 compilation and WebAssembly.", "mentionContextAttributes": {"used": {"value": false, "score": 0.01580888032913208}, "created": {"value": false, "score": 0.00025856494903564453}, "shared": {"value": false, "score": 1.8477439880371094e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.01580888032913208}, "created": {"value": false, "score": 0.017906665802001953}, "shared": {"value": false, "score": 0.26969462633132935}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CAC", "normalizedForm": "CAC", "offsetStart": 108, "offsetEnd": 111}, "context": "The Sol library is only a proof of concept with a covering of very basic but necessary concepts in a common CAC workflow.", "mentionContextAttributes": {"used": {"value": false, "score": 8.410215377807617e-05}, "created": {"value": false, "score": 0.0038614273071289062}, "shared": {"value": false, "score": 2.980232238769531e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0005899667739868164}, "created": {"value": true, "score": 0.994664192199707}, "shared": {"value": false, "score": 0.0017318129539489746}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "JSPatcher", "normalizedForm": "JSPatcher", "offsetStart": 120, "offsetEnd": 129}, "context": "With this interpreter, some Max's Gen patchers can also be interpreted to FAUST code and be compiled in the same way in JSPatcher.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0015404820442199707}, "created": {"value": false, "score": 2.6047229766845703e-05}, "shared": {"value": false, "score": 6.556510925292969e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.1784917712211609}, "created": {"value": true, "score": 0.9637989401817322}, "shared": {"value": false, "score": 0.0024063587188720703}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "BrowserFS", "normalizedForm": "BrowserFS", "offsetStart": 121, "offsetEnd": 130}, "context": "It acts as a bridge between the BrowserFS and the UI, when a change is made by the user to the file system, it calls the BrowserFS to store new change in IndexedDB; meanwhile, all event subscribers to the changed file, such as the file manager UI (Figure 1), file editors or audio players will be alerted and they can react in real time.", "mentionContextAttributes": {"used": {"value": false, "score": 0.012631475925445557}, "created": {"value": false, "score": 5.632638931274414e-05}, "shared": {"value": false, "score": 4.827976226806641e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.39039701223373413}, "created": {"value": false, "score": 0.0015514492988586426}, "shared": {"value": false, "score": 3.451108932495117e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Audio", "normalizedForm": "Audio", "offsetStart": 123, "offsetEnd": 128}, "context": "JSPatcher is a web-based visual programming language (VPL) originally designed for providing a user interface (UI) for Web Audio API. 1 Since the API describes the audio processing flow as a graph of DSP nodes, it is convenient to have a patcher editing system [5] to manipulate the audio graph.", "mentionContextAttributes": {"used": {"value": false, "score": 8.26716423034668e-05}, "created": {"value": false, "score": 0.0930829644203186}, "shared": {"value": false, "score": 6.836652755737305e-05}}, "documentContextAttributes": {"used": {"value": false, "score": 0.002702653408050537}, "created": {"value": true, "score": 0.7171862721443176}, "shared": {"value": false, "score": 0.039230167865753174}}, "references": [{"label": "1", "normalizedForm": "1", "refKey": 1, "offsetStart": 284, "offsetEnd": 285}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "WebAudio AudioWorklet", "normalizedForm": "WebAudio AudioWorklet", "offsetStart": 126, "offsetEnd": 147}, "context": "An additional patcher interpretation mode, FAUST compiled patcher, has also been developed to facilitate DSP design under the WebAudio AudioWorklet specification [6].", "mentionContextAttributes": {"used": {"value": false, "score": 3.272294998168945e-05}, "created": {"value": false, "score": 0.017346680164337158}, "shared": {"value": false, "score": 2.205371856689453e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 3.272294998168945e-05}, "created": {"value": false, "score": 0.017346680164337158}, "shared": {"value": false, "score": 2.205371856689453e-06}}}, {"type": "software", "software-type": "implicit", "software-name": {"rawForm": "library", "normalizedForm": "library", "offsetStart": 127, "offsetEnd": 134}, "language": {"rawForm": "JavaScript", "normalizedForm": "JavaScript", "wikidataId": "Q2005", "offsetStart": 116, "offsetEnd": 126}, "context": "Through an Emscripten toolchain, the engine has been compiled to WebAssembly with most of its API and released as a JavaScript library at NPM (Node Packages Manager) online. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.003248929977416992}, "created": {"value": false, "score": 0.017906665802001953}, "shared": {"value": false, "score": 0.26969462633132935}}, "documentContextAttributes": {"used": {"value": false, "score": 0.003248929977416992}, "created": {"value": false, "score": 0.017906665802001953}, "shared": {"value": false, "score": 0.26969462633132935}}}, {"type": "software", "software-type": "software", "wikidataId": "Q20155677", "wikipediaExternalRef": 47013794, "lang": "en", "confidence": 0.7847, "software-name": {"rawForm": "WebAssembly", "normalizedForm": "WebAssembly", "wikidataId": "Q20155677", "wikipediaExternalRef": 47013794, "lang": "en", "confidence": 0.7847, "offsetStart": 127, "offsetEnd": 138}, "context": "formats with different sample rates or bit-rates thanks to a web implementation of ffmpeg4 through Emscripten5 compilation and WebAssembly. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.01580888032913208}, "created": {"value": false, "score": 0.00025856494903564453}, "shared": {"value": false, "score": 1.8477439880371094e-06}}, "documentContextAttributes": {"used": {"value": true, "score": 0.9926354885101318}, "created": {"value": false, "score": 0.017906665802001953}, "shared": {"value": false, "score": 0.26969462633132935}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "WebAudio", "normalizedForm": "WebAudio", "offsetStart": 132, "offsetEnd": 140}, "context": "This kind of can be used in imperative patchers as a special WebAudio node called AudioWorkletNode that can be connected with other WebAudio nodes. ", "mentionContextAttributes": {"used": {"value": false, "score": 6.252527236938477e-05}, "created": {"value": false, "score": 0.0002923011779785156}, "shared": {"value": false, "score": 0.000217437744140625}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0014788508415222168}, "created": {"value": false, "score": 0.48201507329940796}, "shared": {"value": false, "score": 0.0005020499229431152}}}, {"type": "software", "software-type": "software", "wikidataId": "Q1401466", "wikipediaExternalRef": 480378, "lang": "en", "confidence": 0.7226, "software-name": {"rawForm": "PureData", "normalizedForm": "PureData", "wikidataId": "Q1401466", "wikipediaExternalRef": 480378, "lang": "en", "confidence": 0.7226, "offsetStart": 135, "offsetEnd": 143}, "context": "With these two layers in a single imperative patcher, the usage becomes similar to some VPLs available on native platforms like Max or PureData, while offering more flexible computational possibilities, taking advantages from the web community, as most of the JavaScript packages can be imported and used as functional boxes in a patcher. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0002117156982421875}, "created": {"value": false, "score": 0.0006378293037414551}, "shared": {"value": false, "score": 0.00013780593872070312}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0002117156982421875}, "created": {"value": false, "score": 0.0006378293037414551}, "shared": {"value": false, "score": 0.00013780593872070312}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "WebAudio", "normalizedForm": "WebAudio", "offsetStart": 136, "offsetEnd": 144}, "context": "(Figure 5) Web Audio's OfflineAudioContext is an audio context that, instead of process audio in real time, generates audio data from a WebAudio graph as fast as it can.", "mentionContextAttributes": {"used": {"value": false, "score": 6.788969039916992e-05}, "created": {"value": false, "score": 2.4974346160888672e-05}, "shared": {"value": false, "score": 1.6093254089355469e-06}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0014788508415222168}, "created": {"value": false, "score": 0.48201507329940796}, "shared": {"value": false, "score": 0.0005020499229431152}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Audio", "normalizedForm": "Audio", "offsetStart": 139, "offsetEnd": 144}, "context": "Support for the AudioWorklet API on Safari Desktop and iOS browsers was added in April 2021, which as the final step in providing full Web Audio API coverage on all major browsers. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0010154247283935547}, "created": {"value": false, "score": 0.0025658011436462402}, "shared": {"value": false, "score": 0.039230167865753174}}, "documentContextAttributes": {"used": {"value": false, "score": 0.002702653408050537}, "created": {"value": true, "score": 0.7171862721443176}, "shared": {"value": false, "score": 0.039230167865753174}}, "references": [{"label": "1", "normalizedForm": "1", "refKey": 1}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CAC", "normalizedForm": "CAC", "offsetStart": 140, "offsetEnd": 143}, "context": "The accessibility offered by modern web technology with its highly active ecosystem is an opportunity for us to bring music programming and CAC systems to a new stage.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00013446807861328125}, "created": {"value": true, "score": 0.5764700174331665}, "shared": {"value": false, "score": 0.0017318129539489746}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0005899667739868164}, "created": {"value": true, "score": 0.994664192199707}, "shared": {"value": false, "score": 0.0017318129539489746}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Audio", "normalizedForm": "Audio", "offsetStart": 156, "offsetEnd": 161}, "context": "For example, the wave-form~object can display the waveform of the audio clip, bufferSource~object is a player that wraps the Buffer-SourceNode from the Web Audio API that accepts the PatcherAudio as the input and can play the audio with loop and different playback speed.", "mentionContextAttributes": {"used": {"value": false, "score": 0.002702653408050537}, "created": {"value": false, "score": 4.500150680541992e-05}, "shared": {"value": false, "score": 2.4378299713134766e-05}}, "documentContextAttributes": {"used": {"value": false, "score": 0.002702653408050537}, "created": {"value": true, "score": 0.7171862721443176}, "shared": {"value": false, "score": 0.039230167865753174}}, "references": [{"label": "1", "normalizedForm": "1", "refKey": 1}]}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "arithmSer", "normalizedForm": "arithmSer", "offsetStart": 166, "offsetEnd": 175}, "context": "We also added some functions existing in OpenMusic like x2dx (calculate the difference between values in an array), dx2x (integrate an array), permute, combinations, arithmSer (create an arithmetic series), fiboSer (create a Fibonacci series), etc.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00019097328186035156}, "created": {"value": false, "score": 0.0004811882972717285}, "shared": {"value": false, "score": 7.748603820800781e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00019097328186035156}, "created": {"value": false, "score": 0.0004811882972717285}, "shared": {"value": false, "score": 7.748603820800781e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "CAC", "normalizedForm": "CAC", "offsetStart": 176, "offsetEnd": 179}, "context": "This model is chosen to easily move the chords, and also to solve the following question more easily: \"How to find the missing fundamental frequency of a given chord, if any?\" CAC is often used for spectral music composition algorithms, which involves the calculation of harmonics or the fundamental frequency. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.0002461671829223633}, "created": {"value": false, "score": 0.0008336901664733887}, "shared": {"value": false, "score": 6.556510925292969e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0005899667739868164}, "created": {"value": true, "score": 0.994664192199707}, "shared": {"value": false, "score": 0.0017318129539489746}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "PatcherAudio", "normalizedForm": "PatcherAudio", "offsetStart": 183, "offsetEnd": 195}, "context": "For example, the wave-form~object can display the waveform of the audio clip, bufferSource~object is a player that wraps the Buffer-SourceNode from the Web Audio API that accepts the PatcherAudio as the input and can play the audio with loop and different playback speed.", "mentionContextAttributes": {"used": {"value": false, "score": 0.002702653408050537}, "created": {"value": false, "score": 4.500150680541992e-05}, "shared": {"value": false, "score": 2.4378299713134766e-05}}, "documentContextAttributes": {"used": {"value": true, "score": 0.6568390727043152}, "created": {"value": false, "score": 0.0002472400665283203}, "shared": {"value": false, "score": 2.4378299713134766e-05}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "WebAudio", "normalizedForm": "WebAudio", "offsetStart": 187, "offsetEnd": 195}, "context": "The plugin comes with a standardized API that can create a UI, get or adjust parameters, schedule events like parameter automation or MIDI messages, and connect with other WAMs or native WebAudio nodes.", "mentionContextAttributes": {"used": {"value": false, "score": 0.0001647472381591797}, "created": {"value": false, "score": 0.0031412839889526367}, "shared": {"value": false, "score": 7.50422477722168e-05}}, "documentContextAttributes": {"used": {"value": false, "score": 0.0014788508415222168}, "created": {"value": false, "score": 0.48201507329940796}, "shared": {"value": false, "score": 0.0005020499229431152}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Web Audio Plugins (WAP)", "normalizedForm": "Web Audio Plugins (WAP)", "offsetStart": 194, "offsetEnd": 217}, "context": "In 2018, they joined forces with other groups of people working on interoperable Web Audio plugins and plugin hosts to synchronize their efforts toward the beginnings of an open standard called Web Audio Plugins (WAP) [11, 12], covering a wider range of use cases. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.00033164024353027344}, "created": {"value": false, "score": 0.30903881788253784}, "shared": {"value": false, "score": 0.002444326877593994}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00033164024353027344}, "created": {"value": false, "score": 0.30903881788253784}, "shared": {"value": false, "score": 0.002444326877593994}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "fiboSer", "normalizedForm": "fiboSer", "offsetStart": 207, "offsetEnd": 214}, "context": "We also added some functions existing in OpenMusic like x2dx (calculate the difference between values in an array), dx2x (integrate an array), permute, combinations, arithmSer (create an arithmetic series), fiboSer (create a Fibonacci series), etc.", "mentionContextAttributes": {"used": {"value": false, "score": 0.00019091367721557617}, "created": {"value": false, "score": 0.0004811286926269531}, "shared": {"value": false, "score": 7.152557373046875e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.00019091367721557617}, "created": {"value": false, "score": 0.0004811286926269531}, "shared": {"value": false, "score": 7.152557373046875e-07}}}], "references": [{"refKey": 1, "tei": "<biblStruct xml:id=\"b1\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">JSPatcher, a Visual Programming Environment for Building High-Performance Web Audio Applications</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Shihong</forename><surname>Ren</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Laurent</forename><surname>Pottier</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Michel</forename><surname>Buffa</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Yang</forename><surname>Yu</surname></persName>\n\t\t</author>\n\t\t<idno type=\"DOI\">10.17743/jaes.2022.0056</idno>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"j\">Journal of the Audio Engineering Society</title>\n\t\t<title level=\"j\" type=\"abbrev\">J. Audio Eng. Soc.</title>\n\t\t<editor>\n\t\t\t<persName><forename type=\"first\">A</forename><forename type=\"middle\">A</forename><surname>Correya</surname></persName>\n\t\t</editor>\n\t\t<editor>\n\t\t\t<persName><forename type=\"first\">D</forename><surname>Ramires</surname></persName>\n\t\t</editor>\n\t\t<editor>\n\t\t\t<persName><forename type=\"first\">A</forename><surname>Bogdanov</surname></persName>\n\t\t</editor>\n\t\t<editor>\n\t\t\t<persName><forename type=\"first\">X</forename><surname>Faraldo</surname></persName>\n\t\t</editor>\n\t\t<editor>\n\t\t\t<persName><surname>Favory</surname></persName>\n\t\t</editor>\n\t\t<idno type=\"ISSN\">1549-4950</idno>\n\t\t<imprint>\n\t\t\t<biblScope unit=\"volume\">70</biblScope>\n\t\t\t<biblScope unit=\"issue\">11</biblScope>\n\t\t\t<biblScope unit=\"page\" from=\"938\" to=\"950\" />\n\t\t\t<date type=\"published\" when=\"2022-12-12\">July 2021</date>\n\t\t\t<publisher>Audio Engineering Society</publisher>\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}, {"refKey": 8, "tei": "<biblStruct xml:id=\"b8\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">Doppio</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">John</forename><surname>Vilk</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Emery</forename><forename type=\"middle\">D</forename><surname>Berger</surname></persName>\n\t\t</author>\n\t\t<idno type=\"DOI\">10.1145/2594291.2594293</idno>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"m\">Proceedings of the 35th ACM SIGPLAN Conference on Programming Language Design and Implementation</title>\n\t\t<meeting>the 35th ACM SIGPLAN Conference on Programming Language Design and Implementation</meeting>\n\t\t<imprint>\n\t\t\t<publisher>ACM</publisher>\n\t\t\t<date type=\"published\" when=\"2014-06-09\">2014</date>\n\t\t\t<biblScope unit=\"page\">518</biblScope>\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}, {"refKey": 9, "tei": "<biblStruct xml:id=\"b9\">\n\t<analytic>\n\t\t<title level=\"a\" type=\"main\">Browsix</title>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Bobby</forename><surname>Powers</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">John</forename><surname>Vilk</surname></persName>\n\t\t</author>\n\t\t<author>\n\t\t\t<persName><forename type=\"first\">Emery</forename><forename type=\"middle\">D</forename><surname>Berger</surname></persName>\n\t\t</author>\n\t\t<idno type=\"DOI\">10.1145/3037697.3037727</idno>\n\t</analytic>\n\t<monogr>\n\t\t<title level=\"m\">Proceedings of the Twenty-Second International Conference on Architectural Support for Programming Languages and Operating Systems</title>\n\t\t<meeting>the Twenty-Second International Conference on Architectural Support for Programming Languages and Operating Systems</meeting>\n\t\t<imprint>\n\t\t\t<publisher>ACM</publisher>\n\t\t\t<date type=\"published\" when=\"2017-04-04\">2017</date>\n\t\t\t<biblScope unit=\"page\">266</biblScope>\n\t\t</imprint>\n\t</monogr>\n</biblStruct>\n"}], "runtime": 47822, "id": "ad150ec81f7471d02c47953b08a595998463d914", "metadata": {"id": "ad150ec81f7471d02c47953b08a595998463d914"}, "original_file_path": "../../datalake/Samuel/SOFTware-Sync/data/xml_not_sofctied/hal-03812972.grobid.tei.xml", "file_name": "hal-03812972.grobid.tei.xml"}