{"application": "software-mentions", "version": "0.8.0", "date": "2024-10-07T11:40+0000", "md5": "E7649498B70514CF22C26F297A372E41", "mentions": [{"type": "software", "software-type": "software", "software-name": {"rawForm": "ginsimToInputFile", "normalizedForm": "ginsimToInputFile", "offsetStart": 4, "offsetEnd": 21}, "context": "The ginsimToInputFile command computes steady states for a given Boolean network. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.02536696195602417}, "created": {"value": false, "score": 1.9073486328125e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.02536696195602417}, "created": {"value": false, "score": 1.9073486328125e-06}, "shared": {"value": false, "score": 1.1920928955078125e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GINsim", "normalizedForm": "GINsim", "offsetStart": 18, "offsetEnd": 24}, "context": "To that goal, the GINsim software (command line interface) computes all the steady states and the script generates the resulting matrix crossing states and compounds (genes or proteins). ", "mentionContextAttributes": {"used": {"value": false, "score": 0.026936054229736328}, "created": {"value": false, "score": 0.00011479854583740234}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.055240631103515625}, "created": {"value": true, "score": 0.9998757839202881}, "shared": {"value": false, "score": 3.5762786865234375e-07}}}, {"type": "software", "software-type": "implicit", "software-name": {"rawForm": "script", "normalizedForm": "script", "offsetStart": 29, "offsetEnd": 35}, "context": "We have implemented a Python script that generates and extracts all the steady states of a model encoded in GINsim. ", "mentionContextAttributes": {"used": {"value": false, "score": 6.592273712158203e-05}, "created": {"value": true, "score": 0.9998757839202881}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.026936054229736328}, "created": {"value": true, "score": 0.9998757839202881}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "Foclass", "normalizedForm": "Foclass", "offsetStart": 32, "offsetEnd": 39}, "url": {"rawForm": "https://github.com/mwery/ Foclass", "normalizedForm": "https://github.com/mwery/ Foclass", "offsetStart": 119, "offsetEnd": 152}, "context": "We implemented a python package Foclass to compute the concept lattice associated with a Boolean Network (available at https://github.com/mwery/ Foclass). ", "mentionContextAttributes": {"used": {"value": false, "score": 3.3020973205566406e-05}, "created": {"value": true, "score": 0.9994680285453796}, "shared": {"value": false, "score": 0.023164987564086914}}, "documentContextAttributes": {"used": {"value": false, "score": 3.3020973205566406e-05}, "created": {"value": true, "score": 0.9994680285453796}, "shared": {"value": false, "score": 0.023164987564086914}}}, {"type": "software", "software-type": "component", "software-name": {"rawForm": "graphviz", "normalizedForm": "graphviz", "offsetStart": 53, "offsetEnd": 61}, "context": "The graph is too large for being visualized with the graphviz package used in our method and we do not provide a figure for this lattice. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.07489895820617676}, "created": {"value": false, "score": 0.00010061264038085938}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.07489895820617676}, "created": {"value": false, "score": 0.00010061264038085938}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "script", "normalizedForm": "script", "offsetStart": 98, "offsetEnd": 104}, "context": "To that goal, the GINsim software (command line interface) computes all the steady states and the script generates the resulting matrix crossing states and compounds (genes or proteins). ", "mentionContextAttributes": {"used": {"value": false, "score": 0.026936054229736328}, "created": {"value": false, "score": 0.00011479854583740234}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.026936054229736328}, "created": {"value": true, "score": 0.9998757839202881}, "shared": {"value": false, "score": 2.384185791015625e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GINsim", "normalizedForm": "GINsim", "offsetStart": 103, "offsetEnd": 109}, "context": "The Python package takes as input a Boolean Network together with simulation conditions formatted as a GINsim archive and a list of biological signatures provided as a text file.", "mentionContextAttributes": {"used": {"value": false, "score": 0.055240631103515625}, "created": {"value": false, "score": 0.0023107528686523438}, "shared": {"value": false, "score": 3.5762786865234375e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.055240631103515625}, "created": {"value": true, "score": 0.9998757839202881}, "shared": {"value": false, "score": 3.5762786865234375e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GINsim", "normalizedForm": "GINsim", "offsetStart": 108, "offsetEnd": 114}, "context": "We have implemented a Python script that generates and extracts all the steady states of a model encoded in GINsim. ", "mentionContextAttributes": {"used": {"value": false, "score": 6.592273712158203e-05}, "created": {"value": true, "score": 0.9998757839202881}, "shared": {"value": false, "score": 2.384185791015625e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.055240631103515625}, "created": {"value": true, "score": 0.9998757839202881}, "shared": {"value": false, "score": 3.5762786865234375e-07}}}, {"type": "software", "software-type": "software", "software-name": {"rawForm": "GINsim", "normalizedForm": "GINsim", "offsetStart": 140, "offsetEnd": 150}, "context": "Once the regulatory graph and its logical rules are defined, it is possible to run simulations specifying (or not) initial conditions using GINsim [14]. ", "mentionContextAttributes": {"used": {"value": false, "score": 0.023567557334899902}, "created": {"value": false, "score": 0.0001437664031982422}, "shared": {"value": false, "score": 1.1920928955078125e-07}}, "documentContextAttributes": {"used": {"value": false, "score": 0.055240631103515625}, "created": {"value": true, "score": 0.9998757839202881}, "shared": {"value": false, "score": 3.5762786865234375e-07}}}], "references": [], "runtime": 7282, "id": "f2d2f13a29d4df2d341c3b3de192442d9e923b65", "metadata": {"id": "f2d2f13a29d4df2d341c3b3de192442d9e923b65"}, "original_file_path": "../../datalake/Samuel/SOFTware-Sync/downloads/xml/hal-02018724.grobid.tei.xml", "file_name": "hal-02018724.grobid.tei.xml"}